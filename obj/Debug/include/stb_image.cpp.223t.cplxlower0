
;; Function std::ldexp (_ZSt5ldexpfi, funcdef_no=96, decl_uid=7048, cgraph_uid=57, symbol_order=57)

std::ldexp (float __x, int __exp)
{
  float D.17351;
  float _5;

  <bb 2> :
  _5 = __builtin_ldexpf (__x_2(D), __exp_3(D));

  <bb 3> :
<L0>:
  return _5;

}



;; Function std::pow (_ZSt3powff, funcdef_no=107, decl_uid=7096, cgraph_uid=65, symbol_order=65)

std::pow (float __x, float __y)
{
  float D.13915;
  float _5;

  <bb 2> :
  _5 = __builtin_powf (__x_2(D), __y_3(D));

  <bb 3> :
<L0>:
  return _5;

}



;; Function stbi__sse2_available (_ZL20stbi__sse2_availablev, funcdef_no=770, decl_uid=10013, cgraph_uid=676, symbol_order=676)

stbi__sse2_available ()
{
  int D.13428;
  int _1;

  <bb 2> :
  _1 = 1;

  <bb 3> :
<L0>:
  return _1;

}



;; Function stbi__start_mem (_ZL15stbi__start_memP13stbi__contextPKhi, funcdef_no=771, decl_uid=10037, cgraph_uid=677, symbol_order=677)

stbi__start_mem (struct stbi__context * s, const stbi_uc * buffer, int len)
{
  stbi_uc * _1;
  sizetype _2;
  stbi_uc * _3;
  stbi_uc * _4;

  <bb 2> :
  s_6(D)->io.read = 0B;
  s_6(D)->read_from_callbacks = 0;
  s_6(D)->callback_already_read = 0;
  s_6(D)->img_buffer_original = buffer_10(D);
  _1 = s_6(D)->img_buffer_original;
  s_6(D)->img_buffer = _1;
  _2 = (sizetype) len_13(D);
  _3 = buffer_10(D) + _2;
  s_6(D)->img_buffer_original_end = _3;
  _4 = s_6(D)->img_buffer_original_end;
  s_6(D)->img_buffer_end = _4;
  return;

}



;; Function stbi__start_callbacks (_ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv, funcdef_no=772, decl_uid=10042, cgraph_uid=678, symbol_order=678)

stbi__start_callbacks (struct stbi__context * s, struct stbi_io_callbacks * c, void * user)
{
  stbi_uc[128] * _1;
  stbi_uc * _2;
  stbi_uc * _3;

  <bb 2> :
  s_5(D)->io = MEM[(const struct stbi_io_callbacks &)c_6(D)];
  s_5(D)->io_user_data = user_8(D);
  s_5(D)->buflen = 128;
  s_5(D)->read_from_callbacks = 1;
  s_5(D)->callback_already_read = 0;
  _1 = &s_5(D)->buffer_start;
  s_5(D)->img_buffer_original = _1;
  _2 = s_5(D)->img_buffer_original;
  s_5(D)->img_buffer = _2;
  stbi__refill_buffer (s_5(D));
  _3 = s_5(D)->img_buffer_end;
  s_5(D)->img_buffer_original_end = _3;
  return;

}



;; Function stbi__stdio_read (_ZL16stbi__stdio_readPvPci, funcdef_no=773, decl_uid=10053, cgraph_uid=679, symbol_order=679)

stbi__stdio_read (void * user, char * data, int size)
{
  long long unsigned int D.13432;
  int D.13430;
  long long unsigned int _1;
  long long unsigned int _2;
  long long unsigned int _8;
  int _9;

  <bb 2> :
  _1 = (long long unsigned int) size_3(D);
  _8 = fread (data_5(D), 1, _1, user_6(D));
  _2 = _8;
  _9 = (int) _2;

  <bb 3> :
<L0>:
  return _9;

}



;; Function stbi__stdio_skip (_ZL16stbi__stdio_skipPvi, funcdef_no=774, decl_uid=10057, cgraph_uid=680, symbol_order=680)

stbi__stdio_skip (void * user, int n)
{
  int D.13436;
  int ch;
  int _7;

  <bb 2> :
  fseek (user_3(D), n_4(D), 1);
  _7 = fgetc (user_3(D));
  ch_8 = _7;
  if (ch_8 != -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ungetc (ch_8, user_3(D));

  <bb 4> :
  return;

}



;; Function stbi__stdio_eof (_ZL15stbi__stdio_eofPv, funcdef_no=775, decl_uid=10061, cgraph_uid=681, symbol_order=681)

stbi__stdio_eof (void * user)
{
  bool iftmp.0;
  int D.13437;
  int _1;
  int _2;
  bool iftmp.0_3;
  bool iftmp.0_10;
  bool iftmp.0_11;
  int _12;

  <bb 2> :
  _1 = feof (user_7(D));
  if (_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _2 = ferror (user_7(D));
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0_11 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.0_10 = 0;

  <bb 6> :
  # iftmp.0_3 = PHI <iftmp.0_11(4), iftmp.0_10(5)>
  _12 = (int) iftmp.0_3;

  <bb 7> :
<L4>:
  return _12;

}



;; Function stbi__start_file (_ZL16stbi__start_fileP13stbi__contextP6_iobuf, funcdef_no=776, decl_uid=10099, cgraph_uid=682, symbol_order=683)

stbi__start_file (struct stbi__context * s, struct FILE * f)
{
  <bb 2> :
  stbi__start_callbacks (s_2(D), &stbi__stdio_callbacks, f_3(D));
  return;

}



;; Function stbi__rewind (_ZL12stbi__rewindP13stbi__context, funcdef_no=777, decl_uid=10102, cgraph_uid=683, symbol_order=684)

stbi__rewind (struct stbi__context * s)
{
  stbi_uc * _1;
  stbi_uc * _2;

  <bb 2> :
  _1 = s_4(D)->img_buffer_original;
  s_4(D)->img_buffer = _1;
  _2 = s_4(D)->img_buffer_original_end;
  s_4(D)->img_buffer_end = _2;
  return;

}



;; Function stbi_failure_reason (stbi_failure_reason, funcdef_no=778, decl_uid=5072, cgraph_uid=684, symbol_order=686)

stbi_failure_reason ()
{
  const char * * D.20205;
  const char * D.13444;
  const char * _2;

  <bb 2> :
  _3 = __builtin___emutls_get_address (&__emutls_v._ZL22stbi__g_failure_reason);
  _2 = *_3;

  <bb 3> :
<L0>:
  return _2;

}



;; Function stbi__err (_ZL9stbi__errPKc, funcdef_no=779, decl_uid=10256, cgraph_uid=685, symbol_order=687)

stbi__err (const char * str)
{
  const char * * D.20204;
  int D.13446;
  int _4;

  <bb 2> :
  _5 = __builtin___emutls_get_address (&__emutls_v._ZL22stbi__g_failure_reason);
  *_5 = str_2(D);
  _4 = 0;

  <bb 3> :
<L0>:
  return _4;

}



;; Function stbi__malloc (_ZL12stbi__mallocy, funcdef_no=780, decl_uid=10259, cgraph_uid=686, symbol_order=688)

stbi__malloc (size_t size)
{
  void * D.13448;
  void * _4;

  <bb 2> :
  _4 = malloc (size_2(D));

  <bb 3> :
<L0>:
  return _4;

}



;; Function stbi__addsizes_valid (_ZL20stbi__addsizes_validii, funcdef_no=781, decl_uid=10263, cgraph_uid=687, symbol_order=689)

stbi__addsizes_valid (int a, int b)
{
  int D.13452;
  int _1;
  bool _2;
  int _3;
  int _5;
  int _7;

  <bb 2> :
  if (b_4(D) < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = 2147483647 - b_4(D);
  _2 = a_6(D) <= _1;
  _7 = (int) _2;

  <bb 5> :
  # _3 = PHI <_5(3), _7(4)>
<L2>:
  return _3;

}



;; Function stbi__mul2sizes_valid (_ZL21stbi__mul2sizes_validii, funcdef_no=782, decl_uid=10267, cgraph_uid=688, symbol_order=690)

stbi__mul2sizes_valid (int a, int b)
{
  int D.13457;
  int _1;
  bool _2;
  int _3;
  int _6;
  int _7;
  int _8;

  <bb 2> :
  if (a_4(D) < 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (b_5(D) < 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _8 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  if (b_5(D) == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _6 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  _1 = 2147483647 / b_5(D);
  _2 = a_4(D) <= _1;
  _7 = (int) _2;

  <bb 8> :
  # _3 = PHI <_8(4), _6(6), _7(7)>
<L5>:
  return _3;

}



;; Function stbi__mad2sizes_valid (_ZL21stbi__mad2sizes_validiii, funcdef_no=783, decl_uid=10272, cgraph_uid=689, symbol_order=691)

stbi__mad2sizes_valid (int a, int b, int add)
{
  bool iftmp.1;
  int D.13461;
  int _1;
  int _2;
  int _3;
  bool iftmp.1_4;
  bool iftmp.1_13;
  bool iftmp.1_14;
  int _15;

  <bb 2> :
  _1 = stbi__mul2sizes_valid (a_8(D), b_9(D));
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = a_8(D) * b_9(D);
  _3 = stbi__addsizes_valid (_2, add_11(D));
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1_13 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1_14 = 0;

  <bb 6> :
  # iftmp.1_4 = PHI <iftmp.1_13(4), iftmp.1_14(5)>
  _15 = (int) iftmp.1_4;

  <bb 7> :
<L4>:
  return _15;

}



;; Function stbi__mad3sizes_valid (_ZL21stbi__mad3sizes_validiiii, funcdef_no=784, decl_uid=10278, cgraph_uid=690, symbol_order=692)

stbi__mad3sizes_valid (int a, int b, int c, int add)
{
  bool iftmp.2;
  int D.13468;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  bool iftmp.2_7;
  bool iftmp.2_18;
  bool iftmp.2_19;
  int _20;

  <bb 2> :
  _1 = stbi__mul2sizes_valid (a_11(D), b_12(D));
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = a_11(D) * b_12(D);
  _3 = stbi__mul2sizes_valid (_2, c_14(D));
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _4 = a_11(D) * b_12(D);
  _5 = c_14(D) * _4;
  _6 = stbi__addsizes_valid (_5, add_16(D));
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2_18 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2_19 = 0;

  <bb 7> :
  # iftmp.2_7 = PHI <iftmp.2_18(5), iftmp.2_19(6)>
  _20 = (int) iftmp.2_7;

  <bb 8> :
<L5>:
  return _20;

}



;; Function stbi__mad4sizes_valid (_ZL21stbi__mad4sizes_validiiiii, funcdef_no=785, decl_uid=10285, cgraph_uid=691, symbol_order=693)

stbi__mad4sizes_valid (int a, int b, int c, int d, int add)
{
  bool iftmp.3;
  int D.13476;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  bool iftmp.3_11;
  bool iftmp.3_24;
  bool iftmp.3_25;
  int _26;

  <bb 2> :
  _1 = stbi__mul2sizes_valid (a_15(D), b_16(D));
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _2 = a_15(D) * b_16(D);
  _3 = stbi__mul2sizes_valid (_2, c_18(D));
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _4 = a_15(D) * b_16(D);
  _5 = c_18(D) * _4;
  _6 = stbi__mul2sizes_valid (_5, d_20(D));
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _7 = a_15(D) * b_16(D);
  _8 = c_18(D) * _7;
  _9 = d_20(D) * _8;
  _10 = stbi__addsizes_valid (_9, add_22(D));
  if (_10 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.3_24 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.3_25 = 0;

  <bb 8> :
  # iftmp.3_11 = PHI <iftmp.3_24(6), iftmp.3_25(7)>
  _26 = (int) iftmp.3_11;

  <bb 9> :
<L6>:
  return _26;

}



;; Function stbi__malloc_mad2 (_ZL17stbi__malloc_mad2iii, funcdef_no=786, decl_uid=10290, cgraph_uid=692, symbol_order=694)

stbi__malloc_mad2 (int a, int b, int add)
{
  void * D.13488;
  bool retval.4;
  int _1;
  int _2;
  int _3;
  long long unsigned int _4;
  void * _5;
  bool retval.4_12;
  void * _13;
  void * _15;

  <bb 2> :
  _1 = stbi__mad2sizes_valid (a_8(D), b_9(D), add_10(D));
  retval.4_12 = _1 == 0;
  if (retval.4_12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _13 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = a_8(D) * b_9(D);
  _3 = add_10(D) + _2;
  _4 = (long long unsigned int) _3;
  _15 = stbi__malloc (_4);

  <bb 5> :
  # _5 = PHI <_13(3), _15(4)>
<L2>:
  return _5;

}



;; Function stbi__malloc_mad3 (_ZL17stbi__malloc_mad3iiii, funcdef_no=787, decl_uid=10296, cgraph_uid=693, symbol_order=695)

stbi__malloc_mad3 (int a, int b, int c, int add)
{
  void * D.13493;
  bool retval.5;
  int _1;
  int _2;
  int _3;
  int _4;
  long long unsigned int _5;
  void * _6;
  bool retval.5_14;
  void * _15;
  void * _17;

  <bb 2> :
  _1 = stbi__mad3sizes_valid (a_9(D), b_10(D), c_11(D), add_12(D));
  retval.5_14 = _1 == 0;
  if (retval.5_14 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _15 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = a_9(D) * b_10(D);
  _3 = c_11(D) * _2;
  _4 = add_12(D) + _3;
  _5 = (long long unsigned int) _4;
  _17 = stbi__malloc (_5);

  <bb 5> :
  # _6 = PHI <_15(3), _17(4)>
<L2>:
  return _6;

}



;; Function stbi__malloc_mad4 (_ZL17stbi__malloc_mad4iiiii, funcdef_no=788, decl_uid=10303, cgraph_uid=694, symbol_order=696)

stbi__malloc_mad4 (int a, int b, int c, int d, int add)
{
  void * D.13498;
  bool retval.6;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  long long unsigned int _6;
  void * _7;
  bool retval.6_16;
  void * _17;
  void * _19;

  <bb 2> :
  _1 = stbi__mad4sizes_valid (a_10(D), b_11(D), c_12(D), d_13(D), add_14(D));
  retval.6_16 = _1 == 0;
  if (retval.6_16 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _17 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = a_10(D) * b_11(D);
  _3 = c_12(D) * _2;
  _4 = d_13(D) * _3;
  _5 = add_14(D) + _4;
  _6 = (long long unsigned int) _5;
  _19 = stbi__malloc (_6);

  <bb 5> :
  # _7 = PHI <_17(3), _19(4)>
<L2>:
  return _7;

}



;; Function stbi_image_free (stbi_image_free, funcdef_no=789, decl_uid=5074, cgraph_uid=695, symbol_order=697)

stbi_image_free (void * retval_from_stbi_load)
{
  <bb 2> :
  free (retval_from_stbi_load_2(D));
  return;

}



;; Function stbi_set_flip_vertically_on_load (stbi_set_flip_vertically_on_load, funcdef_no=790, decl_uid=5112, cgraph_uid=696, symbol_order=699)

stbi_set_flip_vertically_on_load (int flag_true_if_should_flip)
{
  <bb 2> :
  stbi__vertically_flip_on_load_global = flag_true_if_should_flip_2(D);
  return;

}



;; Function stbi_set_flip_vertically_on_load_thread (stbi_set_flip_vertically_on_load_thread, funcdef_no=791, decl_uid=5114, cgraph_uid=697, symbol_order=702)

stbi_set_flip_vertically_on_load_thread (int flag_true_if_should_flip)
{
  int * D.20203;
  int * D.20202;

  <bb 2> :
  _5 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  *_5 = flag_true_if_should_flip_2(D);
  _6 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  *_6 = 1;
  return;

}



;; Function stbi__load_main (_ZL15stbi__load_mainP13stbi__contextPiS1_S1_iP17stbi__result_infoi, funcdef_no=792, decl_uid=10334, cgraph_uid=698, symbol_order=703)

stbi__load_main (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri, int bpc)
{
  void * D.13550;
  int D.13549;
  float * D.13548;
  int D.13547;
  void * D.13546;
  int D.13545;
  void * D.13544;
  int D.13543;
  void * D.13542;
  int D.13541;
  void * D.13540;
  int D.13539;
  void * D.13538;
  int D.13537;
  void * D.13536;
  int D.13535;
  void * D.13534;
  int D.13533;
  float * hdr;
  bool retval.16;
  int iftmp.15;
  bool retval.14;
  bool retval.13;
  bool retval.12;
  bool retval.11;
  bool retval.10;
  bool retval.9;
  bool retval.8;
  void * D.13503;
  bool retval.7;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  void * _12;
  int iftmp.15_13;
  int _23;
  bool retval.7_24;
  void * _30;
  void * _31;
  int _33;
  bool retval.8_34;
  void * _36;
  void * _37;
  int _39;
  bool retval.9_40;
  void * _42;
  void * _43;
  int _45;
  bool retval.10_46;
  void * _48;
  void * _49;
  int _51;
  bool retval.11_52;
  void * _55;
  void * _56;
  int _58;
  bool retval.12_59;
  void * _61;
  void * _62;
  int _64;
  bool retval.13_65;
  void * _67;
  void * _68;
  int _70;
  bool retval.14_71;
  float * _73;
  int iftmp.15_75;
  int iftmp.15_76;
  void * _78;
  int _80;
  bool retval.16_81;
  void * _83;
  void * _84;
  void * _86;

  <bb 2> :
  memset (ri_16(D), 0, 12);
  ri_16(D)->bits_per_channel = 8;
  ri_16(D)->channel_order = 0;
  ri_16(D)->num_channels = 0;
  _23 = stbi__jpeg_test (s_21(D));
  _1 = _23;
  retval.7_24 = _1 != 0;
  if (retval.7_24 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _30 = stbi__jpeg_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _31 = _30;
  goto <bb 24>; [INV]

  <bb 4> :
  _33 = stbi__png_test (s_21(D));
  _2 = _33;
  retval.8_34 = _2 != 0;
  if (retval.8_34 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _36 = stbi__png_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _37 = _36;
  goto <bb 24>; [INV]

  <bb 6> :
  _39 = stbi__bmp_test (s_21(D));
  _3 = _39;
  retval.9_40 = _3 != 0;
  if (retval.9_40 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _42 = stbi__bmp_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _43 = _42;
  goto <bb 24>; [INV]

  <bb 8> :
  _45 = stbi__gif_test (s_21(D));
  _4 = _45;
  retval.10_46 = _4 != 0;
  if (retval.10_46 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _48 = stbi__gif_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _49 = _48;
  goto <bb 24>; [INV]

  <bb 10> :
  _51 = stbi__psd_test (s_21(D));
  _5 = _51;
  retval.11_52 = _5 != 0;
  if (retval.11_52 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _55 = stbi__psd_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D), bpc_53(D));
  _56 = _55;
  goto <bb 24>; [INV]

  <bb 12> :
  _58 = stbi__pic_test (s_21(D));
  _6 = _58;
  retval.12_59 = _6 != 0;
  if (retval.12_59 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _61 = stbi__pic_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _62 = _61;
  goto <bb 24>; [INV]

  <bb 14> :
  _64 = stbi__pnm_test (s_21(D));
  _7 = _64;
  retval.13_65 = _7 != 0;
  if (retval.13_65 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _67 = stbi__pnm_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _68 = _67;
  goto <bb 24>; [INV]

  <bb 16> :
  _70 = stbi__hdr_test (s_21(D));
  _8 = _70;
  retval.14_71 = _8 != 0;
  if (retval.14_71 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 17> :
  _73 = stbi__hdr_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  hdr_74 = _73;
  if (req_comp_28(D) == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  iftmp.15_75 = *comp_27(D);
  goto <bb 20>; [INV]

  <bb 19> :
  iftmp.15_76 = req_comp_28(D);

  <bb 20> :
  # iftmp.15_13 = PHI <iftmp.15_75(18), iftmp.15_76(19)>
  _9 = *y_26(D);
  _10 = *x_25(D);
  _78 = stbi__hdr_to_ldr (hdr_74, _10, _9, iftmp.15_13);
  goto <bb 24>; [INV]

  <bb 21> :
  _80 = stbi__tga_test (s_21(D));
  _11 = _80;
  retval.16_81 = _11 != 0;
  if (retval.16_81 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _83 = stbi__tga_load (s_21(D), x_25(D), y_26(D), comp_27(D), req_comp_28(D), ri_16(D));
  _84 = _83;
  goto <bb 24>; [INV]

  <bb 23> :
  stbi__err ("unknown image type");
  _86 = 0B;

  <bb 24> :
  # _12 = PHI <_31(3), _37(5), _43(7), _49(9), _56(11), _62(13), _68(15), _78(20), _84(22), _86(23)>
<L21>:
  return _12;

}



;; Function stbi__convert_16_to_8 (_ZL21stbi__convert_16_to_8Ptiii, funcdef_no=793, decl_uid=10371, cgraph_uid=699, symbol_order=704)

stbi__convert_16_to_8 (stbi__uint16 * orig, int w, int h, int channels)
{
  stbi_uc * reduced;
  int img_len;
  int i;
  stbi_uc * D.13553;
  int _1;
  long long unsigned int _2;
  long long unsigned int _3;
  long long unsigned int _4;
  stbi__uint16 * _5;
  short unsigned int _6;
  short unsigned int _7;
  sizetype _8;
  stbi_uc * _9;
  unsigned char _10;
  stbi_uc * _12;
  stbi_uc * _23;
  stbi_uc * _29;

  <bb 2> :
  _1 = w_15(D) * h_16(D);
  img_len_18 = channels_17(D) * _1;
  _2 = (long long unsigned int) img_len_18;
  reduced_21 = stbi__malloc (_2);
  if (reduced_21 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("outofmem");
  _23 = 0B;
  goto <bb 8>; [INV]

  <bb 4> :
  i_24 = 0;

  <bb 5> :
  # i_11 = PHI <i_24(4), i_27(6)>
  if (i_11 >= img_len_18)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _3 = (long long unsigned int) i_11;
  _4 = _3 * 2;
  _5 = orig_25(D) + _4;
  _6 = *_5;
  _7 = _6 >> 8;
  _8 = (sizetype) i_11;
  _9 = reduced_21 + _8;
  _10 = (unsigned char) _7;
  *_9 = _10;
  i_27 = i_11 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  free (orig_25(D));
  _29 = reduced_21;

  <bb 8> :
  # _12 = PHI <_23(3), _29(7)>
<L5>:
  return _12;

}



;; Function stbi__convert_8_to_16 (_ZL21stbi__convert_8_to_16Phiii, funcdef_no=794, decl_uid=10382, cgraph_uid=700, symbol_order=705)

stbi__convert_8_to_16 (stbi_uc * orig, int w, int h, int channels)
{
  stbi__uint16 * enlarged;
  int img_len;
  int i;
  stbi__uint16 * D.13559;
  int _1;
  int _2;
  long long unsigned int _3;
  sizetype _4;
  stbi_uc * _5;
  unsigned char _6;
  short unsigned int _7;
  short unsigned int _8;
  sizetype _9;
  stbi_uc * _10;
  unsigned char _11;
  short unsigned int _12;
  long long unsigned int _13;
  long long unsigned int _14;
  stbi__uint16 * _15;
  short unsigned int _16;
  stbi__uint16 * _18;
  stbi__uint16 * _29;
  stbi__uint16 * _35;

  <bb 2> :
  _1 = w_21(D) * h_22(D);
  img_len_24 = channels_23(D) * _1;
  _2 = img_len_24 * 2;
  _3 = (long long unsigned int) _2;
  enlarged_27 = stbi__malloc (_3);
  if (enlarged_27 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("outofmem");
  _29 = 0B;
  goto <bb 8>; [INV]

  <bb 4> :
  i_30 = 0;

  <bb 5> :
  # i_17 = PHI <i_30(4), i_33(6)>
  if (i_17 >= img_len_24)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _4 = (sizetype) i_17;
  _5 = orig_31(D) + _4;
  _6 = *_5;
  _7 = (short unsigned int) _6;
  _8 = _7 << 8;
  _9 = (sizetype) i_17;
  _10 = orig_31(D) + _9;
  _11 = *_10;
  _12 = (short unsigned int) _11;
  _13 = (long long unsigned int) i_17;
  _14 = _13 * 2;
  _15 = enlarged_27 + _14;
  _16 = _8 + _12;
  *_15 = _16;
  i_33 = i_17 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  free (orig_31(D));
  _35 = enlarged_27;

  <bb 8> :
  # _18 = PHI <_29(3), _35(7)>
<L5>:
  return _18;

}



;; Function stbi__vertical_flip (_ZL19stbi__vertical_flipPviii, funcdef_no=795, decl_uid=10393, cgraph_uid=701, symbol_order=706)

stbi__vertical_flip (void * image, int w, int h, int bytes_per_pixel)
{
  size_t bytes_copy;
  size_t bytes_left;
  stbi_uc * row1;
  stbi_uc * row0;
  stbi_uc * bytes;
  stbi_uc temp[2048];
  size_t bytes_per_row;
  int row;
  long long unsigned int _1;
  long long unsigned int _2;
  int _3;
  long long unsigned int _4;
  long long unsigned int _5;
  int _6;
  int _7;
  long long unsigned int _8;
  long long unsigned int _9;

  <bb 2> :
  _1 = (long long unsigned int) w_16(D);
  _2 = (long long unsigned int) bytes_per_pixel_17(D);
  bytes_per_row_18 = _1 * _2;
  bytes_20 = image_19(D);
  row_21 = 0;

  <bb 3> :
  # row_10 = PHI <row_21(2), row_34(7)>
  _3 = h_23(D) >> 1;
  if (row_10 >= _3)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _4 = (long long unsigned int) row_10;
  _5 = bytes_per_row_18 * _4;
  row0_24 = bytes_20 + _5;
  _6 = h_23(D) - row_10;
  _7 = _6 + -1;
  _8 = (long long unsigned int) _7;
  _9 = bytes_per_row_18 * _8;
  row1_25 = bytes_20 + _9;
  bytes_left_26 = bytes_per_row_18;

  <bb 5> :
  # row0_11 = PHI <row0_24(4), row0_31(6)>
  # row1_12 = PHI <row1_25(4), row1_32(6)>
  # bytes_left_13 = PHI <bytes_left_26(4), bytes_left_33(6)>
  if (bytes_left_13 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  bytes_copy_27 = MIN_EXPR <bytes_left_13, 2048>;
  memcpy (&temp, row0_11, bytes_copy_27);
  memcpy (row0_11, row1_12, bytes_copy_27);
  memcpy (row1_12, &temp, bytes_copy_27);
  row0_31 = row0_11 + bytes_copy_27;
  row1_32 = row1_12 + bytes_copy_27;
  bytes_left_33 = bytes_left_13 - bytes_copy_27;
  goto <bb 5>; [INV]

  <bb 7> :
  row_34 = row_10 + 1;
  goto <bb 3>; [INV]

  <bb 8> :
  temp ={v} {CLOBBER};
  return;

}



;; Function stbi__vertical_flip_slices (_ZL26stbi__vertical_flip_slicesPviiii, funcdef_no=796, decl_uid=10412, cgraph_uid=702, symbol_order=707)

stbi__vertical_flip_slices (void * image, int w, int h, int z, int bytes_per_pixel)
{
  stbi_uc * bytes;
  int slice_size;
  int slice;
  int _1;
  sizetype _2;

  <bb 2> :
  _1 = w_6(D) * h_7(D);
  slice_size_9 = bytes_per_pixel_8(D) * _1;
  bytes_11 = image_10(D);
  slice_12 = 0;

  <bb 3> :
  # slice_3 = PHI <slice_12(2), slice_17(4)>
  # bytes_4 = PHI <bytes_11(2), bytes_16(4)>
  if (slice_3 >= z_14(D))
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  stbi__vertical_flip (bytes_4, w_6(D), h_7(D), bytes_per_pixel_8(D));
  _2 = (sizetype) slice_size_9;
  bytes_16 = bytes_4 + _2;
  slice_17 = slice_3 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  return;

}



;; Function stbi__load_and_postprocess_8bit (_ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i, funcdef_no=797, decl_uid=10424, cgraph_uid=703, symbol_order=708)

stbi__load_and_postprocess_8bit (struct stbi__context * s, int * x, int * y, int * comp, int req_comp)
{
  int * D.20201;
  int * D.20200;
  void * D.13597;
  int channels;
  void * result;
  struct stbi__result_info ri;
  int iftmp.23;
  bool iftmp.19;
  int iftmp.18;
  bool iftmp.17;
  unsigned char * D.13571;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int stbi__vertically_flip_on_load_set.20_6;
  int stbi__vertically_flip_on_load_local.21_7;
  int stbi__vertically_flip_on_load_global.22_8;
  int _9;
  int _10;
  unsigned char * _12;
  int iftmp.18_13;
  bool iftmp.19_14;
  int iftmp.23_15;
  void * _28;
  unsigned char * _30;
  bool iftmp.17_32;
  bool iftmp.17_33;
  int iftmp.18_34;
  int iftmp.18_35;
  bool iftmp.19_39;
  bool iftmp.19_40;
  int iftmp.23_41;
  int iftmp.23_42;
  unsigned char * _45;

  <bb 2> :
  _28 = stbi__load_main (s_22(D), x_23(D), y_24(D), comp_25(D), req_comp_26(D), &ri, 8);

  <bb 3> :
  result_29 = _28;
  if (result_29 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _30 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 5> :
  _1 = ri.bits_per_channel;
  if (_1 == 8)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _2 = ri.bits_per_channel;
  if (_2 == 16)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _assert ("ri.bits_per_channel == 8 || ri.bits_per_channel == 16", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1210);

  <bb 8> :
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.17_33 = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.17_32 = 0;

  <bb 11> :
  _3 = ri.bits_per_channel;
  if (_3 != 8)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  if (req_comp_26(D) == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.18_34 = *comp_25(D);
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.18_35 = req_comp_26(D);

  <bb 15> :
  # iftmp.18_13 = PHI <iftmp.18_34(13), iftmp.18_35(14)>
  _4 = *y_24(D);
  _5 = *x_23(D);
  result_37 = stbi__convert_16_to_8 (result_29, _5, _4, iftmp.18_13);
  ri.bits_per_channel = 8;

  <bb 16> :
  # result_11 = PHI <result_29(11), result_37(15)>
  _48 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.20_6 = *_48;
  if (stbi__vertically_flip_on_load_set.20_6 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _49 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.21_7 = *_49;
  iftmp.19_39 = stbi__vertically_flip_on_load_local.21_7 != 0;
  goto <bb 19>; [INV]

  <bb 18> :
  stbi__vertically_flip_on_load_global.22_8 = stbi__vertically_flip_on_load_global;
  iftmp.19_40 = stbi__vertically_flip_on_load_global.22_8 != 0;

  <bb 19> :
  # iftmp.19_14 = PHI <iftmp.19_39(17), iftmp.19_40(18)>
  if (iftmp.19_14 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 20> :
  if (req_comp_26(D) == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.23_41 = *comp_25(D);
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.23_42 = req_comp_26(D);

  <bb 23> :
  # iftmp.23_15 = PHI <iftmp.23_41(21), iftmp.23_42(22)>
  channels_43 = iftmp.23_15;
  _9 = *y_24(D);
  _10 = *x_23(D);
  stbi__vertical_flip (result_11, _10, _9, channels_43);

  <bb 24> :
  _45 = result_11;

  <bb 25> :
  # _12 = PHI <_30(4), _45(24)>
  ri ={v} {CLOBBER};

  <bb 26> :
<L23>:
  return _12;

  <bb 27> :
<L24>:
  resx 1

}



;; Function stbi__load_and_postprocess_16bit (_ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i, funcdef_no=798, decl_uid=10443, cgraph_uid=704, symbol_order=709)

stbi__load_and_postprocess_16bit (struct stbi__context * s, int * x, int * y, int * comp, int req_comp)
{
  int * D.20199;
  int * D.20198;
  void * D.13629;
  int channels;
  void * result;
  struct stbi__result_info ri;
  int iftmp.30;
  bool iftmp.26;
  int iftmp.25;
  bool iftmp.24;
  stbi__uint16 * D.13603;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int stbi__vertically_flip_on_load_set.27_6;
  int stbi__vertically_flip_on_load_local.28_7;
  int stbi__vertically_flip_on_load_global.29_8;
  long long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  int _12;
  int _13;
  int _14;
  stbi__uint16 * _16;
  int iftmp.25_17;
  bool iftmp.26_18;
  int iftmp.30_19;
  void * _32;
  stbi__uint16 * _34;
  bool iftmp.24_36;
  bool iftmp.24_37;
  int iftmp.25_38;
  int iftmp.25_39;
  bool iftmp.26_43;
  bool iftmp.26_44;
  int iftmp.30_45;
  int iftmp.30_46;
  stbi__uint16 * _49;

  <bb 2> :
  _32 = stbi__load_main (s_26(D), x_27(D), y_28(D), comp_29(D), req_comp_30(D), &ri, 16);

  <bb 3> :
  result_33 = _32;
  if (result_33 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _34 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 5> :
  _1 = ri.bits_per_channel;
  if (_1 == 8)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _2 = ri.bits_per_channel;
  if (_2 == 16)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _assert ("ri.bits_per_channel == 8 || ri.bits_per_channel == 16", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1236);

  <bb 8> :
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.24_37 = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.24_36 = 0;

  <bb 11> :
  _3 = ri.bits_per_channel;
  if (_3 != 16)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  if (req_comp_30(D) == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.25_38 = *comp_29(D);
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.25_39 = req_comp_30(D);

  <bb 15> :
  # iftmp.25_17 = PHI <iftmp.25_38(13), iftmp.25_39(14)>
  _4 = *y_28(D);
  _5 = *x_27(D);
  result_41 = stbi__convert_8_to_16 (result_33, _5, _4, iftmp.25_17);
  ri.bits_per_channel = 16;

  <bb 16> :
  # result_15 = PHI <result_33(11), result_41(15)>
  _52 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.27_6 = *_52;
  if (stbi__vertically_flip_on_load_set.27_6 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _53 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.28_7 = *_53;
  iftmp.26_43 = stbi__vertically_flip_on_load_local.28_7 != 0;
  goto <bb 19>; [INV]

  <bb 18> :
  stbi__vertically_flip_on_load_global.29_8 = stbi__vertically_flip_on_load_global;
  iftmp.26_44 = stbi__vertically_flip_on_load_global.29_8 != 0;

  <bb 19> :
  # iftmp.26_18 = PHI <iftmp.26_43(17), iftmp.26_44(18)>
  if (iftmp.26_18 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 20> :
  if (req_comp_30(D) == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.30_45 = *comp_29(D);
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.30_46 = req_comp_30(D);

  <bb 23> :
  # iftmp.30_19 = PHI <iftmp.30_45(21), iftmp.30_46(22)>
  channels_47 = iftmp.30_19;
  _9 = (long long unsigned int) channels_47;
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _12 = (int) _11;
  _13 = *y_28(D);
  _14 = *x_27(D);
  stbi__vertical_flip (result_15, _14, _13, _12);

  <bb 24> :
  _49 = result_15;

  <bb 25> :
  # _16 = PHI <_34(4), _49(24)>
  ri ={v} {CLOBBER};

  <bb 26> :
<L23>:
  return _16;

  <bb 27> :
<L24>:
  resx 1

}



;; Function stbi__float_postprocess (_ZL23stbi__float_postprocessPfPiS0_S0_i, funcdef_no=799, decl_uid=10453, cgraph_uid=705, symbol_order=710)

stbi__float_postprocess (float * result, int * x, int * y, int * comp, int req_comp)
{
  int * D.20197;
  int * D.20196;
  int channels;
  int iftmp.35;
  bool iftmp.31;
  int stbi__vertically_flip_on_load_set.32_1;
  int stbi__vertically_flip_on_load_local.33_2;
  int stbi__vertically_flip_on_load_global.34_3;
  long long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  bool iftmp.31_10;
  int iftmp.35_11;
  bool iftmp.31_14;
  bool iftmp.31_15;
  int iftmp.35_19;
  int iftmp.35_20;

  <bb 2> :
  _25 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.32_1 = *_25;
  if (stbi__vertically_flip_on_load_set.32_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _26 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.33_2 = *_26;
  iftmp.31_14 = stbi__vertically_flip_on_load_local.33_2 != 0;
  goto <bb 5>; [INV]

  <bb 4> :
  stbi__vertically_flip_on_load_global.34_3 = stbi__vertically_flip_on_load_global;
  iftmp.31_15 = stbi__vertically_flip_on_load_global.34_3 != 0;

  <bb 5> :
  # iftmp.31_10 = PHI <iftmp.31_14(3), iftmp.31_15(4)>
  if (iftmp.31_10 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  if (result_16(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  if (req_comp_17(D) == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.35_19 = *comp_18(D);
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.35_20 = req_comp_17(D);

  <bb 10> :
  # iftmp.35_11 = PHI <iftmp.35_19(8), iftmp.35_20(9)>
  channels_21 = iftmp.35_11;
  _4 = (long long unsigned int) channels_21;
  _5 = (unsigned int) _4;
  _6 = _5 * 4;
  _7 = (int) _6;
  _8 = *y_22(D);
  _9 = *x_23(D);
  stbi__vertical_flip (result_16(D), _9, _8, _7);

  <bb 11> :
  return;

}



;; Function stbi__fopen (_ZL11stbi__fopenPKcS0_, funcdef_no=800, decl_uid=10458, cgraph_uid=706, symbol_order=711)

stbi__fopen (const char * filename, const char * mode)
{
  struct FILE * D.13647;
  struct FILE * f;
  struct FILE * D.13645;
  struct FILE * _5;
  struct FILE * _7;

  <bb 2> :
  _5 = fopen (filename_2(D), mode_3(D));
  f_6 = _5;
  _7 = f_6;

  <bb 3> :
<L0>:
  return _7;

}



;; Function stbi_load (stbi_load, funcdef_no=801, decl_uid=4986, cgraph_uid=707, symbol_order=712)

stbi_load (const char * filename, int * x, int * y, int * comp, int req_comp)
{
  unsigned char * D.13653;
  struct FILE * D.13652;
  unsigned char * result;
  struct FILE * f;
  stbi_uc * D.13650;
  stbi_uc * _1;
  struct FILE * _6;
  stbi_uc * _9;
  unsigned char * _15;
  stbi_uc * _18;

  <bb 2> :
  _6 = stbi__fopen (filename_4(D), "rb");
  f_7 = _6;
  if (f_7 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("can\'t fopen");
  _9 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  _15 = stbi_load_from_file (f_7, x_10(D), y_11(D), comp_12(D), req_comp_13(D));
  result_16 = _15;
  fclose (f_7);
  _18 = result_16;

  <bb 5> :
  # _1 = PHI <_9(3), _18(4)>
<L2>:
  return _1;

}



;; Function stbi_load_from_file (stbi_load_from_file, funcdef_no=802, decl_uid=4992, cgraph_uid=708, symbol_order=713)

stbi_load_from_file (struct FILE * f, int * x, int * y, int * comp, int req_comp)
{
  unsigned char * D.13659;
  struct stbi__context s;
  unsigned char * result;
  stbi_uc * D.13657;
  stbi_uc * _1;
  stbi_uc * _2;
  long long int _3;
  int _4;
  int _5;
  unsigned char * _16;
  stbi_uc * _19;

  <bb 2> :
  stbi__start_file (&s, f_9(D));

  <bb 3> :
  _16 = stbi__load_and_postprocess_8bit (&s, x_11(D), y_12(D), comp_13(D), req_comp_14(D));

  <bb 4> :
  result_17 = _16;
  if (result_17 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _1 = s.img_buffer_end;
  _2 = s.img_buffer;
  _3 = _1 - _2;
  _4 = (int) _3;
  _5 = -_4;
  fseek (f_9(D), _5, 1);

  <bb 6> :
  _19 = result_17;
  s ={v} {CLOBBER};

  <bb 7> :
<L4>:
  return _19;

  <bb 8> :
<L5>:
  resx 1

}



;; Function stbi_load_from_file_16 (stbi_load_from_file_16, funcdef_no=803, decl_uid=5027, cgraph_uid=709, symbol_order=714)

stbi_load_from_file_16 (struct FILE * f, int * x, int * y, int * comp, int req_comp)
{
  stbi__uint16 * D.13667;
  struct stbi__context s;
  stbi__uint16 * result;
  stbi__uint16 * D.13665;
  stbi_uc * _1;
  stbi_uc * _2;
  long long int _3;
  int _4;
  int _5;
  stbi__uint16 * _16;
  stbi__uint16 * _19;

  <bb 2> :
  stbi__start_file (&s, f_9(D));

  <bb 3> :
  _16 = stbi__load_and_postprocess_16bit (&s, x_11(D), y_12(D), comp_13(D), req_comp_14(D));

  <bb 4> :
  result_17 = _16;
  if (result_17 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _1 = s.img_buffer_end;
  _2 = s.img_buffer;
  _3 = _1 - _2;
  _4 = (int) _3;
  _5 = -_4;
  fseek (f_9(D), _5, 1);

  <bb 6> :
  _19 = result_17;
  s ={v} {CLOBBER};

  <bb 7> :
<L4>:
  return _19;

  <bb 8> :
<L5>:
  resx 1

}



;; Function stbi_load_16 (stbi_load_16, funcdef_no=804, decl_uid=5021, cgraph_uid=710, symbol_order=715)

stbi_load_16 (const char * filename, int * x, int * y, int * comp, int req_comp)
{
  stbi__uint16 * D.13675;
  struct FILE * D.13674;
  stbi__uint16 * result;
  struct FILE * f;
  stbi_us * D.13672;
  stbi_us * _1;
  struct FILE * _6;
  stbi_us * _9;
  stbi__uint16 * _15;
  stbi_us * _18;

  <bb 2> :
  _6 = stbi__fopen (filename_4(D), "rb");
  f_7 = _6;
  if (f_7 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("can\'t fopen");
  _9 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  _15 = stbi_load_from_file_16 (f_7, x_10(D), y_11(D), comp_12(D), req_comp_13(D));
  result_16 = _15;
  fclose (f_7);
  _18 = result_16;

  <bb 5> :
  # _1 = PHI <_9(3), _18(4)>
<L2>:
  return _1;

}



;; Function stbi_load_16_from_memory (stbi_load_16_from_memory, funcdef_no=805, decl_uid=5008, cgraph_uid=711, symbol_order=716)

stbi_load_16_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * channels_in_file, int desired_channels)
{
  stbi_us * D.13678;
  struct stbi__context s;
  stbi_us * D.13676;
  stbi_us * _10;
  stbi_us * _11;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _10 = stbi__load_and_postprocess_16bit (&s, x_5(D), y_6(D), channels_in_file_7(D), desired_channels_8(D));

  <bb 3> :
  _11 = _10;

  <bb 4> :
  s ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _11;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi_load_16_from_callbacks (stbi_load_16_from_callbacks, funcdef_no=806, decl_uid=5015, cgraph_uid=712, symbol_order=717)

stbi_load_16_from_callbacks (const struct stbi_io_callbacks * clbk, void * user, int * x, int * y, int * channels_in_file, int desired_channels)
{
  stbi_us * D.13683;
  struct stbi__context s;
  stbi_us * D.13681;
  stbi_us * _11;
  stbi_us * _12;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));

  <bb 3> :
  _11 = stbi__load_and_postprocess_16bit (&s, x_6(D), y_7(D), channels_in_file_8(D), desired_channels_9(D));

  <bb 4> :
  _12 = _11;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _12;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_load_from_memory (stbi_load_from_memory, funcdef_no=807, decl_uid=4973, cgraph_uid=713, symbol_order=718)

stbi_load_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * comp, int req_comp)
{
  stbi_uc * D.13688;
  struct stbi__context s;
  stbi_uc * D.13686;
  stbi_uc * _10;
  stbi_uc * _11;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _10 = stbi__load_and_postprocess_8bit (&s, x_5(D), y_6(D), comp_7(D), req_comp_8(D));

  <bb 3> :
  _11 = _10;

  <bb 4> :
  s ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _11;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi_load_from_callbacks (stbi_load_from_callbacks, funcdef_no=808, decl_uid=4980, cgraph_uid=714, symbol_order=719)

stbi_load_from_callbacks (const struct stbi_io_callbacks * clbk, void * user, int * x, int * y, int * comp, int req_comp)
{
  stbi_uc * D.13693;
  struct stbi__context s;
  stbi_uc * D.13691;
  stbi_uc * _11;
  stbi_uc * _12;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));

  <bb 3> :
  _11 = stbi__load_and_postprocess_8bit (&s, x_6(D), y_7(D), comp_8(D), req_comp_9(D));

  <bb 4> :
  _12 = _11;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _12;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_load_gif_from_memory (stbi_load_gif_from_memory, funcdef_no=809, decl_uid=5001, cgraph_uid=715, symbol_order=720)

stbi_load_gif_from_memory (const stbi_uc * buffer, int len, int * * delays, int * x, int * y, int * z, int * comp, int req_comp)
{
  int * D.20195;
  int * D.20194;
  unsigned char * D.13705;
  struct stbi__context s;
  unsigned char * result;
  stbi_uc * D.13703;
  bool iftmp.36;
  int stbi__vertically_flip_on_load_set.37_1;
  int stbi__vertically_flip_on_load_local.38_2;
  int stbi__vertically_flip_on_load_global.39_3;
  int _4;
  int _5;
  int _6;
  int _7;
  bool iftmp.36_8;
  unsigned char * _21;
  bool iftmp.36_23;
  bool iftmp.36_24;
  stbi_uc * _26;

  <bb 2> :
  stbi__start_mem (&s, buffer_11(D), len_12(D));
  _21 = stbi__load_gif_main (&s, delays_14(D), x_15(D), y_16(D), z_17(D), comp_18(D), req_comp_19(D));

  <bb 3> :
  result_22 = _21;
  _29 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.37_1 = *_29;
  if (stbi__vertically_flip_on_load_set.37_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _30 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.38_2 = *_30;
  iftmp.36_23 = stbi__vertically_flip_on_load_local.38_2 != 0;
  goto <bb 6>; [INV]

  <bb 5> :
  stbi__vertically_flip_on_load_global.39_3 = stbi__vertically_flip_on_load_global;
  iftmp.36_24 = stbi__vertically_flip_on_load_global.39_3 != 0;

  <bb 6> :
  # iftmp.36_8 = PHI <iftmp.36_23(4), iftmp.36_24(5)>
  if (iftmp.36_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _4 = *comp_18(D);
  _5 = *z_17(D);
  _6 = *y_16(D);
  _7 = *x_15(D);
  stbi__vertical_flip_slices (result_22, _7, _6, _5, _4);

  <bb 8> :
  _26 = result_22;
  s ={v} {CLOBBER};

  <bb 9> :
<L7>:
  return _26;

  <bb 10> :
<L8>:
  resx 1

}



;; Function stbi__loadf_main (_ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i, funcdef_no=810, decl_uid=10583, cgraph_uid=716, symbol_order=721)

stbi__loadf_main (struct stbi__context * s, int * x, int * y, int * comp, int req_comp)
{
  unsigned char * D.13726;
  float * D.13723;
  int D.13722;
  float * hdr_data;
  struct stbi__result_info ri;
  unsigned char * data;
  int iftmp.41;
  float * D.13714;
  bool retval.40;
  int _1;
  int _2;
  int _3;
  float * _4;
  int iftmp.41_5;
  int _11;
  bool retval.40_12;
  float * _18;
  float * _21;
  unsigned char * _25;
  int iftmp.41_27;
  int iftmp.41_28;
  float * _30;
  float * _32;

  <bb 2> :
  _11 = stbi__hdr_test (s_9(D));
  _1 = _11;
  retval.40_12 = _1 != 0;
  if (retval.40_12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _18 = stbi__hdr_load (s_9(D), x_13(D), y_14(D), comp_15(D), req_comp_16(D), &ri);

  <bb 4> :
  hdr_data_19 = _18;
  if (hdr_data_19 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__float_postprocess (hdr_data_19, x_13(D), y_14(D), comp_15(D), req_comp_16(D));

  <bb 6> :
  _21 = hdr_data_19;
  // predicted unlikely by early return (on trees) predictor.
  ri ={v} {CLOBBER};
  goto <bb 13>; [INV]

  <bb 7> :
  _25 = stbi__load_and_postprocess_8bit (s_9(D), x_13(D), y_14(D), comp_15(D), req_comp_16(D));
  data_26 = _25;
  if (data_26 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  if (req_comp_16(D) == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  iftmp.41_27 = *comp_15(D);
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.41_28 = req_comp_16(D);

  <bb 11> :
  # iftmp.41_5 = PHI <iftmp.41_27(9), iftmp.41_28(10)>
  _2 = *y_14(D);
  _3 = *x_13(D);
  _30 = stbi__ldr_to_hdr (data_26, _3, _2, iftmp.41_5);
  goto <bb 13>; [INV]

  <bb 12> :
  stbi__err ("unknown image type");
  _32 = 0B;

  <bb 13> :
  # _4 = PHI <_21(6), _30(11), _32(12)>
<L11>:
  return _4;

  <bb 14> :
<L12>:
  resx 1

}



;; Function stbi_loadf_from_memory (stbi_loadf_from_memory, funcdef_no=811, decl_uid=5034, cgraph_uid=717, symbol_order=722)

stbi_loadf_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * comp, int req_comp)
{
  float * D.13729;
  struct stbi__context s;
  float * D.13727;
  float * _10;
  float * _11;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _10 = stbi__loadf_main (&s, x_5(D), y_6(D), comp_7(D), req_comp_8(D));

  <bb 3> :
  _11 = _10;

  <bb 4> :
  s ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _11;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi_loadf_from_callbacks (stbi_loadf_from_callbacks, funcdef_no=812, decl_uid=5041, cgraph_uid=718, symbol_order=723)

stbi_loadf_from_callbacks (const struct stbi_io_callbacks * clbk, void * user, int * x, int * y, int * comp, int req_comp)
{
  float * D.13734;
  struct stbi__context s;
  float * D.13732;
  float * _11;
  float * _12;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));

  <bb 3> :
  _11 = stbi__loadf_main (&s, x_6(D), y_7(D), comp_8(D), req_comp_9(D));

  <bb 4> :
  _12 = _11;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _12;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_loadf (stbi_loadf, funcdef_no=813, decl_uid=5047, cgraph_uid=719, symbol_order=724)

stbi_loadf (const char * filename, int * x, int * y, int * comp, int req_comp)
{
  float * D.13742;
  struct FILE * D.13741;
  struct FILE * f;
  float * result;
  float * D.13739;
  float * _1;
  struct FILE * _6;
  float * _9;
  float * _15;
  float * _18;

  <bb 2> :
  _6 = stbi__fopen (filename_4(D), "rb");
  f_7 = _6;
  if (f_7 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("can\'t fopen");
  _9 = 0B;
  goto <bb 5>; [INV]

  <bb 4> :
  _15 = stbi_loadf_from_file (f_7, x_10(D), y_11(D), comp_12(D), req_comp_13(D));
  result_16 = _15;
  fclose (f_7);
  _18 = result_16;

  <bb 5> :
  # _1 = PHI <_9(3), _18(4)>
<L2>:
  return _1;

}



;; Function stbi_loadf_from_file (stbi_loadf_from_file, funcdef_no=814, decl_uid=5053, cgraph_uid=720, symbol_order=725)

stbi_loadf_from_file (struct FILE * f, int * x, int * y, int * comp, int req_comp)
{
  float * D.13745;
  struct stbi__context s;
  float * D.13743;
  float * _10;
  float * _11;

  <bb 2> :
  stbi__start_file (&s, f_3(D));

  <bb 3> :
  _10 = stbi__loadf_main (&s, x_5(D), y_6(D), comp_7(D), req_comp_8(D));

  <bb 4> :
  _11 = _10;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _11;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_is_hdr_from_memory (stbi_is_hdr_from_memory, funcdef_no=815, decl_uid=5067, cgraph_uid=721, symbol_order=726)

stbi_is_hdr_from_memory (const stbi_uc * buffer, int len)
{
  int D.13750;
  struct stbi__context s;
  int D.13748;
  int _6;
  int _7;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _6 = stbi__hdr_test (&s);

  <bb 3> :
  _7 = _6;

  <bb 4> :
  s ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _7;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi_is_hdr (stbi_is_hdr, funcdef_no=816, decl_uid=5069, cgraph_uid=722, symbol_order=727)

stbi_is_hdr (const char * filename)
{
  int D.13759;
  struct FILE * D.13758;
  int result;
  struct FILE * f;
  int D.13756;
  struct FILE * _6;
  int _10;
  int _13;

  <bb 2> :
  _6 = stbi__fopen (filename_4(D), "rb");
  f_7 = _6;
  result_8 = 0;
  if (f_7 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _10 = stbi_is_hdr_from_file (f_7);
  result_11 = _10;
  fclose (f_7);

  <bb 4> :
  # result_1 = PHI <result_8(2), result_11(3)>
  _13 = result_1;

  <bb 5> :
<L3>:
  return _13;

}



;; Function stbi_is_hdr_from_file (stbi_is_hdr_from_file, funcdef_no=817, decl_uid=5071, cgraph_uid=723, symbol_order=728)

stbi_is_hdr_from_file (struct FILE * f)
{
  int D.13763;
  long int D.13762;
  struct stbi__context s;
  int res;
  long int pos;
  int D.13760;
  long int _5;
  int _9;
  int _12;

  <bb 2> :
  _5 = ftell (f_3(D));

  <bb 3> :
  pos_6 = _5;
  stbi__start_file (&s, f_3(D));

  <bb 4> :
  _9 = stbi__hdr_test (&s);

  <bb 5> :
  res_10 = _9;
  fseek (f_3(D), pos_6, 0);
  _12 = res_10;
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _12;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_is_hdr_from_callbacks (stbi_is_hdr_from_callbacks, funcdef_no=818, decl_uid=5064, cgraph_uid=724, symbol_order=729)

stbi_is_hdr_from_callbacks (const struct stbi_io_callbacks * clbk, void * user)
{
  int D.13768;
  struct stbi__context s;
  int D.13766;
  int _7;
  int _8;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));

  <bb 3> :
  _7 = stbi__hdr_test (&s);

  <bb 4> :
  _8 = _7;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _8;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_ldr_to_hdr_gamma (stbi_ldr_to_hdr_gamma, funcdef_no=819, decl_uid=5059, cgraph_uid=725, symbol_order=732)

stbi_ldr_to_hdr_gamma (float gamma)
{
  <bb 2> :
  stbi__l2h_gamma = gamma_2(D);
  return;

}



;; Function stbi_ldr_to_hdr_scale (stbi_ldr_to_hdr_scale, funcdef_no=820, decl_uid=5061, cgraph_uid=726, symbol_order=733)

stbi_ldr_to_hdr_scale (float scale)
{
  <bb 2> :
  stbi__l2h_scale = scale_2(D);
  return;

}



;; Function stbi_hdr_to_ldr_gamma (stbi_hdr_to_ldr_gamma, funcdef_no=821, decl_uid=5055, cgraph_uid=727, symbol_order=736)

stbi_hdr_to_ldr_gamma (float gamma)
{
  float _1;

  <bb 2> :
  _1 = 1.0e+0 / gamma_2(D);
  stbi__h2l_gamma_i = _1;
  return;

}



;; Function stbi_hdr_to_ldr_scale (stbi_hdr_to_ldr_scale, funcdef_no=822, decl_uid=5057, cgraph_uid=728, symbol_order=737)

stbi_hdr_to_ldr_scale (float scale)
{
  float _1;

  <bb 2> :
  _1 = 1.0e+0 / scale_2(D);
  stbi__h2l_scale_i = _1;
  return;

}



;; Function stbi__refill_buffer (_ZL19stbi__refill_bufferP13stbi__context, funcdef_no=823, decl_uid=10033, cgraph_uid=729, symbol_order=738)

stbi__refill_buffer (struct stbi__context * s)
{
  int D.13774;
  int n;
  int (*<T68b>) (void *, char *, int) _1;
  int _2;
  stbi_uc[128] * _3;
  void * _4;
  int _5;
  stbi_uc * _6;
  stbi_uc * _7;
  long long int _8;
  int _9;
  int _10;
  stbi_uc[128] * _11;
  stbi_uc[128] * _12;
  stbi_uc * _13;
  stbi_uc * _14;
  stbi_uc[128] * _15;
  stbi_uc[128] * _16;
  sizetype _17;
  stbi_uc * _18;
  int _23;

  <bb 2> :
  _1 = s_21(D)->io.read;
  _2 = s_21(D)->buflen;
  _3 = &s_21(D)->buffer_start;
  _4 = s_21(D)->io_user_data;
  _23 = _1 (_4, _3, _2);
  n_24 = _23;
  _5 = s_21(D)->callback_already_read;
  _6 = s_21(D)->img_buffer;
  _7 = s_21(D)->img_buffer_original;
  _8 = _6 - _7;
  _9 = (int) _8;
  _10 = _5 + _9;
  s_21(D)->callback_already_read = _10;
  if (n_24 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  s_21(D)->read_from_callbacks = 0;
  _11 = &s_21(D)->buffer_start;
  s_21(D)->img_buffer = _11;
  _12 = &s_21(D)->buffer_start;
  _13 = _12 + 1;
  s_21(D)->img_buffer_end = _13;
  _14 = s_21(D)->img_buffer;
  *_14 = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _15 = &s_21(D)->buffer_start;
  s_21(D)->img_buffer = _15;
  _16 = &s_21(D)->buffer_start;
  _17 = (sizetype) n_24;
  _18 = _16 + _17;
  s_21(D)->img_buffer_end = _18;

  <bb 5> :
  return;

}



;; Function stbi__get8 (_ZL10stbi__get8P13stbi__context, funcdef_no=824, decl_uid=10669, cgraph_uid=730, symbol_order=739)

stbi__get8 (struct stbi__context * s)
{
  stbi_uc D.13801;
  stbi_uc * _1;
  stbi_uc * _2;
  stbi_uc * _3;
  stbi_uc * _4;
  stbi_uc * _5;
  int _6;
  stbi_uc * _7;
  stbi_uc * _8;
  stbi_uc * _9;
  stbi_uc _10;
  stbi_uc _15;
  stbi_uc _18;
  stbi_uc _19;

  <bb 2> :
  _1 = s_13(D)->img_buffer;
  _2 = s_13(D)->img_buffer_end;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = s_13(D)->img_buffer;
  _4 = _3;
  _5 = _4 + 1;
  s_13(D)->img_buffer = _5;
  _15 = *_4;
  goto <bb 7>; [INV]

  <bb 4> :
  _6 = s_13(D)->read_from_callbacks;
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__refill_buffer (s_13(D));
  _7 = s_13(D)->img_buffer;
  _8 = _7;
  _9 = _8 + 1;
  s_13(D)->img_buffer = _9;
  _18 = *_8;
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;

  <bb 7> :
  # _10 = PHI <_15(3), _18(5), _19(6)>
<L4>:
  return _10;

}



;; Function stbi__at_eof (_ZL12stbi__at_eofP13stbi__context, funcdef_no=825, decl_uid=10672, cgraph_uid=731, symbol_order=740)

stbi__at_eof (struct stbi__context * s)
{
  int D.14797;
  int D.14792;
  bool retval.263;
  int (*<T68b>) (void *, char *, int) _1;
  int (*<T68d>) (void *) _2;
  void * _3;
  int _4;
  int _5;
  stbi_uc * _6;
  stbi_uc * _7;
  bool _8;
  int _9;
  int _15;
  bool retval.263_16;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = s_13(D)->io.read;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _2 = s_13(D)->io.eof;
  _3 = s_13(D)->io_user_data;
  _15 = _2 (_3);
  _4 = _15;
  retval.263_16 = _4 == 0;
  if (retval.263_16 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _17 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  _5 = s_13(D)->read_from_callbacks;
  if (_5 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _18 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  _6 = s_13(D)->img_buffer;
  _7 = s_13(D)->img_buffer_end;
  _8 = _6 >= _7;
  _19 = (int) _8;

  <bb 8> :
  # _9 = PHI <_17(4), _18(6), _19(7)>
<L7>:
  return _9;

}



;; Function stbi__skip (_ZL10stbi__skipP13stbi__contexti, funcdef_no=826, decl_uid=10676, cgraph_uid=732, symbol_order=741)

stbi__skip (struct stbi__context * s, int n)
{
  int blen;
  stbi_uc * _1;
  int (*<T68b>) (void *, char *, int) _2;
  stbi_uc * _3;
  stbi_uc * _4;
  long long int _5;
  stbi_uc * _6;
  void (*<T68c>) (void *, int) _7;
  int _8;
  void * _9;
  stbi_uc * _10;
  sizetype _11;
  stbi_uc * _12;

  <bb 2> :
  if (n_14(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  if (n_14(D) < 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _1 = s_16(D)->img_buffer_end;
  s_16(D)->img_buffer = _1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 6> :
  _2 = s_16(D)->io.read;
  if (_2 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  _3 = s_16(D)->img_buffer_end;
  _4 = s_16(D)->img_buffer;
  _5 = _3 - _4;
  blen_18 = (int) _5;
  if (blen_18 < n_14(D))
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = s_16(D)->img_buffer_end;
  s_16(D)->img_buffer = _6;
  _7 = s_16(D)->io.skip;
  _8 = n_14(D) - blen_18;
  _9 = s_16(D)->io_user_data;
  _7 (_9, _8);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 9> :

  <bb 10> :
  _10 = s_16(D)->img_buffer;
  _11 = (sizetype) n_14(D);
  _12 = _10 + _11;
  s_16(D)->img_buffer = _12;

  <bb 11> :
<L9>:
  return;

}



;; Function stbi__getn (_ZL10stbi__getnP13stbi__contextPhi, funcdef_no=827, decl_uid=10682, cgraph_uid=733, symbol_order=742)

stbi__getn (struct stbi__context * s, stbi_uc * buffer, int n)
{
  int D.13794;
  int count;
  int res;
  int blen;
  int D.13789;
  int (*<T68b>) (void *, char *, int) _1;
  stbi_uc * _2;
  stbi_uc * _3;
  long long int _4;
  long long unsigned int _5;
  stbi_uc * _6;
  int (*<T68b>) (void *, char *, int) _7;
  int _8;
  sizetype _9;
  char * _10;
  void * _11;
  int _12;
  bool _13;
  stbi_uc * _14;
  stbi_uc * _15;
  sizetype _16;
  stbi_uc * _17;
  stbi_uc * _18;
  long long unsigned int _19;
  stbi_uc * _20;
  stbi_uc * _21;
  sizetype _22;
  stbi_uc * _23;
  int _24;
  int _33;
  int _37;
  int _40;
  int _41;

  <bb 2> :
  _1 = s_27(D)->io.read;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = s_27(D)->img_buffer_end;
  _3 = s_27(D)->img_buffer;
  _4 = _2 - _3;
  blen_28 = (int) _4;
  if (blen_28 < n_29(D))
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _5 = (long long unsigned int) blen_28;
  _6 = s_27(D)->img_buffer;
  memcpy (buffer_30(D), _6, _5);
  _7 = s_27(D)->io.read;
  _8 = n_29(D) - blen_28;
  _9 = (sizetype) blen_28;
  _10 = buffer_30(D) + _9;
  _11 = s_27(D)->io_user_data;
  _33 = _7 (_11, _10, _8);
  count_34 = _33;
  _12 = n_29(D) - blen_28;
  _13 = count_34 == _12;
  res_35 = (int) _13;
  _14 = s_27(D)->img_buffer_end;
  s_27(D)->img_buffer = _14;
  _37 = res_35;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 5> :

  <bb 6> :
  _15 = s_27(D)->img_buffer;
  _16 = (sizetype) n_29(D);
  _17 = _15 + _16;
  _18 = s_27(D)->img_buffer_end;
  if (_17 <= _18)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _19 = (long long unsigned int) n_29(D);
  _20 = s_27(D)->img_buffer;
  memcpy (buffer_30(D), _20, _19);
  _21 = s_27(D)->img_buffer;
  _22 = (sizetype) n_29(D);
  _23 = _21 + _22;
  s_27(D)->img_buffer = _23;
  _40 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _41 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _24 = PHI <_37(4), _40(7), _41(8)>
<L7>:
  return _24;

}



;; Function stbi__get16be (_ZL13stbi__get16beP13stbi__context, funcdef_no=828, decl_uid=10688, cgraph_uid=734, symbol_order=743)

stbi__get16be (struct stbi__context * s)
{
  unsigned char D.13798;
  unsigned char D.13797;
  int z;
  int D.13795;
  unsigned char _1;
  int _2;
  unsigned char _3;
  int _4;
  unsigned char _8;
  unsigned char _11;
  int _12;

  <bb 2> :
  _8 = stbi__get8 (s_6(D));
  _1 = _8;
  z_9 = (int) _1;
  _2 = z_9 << 8;
  _11 = stbi__get8 (s_6(D));
  _3 = _11;
  _4 = (int) _3;
  _12 = _2 + _4;

  <bb 3> :
<L0>:
  return _12;

}



;; Function stbi__get32be (_ZL13stbi__get32beP13stbi__context, funcdef_no=829, decl_uid=10692, cgraph_uid=735, symbol_order=744)

stbi__get32be (struct stbi__context * s)
{
  int D.13808;
  int D.13807;
  stbi__uint32 z;
  stbi__uint32 D.13805;
  int _1;
  unsigned int _2;
  int _3;
  unsigned int _4;
  int _8;
  int _11;
  stbi__uint32 _12;

  <bb 2> :
  _8 = stbi__get16be (s_6(D));
  _1 = _8;
  z_9 = (stbi__uint32) _1;
  _2 = z_9 << 16;
  _11 = stbi__get16be (s_6(D));
  _3 = _11;
  _4 = (unsigned int) _3;
  _12 = _2 + _4;

  <bb 3> :
<L0>:
  return _12;

}



;; Function stbi__get16le (_ZL13stbi__get16leP13stbi__context, funcdef_no=830, decl_uid=10696, cgraph_uid=736, symbol_order=745)

stbi__get16le (struct stbi__context * s)
{
  unsigned char D.13812;
  unsigned char D.13811;
  int z;
  int D.13809;
  unsigned char _1;
  unsigned char _2;
  int _3;
  int _4;
  unsigned char _8;
  unsigned char _11;
  int _12;

  <bb 2> :
  _8 = stbi__get8 (s_6(D));
  _1 = _8;
  z_9 = (int) _1;
  _11 = stbi__get8 (s_6(D));
  _2 = _11;
  _3 = (int) _2;
  _4 = _3 << 8;
  _12 = z_9 + _4;

  <bb 3> :
<L0>:
  return _12;

}



;; Function stbi__get32le (_ZL13stbi__get32leP13stbi__context, funcdef_no=831, decl_uid=10700, cgraph_uid=737, symbol_order=746)

stbi__get32le (struct stbi__context * s)
{
  int D.13816;
  int D.13815;
  stbi__uint32 z;
  stbi__uint32 D.13813;
  int _1;
  int _2;
  int _3;
  unsigned int _4;
  int _8;
  int _11;
  stbi__uint32 _12;

  <bb 2> :
  _8 = stbi__get16le (s_6(D));
  _1 = _8;
  z_9 = (stbi__uint32) _1;
  _11 = stbi__get16le (s_6(D));
  _2 = _11;
  _3 = _2 << 16;
  _4 = (unsigned int) _3;
  _12 = z_9 + _4;

  <bb 3> :
<L0>:
  return _12;

}



;; Function stbi__compute_y (_ZL15stbi__compute_yiii, funcdef_no=832, decl_uid=10706, cgraph_uid=738, symbol_order=747)

stbi__compute_y (int r, int g, int b)
{
  stbi_uc D.13817;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  stbi_uc _10;

  <bb 2> :
  _1 = r_7(D) * 77;
  _2 = g_8(D) * 150;
  _3 = _1 + _2;
  _4 = b_9(D) * 29;
  _5 = _3 + _4;
  _6 = _5 >> 8;
  _10 = (stbi_uc) _6;

  <bb 3> :
<L0>:
  return _10;

}



;; Function stbi__convert_format (_ZL20stbi__convert_formatPhiijj, funcdef_no=833, decl_uid=10713, cgraph_uid=739, symbol_order=748)

stbi__convert_format (unsigned char * data, int img_n, int req_comp, unsigned int x, unsigned int y)
{
  unsigned char * dest;
  unsigned char * src;
  unsigned char * good;
  int j;
  int i;
  bool iftmp.44;
  unsigned char * D.13821;
  int req_comp.42_1;
  int img_n.43_2;
  int req_comp.45_3;
  int req_comp.46_4;
  int y.47_5;
  int x.48_6;
  int req_comp.49_7;
  int y.50_8;
  unsigned int j.51_9;
  unsigned int _10;
  int img_n.52_11;
  unsigned int img_n.53_12;
  unsigned int _13;
  sizetype _14;
  unsigned int j.54_15;
  unsigned int _16;
  int req_comp.55_17;
  unsigned int req_comp.56_18;
  unsigned int _19;
  sizetype _20;
  int img_n.57_21;
  int _22;
  int req_comp.58_23;
  int _24;
  unsigned int _25;
  unsigned char _26;
  unsigned char * _27;
  unsigned int _28;
  unsigned char * _29;
  unsigned char _30;
  unsigned char * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned int _34;
  unsigned char * _35;
  unsigned char _36;
  unsigned char * _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char * _40;
  unsigned int _41;
  unsigned char _42;
  unsigned int _43;
  unsigned char * _44;
  unsigned char _45;
  unsigned char * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned int _49;
  unsigned char * _50;
  unsigned char _51;
  unsigned char * _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char * _55;
  unsigned char _56;
  unsigned int _57;
  unsigned char _58;
  unsigned char * _59;
  unsigned char _60;
  unsigned char * _61;
  unsigned char _62;
  unsigned char * _63;
  unsigned int _64;
  unsigned char * _65;
  unsigned char _66;
  int _67;
  unsigned char * _68;
  unsigned char _69;
  int _70;
  unsigned char _71;
  int _72;
  unsigned char _73;
  unsigned int _74;
  unsigned char * _75;
  unsigned char _76;
  int _77;
  unsigned char * _78;
  unsigned char _79;
  int _80;
  unsigned char _81;
  int _82;
  unsigned char _83;
  unsigned char * _84;
  unsigned int _85;
  unsigned char * _86;
  unsigned char _87;
  int _88;
  unsigned char * _89;
  unsigned char _90;
  int _91;
  unsigned char _92;
  int _93;
  unsigned char _94;
  unsigned int _95;
  unsigned char * _96;
  unsigned char _97;
  int _98;
  unsigned char * _99;
  unsigned char _100;
  int _101;
  unsigned char _102;
  int _103;
  unsigned char _104;
  unsigned char * _105;
  unsigned char _106;
  unsigned int _107;
  unsigned char _108;
  unsigned char * _109;
  unsigned char _110;
  unsigned char * _111;
  unsigned char _112;
  unsigned char * _150;
  unsigned char * _169;
  bool iftmp.44_170;
  bool iftmp.44_172;
  unsigned char * _179;
  unsigned char * _269;
  unsigned char * _272;

  <bb 2> :
  req_comp.42_1 = req_comp;
  img_n.43_2 = img_n;
  if (req_comp.42_1 == img_n.43_2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _169 = data_168(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 65>; [INV]

  <bb 4> :
  req_comp.45_3 = req_comp;
  if (req_comp.45_3 > 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  req_comp.46_4 = req_comp;
  if (req_comp.46_4 <= 4)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _assert ("req_comp >= 1 && req_comp <= 4", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1701);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.44_170 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.44_172 = 0;

  <bb 9> :
  y.47_5 = (int) y_173(D);
  x.48_6 = (int) x_174(D);
  req_comp.49_7 = req_comp;
  good_176 = stbi__malloc_mad3 (req_comp.49_7, x.48_6, y.47_5, 0);
  if (good_176 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  free (data_168(D));
  stbi__err ("outofmem");
  _179 = 0B;
  goto <bb 65>; [INV]

  <bb 11> :
  j_180 = 0;

  <bb 12> :
  # j_125 = PHI <j_180(11), j_270(63)>
  y.50_8 = (int) y_173(D);
  if (j_125 >= y.50_8)
    goto <bb 64>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  j.51_9 = (unsigned int) j_125;
  _10 = x_174(D) * j.51_9;
  img_n.52_11 = img_n;
  img_n.53_12 = (unsigned int) img_n.52_11;
  _13 = _10 * img_n.53_12;
  _14 = (sizetype) _13;
  src_181 = data_168(D) + _14;
  j.54_15 = (unsigned int) j_125;
  _16 = x_174(D) * j.54_15;
  req_comp.55_17 = req_comp;
  req_comp.56_18 = (unsigned int) req_comp.55_17;
  _19 = _16 * req_comp.56_18;
  _20 = (sizetype) _19;
  dest_182 = good_176 + _20;
  img_n.57_21 = img_n;
  _22 = img_n.57_21 * 8;
  req_comp.58_23 = req_comp;
  _24 = _22 + req_comp.58_23;
  switch (_24) <default: <L59> [INV], case 10: <L11> [INV], case 11: <L15> [INV], case 12: <L19> [INV], case 17: <L23> [INV], case 19: <L27> [INV], case 20: <L31> [INV], case 25: <L39> [INV], case 26: <L43> [INV], case 28: <L35> [INV], case 33: <L47> [INV], case 34: <L51> [INV], case 35: <L55> [INV]>

  <bb 14> :
<L11>:
  _25 = x_174(D) + 4294967295;
  i_183 = (int) _25;

  <bb 15> :
  # i_113 = PHI <i_183(14), i_186(16)>
  # src_126 = PHI <src_181(14), src_187(16)>
  # dest_138 = PHI <dest_182(14), dest_188(16)>
  if (i_113 < 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _26 = *src_126;
  *dest_138 = _26;
  _27 = dest_138 + 1;
  *_27 = 255;
  i_186 = i_113 + -1;
  src_187 = src_126 + 1;
  dest_188 = dest_138 + 2;
  goto <bb 15>; [INV]

  <bb 17> :
  goto <bb 63>; [INV]

  <bb 18> :
<L15>:
  _28 = x_174(D) + 4294967295;
  i_189 = (int) _28;

  <bb 19> :
  # i_114 = PHI <i_189(18), i_193(20)>
  # src_127 = PHI <src_181(18), src_194(20)>
  # dest_139 = PHI <dest_182(18), dest_195(20)>
  if (i_114 < 0)
    goto <bb 21>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  _29 = dest_139 + 2;
  _30 = *src_127;
  *_29 = _30;
  _31 = dest_139 + 1;
  _32 = *_29;
  *_31 = _32;
  _33 = *_31;
  *dest_139 = _33;
  i_193 = i_114 + -1;
  src_194 = src_127 + 1;
  dest_195 = dest_139 + 3;
  goto <bb 19>; [INV]

  <bb 21> :
  goto <bb 63>; [INV]

  <bb 22> :
<L19>:
  _34 = x_174(D) + 4294967295;
  i_196 = (int) _34;

  <bb 23> :
  # i_115 = PHI <i_196(22), i_201(24)>
  # src_128 = PHI <src_181(22), src_202(24)>
  # dest_140 = PHI <dest_182(22), dest_203(24)>
  if (i_115 < 0)
    goto <bb 25>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _35 = dest_140 + 2;
  _36 = *src_128;
  *_35 = _36;
  _37 = dest_140 + 1;
  _38 = *_35;
  *_37 = _38;
  _39 = *_37;
  *dest_140 = _39;
  _40 = dest_140 + 3;
  *_40 = 255;
  i_201 = i_115 + -1;
  src_202 = src_128 + 1;
  dest_203 = dest_140 + 4;
  goto <bb 23>; [INV]

  <bb 25> :
  goto <bb 63>; [INV]

  <bb 26> :
<L23>:
  _41 = x_174(D) + 4294967295;
  i_204 = (int) _41;

  <bb 27> :
  # i_116 = PHI <i_204(26), i_206(28)>
  # src_129 = PHI <src_181(26), src_207(28)>
  # dest_141 = PHI <dest_182(26), dest_208(28)>
  if (i_116 < 0)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _42 = *src_129;
  *dest_141 = _42;
  i_206 = i_116 + -1;
  src_207 = src_129 + 2;
  dest_208 = dest_141 + 1;
  goto <bb 27>; [INV]

  <bb 29> :
  goto <bb 63>; [INV]

  <bb 30> :
<L27>:
  _43 = x_174(D) + 4294967295;
  i_209 = (int) _43;

  <bb 31> :
  # i_117 = PHI <i_209(30), i_213(32)>
  # src_130 = PHI <src_181(30), src_214(32)>
  # dest_142 = PHI <dest_182(30), dest_215(32)>
  if (i_117 < 0)
    goto <bb 33>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _44 = dest_142 + 2;
  _45 = *src_130;
  *_44 = _45;
  _46 = dest_142 + 1;
  _47 = *_44;
  *_46 = _47;
  _48 = *_46;
  *dest_142 = _48;
  i_213 = i_117 + -1;
  src_214 = src_130 + 2;
  dest_215 = dest_142 + 3;
  goto <bb 31>; [INV]

  <bb 33> :
  goto <bb 63>; [INV]

  <bb 34> :
<L31>:
  _49 = x_174(D) + 4294967295;
  i_216 = (int) _49;

  <bb 35> :
  # i_118 = PHI <i_216(34), i_221(36)>
  # src_131 = PHI <src_181(34), src_222(36)>
  # dest_143 = PHI <dest_182(34), dest_223(36)>
  if (i_118 < 0)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _50 = dest_143 + 2;
  _51 = *src_131;
  *_50 = _51;
  _52 = dest_143 + 1;
  _53 = *_50;
  *_52 = _53;
  _54 = *_52;
  *dest_143 = _54;
  _55 = dest_143 + 3;
  _56 = MEM[(unsigned char *)src_131 + 1B];
  *_55 = _56;
  i_221 = i_118 + -1;
  src_222 = src_131 + 2;
  dest_223 = dest_143 + 4;
  goto <bb 35>; [INV]

  <bb 37> :
  goto <bb 63>; [INV]

  <bb 38> :
<L35>:
  _57 = x_174(D) + 4294967295;
  i_224 = (int) _57;

  <bb 39> :
  # i_119 = PHI <i_224(38), i_229(40)>
  # src_132 = PHI <src_181(38), src_230(40)>
  # dest_144 = PHI <dest_182(38), dest_231(40)>
  if (i_119 < 0)
    goto <bb 41>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 40> :
  _58 = *src_132;
  *dest_144 = _58;
  _59 = dest_144 + 1;
  _60 = MEM[(unsigned char *)src_132 + 1B];
  *_59 = _60;
  _61 = dest_144 + 2;
  _62 = MEM[(unsigned char *)src_132 + 2B];
  *_61 = _62;
  _63 = dest_144 + 3;
  *_63 = 255;
  i_229 = i_119 + -1;
  src_230 = src_132 + 3;
  dest_231 = dest_144 + 4;
  goto <bb 39>; [INV]

  <bb 41> :
  goto <bb 63>; [INV]

  <bb 42> :
<L39>:
  _64 = x_174(D) + 4294967295;
  i_232 = (int) _64;

  <bb 43> :
  # i_120 = PHI <i_232(42), i_235(44)>
  # src_133 = PHI <src_181(42), src_236(44)>
  # dest_145 = PHI <dest_182(42), dest_237(44)>
  if (i_120 < 0)
    goto <bb 45>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 44> :
  _65 = src_133 + 2;
  _66 = *_65;
  _67 = (int) _66;
  _68 = src_133 + 1;
  _69 = *_68;
  _70 = (int) _69;
  _71 = *src_133;
  _72 = (int) _71;
  _73 = stbi__compute_y (_72, _70, _67);
  *dest_145 = _73;
  i_235 = i_120 + -1;
  src_236 = src_133 + 3;
  dest_237 = dest_145 + 1;
  goto <bb 43>; [INV]

  <bb 45> :
  goto <bb 63>; [INV]

  <bb 46> :
<L43>:
  _74 = x_174(D) + 4294967295;
  i_238 = (int) _74;

  <bb 47> :
  # i_121 = PHI <i_238(46), i_242(48)>
  # src_134 = PHI <src_181(46), src_243(48)>
  # dest_146 = PHI <dest_182(46), dest_244(48)>
  if (i_121 < 0)
    goto <bb 49>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  _75 = src_134 + 2;
  _76 = *_75;
  _77 = (int) _76;
  _78 = src_134 + 1;
  _79 = *_78;
  _80 = (int) _79;
  _81 = *src_134;
  _82 = (int) _81;
  _83 = stbi__compute_y (_82, _80, _77);
  *dest_146 = _83;
  _84 = dest_146 + 1;
  *_84 = 255;
  i_242 = i_121 + -1;
  src_243 = src_134 + 3;
  dest_244 = dest_146 + 2;
  goto <bb 47>; [INV]

  <bb 49> :
  goto <bb 63>; [INV]

  <bb 50> :
<L47>:
  _85 = x_174(D) + 4294967295;
  i_245 = (int) _85;

  <bb 51> :
  # i_122 = PHI <i_245(50), i_248(52)>
  # src_135 = PHI <src_181(50), src_249(52)>
  # dest_147 = PHI <dest_182(50), dest_250(52)>
  if (i_122 < 0)
    goto <bb 53>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _86 = src_135 + 2;
  _87 = *_86;
  _88 = (int) _87;
  _89 = src_135 + 1;
  _90 = *_89;
  _91 = (int) _90;
  _92 = *src_135;
  _93 = (int) _92;
  _94 = stbi__compute_y (_93, _91, _88);
  *dest_147 = _94;
  i_248 = i_122 + -1;
  src_249 = src_135 + 4;
  dest_250 = dest_147 + 1;
  goto <bb 51>; [INV]

  <bb 53> :
  goto <bb 63>; [INV]

  <bb 54> :
<L51>:
  _95 = x_174(D) + 4294967295;
  i_251 = (int) _95;

  <bb 55> :
  # i_123 = PHI <i_251(54), i_255(56)>
  # src_136 = PHI <src_181(54), src_256(56)>
  # dest_148 = PHI <dest_182(54), dest_257(56)>
  if (i_123 < 0)
    goto <bb 57>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _96 = src_136 + 2;
  _97 = *_96;
  _98 = (int) _97;
  _99 = src_136 + 1;
  _100 = *_99;
  _101 = (int) _100;
  _102 = *src_136;
  _103 = (int) _102;
  _104 = stbi__compute_y (_103, _101, _98);
  *dest_148 = _104;
  _105 = dest_148 + 1;
  _106 = MEM[(unsigned char *)src_136 + 3B];
  *_105 = _106;
  i_255 = i_123 + -1;
  src_256 = src_136 + 4;
  dest_257 = dest_148 + 2;
  goto <bb 55>; [INV]

  <bb 57> :
  goto <bb 63>; [INV]

  <bb 58> :
<L55>:
  _107 = x_174(D) + 4294967295;
  i_258 = (int) _107;

  <bb 59> :
  # i_124 = PHI <i_258(58), i_262(60)>
  # src_137 = PHI <src_181(58), src_263(60)>
  # dest_149 = PHI <dest_182(58), dest_264(60)>
  if (i_124 < 0)
    goto <bb 61>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  _108 = *src_137;
  *dest_149 = _108;
  _109 = dest_149 + 1;
  _110 = MEM[(unsigned char *)src_137 + 1B];
  *_109 = _110;
  _111 = dest_149 + 2;
  _112 = MEM[(unsigned char *)src_137 + 2B];
  *_111 = _112;
  i_262 = i_124 + -1;
  src_263 = src_137 + 4;
  dest_264 = dest_149 + 3;
  goto <bb 59>; [INV]

  <bb 61> :
  goto <bb 63>; [INV]

  <bb 62> :
<L59>:
  _assert ("0", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1730);
  free (data_168(D));
  free (good_176);
  stbi__err ("unsupported");
  _269 = 0B;
  goto <bb 65>; [INV]

  <bb 63> :
  j_270 = j_125 + 1;
  goto <bb 12>; [INV]

  <bb 64> :
  free (data_168(D));
  _272 = good_176;

  <bb 65> :
  # _150 = PHI <_169(3), _179(10), _269(62), _272(64)>
<L62>:
  return _150;

}



;; Function stbi__compute_y_16 (_ZL18stbi__compute_y_16iii, funcdef_no=834, decl_uid=10763, cgraph_uid=740, symbol_order=749)

stbi__compute_y_16 (int r, int g, int b)
{
  stbi__uint16 D.13857;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  stbi__uint16 _10;

  <bb 2> :
  _1 = r_7(D) * 77;
  _2 = g_8(D) * 150;
  _3 = _1 + _2;
  _4 = b_9(D) * 29;
  _5 = _3 + _4;
  _6 = _5 >> 8;
  _10 = (stbi__uint16) _6;

  <bb 3> :
<L0>:
  return _10;

}



;; Function stbi__convert_format16 (_ZL22stbi__convert_format16Ptiijj, funcdef_no=835, decl_uid=10770, cgraph_uid=741, symbol_order=750)

stbi__convert_format16 (stbi__uint16 * data, int img_n, int req_comp, unsigned int x, unsigned int y)
{
  stbi__uint16 * dest;
  stbi__uint16 * src;
  stbi__uint16 * good;
  int j;
  int i;
  bool iftmp.61;
  stbi__uint16 * D.13861;
  int req_comp.59_1;
  int img_n.60_2;
  int req_comp.62_3;
  int req_comp.63_4;
  int req_comp.64_5;
  unsigned int req_comp.65_6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  long long unsigned int _10;
  int y.66_11;
  unsigned int j.67_12;
  unsigned int _13;
  int img_n.68_14;
  unsigned int img_n.69_15;
  unsigned int _16;
  long long unsigned int _17;
  long long unsigned int _18;
  unsigned int j.70_19;
  unsigned int _20;
  int req_comp.71_21;
  unsigned int req_comp.72_22;
  unsigned int _23;
  long long unsigned int _24;
  long long unsigned int _25;
  int img_n.73_26;
  int _27;
  int req_comp.74_28;
  int _29;
  unsigned int _30;
  short unsigned int _31;
  stbi__uint16 * _32;
  unsigned int _33;
  stbi__uint16 * _34;
  short unsigned int _35;
  stbi__uint16 * _36;
  short unsigned int _37;
  short unsigned int _38;
  unsigned int _39;
  stbi__uint16 * _40;
  short unsigned int _41;
  stbi__uint16 * _42;
  short unsigned int _43;
  short unsigned int _44;
  stbi__uint16 * _45;
  unsigned int _46;
  short unsigned int _47;
  unsigned int _48;
  stbi__uint16 * _49;
  short unsigned int _50;
  stbi__uint16 * _51;
  short unsigned int _52;
  short unsigned int _53;
  unsigned int _54;
  stbi__uint16 * _55;
  short unsigned int _56;
  stbi__uint16 * _57;
  short unsigned int _58;
  short unsigned int _59;
  stbi__uint16 * _60;
  short unsigned int _61;
  unsigned int _62;
  short unsigned int _63;
  stbi__uint16 * _64;
  short unsigned int _65;
  stbi__uint16 * _66;
  short unsigned int _67;
  stbi__uint16 * _68;
  unsigned int _69;
  stbi__uint16 * _70;
  short unsigned int _71;
  int _72;
  stbi__uint16 * _73;
  short unsigned int _74;
  int _75;
  short unsigned int _76;
  int _77;
  short unsigned int _78;
  unsigned int _79;
  stbi__uint16 * _80;
  short unsigned int _81;
  int _82;
  stbi__uint16 * _83;
  short unsigned int _84;
  int _85;
  short unsigned int _86;
  int _87;
  short unsigned int _88;
  stbi__uint16 * _89;
  unsigned int _90;
  stbi__uint16 * _91;
  short unsigned int _92;
  int _93;
  stbi__uint16 * _94;
  short unsigned int _95;
  int _96;
  short unsigned int _97;
  int _98;
  short unsigned int _99;
  unsigned int _100;
  stbi__uint16 * _101;
  short unsigned int _102;
  int _103;
  stbi__uint16 * _104;
  short unsigned int _105;
  int _106;
  short unsigned int _107;
  int _108;
  short unsigned int _109;
  stbi__uint16 * _110;
  short unsigned int _111;
  unsigned int _112;
  short unsigned int _113;
  stbi__uint16 * _114;
  short unsigned int _115;
  stbi__uint16 * _116;
  short unsigned int _117;
  stbi__uint16 * _155;
  stbi__uint16 * _174;
  bool iftmp.61_175;
  bool iftmp.61_177;
  stbi__uint16 * _184;
  stbi__uint16 * _274;
  stbi__uint16 * _277;

  <bb 2> :
  req_comp.59_1 = req_comp;
  img_n.60_2 = img_n;
  if (req_comp.59_1 == img_n.60_2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _174 = data_173(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 65>; [INV]

  <bb 4> :
  req_comp.62_3 = req_comp;
  if (req_comp.62_3 > 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  req_comp.63_4 = req_comp;
  if (req_comp.63_4 <= 4)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _assert ("req_comp >= 1 && req_comp <= 4", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1758);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.61_175 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.61_177 = 0;

  <bb 9> :
  req_comp.64_5 = req_comp;
  req_comp.65_6 = (unsigned int) req_comp.64_5;
  _7 = x_178(D) * req_comp.65_6;
  _8 = y_179(D) * _7;
  _9 = _8 * 2;
  _10 = (long long unsigned int) _9;
  good_181 = stbi__malloc (_10);
  if (good_181 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  free (data_173(D));
  stbi__err ("outofmem");
  _184 = 0B;
  goto <bb 65>; [INV]

  <bb 11> :
  j_185 = 0;

  <bb 12> :
  # j_130 = PHI <j_185(11), j_275(63)>
  y.66_11 = (int) y_179(D);
  if (j_130 >= y.66_11)
    goto <bb 64>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  j.67_12 = (unsigned int) j_130;
  _13 = x_178(D) * j.67_12;
  img_n.68_14 = img_n;
  img_n.69_15 = (unsigned int) img_n.68_14;
  _16 = _13 * img_n.69_15;
  _17 = (long long unsigned int) _16;
  _18 = _17 * 2;
  src_186 = data_173(D) + _18;
  j.70_19 = (unsigned int) j_130;
  _20 = x_178(D) * j.70_19;
  req_comp.71_21 = req_comp;
  req_comp.72_22 = (unsigned int) req_comp.71_21;
  _23 = _20 * req_comp.72_22;
  _24 = (long long unsigned int) _23;
  _25 = _24 * 2;
  dest_187 = good_181 + _25;
  img_n.73_26 = img_n;
  _27 = img_n.73_26 * 8;
  req_comp.74_28 = req_comp;
  _29 = _27 + req_comp.74_28;
  switch (_29) <default: <L59> [INV], case 10: <L11> [INV], case 11: <L15> [INV], case 12: <L19> [INV], case 17: <L23> [INV], case 19: <L27> [INV], case 20: <L31> [INV], case 25: <L39> [INV], case 26: <L43> [INV], case 28: <L35> [INV], case 33: <L47> [INV], case 34: <L51> [INV], case 35: <L55> [INV]>

  <bb 14> :
<L11>:
  _30 = x_178(D) + 4294967295;
  i_188 = (int) _30;

  <bb 15> :
  # i_118 = PHI <i_188(14), i_191(16)>
  # src_131 = PHI <src_186(14), src_192(16)>
  # dest_143 = PHI <dest_187(14), dest_193(16)>
  if (i_118 < 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _31 = *src_131;
  *dest_143 = _31;
  _32 = dest_143 + 2;
  *_32 = 65535;
  i_191 = i_118 + -1;
  src_192 = src_131 + 2;
  dest_193 = dest_143 + 4;
  goto <bb 15>; [INV]

  <bb 17> :
  goto <bb 63>; [INV]

  <bb 18> :
<L15>:
  _33 = x_178(D) + 4294967295;
  i_194 = (int) _33;

  <bb 19> :
  # i_119 = PHI <i_194(18), i_198(20)>
  # src_132 = PHI <src_186(18), src_199(20)>
  # dest_144 = PHI <dest_187(18), dest_200(20)>
  if (i_119 < 0)
    goto <bb 21>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  _34 = dest_144 + 4;
  _35 = *src_132;
  *_34 = _35;
  _36 = dest_144 + 2;
  _37 = *_34;
  *_36 = _37;
  _38 = *_36;
  *dest_144 = _38;
  i_198 = i_119 + -1;
  src_199 = src_132 + 2;
  dest_200 = dest_144 + 6;
  goto <bb 19>; [INV]

  <bb 21> :
  goto <bb 63>; [INV]

  <bb 22> :
<L19>:
  _39 = x_178(D) + 4294967295;
  i_201 = (int) _39;

  <bb 23> :
  # i_120 = PHI <i_201(22), i_206(24)>
  # src_133 = PHI <src_186(22), src_207(24)>
  # dest_145 = PHI <dest_187(22), dest_208(24)>
  if (i_120 < 0)
    goto <bb 25>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _40 = dest_145 + 4;
  _41 = *src_133;
  *_40 = _41;
  _42 = dest_145 + 2;
  _43 = *_40;
  *_42 = _43;
  _44 = *_42;
  *dest_145 = _44;
  _45 = dest_145 + 6;
  *_45 = 65535;
  i_206 = i_120 + -1;
  src_207 = src_133 + 2;
  dest_208 = dest_145 + 8;
  goto <bb 23>; [INV]

  <bb 25> :
  goto <bb 63>; [INV]

  <bb 26> :
<L23>:
  _46 = x_178(D) + 4294967295;
  i_209 = (int) _46;

  <bb 27> :
  # i_121 = PHI <i_209(26), i_211(28)>
  # src_134 = PHI <src_186(26), src_212(28)>
  # dest_146 = PHI <dest_187(26), dest_213(28)>
  if (i_121 < 0)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _47 = *src_134;
  *dest_146 = _47;
  i_211 = i_121 + -1;
  src_212 = src_134 + 4;
  dest_213 = dest_146 + 2;
  goto <bb 27>; [INV]

  <bb 29> :
  goto <bb 63>; [INV]

  <bb 30> :
<L27>:
  _48 = x_178(D) + 4294967295;
  i_214 = (int) _48;

  <bb 31> :
  # i_122 = PHI <i_214(30), i_218(32)>
  # src_135 = PHI <src_186(30), src_219(32)>
  # dest_147 = PHI <dest_187(30), dest_220(32)>
  if (i_122 < 0)
    goto <bb 33>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _49 = dest_147 + 4;
  _50 = *src_135;
  *_49 = _50;
  _51 = dest_147 + 2;
  _52 = *_49;
  *_51 = _52;
  _53 = *_51;
  *dest_147 = _53;
  i_218 = i_122 + -1;
  src_219 = src_135 + 4;
  dest_220 = dest_147 + 6;
  goto <bb 31>; [INV]

  <bb 33> :
  goto <bb 63>; [INV]

  <bb 34> :
<L31>:
  _54 = x_178(D) + 4294967295;
  i_221 = (int) _54;

  <bb 35> :
  # i_123 = PHI <i_221(34), i_226(36)>
  # src_136 = PHI <src_186(34), src_227(36)>
  # dest_148 = PHI <dest_187(34), dest_228(36)>
  if (i_123 < 0)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _55 = dest_148 + 4;
  _56 = *src_136;
  *_55 = _56;
  _57 = dest_148 + 2;
  _58 = *_55;
  *_57 = _58;
  _59 = *_57;
  *dest_148 = _59;
  _60 = dest_148 + 6;
  _61 = MEM[(stbi__uint16 *)src_136 + 2B];
  *_60 = _61;
  i_226 = i_123 + -1;
  src_227 = src_136 + 4;
  dest_228 = dest_148 + 8;
  goto <bb 35>; [INV]

  <bb 37> :
  goto <bb 63>; [INV]

  <bb 38> :
<L35>:
  _62 = x_178(D) + 4294967295;
  i_229 = (int) _62;

  <bb 39> :
  # i_124 = PHI <i_229(38), i_234(40)>
  # src_137 = PHI <src_186(38), src_235(40)>
  # dest_149 = PHI <dest_187(38), dest_236(40)>
  if (i_124 < 0)
    goto <bb 41>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 40> :
  _63 = *src_137;
  *dest_149 = _63;
  _64 = dest_149 + 2;
  _65 = MEM[(stbi__uint16 *)src_137 + 2B];
  *_64 = _65;
  _66 = dest_149 + 4;
  _67 = MEM[(stbi__uint16 *)src_137 + 4B];
  *_66 = _67;
  _68 = dest_149 + 6;
  *_68 = 65535;
  i_234 = i_124 + -1;
  src_235 = src_137 + 6;
  dest_236 = dest_149 + 8;
  goto <bb 39>; [INV]

  <bb 41> :
  goto <bb 63>; [INV]

  <bb 42> :
<L39>:
  _69 = x_178(D) + 4294967295;
  i_237 = (int) _69;

  <bb 43> :
  # i_125 = PHI <i_237(42), i_240(44)>
  # src_138 = PHI <src_186(42), src_241(44)>
  # dest_150 = PHI <dest_187(42), dest_242(44)>
  if (i_125 < 0)
    goto <bb 45>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 44> :
  _70 = src_138 + 4;
  _71 = *_70;
  _72 = (int) _71;
  _73 = src_138 + 2;
  _74 = *_73;
  _75 = (int) _74;
  _76 = *src_138;
  _77 = (int) _76;
  _78 = stbi__compute_y_16 (_77, _75, _72);
  *dest_150 = _78;
  i_240 = i_125 + -1;
  src_241 = src_138 + 6;
  dest_242 = dest_150 + 2;
  goto <bb 43>; [INV]

  <bb 45> :
  goto <bb 63>; [INV]

  <bb 46> :
<L43>:
  _79 = x_178(D) + 4294967295;
  i_243 = (int) _79;

  <bb 47> :
  # i_126 = PHI <i_243(46), i_247(48)>
  # src_139 = PHI <src_186(46), src_248(48)>
  # dest_151 = PHI <dest_187(46), dest_249(48)>
  if (i_126 < 0)
    goto <bb 49>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  _80 = src_139 + 4;
  _81 = *_80;
  _82 = (int) _81;
  _83 = src_139 + 2;
  _84 = *_83;
  _85 = (int) _84;
  _86 = *src_139;
  _87 = (int) _86;
  _88 = stbi__compute_y_16 (_87, _85, _82);
  *dest_151 = _88;
  _89 = dest_151 + 2;
  *_89 = 65535;
  i_247 = i_126 + -1;
  src_248 = src_139 + 6;
  dest_249 = dest_151 + 4;
  goto <bb 47>; [INV]

  <bb 49> :
  goto <bb 63>; [INV]

  <bb 50> :
<L47>:
  _90 = x_178(D) + 4294967295;
  i_250 = (int) _90;

  <bb 51> :
  # i_127 = PHI <i_250(50), i_253(52)>
  # src_140 = PHI <src_186(50), src_254(52)>
  # dest_152 = PHI <dest_187(50), dest_255(52)>
  if (i_127 < 0)
    goto <bb 53>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _91 = src_140 + 4;
  _92 = *_91;
  _93 = (int) _92;
  _94 = src_140 + 2;
  _95 = *_94;
  _96 = (int) _95;
  _97 = *src_140;
  _98 = (int) _97;
  _99 = stbi__compute_y_16 (_98, _96, _93);
  *dest_152 = _99;
  i_253 = i_127 + -1;
  src_254 = src_140 + 8;
  dest_255 = dest_152 + 2;
  goto <bb 51>; [INV]

  <bb 53> :
  goto <bb 63>; [INV]

  <bb 54> :
<L51>:
  _100 = x_178(D) + 4294967295;
  i_256 = (int) _100;

  <bb 55> :
  # i_128 = PHI <i_256(54), i_260(56)>
  # src_141 = PHI <src_186(54), src_261(56)>
  # dest_153 = PHI <dest_187(54), dest_262(56)>
  if (i_128 < 0)
    goto <bb 57>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _101 = src_141 + 4;
  _102 = *_101;
  _103 = (int) _102;
  _104 = src_141 + 2;
  _105 = *_104;
  _106 = (int) _105;
  _107 = *src_141;
  _108 = (int) _107;
  _109 = stbi__compute_y_16 (_108, _106, _103);
  *dest_153 = _109;
  _110 = dest_153 + 2;
  _111 = MEM[(stbi__uint16 *)src_141 + 6B];
  *_110 = _111;
  i_260 = i_128 + -1;
  src_261 = src_141 + 8;
  dest_262 = dest_153 + 4;
  goto <bb 55>; [INV]

  <bb 57> :
  goto <bb 63>; [INV]

  <bb 58> :
<L55>:
  _112 = x_178(D) + 4294967295;
  i_263 = (int) _112;

  <bb 59> :
  # i_129 = PHI <i_263(58), i_267(60)>
  # src_142 = PHI <src_186(58), src_268(60)>
  # dest_154 = PHI <dest_187(58), dest_269(60)>
  if (i_129 < 0)
    goto <bb 61>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  _113 = *src_142;
  *dest_154 = _113;
  _114 = dest_154 + 2;
  _115 = MEM[(stbi__uint16 *)src_142 + 2B];
  *_114 = _115;
  _116 = dest_154 + 4;
  _117 = MEM[(stbi__uint16 *)src_142 + 4B];
  *_116 = _117;
  i_267 = i_129 + -1;
  src_268 = src_142 + 8;
  dest_269 = dest_154 + 6;
  goto <bb 59>; [INV]

  <bb 61> :
  goto <bb 63>; [INV]

  <bb 62> :
<L59>:
  _assert ("0", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1787);
  free (data_173(D));
  free (good_181);
  stbi__err ("unsupported");
  _274 = 0B;
  goto <bb 65>; [INV]

  <bb 63> :
  j_275 = j_130 + 1;
  goto <bb 12>; [INV]

  <bb 64> :
  free (data_173(D));
  _277 = good_181;

  <bb 65> :
  # _155 = PHI <_174(3), _184(10), _274(62), _277(64)>
<L62>:
  return _155;

}



;; Function stbi__ldr_to_hdr (_ZL16stbi__ldr_to_hdrPhiii, funcdef_no=836, decl_uid=10312, cgraph_uid=742, symbol_order=751)

stbi__ldr_to_hdr (stbi_uc * data, int x, int y, int comp)
{
  float * output;
  int n;
  int k;
  int i;
  float * D.13899;
  int _1;
  int _2;
  float stbi__l2h_gamma.75_3;
  int _4;
  int _5;
  sizetype _6;
  stbi_uc * _7;
  unsigned char _8;
  int _9;
  float _10;
  float _11;
  float _12;
  float stbi__l2h_scale.76_13;
  int _14;
  int _15;
  long long unsigned int _16;
  long long unsigned int _17;
  float * _18;
  float _19;
  int _20;
  int _21;
  int _22;
  sizetype _23;
  stbi_uc * _24;
  unsigned char _25;
  int _26;
  float _27;
  int _28;
  int _29;
  long long unsigned int _30;
  long long unsigned int _31;
  float * _32;
  float _33;
  float * _38;
  float * _45;
  float * _54;
  float * _67;

  <bb 2> :
  if (data_44(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _45 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 4> :
  output_51 = stbi__malloc_mad4 (x_47(D), y_48(D), comp_49(D), 4, 0);
  if (output_51 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  free (data_44(D));
  stbi__err ("outofmem");
  _54 = 0B;
  goto <bb 20>; [INV]

  <bb 6> :
  _1 = comp_49(D) & 1;
  if (_1 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  n_55 = comp_49(D);
  goto <bb 9>; [INV]

  <bb 8> :
  n_56 = comp_49(D) + -1;

  <bb 9> :
  # n_37 = PHI <n_55(7), n_56(8)>
  i_57 = 0;

  <bb 10> :
  # i_34 = PHI <i_57(9), i_62(14)>
  _2 = x_47(D) * y_48(D);
  if (i_34 >= _2)
    goto <bb 15>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  k_58 = 0;

  <bb 12> :
  # k_36 = PHI <k_58(11), k_61(13)>
  if (k_36 >= n_37)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  stbi__l2h_gamma.75_3 = stbi__l2h_gamma;
  _4 = i_34 * comp_49(D);
  _5 = k_36 + _4;
  _6 = (sizetype) _5;
  _7 = data_44(D) + _6;
  _8 = *_7;
  _9 = (int) _8;
  _10 = (float) _9;
  _11 = _10 / 2.55e+2;
  _12 = std::pow (_11, stbi__l2h_gamma.75_3);
  stbi__l2h_scale.76_13 = stbi__l2h_scale;
  _14 = i_34 * comp_49(D);
  _15 = k_36 + _14;
  _16 = (long long unsigned int) _15;
  _17 = _16 * 4;
  _18 = output_51 + _17;
  _19 = _12 * stbi__l2h_scale.76_13;
  *_18 = _19;
  k_61 = k_36 + 1;
  goto <bb 12>; [INV]

  <bb 14> :
  i_62 = i_34 + 1;
  goto <bb 10>; [INV]

  <bb 15> :
  if (n_37 < comp_49(D))
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  i_63 = 0;

  <bb 17> :
  # i_35 = PHI <i_63(16), i_65(18)>
  _20 = x_47(D) * y_48(D);
  if (i_35 >= _20)
    goto <bb 19>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _21 = i_35 * comp_49(D);
  _22 = n_37 + _21;
  _23 = (sizetype) _22;
  _24 = data_44(D) + _23;
  _25 = *_24;
  _26 = (int) _25;
  _27 = (float) _26;
  _28 = i_35 * comp_49(D);
  _29 = n_37 + _28;
  _30 = (long long unsigned int) _29;
  _31 = _30 * 4;
  _32 = output_51 + _31;
  _33 = _27 / 2.55e+2;
  *_32 = _33;
  i_65 = i_35 + 1;
  goto <bb 17>; [INV]

  <bb 19> :
  free (data_44(D));
  _67 = output_51;

  <bb 20> :
  # _38 = PHI <_45(3), _54(5), _67(19)>
<L19>:
  return _38;

}



;; Function stbi__hdr_to_ldr (_ZL16stbi__hdr_to_ldrPfiii, funcdef_no=837, decl_uid=10317, cgraph_uid=743, symbol_order=752)

stbi__hdr_to_ldr (float * data, int x, int y, int comp)
{
  float z;
  float z;
  stbi_uc * output;
  int n;
  int k;
  int i;
  stbi_uc * D.13919;
  int _1;
  int _2;
  float stbi__h2l_gamma_i.77_3;
  int _4;
  int _5;
  long long unsigned int _6;
  long long unsigned int _7;
  float * _8;
  float _9;
  float stbi__h2l_scale_i.78_10;
  float _11;
  float _12;
  float _13;
  float _14;
  float z.79_15;
  float z.80_16;
  float z.81_17;
  int _18;
  int _19;
  int _20;
  sizetype _21;
  stbi_uc * _22;
  unsigned char _23;
  int _24;
  int _25;
  long long unsigned int _26;
  long long unsigned int _27;
  float * _28;
  float _29;
  float _30;
  float _31;
  float z.82_32;
  float z.83_33;
  float z.84_34;
  int _35;
  int _36;
  int _37;
  sizetype _38;
  stbi_uc * _39;
  unsigned char _40;
  stbi_uc * _44;
  stbi_uc * _54;
  stbi_uc * _63;
  stbi_uc * _82;

  <bb 2> :
  if (data_53(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _54 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 26>; [INV]

  <bb 4> :
  output_60 = stbi__malloc_mad3 (x_56(D), y_57(D), comp_58(D), 0);
  if (output_60 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  free (data_53(D));
  stbi__err ("outofmem");
  _63 = 0B;
  goto <bb 26>; [INV]

  <bb 6> :
  _1 = comp_58(D) & 1;
  if (_1 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  n_64 = comp_58(D);
  goto <bb 9>; [INV]

  <bb 8> :
  n_65 = comp_58(D) + -1;

  <bb 9> :
  # n_43 = PHI <n_64(7), n_65(8)>
  i_66 = 0;

  <bb 10> :
  # i_41 = PHI <i_66(9), i_80(24)>
  _2 = x_56(D) * y_57(D);
  if (i_41 >= _2)
    goto <bb 25>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  k_67 = 0;

  <bb 12> :
  # k_42 = PHI <k_67(11), k_74(17)>
  if (k_42 >= n_43)
    goto <bb 18>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  stbi__h2l_gamma_i.77_3 = stbi__h2l_gamma_i;
  _4 = i_41 * comp_58(D);
  _5 = k_42 + _4;
  _6 = (long long unsigned int) _5;
  _7 = _6 * 4;
  _8 = data_53(D) + _7;
  _9 = *_8;
  stbi__h2l_scale_i.78_10 = stbi__h2l_scale_i;
  _11 = _9 * stbi__h2l_scale_i.78_10;
  _12 = std::pow (_11, stbi__h2l_gamma_i.77_3);
  _13 = _12 * 2.55e+2;
  _14 = _13 + 5.0e-1;
  z = _14;
  z.79_15 = z;
  if (z.79_15 < 0.0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  z = 0.0;

  <bb 15> :
  z.80_16 = z;
  if (z.80_16 > 2.55e+2)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  z = 2.55e+2;

  <bb 17> :
  z.81_17 = z;
  _18 = (int) z.81_17;
  _19 = i_41 * comp_58(D);
  _20 = k_42 + _19;
  _21 = (sizetype) _20;
  _22 = output_60 + _21;
  _23 = (unsigned char) _18;
  *_22 = _23;
  z ={v} {CLOBBER};
  k_74 = k_42 + 1;
  goto <bb 12>; [INV]

  <bb 18> :
  if (k_42 < comp_58(D))
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _24 = i_41 * comp_58(D);
  _25 = k_42 + _24;
  _26 = (long long unsigned int) _25;
  _27 = _26 * 4;
  _28 = data_53(D) + _27;
  _29 = *_28;
  _30 = _29 * 2.55e+2;
  _31 = _30 + 5.0e-1;
  z = _31;
  z.82_32 = z;
  if (z.82_32 < 0.0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  z = 0.0;

  <bb 21> :
  z.83_33 = z;
  if (z.83_33 > 2.55e+2)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  z = 2.55e+2;

  <bb 23> :
  z.84_34 = z;
  _35 = (int) z.84_34;
  _36 = i_41 * comp_58(D);
  _37 = k_42 + _36;
  _38 = (sizetype) _37;
  _39 = output_60 + _38;
  _40 = (unsigned char) _35;
  *_39 = _40;
  z ={v} {CLOBBER};

  <bb 24> :
  i_80 = i_41 + 1;
  goto <bb 10>; [INV]

  <bb 25> :
  free (data_53(D));
  _82 = output_60;

  <bb 26> :
  # _44 = PHI <_54(3), _63(5), _82(25)>
<L28>:
  return _44;

}



;; Function stbi__build_huffman (_ZL19stbi__build_huffmanP13stbi__huffmanPi, funcdef_no=838, decl_uid=10936, cgraph_uid=744, symbol_order=753)

stbi__build_huffman (struct stbi__huffman * h, int * count)
{
  int m;
  int c;
  int s;
  unsigned int code;
  int k;
  int j;
  int i;
  int D.13957;
  long long unsigned int _1;
  long long unsigned int _2;
  int * _3;
  int _4;
  unsigned char _5;
  int k.85_6;
  unsigned char _7;
  unsigned int k.86_8;
  unsigned int _9;
  int _10;
  unsigned char _11;
  int _12;
  unsigned char _13;
  int _14;
  unsigned int code.87_15;
  int k.88_16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  int _20;
  unsigned int _21;
  stbi_uc[512] * _22;
  unsigned char _23;
  short unsigned int _24;
  int _25;
  int _26;
  int _27;
  int _28;
  unsigned char _29;
  int _43;
  int _72;
  int _86;

  <bb 2> :
  k_53 = 0;
  i_54 = 0;

  <bb 3> :
  # i_30 = PHI <i_54(2), i_62(7)>
  # k_35 = PHI <k_53(2), k_36(7)>
  if (i_30 > 15)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  j_56 = 0;

  <bb 5> :
  # j_32 = PHI <j_56(4), j_61(6)>
  # k_36 = PHI <k_35(4), k_58(6)>
  _1 = (long long unsigned int) i_30;
  _2 = _1 * 4;
  _3 = count_57(D) + _2;
  _4 = *_3;
  if (j_32 >= _4)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _5 = (unsigned char) i_30;
  k.85_6 = k_36;
  k_58 = k.85_6 + 1;
  _7 = _5 + 1;
  h_59(D)->size[k.85_6] = _7;
  j_61 = j_32 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  i_62 = i_30 + 1;
  goto <bb 3>; [INV]

  <bb 8> :
  h_59(D)->size[k_35] = 0;
  code_64 = 0;
  k_65 = 0;
  j_66 = 1;

  <bb 9> :
  # j_33 = PHI <j_66(8), j_75(15)>
  # k_37 = PHI <k_65(8), k_39(15)>
  # code_40 = PHI <code_64(8), code_74(15)>
  if (j_33 > 16)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  k.86_8 = (unsigned int) k_37;
  _9 = k.86_8 - code_40;
  _10 = (int) _9;
  h_59(D)->delta[j_33] = _10;
  _11 = h_59(D)->size[k_37];
  _12 = (int) _11;
  if (j_33 == _12)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  # k_38 = PHI <k_37(10), k_69(12)>
  # code_41 = PHI <code_40(10), code_68(12)>
  _13 = h_59(D)->size[k_38];
  _14 = (int) _13;
  if (j_33 != _14)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  code.87_15 = code_41;
  code_68 = code.87_15 + 1;
  k.88_16 = k_38;
  k_69 = k.88_16 + 1;
  _17 = (short unsigned int) code.87_15;
  h_59(D)->code[k.88_16] = _17;
  goto <bb 11>; [INV]

  <bb 13> :
  _18 = code_41 + 4294967295;
  _19 = _18 >> j_33;
  if (_19 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _72 = stbi__err ("bad code lengths");
  goto <bb 25>; [INV]

  <bb 15> :
  # k_39 = PHI <k_37(10), k_38(13)>
  # code_42 = PHI <code_40(10), code_41(13)>
  _20 = 16 - j_33;
  _21 = code_42 << _20;
  h_59(D)->maxcode[j_33] = _21;
  code_74 = code_42 << 1;
  j_75 = j_33 + 1;
  goto <bb 9>; [INV]

  <bb 16> :
  h_59(D)->maxcode[j_33] = 4294967295;
  _22 = &h_59(D)->fast;
  memset (_22, 255, 512);
  i_78 = 0;

  <bb 17> :
  # i_31 = PHI <i_78(16), i_85(23)>
  if (i_31 >= k_37)
    goto <bb 24>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _23 = h_59(D)->size[i_31];
  s_79 = (int) _23;
  if (s_79 <= 9)
    goto <bb 19>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 19> :
  _24 = h_59(D)->code[i_31];
  _25 = (int) _24;
  _26 = 9 - s_79;
  c_80 = _25 << _26;
  _27 = 9 - s_79;
  m_81 = 1 << _27;
  j_82 = 0;

  <bb 20> :
  # j_34 = PHI <j_82(19), j_84(21)>
  if (j_34 >= m_81)
    goto <bb 22>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  _28 = c_80 + j_34;
  _29 = (unsigned char) i_31;
  h_59(D)->fast[_28] = _29;
  j_84 = j_34 + 1;
  goto <bb 20>; [INV]

  <bb 22> :

  <bb 23> :
  i_85 = i_31 + 1;
  goto <bb 17>; [INV]

  <bb 24> :
  _86 = 1;

  <bb 25> :
  # _43 = PHI <_72(14), _86(24)>
<L26>:
  return _43;

}



;; Function stbi__build_fast_ac (_ZL19stbi__build_fast_acPsP13stbi__huffman, funcdef_no=839, decl_uid=10959, cgraph_uid=745, symbol_order=754)

stbi__build_fast_ac (stbi__int16 * fast_ac, struct stbi__huffman * h)
{
  int m;
  int k;
  int len;
  int magbits;
  int run;
  int rs;
  stbi_uc fast;
  int i;
  long long unsigned int _1;
  long long unsigned int _2;
  stbi__int16 * _3;
  int _4;
  unsigned char _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  unsigned int _14;
  unsigned int k.89_15;
  unsigned int _16;
  unsigned int _17;
  int _18;
  int _19;
  unsigned short _20;
  unsigned short _21;
  unsigned short _22;
  unsigned short _23;
  unsigned short _24;
  unsigned short _25;
  long long unsigned int _26;
  long long unsigned int _27;
  stbi__int16 * _28;
  short int _29;

  <bb 2> :
  i_36 = 0;

  <bb 3> :
  # i_30 = PHI <i_36(2), i_50(14)>
  if (i_30 > 511)
    goto <bb 15>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  fast_39 = h_38(D)->fast[i_30];
  _1 = (long long unsigned int) i_30;
  _2 = _1 * 2;
  _3 = fast_ac_40(D) + _2;
  *_3 = 0;
  if (fast_39 != 255)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  _4 = (int) fast_39;
  _5 = h_38(D)->values[_4];
  rs_42 = (int) _5;
  _6 = rs_42 >> 4;
  run_43 = _6 & 15;
  magbits_44 = rs_42 & 15;
  _7 = (int) fast_39;
  _8 = h_38(D)->size[_7];
  len_45 = (int) _8;
  if (magbits_44 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 6> :
  _9 = len_45 + magbits_44;
  if (_9 <= 9)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  _10 = i_30 << len_45;
  _11 = _10 & 511;
  _12 = 9 - magbits_44;
  k_46 = _11 >> _12;
  _13 = magbits_44 + -1;
  m_47 = 1 << _13;
  if (k_46 < m_47)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _14 = 4294967295 << magbits_44;
  k.89_15 = (unsigned int) k_46;
  _16 = _14 + k.89_15;
  _17 = _16 + 1;
  k_48 = (int) _17;

  <bb 9> :
  # k_31 = PHI <k_46(7), k_48(8)>
  if (k_31 >= -128)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (k_31 <= 127)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _18 = k_31 * 16;
  _19 = run_43 + _18;
  _20 = (unsigned short) _19;
  _21 = _20 * 16;
  _22 = (unsigned short) len_45;
  _23 = (unsigned short) magbits_44;
  _24 = _22 + _23;
  _25 = _21 + _24;
  _26 = (long long unsigned int) i_30;
  _27 = _26 * 2;
  _28 = fast_ac_40(D) + _27;
  _29 = (short int) _25;
  *_28 = _29;

  <bb 12> :

  <bb 13> :

  <bb 14> :
  i_50 = i_30 + 1;
  goto <bb 3>; [INV]

  <bb 15> :
  return;

}



;; Function stbi__grow_buffer_unsafe (_ZL24stbi__grow_buffer_unsafeP10stbi__jpeg, funcdef_no=840, decl_uid=10972, cgraph_uid=746, symbol_order=755)

stbi__grow_buffer_unsafe (struct stbi__jpeg * j)
{
  unsigned char D.14001;
  unsigned char D.14000;
  unsigned char D.13999;
  int c;
  unsigned int b;
  unsigned int iftmp.90;
  int _1;
  struct stbi__context * _2;
  unsigned char _3;
  struct stbi__context * _4;
  unsigned char _5;
  struct stbi__context * _6;
  unsigned char _7;
  unsigned char _8;
  unsigned int _9;
  int _10;
  int _11;
  unsigned int _12;
  unsigned int _13;
  int _14;
  int _15;
  int _16;
  unsigned int iftmp.90_18;
  unsigned char _27;
  unsigned int iftmp.90_28;
  unsigned int iftmp.90_29;
  unsigned char _32;
  unsigned char _35;

  <bb 2> :
  _1 = j_25(D)->nomore;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = j_25(D)->s;
  _27 = stbi__get8 (_2);
  _3 = _27;
  iftmp.90_28 = (unsigned int) _3;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.90_29 = 0;

  <bb 5> :
  # iftmp.90_18 = PHI <iftmp.90_28(3), iftmp.90_29(4)>
  b_30 = iftmp.90_18;
  if (b_30 == 255)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  _4 = j_25(D)->s;
  _32 = stbi__get8 (_4);
  _5 = _32;
  c_33 = (int) _5;

  <bb 7> :
  # c_17 = PHI <c_33(6), c_36(8)>
  if (c_17 != 255)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _6 = j_25(D)->s;
  _35 = stbi__get8 (_6);
  _7 = _35;
  c_36 = (int) _7;
  goto <bb 7>; [INV]

  <bb 9> :
  if (c_17 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _8 = (unsigned char) c_17;
  j_25(D)->marker = _8;
  j_25(D)->nomore = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 11> :

  <bb 12> :
  _9 = j_25(D)->code_buffer;
  _10 = j_25(D)->code_bits;
  _11 = 24 - _10;
  _12 = b_30 << _11;
  _13 = _9 | _12;
  j_25(D)->code_buffer = _13;
  _14 = j_25(D)->code_bits;
  _15 = _14 + 8;
  j_25(D)->code_bits = _15;
  _16 = j_25(D)->code_bits;
  if (_16 > 24)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  goto <bb 2>; [INV]

  <bb 14> :
<L14>:
  return;

}



;; Function stbi__jpeg_huff_decode (_ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman, funcdef_no=841, decl_uid=10983, cgraph_uid=747, symbol_order=757)

stbi__jpeg_huff_decode (struct stbi__jpeg * j, struct stbi__huffman * h)
{
  int s;
  int k;
  int c;
  unsigned int temp;
  bool iftmp.94;
  int D.14039;
  int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned char _5;
  int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  unsigned char _11;
  unsigned int _12;
  unsigned int _13;
  int _14;
  int _15;
  int _16;
  unsigned int _17;
  int _18;
  unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  unsigned char _26;
  int _27;
  int _28;
  unsigned int _29;
  unsigned char _30;
  int _31;
  unsigned int _32;
  unsigned int _33;
  short unsigned int _34;
  unsigned int _35;
  int _36;
  int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned char _40;
  int _42;
  int _53;
  int _56;
  int _60;
  int _61;
  bool iftmp.94_64;
  bool iftmp.94_65;
  int _68;

  <bb 2> :
  _1 = j_47(D)->code_bits;
  if (_1 <= 15)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__grow_buffer_unsafe (j_47(D));

  <bb 4> :
  _2 = j_47(D)->code_buffer;
  _3 = _2 >> 23;
  c_49 = (int) _3;
  _4 = h_50(D)->fast[c_49];
  k_51 = (int) _4;
  if (k_51 <= 254)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _5 = h_50(D)->size[k_51];
  s_52 = (int) _5;
  _6 = j_47(D)->code_bits;
  if (s_52 > _6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _53 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 7> :
  _7 = j_47(D)->code_buffer;
  _8 = _7 << s_52;
  j_47(D)->code_buffer = _8;
  _9 = j_47(D)->code_bits;
  _10 = _9 - s_52;
  j_47(D)->code_bits = _10;
  _11 = h_50(D)->values[k_51];
  _56 = (int) _11;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 8> :
  _12 = j_47(D)->code_buffer;
  temp_57 = _12 >> 16;
  k_58 = 10;

  <bb 9> :
  # k_41 = PHI <k_58(8), k_69(11)>
  _13 = h_50(D)->maxcode[k_41];
  if (temp_57 < _13)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  goto <bb 12>; [INV]

  <bb 11> :
  k_69 = k_41 + 1;
  goto <bb 9>; [INV]

  <bb 12> :
  if (k_41 == 17)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _14 = j_47(D)->code_bits;
  _15 = _14 + -16;
  j_47(D)->code_bits = _15;
  _60 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 14> :
  _16 = j_47(D)->code_bits;
  if (k_41 > _16)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _61 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 16> :
  _17 = j_47(D)->code_buffer;
  _18 = 32 - k_41;
  _19 = _17 >> _18;
  _20 = stbi__bmask[k_41];
  _21 = _19 & _20;
  _22 = h_50(D)->delta[k_41];
  _23 = (unsigned int) _22;
  _24 = _21 + _23;
  c_62 = (int) _24;
  _25 = j_47(D)->code_buffer;
  _26 = h_50(D)->size[c_62];
  _27 = (int) _26;
  _28 = 32 - _27;
  _29 = _25 >> _28;
  _30 = h_50(D)->size[c_62];
  _31 = (int) _30;
  _32 = stbi__bmask[_31];
  _33 = _29 & _32;
  _34 = h_50(D)->code[c_62];
  _35 = (unsigned int) _34;
  if (_33 == _35)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _assert ("(((j->code_buffer) >> (32 - h->size[c])) & stbi__bmask[h->size[c]]) == h->code[c]", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 2075);
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.94_65 = 1;
  goto <bb 20>; [INV]

  <bb 19> :
  iftmp.94_64 = 0;

  <bb 20> :
  _36 = j_47(D)->code_bits;
  _37 = _36 - k_41;
  j_47(D)->code_bits = _37;
  _38 = j_47(D)->code_buffer;
  _39 = _38 << k_41;
  j_47(D)->code_buffer = _39;
  _40 = h_50(D)->values[c_62];
  _68 = (int) _40;

  <bb 21> :
  # _42 = PHI <_53(6), _56(7), _60(13), _61(15), _68(20)>
<L19>:
  return _42;

}



;; Function stbi__extend_receive (_ZL20stbi__extend_receiveP10stbi__jpegi, funcdef_no=842, decl_uid=10994, cgraph_uid=748, symbol_order=759)

stbi__extend_receive (struct stbi__jpeg * j, int n)
{
  int sgn;
  unsigned int k;
  int D.14059;
  int _1;
  int n.95_2;
  unsigned int _3;
  int _4;
  unsigned int _5;
  int n.96_6;
  int n.97_7;
  int n.98_8;
  int n.99_9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  int n.100_13;
  unsigned int _14;
  int _15;
  int n.101_16;
  int _17;
  int n.102_18;
  int _19;
  int _20;
  int _21;
  unsigned int _22;
  unsigned int _23;
  int _24;
  int _35;
  int _36;

  <bb 2> :
  _1 = j_28(D)->code_bits;
  n.95_2 = n;
  if (_1 < n.95_2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__grow_buffer_unsafe (j_28(D));

  <bb 4> :
  _3 = j_28(D)->code_buffer;
  _4 = (int) _3;
  sgn_30 = _4 >> 31;
  _5 = j_28(D)->code_buffer;
  n.96_6 = n;
  k_31 = _5 r<< n.96_6;
  n.97_7 = n;
  if (n.97_7 < 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n.98_8 = n;
  if (n.98_8 > 16)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _36 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  n.99_9 = n;
  _10 = stbi__bmask[n.99_9];
  _11 = ~_10;
  _12 = k_31 & _11;
  j_28(D)->code_buffer = _12;
  n.100_13 = n;
  _14 = stbi__bmask[n.100_13];
  k_33 = k_31 & _14;
  _15 = j_28(D)->code_bits;
  n.101_16 = n;
  _17 = _15 - n.101_16;
  j_28(D)->code_bits = _17;
  n.102_18 = n;
  _19 = stbi__jbias[n.102_18];
  _20 = ~sgn_30;
  _21 = _19 & _20;
  _22 = (unsigned int) _21;
  _23 = k_33 + _22;
  _35 = (int) _23;

  <bb 8> :
  # _24 = PHI <_36(6), _35(7)>
<L6>:
  return _24;

}



;; Function stbi__jpeg_get_bits (_ZL19stbi__jpeg_get_bitsP10stbi__jpegi, funcdef_no=843, decl_uid=11000, cgraph_uid=749, symbol_order=760)

stbi__jpeg_get_bits (struct stbi__jpeg * j, int n)
{
  unsigned int k;
  int D.14181;
  int _1;
  int n.116_2;
  unsigned int _3;
  int n.117_4;
  int n.118_5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int n.119_9;
  unsigned int _10;
  int _11;
  int n.120_12;
  int _13;
  int _22;

  <bb 2> :
  _1 = j_16(D)->code_bits;
  n.116_2 = n;
  if (_1 < n.116_2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__grow_buffer_unsafe (j_16(D));

  <bb 4> :
  _3 = j_16(D)->code_buffer;
  n.117_4 = n;
  k_18 = _3 r<< n.117_4;
  n.118_5 = n;
  _6 = stbi__bmask[n.118_5];
  _7 = ~_6;
  _8 = k_18 & _7;
  j_16(D)->code_buffer = _8;
  n.119_9 = n;
  _10 = stbi__bmask[n.119_9];
  k_20 = k_18 & _10;
  _11 = j_16(D)->code_bits;
  n.120_12 = n;
  _13 = _11 - n.120_12;
  j_16(D)->code_bits = _13;
  _22 = (int) k_20;

  <bb 5> :
<L3>:
  return _22;

}



;; Function stbi__jpeg_get_bit (_ZL18stbi__jpeg_get_bitP10stbi__jpeg, funcdef_no=844, decl_uid=11004, cgraph_uid=750, symbol_order=761)

stbi__jpeg_get_bit (struct stbi__jpeg * j)
{
  unsigned int k;
  int D.14087;
  int _1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  int _5;
  int k.105_6;
  int _14;

  <bb 2> :
  _1 = j_9(D)->code_bits;
  if (_1 <= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__grow_buffer_unsafe (j_9(D));

  <bb 4> :
  k_11 = j_9(D)->code_buffer;
  _2 = j_9(D)->code_buffer;
  _3 = _2 << 1;
  j_9(D)->code_buffer = _3;
  _4 = j_9(D)->code_bits;
  _5 = _4 + -1;
  j_9(D)->code_bits = _5;
  k.105_6 = (int) k_11;
  _14 = k.105_6 & -2147483648;

  <bb 5> :
<L3>:
  return _14;

}



;; Function stbi__jpeg_decode_block (_ZL23stbi__jpeg_decode_blockP10stbi__jpegPsP13stbi__huffmanS3_S1_iPt, funcdef_no=845, decl_uid=11015, cgraph_uid=751, symbol_order=763)

stbi__jpeg_decode_block (struct stbi__jpeg * j, short int * data, struct stbi__huffman * hdc, struct stbi__huffman * hac, stbi__int16 * fac, int b, stbi__uint16 * dequant)
{
  int D.14031;
  int D.14030;
  int D.14029;
  int D.14028;
  int rs;
  int s;
  int r;
  int c;
  unsigned int zig;
  int t;
  int k;
  int dc;
  int diff;
  int iftmp.91;
  int D.14007;
  int _1;
  int _2;
  short unsigned int _3;
  unsigned short _4;
  unsigned short _5;
  short int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  long long unsigned int _10;
  long long unsigned int _11;
  stbi__int16 * _12;
  short int _13;
  int _14;
  int _15;
  unsigned int _16;
  unsigned int _17;
  int _18;
  int _19;
  int k.92_20;
  unsigned char _21;
  int _22;
  unsigned short _23;
  long long unsigned int _24;
  long long unsigned int _25;
  stbi__uint16 * _26;
  short unsigned int _27;
  unsigned short _28;
  long long unsigned int _29;
  long long unsigned int _30;
  short int * _31;
  short int _32;
  int k.93_33;
  unsigned char _34;
  int _35;
  unsigned short _36;
  long long unsigned int _37;
  long long unsigned int _38;
  stbi__uint16 * _39;
  short unsigned int _40;
  unsigned short _41;
  long long unsigned int _42;
  long long unsigned int _43;
  short int * _44;
  short int _45;
  int _48;
  int iftmp.91_49;
  int _62;
  int _65;
  int _69;
  int iftmp.91_70;
  int iftmp.91_71;
  int _92;
  int _95;
  int _103;
  int _105;

  <bb 2> :
  _1 = j_58(D)->code_bits;
  if (_1 <= 15)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__grow_buffer_unsafe (j_58(D));

  <bb 4> :
  _62 = stbi__jpeg_huff_decode (j_58(D), hdc_60(D));
  t_63 = _62;
  if (t_63 < 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _65 = stbi__err ("bad huffman code");
  goto <bb 24>; [INV]

  <bb 6> :
  memset (data_66(D), 0, 128);
  if (t_63 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _69 = stbi__extend_receive (j_58(D), t_63);
  iftmp.91_70 = _69;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.91_71 = 0;

  <bb 9> :
  # iftmp.91_49 = PHI <iftmp.91_70(7), iftmp.91_71(8)>
  diff_72 = iftmp.91_49;
  _2 = j_58(D)->img_comp[b_73(D)].dc_pred;
  dc_74 = diff_72 + _2;
  j_58(D)->img_comp[b_73(D)].dc_pred = dc_74;
  _3 = *dequant_76(D);
  _4 = (unsigned short) dc_74;
  _5 = _3 * _4;
  _6 = (short int) _5;
  *data_66(D) = _6;
  k_78 = 1;

  <bb 10> :
  # k_46 = PHI <k_78(9), k_47(22)>
  _7 = j_58(D)->code_bits;
  if (_7 <= 15)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__grow_buffer_unsafe (j_58(D));

  <bb 12> :
  _8 = j_58(D)->code_buffer;
  _9 = _8 >> 23;
  c_80 = (int) _9;
  _10 = (long long unsigned int) c_80;
  _11 = _10 * 2;
  _12 = fac_81(D) + _11;
  _13 = *_12;
  r_82 = (int) _13;
  if (r_82 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _14 = r_82 >> 4;
  _15 = _14 & 15;
  k_83 = k_46 + _15;
  s_84 = r_82 & 15;
  _16 = j_58(D)->code_buffer;
  _17 = _16 << s_84;
  j_58(D)->code_buffer = _17;
  _18 = j_58(D)->code_bits;
  _19 = _18 - s_84;
  j_58(D)->code_bits = _19;
  k.92_20 = k_83;
  k_87 = k.92_20 + 1;
  _21 = stbi__jpeg_dezigzag[k.92_20];
  zig_88 = (unsigned int) _21;
  _22 = r_82 >> 8;
  _23 = (unsigned short) _22;
  _24 = (long long unsigned int) zig_88;
  _25 = _24 * 2;
  _26 = dequant_76(D) + _25;
  _27 = *_26;
  _28 = _23 * _27;
  _29 = (long long unsigned int) zig_88;
  _30 = _29 * 2;
  _31 = data_66(D) + _30;
  _32 = (short int) _28;
  *_31 = _32;
  goto <bb 21>; [INV]

  <bb 14> :
  _92 = stbi__jpeg_huff_decode (j_58(D), hac_90(D));
  rs_93 = _92;
  if (rs_93 < 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _95 = stbi__err ("bad huffman code");
  goto <bb 24>; [INV]

  <bb 16> :
  s_96 = rs_93 & 15;
  r_97 = rs_93 >> 4;
  if (s_96 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  if (rs_93 != 240)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  goto <bb 23>; [INV]

  <bb 19> :
  k_98 = k_46 + 16;
  goto <bb 21>; [INV]

  <bb 20> :
  k_99 = k_46 + r_97;
  k.93_33 = k_99;
  k_100 = k.93_33 + 1;
  _34 = stbi__jpeg_dezigzag[k.93_33];
  zig_101 = (unsigned int) _34;
  _103 = stbi__extend_receive (j_58(D), s_96);
  _35 = _103;
  _36 = (unsigned short) _35;
  _37 = (long long unsigned int) zig_101;
  _38 = _37 * 2;
  _39 = dequant_76(D) + _38;
  _40 = *_39;
  _41 = _36 * _40;
  _42 = (long long unsigned int) zig_101;
  _43 = _42 * 2;
  _44 = data_66(D) + _43;
  _45 = (short int) _41;
  *_44 = _45;

  <bb 21> :
  # k_47 = PHI <k_87(13), k_98(19), k_100(20)>
  if (k_47 > 63)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  goto <bb 10>; [INV]

  <bb 23> :
  _105 = 1;

  <bb 24> :
  # _48 = PHI <_65(5), _95(15), _105(23)>
<L24>:
  return _48;

}



;; Function stbi__jpeg_decode_block_prog_dc (_ZL31stbi__jpeg_decode_block_prog_dcP10stbi__jpegPsP13stbi__huffmani, funcdef_no=846, decl_uid=11032, cgraph_uid=752, symbol_order=764)

stbi__jpeg_decode_block_prog_dc (struct stbi__jpeg * j, short int * data, struct stbi__huffman * hdc, int b)
{
  int D.14083;
  int D.14082;
  int D.14081;
  int t;
  int dc;
  int diff;
  bool retval.104;
  int iftmp.103;
  int D.14063;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  short int _7;
  int _8;
  short int _9;
  unsigned short _10;
  int _11;
  int _12;
  unsigned short _13;
  unsigned short _14;
  short int _15;
  int _16;
  int iftmp.103_17;
  int _25;
  int _31;
  int _34;
  int _36;
  int iftmp.103_37;
  int iftmp.103_38;
  int _45;
  bool retval.104_46;
  int _48;

  <bb 2> :
  _1 = j_23(D)->spec_end;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _25 = stbi__err ("can\'t merge dc and ac");
  goto <bb 16>; [INV]

  <bb 4> :
  _2 = j_23(D)->code_bits;
  if (_2 <= 15)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__grow_buffer_unsafe (j_23(D));

  <bb 6> :
  _3 = j_23(D)->succ_high;
  if (_3 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  memset (data_27(D), 0, 128);
  _31 = stbi__jpeg_huff_decode (j_23(D), hdc_29(D));
  t_32 = _31;
  if (t_32 == -1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _34 = stbi__err ("can\'t merge dc and ac");
  goto <bb 16>; [INV]

  <bb 9> :
  if (t_32 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _36 = stbi__extend_receive (j_23(D), t_32);
  iftmp.103_37 = _36;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.103_38 = 0;

  <bb 12> :
  # iftmp.103_17 = PHI <iftmp.103_37(10), iftmp.103_38(11)>
  diff_39 = iftmp.103_17;
  _4 = j_23(D)->img_comp[b_40(D)].dc_pred;
  dc_41 = diff_39 + _4;
  j_23(D)->img_comp[b_40(D)].dc_pred = dc_41;
  _5 = j_23(D)->succ_low;
  _6 = dc_41 << _5;
  _7 = (short int) _6;
  *data_27(D) = _7;
  goto <bb 15>; [INV]

  <bb 13> :
  _45 = stbi__jpeg_get_bit (j_23(D));
  _8 = _45;
  retval.104_46 = _8 != 0;
  if (retval.104_46 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _9 = *data_27(D);
  _10 = (unsigned short) _9;
  _11 = j_23(D)->succ_low;
  _12 = 1 << _11;
  _13 = (unsigned short) _12;
  _14 = _10 + _13;
  _15 = (short int) _14;
  *data_27(D) = _15;

  <bb 15> :
  _48 = 1;

  <bb 16> :
  # _16 = PHI <_25(3), _34(8), _48(15)>
<L16>:
  return _16;

}



;; Function stbi__jpeg_decode_block_prog_ac (_ZL31stbi__jpeg_decode_block_prog_acP10stbi__jpegPsP13stbi__huffmanS1_, funcdef_no=847, decl_uid=11041, cgraph_uid=753, symbol_order=765)

stbi__jpeg_decode_block_prog_ac (struct stbi__jpeg * j, short int * data, struct stbi__huffman * hac, stbi__int16 * fac)
{
  int D.14177;
  int D.14176;
  int D.14175;
  int D.14174;
  int D.14173;
  int D.14172;
  int D.14171;
  int D.14170;
  short int * p;
  int rs;
  int s;
  int r;
  short int * p;
  short int bit;
  int rs;
  int s;
  int r;
  int c;
  unsigned int zig;
  int shift;
  int k;
  bool retval.113;
  bool retval.111;
  int D.11056;
  bool retval.108;
  int D.11050;
  int D.14091;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  unsigned int _7;
  unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  stbi__int16 * _11;
  short int _12;
  int _13;
  int _14;
  unsigned int _15;
  unsigned int _16;
  int _17;
  int _18;
  int k.106_19;
  unsigned char _20;
  int _21;
  int _22;
  long long unsigned int _23;
  long long unsigned int _24;
  short int * _25;
  short int _26;
  int _27;
  int _28;
  int _29;
  int _30;
  int _31;
  int k.107_32;
  unsigned char _33;
  int _34;
  int _35;
  long long unsigned int _36;
  long long unsigned int _37;
  short int * _38;
  short int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  unsigned char _47;
  long long unsigned int _48;
  long long unsigned int _49;
  short int _50;
  int _51;
  short int _52;
  short int _53;
  short int _54;
  short int _55;
  unsigned short _56;
  unsigned short bit.109_57;
  unsigned short _58;
  short int _59;
  short int _60;
  unsigned short _61;
  unsigned short bit.110_62;
  unsigned short _63;
  short int _64;
  int _65;
  int _66;
  int _67;
  int _68;
  int _69;
  int _70;
  int _71;
  int k.112_72;
  unsigned char _73;
  long long unsigned int _74;
  long long unsigned int _75;
  short int _76;
  int _77;
  short int _78;
  short int _79;
  short int _80;
  short int _81;
  unsigned short _82;
  unsigned short bit.114_83;
  unsigned short _84;
  short int _85;
  short int _86;
  unsigned short _87;
  unsigned short bit.115_88;
  unsigned short _89;
  short int _90;
  short int _91;
  int _92;
  int _102;
  int _122;
  int _125;
  int _141;
  int _144;
  int _149;
  int _150;
  int _158;
  int _165;
  bool retval.108_166;
  int _172;
  int _175;
  int _180;
  int _181;
  int _185;
  int _187;
  bool retval.111_188;
  int _194;
  bool retval.113_195;
  int _200;

  <bb 2> :
  _1 = j_120(D)->spec_start;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _122 = stbi__err ("can\'t merge dc and ac");
  goto <bb 64>; [INV]

  <bb 4> :
  _2 = j_120(D)->succ_high;
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 5> :
  shift_123 = j_120(D)->succ_low;
  _3 = j_120(D)->eob_run;
  if (_3 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _4 = j_120(D)->eob_run;
  _5 = _4 + -1;
  j_120(D)->eob_run = _5;
  _125 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 64>; [INV]

  <bb 7> :
  k_126 = j_120(D)->spec_start;

  <bb 8> :
  # k_93 = PHI <k_126(7), k_94(22)>
  _6 = j_120(D)->code_bits;
  if (_6 <= 15)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  stbi__grow_buffer_unsafe (j_120(D));

  <bb 10> :
  _7 = j_120(D)->code_buffer;
  _8 = _7 >> 23;
  c_128 = (int) _8;
  _9 = (long long unsigned int) c_128;
  _10 = _9 * 2;
  _11 = fac_129(D) + _10;
  _12 = *_11;
  r_130 = (int) _12;
  if (r_130 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _13 = r_130 >> 4;
  _14 = _13 & 15;
  k_131 = k_93 + _14;
  s_132 = r_130 & 15;
  _15 = j_120(D)->code_buffer;
  _16 = _15 << s_132;
  j_120(D)->code_buffer = _16;
  _17 = j_120(D)->code_bits;
  _18 = _17 - s_132;
  j_120(D)->code_bits = _18;
  k.106_19 = k_131;
  k_135 = k.106_19 + 1;
  _20 = stbi__jpeg_dezigzag[k.106_19];
  zig_136 = (unsigned int) _20;
  _21 = r_130 >> 8;
  _22 = _21 << shift_123;
  _23 = (long long unsigned int) zig_136;
  _24 = _23 * 2;
  _25 = data_137(D) + _24;
  _26 = (short int) _22;
  *_25 = _26;
  goto <bb 21>; [INV]

  <bb 12> :
  _141 = stbi__jpeg_huff_decode (j_120(D), hac_139(D));
  rs_142 = _141;
  if (rs_142 < 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _144 = stbi__err ("bad huffman code");
  goto <bb 64>; [INV]

  <bb 14> :
  s_145 = rs_142 & 15;
  r_146 = rs_142 >> 4;
  if (s_145 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  if (r_146 <= 14)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  _27 = 1 << r_146;
  j_120(D)->eob_run = _27;
  if (r_146 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _149 = stbi__jpeg_get_bits (j_120(D), r_146);
  _150 = _149;
  _28 = j_120(D)->eob_run;
  _29 = _150 + _28;
  j_120(D)->eob_run = _29;

  <bb 18> :
  _30 = j_120(D)->eob_run;
  _31 = _30 + -1;
  j_120(D)->eob_run = _31;
  goto <bb 23>; [INV]

  <bb 19> :
  k_153 = k_93 + 16;
  goto <bb 21>; [INV]

  <bb 20> :
  k_154 = k_93 + r_146;
  k.107_32 = k_154;
  k_155 = k.107_32 + 1;
  _33 = stbi__jpeg_dezigzag[k.107_32];
  zig_156 = (unsigned int) _33;
  _158 = stbi__extend_receive (j_120(D), s_145);
  _34 = _158;
  _35 = _34 << shift_123;
  _36 = (long long unsigned int) zig_156;
  _37 = _36 * 2;
  _38 = data_137(D) + _37;
  _39 = (short int) _35;
  *_38 = _39;

  <bb 21> :
  # k_94 = PHI <k_135(11), k_153(19), k_155(20)>
  _40 = j_120(D)->spec_end;
  if (k_94 > _40)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  goto <bb 8>; [INV]

  <bb 23> :
  goto <bb 63>; [INV]

  <bb 24> :
  _41 = j_120(D)->succ_low;
  _42 = 1 << _41;
  bit_160 = (short int) _42;
  _43 = j_120(D)->eob_run;
  if (_43 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 25> :
  _44 = j_120(D)->eob_run;
  _45 = _44 + -1;
  j_120(D)->eob_run = _45;
  k_162 = j_120(D)->spec_start;

  <bb 26> :
  # k_95 = PHI <k_162(25), k_169(34)>
  _46 = j_120(D)->spec_end;
  if (k_95 > _46)
    goto <bb 35>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _47 = stbi__jpeg_dezigzag[k_95];
  _48 = (long long unsigned int) _47;
  _49 = _48 * 2;
  p_163 = data_137(D) + _49;
  _50 = *p_163;
  if (_50 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 28> :
  _165 = stbi__jpeg_get_bit (j_120(D));
  _51 = _165;
  retval.108_166 = _51 != 0;
  if (retval.108_166 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 29> :
  _52 = *p_163;
  _53 = bit_160 & _52;
  if (_53 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 30> :
  _54 = *p_163;
  if (_54 > 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  _55 = *p_163;
  _56 = (unsigned short) _55;
  bit.109_57 = (unsigned short) bit_160;
  _58 = _56 + bit.109_57;
  _59 = (short int) _58;
  *p_163 = _59;
  goto <bb 33>; [INV]

  <bb 32> :
  _60 = *p_163;
  _61 = (unsigned short) _60;
  bit.110_62 = (unsigned short) bit_160;
  _63 = _61 - bit.110_62;
  _64 = (short int) _63;
  *p_163 = _64;

  <bb 33> :

  <bb 34> :
  k_169 = k_95 + 1;
  goto <bb 26>; [INV]

  <bb 35> :
  goto <bb 63>; [INV]

  <bb 36> :
  k_170 = j_120(D)->spec_start;

  <bb 37> :
  # k_96 = PHI <k_170(36), k_98(62)>
  _172 = stbi__jpeg_huff_decode (j_120(D), hac_139(D));
  rs_173 = _172;
  if (rs_173 < 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  _175 = stbi__err ("bad huffman code");
  goto <bb 64>; [INV]

  <bb 39> :
  s_176 = rs_173 & 15;
  r_177 = rs_173 >> 4;
  if (s_176 == 0)
    goto <bb 40>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 40> :
  if (r_177 <= 14)
    goto <bb 41>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 41> :
  _65 = 1 << r_177;
  _66 = _65 + -1;
  j_120(D)->eob_run = _66;
  if (r_177 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  _180 = stbi__jpeg_get_bits (j_120(D), r_177);
  _181 = _180;
  _67 = j_120(D)->eob_run;
  _68 = _181 + _67;
  j_120(D)->eob_run = _68;

  <bb 43> :
  r_183 = 64;
  goto <bb 49>; [INV]

  <bb 44> :
  if (s_176 != 1)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  _185 = stbi__err ("bad huffman code");
  goto <bb 64>; [INV]

  <bb 46> :
  _187 = stbi__jpeg_get_bit (j_120(D));
  _69 = _187;
  retval.111_188 = _69 != 0;
  if (retval.111_188 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  s_189 = (int) bit_160;
  goto <bb 49>; [INV]

  <bb 48> :
  _70 = (int) bit_160;
  s_190 = -_70;

  <bb 49> :
  # k_97 = PHI <k_96(43), k_96(47), k_96(48), k_191(60), k_96(40)>
  # r_99 = PHI <r_183(43), r_177(47), r_177(48), r_100(60), r_177(40)>
  # s_101 = PHI <s_176(43), s_189(47), s_190(48), s_101(60), s_176(40)>
  _71 = j_120(D)->spec_end;
  if (k_97 > _71)
    goto <bb 61>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 50> :
  k.112_72 = k_97;
  k_191 = k.112_72 + 1;
  _73 = stbi__jpeg_dezigzag[k.112_72];
  _74 = (long long unsigned int) _73;
  _75 = _74 * 2;
  p_192 = data_137(D) + _75;
  _76 = *p_192;
  if (_76 != 0)
    goto <bb 51>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 51> :
  _194 = stbi__jpeg_get_bit (j_120(D));
  _77 = _194;
  retval.113_195 = _77 != 0;
  if (retval.113_195 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 52> :
  _78 = *p_192;
  _79 = bit_160 & _78;
  if (_79 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 53> :
  _80 = *p_192;
  if (_80 > 0)
    goto <bb 54>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 54> :
  _81 = *p_192;
  _82 = (unsigned short) _81;
  bit.114_83 = (unsigned short) bit_160;
  _84 = _82 + bit.114_83;
  _85 = (short int) _84;
  *p_192 = _85;
  goto <bb 56>; [INV]

  <bb 55> :
  _86 = *p_192;
  _87 = (unsigned short) _86;
  bit.115_88 = (unsigned short) bit_160;
  _89 = _87 - bit.115_88;
  _90 = (short int) _89;
  *p_192 = _90;

  <bb 56> :
  goto <bb 60>; [INV]

  <bb 57> :
  if (r_99 == 0)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  _91 = (short int) s_101;
  *p_192 = _91;
  goto <bb 61>; [INV]

  <bb 59> :
  r_199 = r_99 + -1;

  <bb 60> :
  # r_100 = PHI <r_99(56), r_199(59), r_99(51), r_99(52)>
  goto <bb 49>; [INV]

  <bb 61> :
  # k_98 = PHI <k_97(49), k_191(58)>
  _92 = j_120(D)->spec_end;
  if (k_98 > _92)
    goto <bb 63>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  goto <bb 37>; [INV]

  <bb 63> :
  _200 = 1;

  <bb 64> :
  # _102 = PHI <_122(3), _125(6), _144(13), _175(38), _185(45), _200(63)>
<L80>:
  return _102;

}



;; Function stbi__clamp (_ZL11stbi__clampi, funcdef_no=848, decl_uid=11067, cgraph_uid=754, symbol_order=766)

stbi__clamp (int x)
{
  stbi_uc D.14200;
  unsigned int x.121_1;
  stbi_uc _2;
  stbi_uc _4;
  stbi_uc _5;
  stbi_uc _6;

  <bb 2> :
  x.121_1 = (unsigned int) x_3(D);
  if (x.121_1 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  if (x_3(D) < 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  if (x_3(D) > 255)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _5 = 255;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  _6 = (stbi_uc) x_3(D);

  <bb 8> :
  # _2 = PHI <_4(4), _5(6), _6(7)>
<L7>:
  return _2;

}



;; Function stbi__idct_block (_ZL16stbi__idct_blockPhiPs, funcdef_no=849, decl_uid=11072, cgraph_uid=755, symbol_order=767)

stbi__idct_block (stbi_uc * out, int out_stride, short int * data)
{
  int x3;
  int x2;
  int x1;
  int x0;
  int p5;
  int p4;
  int p3;
  int p2;
  int p1;
  int t3;
  int t2;
  int t1;
  int t0;
  int x3;
  int x2;
  int x1;
  int x0;
  int p5;
  int p4;
  int p3;
  int p2;
  int p1;
  int t3;
  int t2;
  int t1;
  int t0;
  int dcterm;
  short int * d;
  stbi_uc * o;
  int * v;
  int val[64];
  int i;
  short int * _1;
  short int _2;
  short int * _3;
  short int _4;
  short int * _5;
  short int _6;
  short int * _7;
  short int _8;
  short int * _9;
  short int _10;
  short int * _11;
  short int _12;
  short int * _13;
  short int _14;
  short int _15;
  int _16;
  int * _17;
  int * _18;
  int _19;
  int * _20;
  int _21;
  int * _22;
  int _23;
  int * _24;
  int _25;
  int * _26;
  int _27;
  int * _28;
  int _29;
  int _30;
  short int * _31;
  short int _32;
  short int * _33;
  short int _34;
  int _35;
  int _36;
  int _37;
  short int _38;
  short int * _39;
  short int _40;
  int _41;
  int _42;
  short int * _43;
  short int _44;
  short int * _45;
  short int _46;
  short int * _47;
  short int _48;
  short int * _49;
  short int _50;
  int _51;
  int _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int _58;
  int _59;
  int _60;
  int * _61;
  int _62;
  int _63;
  int * _64;
  int _65;
  int _66;
  int * _67;
  int _68;
  int _69;
  int * _70;
  int _71;
  int _72;
  int * _73;
  int _74;
  int _75;
  int * _76;
  int _77;
  int _78;
  int * _79;
  int _80;
  int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;
  int _94;
  unsigned char _95;
  int _96;
  int _97;
  stbi_uc * _98;
  unsigned char _99;
  int _100;
  int _101;
  stbi_uc * _102;
  unsigned char _103;
  int _104;
  int _105;
  stbi_uc * _106;
  unsigned char _107;
  int _108;
  int _109;
  stbi_uc * _110;
  unsigned char _111;
  int _112;
  int _113;
  stbi_uc * _114;
  unsigned char _115;
  int _116;
  int _117;
  stbi_uc * _118;
  unsigned char _119;
  int _120;
  int _121;
  stbi_uc * _122;
  unsigned char _123;
  sizetype _124;

  <bb 2> :
  v_134 = &val;
  d_136 = data_135(D);
  i_137 = 0;

  <bb 3> :
  # i_125 = PHI <i_137(2), i_194(13)>
  # v_127 = PHI <v_134(2), v_196(13)>
  # d_130 = PHI <d_136(2), d_195(13)>
  if (i_125 > 7)
    goto <bb 14>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = d_130 + 16;
  _2 = *_1;
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  _3 = d_130 + 32;
  _4 = *_3;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  _5 = d_130 + 48;
  _6 = *_5;
  if (_6 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  _7 = d_130 + 64;
  _8 = *_7;
  if (_8 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _9 = d_130 + 80;
  _10 = *_9;
  if (_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _11 = d_130 + 96;
  _12 = *_11;
  if (_12 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _13 = d_130 + 112;
  _14 = *_13;
  if (_14 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _15 = *d_130;
  _16 = (int) _15;
  dcterm_139 = _16 * 4;
  _17 = v_127 + 224;
  *_17 = dcterm_139;
  _18 = v_127 + 192;
  _19 = *_17;
  *_18 = _19;
  _20 = v_127 + 160;
  _21 = *_18;
  *_20 = _21;
  _22 = v_127 + 128;
  _23 = *_20;
  *_22 = _23;
  _24 = v_127 + 96;
  _25 = *_22;
  *_24 = _25;
  _26 = v_127 + 64;
  _27 = *_24;
  *_26 = _27;
  _28 = v_127 + 32;
  _29 = *_26;
  *_28 = _29;
  _30 = *_28;
  *v_127 = _30;
  goto <bb 13>; [INV]

  <bb 12> :
  _31 = d_130 + 32;
  _32 = *_31;
  p2_148 = (int) _32;
  _33 = d_130 + 96;
  _34 = *_33;
  p3_149 = (int) _34;
  _35 = p2_148 + p3_149;
  p1_150 = _35 * 2217;
  _36 = p3_149 * -7567;
  t2_151 = p1_150 + _36;
  _37 = p2_148 * 3135;
  t3_152 = p1_150 + _37;
  _38 = *d_130;
  p2_153 = (int) _38;
  _39 = d_130 + 64;
  _40 = *_39;
  p3_154 = (int) _40;
  _41 = p2_153 + p3_154;
  t0_155 = _41 * 4096;
  _42 = p2_153 - p3_154;
  t1_156 = _42 * 4096;
  x0_157 = t0_155 + t3_152;
  x3_158 = t0_155 - t3_152;
  x1_159 = t1_156 + t2_151;
  x2_160 = t1_156 - t2_151;
  _43 = d_130 + 112;
  _44 = *_43;
  t0_161 = (int) _44;
  _45 = d_130 + 80;
  _46 = *_45;
  t1_162 = (int) _46;
  _47 = d_130 + 48;
  _48 = *_47;
  t2_163 = (int) _48;
  _49 = d_130 + 16;
  _50 = *_49;
  t3_164 = (int) _50;
  p3_165 = t0_161 + t2_163;
  p4_166 = t1_162 + t3_164;
  p1_167 = t0_161 + t3_164;
  p2_168 = t1_162 + t2_163;
  _51 = p3_165 + p4_166;
  p5_169 = _51 * 4816;
  t0_170 = t0_161 * 1223;
  t1_171 = t1_162 * 8410;
  t2_172 = t2_163 * 12586;
  t3_173 = t3_164 * 6149;
  _52 = p1_167 * -3685;
  p1_174 = p5_169 + _52;
  _53 = p2_168 * -10497;
  p2_175 = p5_169 + _53;
  p3_176 = p3_165 * -8034;
  p4_177 = p4_166 * -1597;
  _54 = p1_174 + p4_177;
  t3_178 = t3_173 + _54;
  _55 = p2_175 + p3_176;
  t2_179 = t2_172 + _55;
  _56 = p2_175 + p4_177;
  t1_180 = t1_171 + _56;
  _57 = p1_174 + p3_176;
  t0_181 = t0_170 + _57;
  x0_182 = x0_157 + 512;
  x1_183 = x1_159 + 512;
  x2_184 = x2_160 + 512;
  x3_185 = x3_158 + 512;
  _58 = x0_182 + t3_178;
  _59 = _58 >> 10;
  *v_127 = _59;
  _60 = x0_182 - t3_178;
  _61 = v_127 + 224;
  _62 = _60 >> 10;
  *_61 = _62;
  _63 = x1_183 + t2_179;
  _64 = v_127 + 32;
  _65 = _63 >> 10;
  *_64 = _65;
  _66 = x1_183 - t2_179;
  _67 = v_127 + 192;
  _68 = _66 >> 10;
  *_67 = _68;
  _69 = x2_184 + t1_180;
  _70 = v_127 + 64;
  _71 = _69 >> 10;
  *_70 = _71;
  _72 = x2_184 - t1_180;
  _73 = v_127 + 160;
  _74 = _72 >> 10;
  *_73 = _74;
  _75 = x3_185 + t0_181;
  _76 = v_127 + 96;
  _77 = _75 >> 10;
  *_76 = _77;
  _78 = x3_185 - t0_181;
  _79 = v_127 + 128;
  _80 = _78 >> 10;
  *_79 = _80;

  <bb 13> :
  i_194 = i_125 + 1;
  d_195 = d_130 + 2;
  v_196 = v_127 + 4;
  goto <bb 3>; [INV]

  <bb 14> :
  i_197 = 0;
  v_198 = &val;
  o_200 = out_199(D);

  <bb 15> :
  # i_126 = PHI <i_197(14), i_255(16)>
  # v_128 = PHI <v_198(14), v_256(16)>
  # o_129 = PHI <o_200(14), o_258(16)>
  if (i_126 > 7)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  p2_201 = MEM[(int *)v_128 + 8B];
  p3_202 = MEM[(int *)v_128 + 24B];
  _81 = p2_201 + p3_202;
  p1_203 = _81 * 2217;
  _82 = p3_202 * -7567;
  t2_204 = p1_203 + _82;
  _83 = p2_201 * 3135;
  t3_205 = p1_203 + _83;
  p2_206 = *v_128;
  p3_207 = MEM[(int *)v_128 + 16B];
  _84 = p2_206 + p3_207;
  t0_208 = _84 * 4096;
  _85 = p2_206 - p3_207;
  t1_209 = _85 * 4096;
  x0_210 = t0_208 + t3_205;
  x3_211 = t0_208 - t3_205;
  x1_212 = t1_209 + t2_204;
  x2_213 = t1_209 - t2_204;
  t0_214 = MEM[(int *)v_128 + 28B];
  t1_215 = MEM[(int *)v_128 + 20B];
  t2_216 = MEM[(int *)v_128 + 12B];
  t3_217 = MEM[(int *)v_128 + 4B];
  p3_218 = t0_214 + t2_216;
  p4_219 = t1_215 + t3_217;
  p1_220 = t0_214 + t3_217;
  p2_221 = t1_215 + t2_216;
  _86 = p3_218 + p4_219;
  p5_222 = _86 * 4816;
  t0_223 = t0_214 * 1223;
  t1_224 = t1_215 * 8410;
  t2_225 = t2_216 * 12586;
  t3_226 = t3_217 * 6149;
  _87 = p1_220 * -3685;
  p1_227 = p5_222 + _87;
  _88 = p2_221 * -10497;
  p2_228 = p5_222 + _88;
  p3_229 = p3_218 * -8034;
  p4_230 = p4_219 * -1597;
  _89 = p1_227 + p4_230;
  t3_231 = t3_226 + _89;
  _90 = p2_228 + p3_229;
  t2_232 = t2_225 + _90;
  _91 = p2_228 + p4_230;
  t1_233 = t1_224 + _91;
  _92 = p1_227 + p3_229;
  t0_234 = t0_223 + _92;
  x0_235 = x0_210 + 16842752;
  x1_236 = x1_212 + 16842752;
  x2_237 = x2_213 + 16842752;
  x3_238 = x3_211 + 16842752;
  _93 = x0_235 + t3_231;
  _94 = _93 >> 17;
  _95 = stbi__clamp (_94);
  *o_129 = _95;
  _96 = x0_235 - t3_231;
  _97 = _96 >> 17;
  _98 = o_129 + 7;
  _99 = stbi__clamp (_97);
  *_98 = _99;
  _100 = x1_236 + t2_232;
  _101 = _100 >> 17;
  _102 = o_129 + 1;
  _103 = stbi__clamp (_101);
  *_102 = _103;
  _104 = x1_236 - t2_232;
  _105 = _104 >> 17;
  _106 = o_129 + 6;
  _107 = stbi__clamp (_105);
  *_106 = _107;
  _108 = x2_237 + t1_233;
  _109 = _108 >> 17;
  _110 = o_129 + 2;
  _111 = stbi__clamp (_109);
  *_110 = _111;
  _112 = x2_237 - t1_233;
  _113 = _112 >> 17;
  _114 = o_129 + 5;
  _115 = stbi__clamp (_113);
  *_114 = _115;
  _116 = x3_238 + t0_234;
  _117 = _116 >> 17;
  _118 = o_129 + 3;
  _119 = stbi__clamp (_117);
  *_118 = _119;
  _120 = x3_238 - t0_234;
  _121 = _120 >> 17;
  _122 = o_129 + 4;
  _123 = stbi__clamp (_121);
  *_122 = _123;
  i_255 = i_126 + 1;
  v_256 = v_128 + 32;
  _124 = (sizetype) out_stride_257(D);
  o_258 = o_129 + _124;
  goto <bb 15>; [INV]

  <bb 17> :
  val ={v} {CLOBBER};
  return;

}



;; Function stbi__idct_simd (_ZL15stbi__idct_simdPhiPs, funcdef_no=850, decl_uid=11113, cgraph_uid=756, symbol_order=768)

stbi__idct_simd (stbi_uc * out, int out_stride, short int * data)
{
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i D.20030;
  vector(16) char D.20029;
  __m128i D.20028;
  __m128i __A;
  __m128i __B;
  __m128i D.20024;
  vector(16) char D.20023;
  __m128i D.20022;
  __m128i __A;
  __m128i __B;
  __m128i D.20018;
  vector(16) char D.20017;
  __m128i D.20016;
  __m128i __A;
  __m128i __B;
  __m128i D.20012;
  vector(16) char D.20011;
  __m128i D.20010;
  __m128i __A;
  __m128i __B;
  __m128i D.20006;
  vector(16) char D.20005;
  __m128i D.20004;
  __m128i __A;
  __m128i __B;
  __m128i D.20000;
  vector(16) char D.19999;
  __m128i D.19998;
  __m128i __A;
  __m128i __B;
  __m128i D.19994;
  vector(16) char D.19993;
  __m128i D.19992;
  __m128i __A;
  __m128i __B;
  __m128i D.19988;
  vector(16) char D.19987;
  __m128i D.19986;
  __m128i __A;
  __m128i __B;
  __m128i D.19982;
  vector(16) char D.19981;
  __m128i D.19980;
  __m128i __A;
  __m128i __B;
  __m128i D.19976;
  vector(16) char D.19975;
  __m128i D.19974;
  __m128i __A;
  __m128i __B;
  __m128i D.19970;
  vector(16) char D.19969;
  __m128i D.19968;
  __m128i __A;
  __m128i __B;
  __m128i D.19964;
  vector(16) char D.19963;
  __m128i D.19962;
  __m128i __A;
  __m128i __B;
  __m128i D.19958;
  vector(16) char D.19957;
  __m128i D.19956;
  __m128i __A;
  __m128i __B;
  __m128i D.19952;
  vector(16) char D.19951;
  __m128i D.19950;
  __m128i __A;
  __m128i __B;
  __m128i D.19946;
  vector(16) char D.19945;
  __m128i D.19944;
  __m128i __A;
  __m128i __B;
  __m128i D.19940;
  vector(16) char D.19939;
  __m128i D.19938;
  __m128i __A;
  __m128i __B;
  __m128i D.19934;
  vector(8) short int D.19933;
  __m128i D.19932;
  __m128i __A;
  __m128i __B;
  __m128i D.19928;
  vector(4) int D.19927;
  __m128i D.19926;
  __m128i __A;
  int __B;
  __m128i D.19922;
  vector(4) int D.19921;
  __m128i D.19920;
  __m128i __A;
  int __B;
  __m128i D.19916;
  vector(8) short int D.19915;
  __m128i D.19914;
  __m128i __A;
  __m128i __B;
  __m128i D.19910;
  vector(4) int D.19909;
  __m128i D.19908;
  __m128i __A;
  int __B;
  __m128i D.19904;
  __m128i D.19903;
  __m128i __A;
  __m128i __B;
  __m128i D.19899;
  __m128i D.19898;
  __m128i __A;
  __m128i __B;
  __m128i D.19894;
  __m128i D.19893;
  __m128i __A;
  __m128i __B;
  __m128i D.19889;
  __m128i D.19888;
  __m128i __A;
  __m128i __B;
  __m128i D.19884;
  __m128i D.19883;
  __m128i __A;
  __m128i __B;
  __m128i D.19879;
  __m128i D.19878;
  __m128i __A;
  __m128i __B;
  __m128i D.19874;
  vector(4) int D.19873;
  __m128i D.19872;
  __m128i __A;
  int __B;
  __m128i D.19868;
  vector(8) short int D.19867;
  __m128i D.19866;
  __m128i __A;
  __m128i __B;
  __m128i D.19862;
  vector(4) int D.19861;
  __m128i D.19860;
  __m128i __A;
  int __B;
  __m128i D.19856;
  vector(4) int D.19855;
  __m128i D.19854;
  __m128i __A;
  int __B;
  __m128i D.19850;
  vector(8) short int D.19849;
  __m128i D.19848;
  __m128i __A;
  __m128i __B;
  __m128i D.19844;
  vector(4) int D.19843;
  __m128i D.19842;
  __m128i __A;
  int __B;
  __m128i D.19838;
  __m128i D.19837;
  __m128i __A;
  __m128i __B;
  __m128i D.19833;
  __m128i D.19832;
  __m128i __A;
  __m128i __B;
  __m128i D.19828;
  __m128i D.19827;
  __m128i __A;
  __m128i __B;
  __m128i D.19823;
  __m128i D.19822;
  __m128i __A;
  __m128i __B;
  __m128i D.19818;
  __m128i D.19817;
  __m128i __A;
  __m128i __B;
  __m128i D.19813;
  __m128i D.19812;
  __m128i __A;
  __m128i __B;
  __m128i D.19808;
  vector(4) int D.19807;
  __m128i D.19806;
  __m128i __A;
  int __B;
  __m128i D.19802;
  vector(8) short int D.19801;
  __m128i D.19800;
  __m128i __A;
  __m128i __B;
  __m128i D.19796;
  vector(4) int D.19795;
  __m128i D.19794;
  __m128i __A;
  int __B;
  __m128i D.19790;
  vector(4) int D.19789;
  __m128i D.19788;
  __m128i __A;
  int __B;
  __m128i D.19784;
  vector(8) short int D.19783;
  __m128i D.19782;
  __m128i __A;
  __m128i __B;
  __m128i D.19778;
  vector(4) int D.19777;
  __m128i D.19776;
  __m128i __A;
  int __B;
  __m128i D.19772;
  __m128i D.19771;
  __m128i __A;
  __m128i __B;
  __m128i D.19767;
  __m128i D.19766;
  __m128i __A;
  __m128i __B;
  __m128i D.19762;
  __m128i D.19761;
  __m128i __A;
  __m128i __B;
  __m128i D.19757;
  __m128i D.19756;
  __m128i __A;
  __m128i __B;
  __m128i D.19752;
  __m128i D.19751;
  __m128i __A;
  __m128i __B;
  __m128i D.19747;
  __m128i D.19746;
  __m128i __A;
  __m128i __B;
  __m128i D.19742;
  vector(4) int D.19741;
  __m128i D.19740;
  __m128i __A;
  int __B;
  __m128i D.19736;
  vector(8) short int D.19735;
  __m128i D.19734;
  __m128i __A;
  __m128i __B;
  __m128i D.19730;
  vector(4) int D.19729;
  __m128i D.19728;
  __m128i __A;
  int __B;
  __m128i D.19724;
  vector(4) int D.19723;
  __m128i D.19722;
  __m128i __A;
  int __B;
  __m128i D.19718;
  vector(8) short int D.19717;
  __m128i D.19716;
  __m128i __A;
  __m128i __B;
  __m128i D.19712;
  vector(4) int D.19711;
  __m128i D.19710;
  __m128i __A;
  int __B;
  __m128i D.19706;
  __m128i D.19705;
  __m128i __A;
  __m128i __B;
  __m128i D.19701;
  __m128i D.19700;
  __m128i __A;
  __m128i __B;
  __m128i D.19696;
  __m128i D.19695;
  __m128i __A;
  __m128i __B;
  __m128i D.19691;
  __m128i D.19690;
  __m128i __A;
  __m128i __B;
  __m128i D.19686;
  __m128i D.19685;
  __m128i __A;
  __m128i __B;
  __m128i D.19681;
  __m128i D.19680;
  __m128i __A;
  __m128i __B;
  __m128i D.19676;
  __m128i D.19675;
  __m128i __A;
  __m128i __B;
  __m128i D.19671;
  __m128i D.19670;
  __m128i __A;
  __m128i __B;
  __m128i D.19666;
  __m128i D.19665;
  __m128i __A;
  __m128i __B;
  __m128i D.19661;
  __m128i D.19660;
  __m128i __A;
  __m128i __B;
  __m128i D.19656;
  __m128i D.19655;
  __m128i __A;
  __m128i __B;
  __m128i D.19651;
  __m128i D.19650;
  __m128i __A;
  __m128i __B;
  __m128i D.19646;
  __m128i D.19645;
  __m128i __A;
  __m128i __B;
  __m128i D.19641;
  __m128i D.19640;
  __m128i __A;
  __m128i __B;
  __m128i D.19636;
  vector(4) int D.19635;
  __m128i D.19634;
  __m128i __A;
  int __B;
  __m128i D.19630;
  vector(4) int D.19629;
  __m128i D.19628;
  __m128i __A;
  __m128i __B;
  __m128i D.19624;
  vector(4) int D.19623;
  __m128i D.19622;
  __m128i __A;
  __m128i __B;
  __m128i D.19618;
  vector(4) int D.19617;
  __m128i D.19616;
  __m128i __A;
  __m128i __B;
  __m128i D.19612;
  vector(4) int D.19611;
  __m128i D.19610;
  __m128i __A;
  __m128i __B;
  __m128i D.19606;
  vector(8) short int D.19605;
  __m128i D.19604;
  __m128i __A;
  __m128i __B;
  __m128i D.19600;
  __m128i D.19599;
  __m128i __A;
  __m128i __B;
  __m128i D.19595;
  __m128i D.19594;
  __m128i __A;
  __m128i __B;
  __m128i D.19590;
  vector(8) short int D.19589;
  __m128i D.19588;
  __m128i __A;
  __m128i __B;
  __m128i D.19584;
  vector(4) int D.19583;
  __m128i D.19582;
  __m128i __A;
  __m128i __B;
  __m128i D.19578;
  vector(4) int D.19577;
  __m128i D.19576;
  __m128i __A;
  __m128i __B;
  __m128i D.19572;
  vector(4) int D.19571;
  __m128i D.19570;
  __m128i __A;
  __m128i __B;
  __m128i D.19566;
  vector(4) int D.19565;
  __m128i D.19564;
  __m128i __A;
  __m128i __B;
  __m128i D.19560;
  vector(8) short int D.19559;
  __m128i D.19558;
  __m128i __A;
  __m128i __B;
  __m128i D.19554;
  vector(8) short int D.19553;
  __m128i D.19552;
  __m128i __A;
  __m128i __B;
  __m128i D.19548;
  vector(4) int D.19547;
  __m128i D.19546;
  __m128i __A;
  __m128i __B;
  __m128i D.19542;
  vector(4) int D.19541;
  __m128i D.19540;
  __m128i __A;
  __m128i __B;
  __m128i D.19536;
  vector(4) int D.19535;
  __m128i D.19534;
  __m128i __A;
  __m128i __B;
  __m128i D.19530;
  vector(4) int D.19529;
  __m128i D.19528;
  __m128i __A;
  __m128i __B;
  __m128i D.19524;
  vector(8) short int D.19523;
  __m128i D.19522;
  __m128i __A;
  __m128i __B;
  __m128i D.19518;
  __m128i D.19517;
  __m128i __A;
  __m128i __B;
  __m128i D.19513;
  __m128i D.19512;
  __m128i __A;
  __m128i __B;
  __m128i D.19508;
  __m128i D.19507;
  __m128i __A;
  __m128i __B;
  __m128i D.19503;
  __m128i D.19502;
  __m128i __A;
  __m128i __B;
  __m128i D.19498;
  __m128i D.19497;
  __m128i __A;
  __m128i __B;
  __m128i D.19493;
  __m128i D.19492;
  __m128i __A;
  __m128i __B;
  __m128i D.19488;
  __m128i D.19487;
  __m128i __A;
  __m128i __B;
  __m128i D.19483;
  __m128i D.19482;
  __m128i __A;
  __m128i __B;
  __m128i D.19478;
  vector(8) short int D.19477;
  __m128i D.19476;
  __m128i __A;
  __m128i __B;
  __m128i D.19472;
  vector(4) int D.19471;
  __m128i D.19470;
  __m128i __A;
  int __B;
  __m128i D.19466;
  __m128i D.19465;
  __m128i D.19463;
  vector(8) short int D.19462;
  __m128i D.19461;
  __m128i __A;
  __m128i __B;
  __m128i D.19457;
  vector(4) int D.19456;
  __m128i D.19455;
  __m128i __A;
  int __B;
  __m128i D.19451;
  __m128i D.19450;
  __m128i D.19448;
  vector(8) short int D.19447;
  __m128i D.19446;
  __m128i __A;
  __m128i __B;
  __m128i D.19442;
  vector(4) int D.19441;
  __m128i D.19440;
  __m128i __A;
  int __B;
  __m128i D.19436;
  __m128i D.19435;
  __m128i D.19433;
  vector(8) short int D.19432;
  __m128i D.19431;
  __m128i __A;
  __m128i __B;
  __m128i D.19427;
  vector(4) int D.19426;
  __m128i D.19425;
  __m128i __A;
  int __B;
  __m128i D.19421;
  __m128i D.19420;
  __m128i __A;
  __m128i __B;
  __m128i D.19416;
  __m128i D.19415;
  __m128i __A;
  __m128i __B;
  __m128i D.19411;
  __m128i D.19410;
  __m128i D.19408;
  vector(8) short int D.19407;
  __m128i D.19406;
  __m128i __A;
  __m128i __B;
  __m128i D.19402;
  vector(4) int D.19401;
  __m128i D.19400;
  __m128i __A;
  __m128i __B;
  __m128i D.19396;
  vector(4) int D.19395;
  __m128i D.19394;
  __m128i __A;
  __m128i __B;
  __m128i D.19390;
  vector(4) int D.19389;
  __m128i D.19388;
  __m128i __A;
  __m128i __B;
  __m128i D.19384;
  vector(4) int D.19383;
  __m128i D.19382;
  __m128i __A;
  __m128i __B;
  __m128i D.19378;
  vector(8) short int D.19377;
  __m128i D.19376;
  __m128i __A;
  __m128i __B;
  __m128i D.19372;
  vector(8) short int D.19371;
  __m128i D.19370;
  __m128i __A;
  __m128i __B;
  __m128i D.19366;
  vector(8) short int D.19365;
  __m128i D.19364;
  __m128i __A;
  __m128i __B;
  __m128i D.19360;
  vector(8) short int D.19359;
  __m128i D.19358;
  __m128i __A;
  __m128i __B;
  __m128i D.19354;
  vector(8) short int D.19353;
  __m128i D.19352;
  __m128i __A;
  __m128i __B;
  __m128i D.19348;
  vector(8) short int D.19347;
  __m128i D.19346;
  __m128i __A;
  __m128i __B;
  __m128i D.19342;
  vector(8) short int D.19341;
  __m128i D.19340;
  __m128i __A;
  __m128i __B;
  __m128i D.19336;
  vector(8) short int D.19335;
  __m128i D.19334;
  __m128i __A;
  __m128i __B;
  __m128i D.19330;
  vector(8) short int D.19329;
  __m128i D.19328;
  __m128i __A;
  __m128i __B;
  __m128i D.19324;
  vector(8) short int D.19323;
  __m128i D.19322;
  __m128i __A;
  __m128i __B;
  __m128i D.19318;
  vector(8) short int D.19317;
  __m128i D.19316;
  __m128i __A;
  __m128i __B;
  __m128i D.19312;
  vector(8) short int D.19311;
  __m128i D.19310;
  __m128i __A;
  __m128i __B;
  __m128i D.19306;
  vector(8) short int D.19305;
  __m128i D.19304;
  __m128i __A;
  __m128i __B;
  __m128i D.19300;
  vector(8) short int D.19299;
  __m128i D.19298;
  __m128i __A;
  __m128i __B;
  __m128i D.19294;
  vector(8) short int D.19293;
  __m128i D.19292;
  __m128i __A;
  __m128i __B;
  __m128i D.19288;
  vector(8) short int D.19287;
  __m128i D.19286;
  __m128i __A;
  __m128i __B;
  __m128i D.19282;
  vector(8) short int D.19281;
  __m128i D.19280;
  __m128i __A;
  __m128i __B;
  __m128i D.19276;
  vector(8) short int D.19275;
  __m128i D.19274;
  __m128i __A;
  __m128i __B;
  __m128i D.19270;
  vector(8) short int D.19269;
  __m128i D.19268;
  __m128i __A;
  __m128i __B;
  __m128i D.19264;
  vector(8) short int D.19263;
  __m128i D.19262;
  __m128i __A;
  __m128i __B;
  __m128i D.19258;
  vector(8) short int D.19257;
  __m128i D.19256;
  __m128i __A;
  __m128i __B;
  __m128i D.19252;
  vector(8) short int D.19251;
  __m128i D.19250;
  __m128i __A;
  __m128i __B;
  __m128i D.19246;
  vector(8) short int D.19245;
  __m128i D.19244;
  __m128i __A;
  __m128i __B;
  __m128i D.19240;
  vector(8) short int D.19239;
  __m128i D.19238;
  __m128i __A;
  __m128i __B;
  __m128i D.19234;
  vector(8) short int D.19233;
  __m128i D.19232;
  __m128i __A;
  __m128i __B;
  __m128i D.19228;
  vector(8) short int D.19227;
  __m128i D.19226;
  __m128i __A;
  __m128i __B;
  __m128i D.19222;
  vector(8) short int D.19221;
  __m128i D.19220;
  __m128i __A;
  __m128i __B;
  __m128i D.19216;
  vector(4) int D.19215;
  __m128i D.19214;
  __m128i __A;
  int __B;
  __m128i D.19210;
  vector(4) int D.19209;
  __m128i D.19208;
  __m128i __A;
  int __B;
  __m128i D.19204;
  vector(8) short int D.19203;
  __m128i D.19202;
  __m128i __A;
  __m128i __B;
  __m128i D.19198;
  vector(4) int D.19197;
  __m128i D.19196;
  __m128i __A;
  int __B;
  __m128i D.19192;
  __m128i D.19191;
  __m128i __A;
  __m128i __B;
  __m128i D.19187;
  __m128i D.19186;
  __m128i __A;
  __m128i __B;
  __m128i D.19182;
  __m128i D.19181;
  __m128i __A;
  __m128i __B;
  __m128i D.19177;
  __m128i D.19176;
  __m128i __A;
  __m128i __B;
  __m128i D.19172;
  __m128i D.19171;
  __m128i __A;
  __m128i __B;
  __m128i D.19167;
  __m128i D.19166;
  __m128i __A;
  __m128i __B;
  __m128i D.19162;
  vector(4) int D.19161;
  __m128i D.19160;
  __m128i __A;
  int __B;
  __m128i D.19156;
  vector(8) short int D.19155;
  __m128i D.19154;
  __m128i __A;
  __m128i __B;
  __m128i D.19150;
  vector(4) int D.19149;
  __m128i D.19148;
  __m128i __A;
  int __B;
  __m128i D.19144;
  vector(4) int D.19143;
  __m128i D.19142;
  __m128i __A;
  int __B;
  __m128i D.19138;
  vector(8) short int D.19137;
  __m128i D.19136;
  __m128i __A;
  __m128i __B;
  __m128i D.19132;
  vector(4) int D.19131;
  __m128i D.19130;
  __m128i __A;
  int __B;
  __m128i D.19126;
  __m128i D.19125;
  __m128i __A;
  __m128i __B;
  __m128i D.19121;
  __m128i D.19120;
  __m128i __A;
  __m128i __B;
  __m128i D.19116;
  __m128i D.19115;
  __m128i __A;
  __m128i __B;
  __m128i D.19111;
  __m128i D.19110;
  __m128i __A;
  __m128i __B;
  __m128i D.19106;
  __m128i D.19105;
  __m128i __A;
  __m128i __B;
  __m128i D.19101;
  __m128i D.19100;
  __m128i __A;
  __m128i __B;
  __m128i D.19096;
  vector(4) int D.19095;
  __m128i D.19094;
  __m128i __A;
  int __B;
  __m128i D.19090;
  vector(8) short int D.19089;
  __m128i D.19088;
  __m128i __A;
  __m128i __B;
  __m128i D.19084;
  vector(4) int D.19083;
  __m128i D.19082;
  __m128i __A;
  int __B;
  __m128i D.19078;
  vector(4) int D.19077;
  __m128i D.19076;
  __m128i __A;
  int __B;
  __m128i D.19072;
  vector(8) short int D.19071;
  __m128i D.19070;
  __m128i __A;
  __m128i __B;
  __m128i D.19066;
  vector(4) int D.19065;
  __m128i D.19064;
  __m128i __A;
  int __B;
  __m128i D.19060;
  __m128i D.19059;
  __m128i __A;
  __m128i __B;
  __m128i D.19055;
  __m128i D.19054;
  __m128i __A;
  __m128i __B;
  __m128i D.19050;
  __m128i D.19049;
  __m128i __A;
  __m128i __B;
  __m128i D.19045;
  __m128i D.19044;
  __m128i __A;
  __m128i __B;
  __m128i D.19040;
  __m128i D.19039;
  __m128i __A;
  __m128i __B;
  __m128i D.19035;
  __m128i D.19034;
  __m128i __A;
  __m128i __B;
  __m128i D.19030;
  vector(4) int D.19029;
  __m128i D.19028;
  __m128i __A;
  int __B;
  __m128i D.19024;
  vector(8) short int D.19023;
  __m128i D.19022;
  __m128i __A;
  __m128i __B;
  __m128i D.19018;
  vector(4) int D.19017;
  __m128i D.19016;
  __m128i __A;
  int __B;
  __m128i D.19012;
  vector(4) int D.19011;
  __m128i D.19010;
  __m128i __A;
  int __B;
  __m128i D.19006;
  vector(8) short int D.19005;
  __m128i D.19004;
  __m128i __A;
  __m128i __B;
  __m128i D.19000;
  vector(4) int D.18999;
  __m128i D.18998;
  __m128i __A;
  int __B;
  __m128i D.18994;
  __m128i D.18993;
  __m128i __A;
  __m128i __B;
  __m128i D.18989;
  __m128i D.18988;
  __m128i __A;
  __m128i __B;
  __m128i D.18984;
  __m128i D.18983;
  __m128i __A;
  __m128i __B;
  __m128i D.18979;
  __m128i D.18978;
  __m128i __A;
  __m128i __B;
  __m128i D.18974;
  __m128i D.18973;
  __m128i __A;
  __m128i __B;
  __m128i D.18969;
  __m128i D.18968;
  __m128i __A;
  __m128i __B;
  __m128i D.18964;
  __m128i D.18963;
  __m128i __A;
  __m128i __B;
  __m128i D.18959;
  __m128i D.18958;
  __m128i __A;
  __m128i __B;
  __m128i D.18954;
  __m128i D.18953;
  __m128i __A;
  __m128i __B;
  __m128i D.18949;
  __m128i D.18948;
  __m128i __A;
  __m128i __B;
  __m128i D.18944;
  __m128i D.18943;
  __m128i __A;
  __m128i __B;
  __m128i D.18939;
  __m128i D.18938;
  __m128i __A;
  __m128i __B;
  __m128i D.18934;
  __m128i D.18933;
  __m128i __A;
  __m128i __B;
  __m128i D.18929;
  __m128i D.18928;
  __m128i __A;
  __m128i __B;
  __m128i D.18924;
  vector(4) int D.18923;
  __m128i D.18922;
  __m128i __A;
  int __B;
  __m128i D.18918;
  vector(4) int D.18917;
  __m128i D.18916;
  __m128i __A;
  __m128i __B;
  __m128i D.18912;
  vector(4) int D.18911;
  __m128i D.18910;
  __m128i __A;
  __m128i __B;
  __m128i D.18906;
  vector(4) int D.18905;
  __m128i D.18904;
  __m128i __A;
  __m128i __B;
  __m128i D.18900;
  vector(4) int D.18899;
  __m128i D.18898;
  __m128i __A;
  __m128i __B;
  __m128i D.18894;
  vector(8) short int D.18893;
  __m128i D.18892;
  __m128i __A;
  __m128i __B;
  __m128i D.18888;
  __m128i D.18887;
  __m128i __A;
  __m128i __B;
  __m128i D.18883;
  __m128i D.18882;
  __m128i __A;
  __m128i __B;
  __m128i D.18878;
  vector(8) short int D.18877;
  __m128i D.18876;
  __m128i __A;
  __m128i __B;
  __m128i D.18872;
  vector(4) int D.18871;
  __m128i D.18870;
  __m128i __A;
  __m128i __B;
  __m128i D.18866;
  vector(4) int D.18865;
  __m128i D.18864;
  __m128i __A;
  __m128i __B;
  __m128i D.18860;
  vector(4) int D.18859;
  __m128i D.18858;
  __m128i __A;
  __m128i __B;
  __m128i D.18854;
  vector(4) int D.18853;
  __m128i D.18852;
  __m128i __A;
  __m128i __B;
  __m128i D.18848;
  vector(8) short int D.18847;
  __m128i D.18846;
  __m128i __A;
  __m128i __B;
  __m128i D.18842;
  vector(8) short int D.18841;
  __m128i D.18840;
  __m128i __A;
  __m128i __B;
  __m128i D.18836;
  vector(4) int D.18835;
  __m128i D.18834;
  __m128i __A;
  __m128i __B;
  __m128i D.18830;
  vector(4) int D.18829;
  __m128i D.18828;
  __m128i __A;
  __m128i __B;
  __m128i D.18824;
  vector(4) int D.18823;
  __m128i D.18822;
  __m128i __A;
  __m128i __B;
  __m128i D.18818;
  vector(4) int D.18817;
  __m128i D.18816;
  __m128i __A;
  __m128i __B;
  __m128i D.18812;
  vector(8) short int D.18811;
  __m128i D.18810;
  __m128i __A;
  __m128i __B;
  __m128i D.18806;
  __m128i D.18805;
  __m128i __A;
  __m128i __B;
  __m128i D.18801;
  __m128i D.18800;
  __m128i __A;
  __m128i __B;
  __m128i D.18796;
  __m128i D.18795;
  __m128i __A;
  __m128i __B;
  __m128i D.18791;
  __m128i D.18790;
  __m128i __A;
  __m128i __B;
  __m128i D.18786;
  __m128i D.18785;
  __m128i __A;
  __m128i __B;
  __m128i D.18781;
  __m128i D.18780;
  __m128i __A;
  __m128i __B;
  __m128i D.18776;
  __m128i D.18775;
  __m128i __A;
  __m128i __B;
  __m128i D.18771;
  __m128i D.18770;
  __m128i __A;
  __m128i __B;
  __m128i D.18766;
  vector(8) short int D.18765;
  __m128i D.18764;
  __m128i __A;
  __m128i __B;
  __m128i D.18760;
  vector(4) int D.18759;
  __m128i D.18758;
  __m128i __A;
  int __B;
  __m128i D.18754;
  __m128i D.18753;
  __m128i D.18751;
  vector(8) short int D.18750;
  __m128i D.18749;
  __m128i __A;
  __m128i __B;
  __m128i D.18745;
  vector(4) int D.18744;
  __m128i D.18743;
  __m128i __A;
  int __B;
  __m128i D.18739;
  __m128i D.18738;
  __m128i D.18736;
  vector(8) short int D.18735;
  __m128i D.18734;
  __m128i __A;
  __m128i __B;
  __m128i D.18730;
  vector(4) int D.18729;
  __m128i D.18728;
  __m128i __A;
  int __B;
  __m128i D.18724;
  __m128i D.18723;
  __m128i D.18721;
  vector(8) short int D.18720;
  __m128i D.18719;
  __m128i __A;
  __m128i __B;
  __m128i D.18715;
  vector(4) int D.18714;
  __m128i D.18713;
  __m128i __A;
  int __B;
  __m128i D.18709;
  __m128i D.18708;
  __m128i __A;
  __m128i __B;
  __m128i D.18704;
  __m128i D.18703;
  __m128i __A;
  __m128i __B;
  __m128i D.18699;
  __m128i D.18698;
  __m128i D.18696;
  vector(8) short int D.18695;
  __m128i D.18694;
  __m128i __A;
  __m128i __B;
  __m128i D.18690;
  vector(4) int D.18689;
  __m128i D.18688;
  __m128i __A;
  __m128i __B;
  __m128i D.18684;
  vector(4) int D.18683;
  __m128i D.18682;
  __m128i __A;
  __m128i __B;
  __m128i D.18678;
  vector(4) int D.18677;
  __m128i D.18676;
  __m128i __A;
  __m128i __B;
  __m128i D.18672;
  vector(4) int D.18671;
  __m128i D.18670;
  __m128i __A;
  __m128i __B;
  __m128i D.18666;
  vector(8) short int D.18665;
  __m128i D.18664;
  __m128i __A;
  __m128i __B;
  __m128i D.18659;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18656;
  __m128i D.18658;
  __m128i D.18657;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18637;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18634;
  __m128i D.18636;
  __m128i D.18635;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18615;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18612;
  __m128i D.18614;
  __m128i D.18613;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18593;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18590;
  __m128i D.18592;
  __m128i D.18591;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18571;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18568;
  __m128i D.18570;
  __m128i D.18569;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18549;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18546;
  __m128i D.18548;
  __m128i D.18547;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18527;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18524;
  __m128i D.18526;
  __m128i D.18525;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18505;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18502;
  __m128i D.18504;
  __m128i D.18503;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18483;
  int __q0;
  int __q1;
  int __q2;
  int __q3;
  __m128i D.18480;
  __m128i D.18482;
  __m128i D.18481;
  int __A;
  __m128i D.18472;
  int __q0;
  int __q1;
  int __q2;
  int __q3;
  __m128i D.18469;
  __m128i D.18471;
  __m128i D.18470;
  int __A;
  __m128i D.18462;
  __m128i D.18461;
  const __m128i * {ref-all} __P;
  __m128i D.18458;
  __m128i D.18457;
  const __m128i * {ref-all} __P;
  __m128i D.18454;
  __m128i D.18453;
  const __m128i * {ref-all} __P;
  __m128i D.18450;
  __m128i D.18449;
  const __m128i * {ref-all} __P;
  __m128i D.18446;
  __m128i D.18445;
  const __m128i * {ref-all} __P;
  __m128i D.18442;
  __m128i D.18441;
  const __m128i * {ref-all} __P;
  __m128i D.18438;
  __m128i D.18437;
  const __m128i * {ref-all} __P;
  __m128i D.18434;
  __m128i D.18433;
  const __m128i * {ref-all} __P;
  __m128i D.18430;
  vector(8) short int D.18429;
  __m128i D.18428;
  __m128i __A;
  __m128i __B;
  vector(4) int D.14362;
  vector(4) int D.14361;
  vector(4) int D.14360;
  vector(4) int D.14359;
  vector(2) long long int D.14358;
  vector(2) long long int D.14357;
  vector(2) long long int D.14356;
  vector(2) long long int D.14355;
  vector(2) long long int D.14354;
  vector(2) long long int D.14353;
  vector(2) long long int D.14352;
  vector(2) long long int D.14351;
  vector(2) long long int D.14350;
  vector(2) long long int D.14349;
  vector(2) long long int D.14348;
  vector(2) long long int D.14347;
  vector(2) long long int D.14346;
  vector(2) long long int D.14345;
  vector(2) long long int D.14344;
  vector(2) long long int D.14343;
  __m128i D.14341;
  vector(2) long long int D.14340;
  vector(2) long long int D.14339;
  vector(2) long long int D.14338;
  vector(2) long long int D.14337;
  vector(2) long long int D.14336;
  vector(2) long long int D.14335;
  vector(2) long long int D.14334;
  vector(2) long long int D.14333;
  vector(2) long long int D.14332;
  vector(2) long long int D.14331;
  vector(2) long long int D.14330;
  vector(2) long long int D.14329;
  vector(2) long long int D.14328;
  vector(2) long long int D.14327;
  vector(2) long long int D.14326;
  vector(2) long long int D.14325;
  vector(2) long long int D.14324;
  vector(2) long long int D.14323;
  vector(2) long long int D.14322;
  vector(2) long long int D.14321;
  __m128i D.14320;
  vector(2) long long int D.14319;
  vector(2) long long int D.14318;
  __m128i D.14317;
  __m128i D.14316;
  __m128i D.14315;
  __m128i D.14314;
  __m128i D.14313;
  __m128i D.14312;
  __m128i D.14311;
  __m128i D.14310;
  __m128i D.14309;
  __m128i D.14308;
  __m128i D.14307;
  __m128i D.14306;
  __m128i D.14305;
  __m128i D.14304;
  __m128i D.14303;
  __m128i D.14302;
  __m128i D.14301;
  __m128i D.14300;
  __m128i D.14299;
  vector(2) long long int D.14298;
  __m128i D.14297;
  vector(2) long long int D.14296;
  __m128i D.14295;
  vector(2) long long int D.14294;
  __m128i D.14293;
  vector(2) long long int D.14292;
  __m128i D.14291;
  __m128i D.14290;
  __m128i D.14289;
  __m128i D.14288;
  __m128i D.14287;
  __m128i D.14286;
  vector(2) long long int D.14285;
  vector(2) long long int D.14284;
  vector(2) long long int D.14283;
  __m128i D.14282;
  vector(2) long long int D.14281;
  vector(2) long long int D.14280;
  vector(2) long long int D.14279;
  __m128i D.14278;
  vector(2) long long int D.14277;
  vector(2) long long int D.14276;
  vector(2) long long int D.14275;
  __m128i D.14274;
  vector(2) long long int D.14273;
  vector(2) long long int D.14272;
  vector(2) long long int D.14271;
  __m128i D.14270;
  vector(2) long long int D.14269;
  vector(2) long long int D.14268;
  vector(2) long long int D.14267;
  vector(2) long long int D.14266;
  vector(2) long long int D.14265;
  vector(2) long long int D.14264;
  __m128i D.14263;
  __m128i D.14262;
  __m128i D.14260;
  vector(2) long long int D.14259;
  vector(2) long long int D.14258;
  vector(2) long long int D.14257;
  vector(2) long long int D.14256;
  vector(2) long long int D.14255;
  vector(2) long long int D.14254;
  vector(2) long long int D.14253;
  vector(2) long long int D.14252;
  vector(2) long long int D.14251;
  vector(2) long long int D.14250;
  vector(2) long long int D.14249;
  vector(2) long long int D.14248;
  vector(2) long long int D.14247;
  vector(2) long long int D.14246;
  vector(2) long long int D.14245;
  vector(2) long long int D.14244;
  vector(2) long long int D.14243;
  vector(2) long long int D.14242;
  vector(2) long long int D.14241;
  vector(2) long long int D.14240;
  __m128i D.14239;
  vector(2) long long int D.14238;
  vector(2) long long int D.14237;
  __m128i D.14236;
  __m128i D.14235;
  __m128i D.14234;
  __m128i D.14233;
  __m128i D.14232;
  __m128i D.14231;
  __m128i D.14230;
  __m128i D.14229;
  __m128i D.14228;
  __m128i D.14227;
  __m128i D.14226;
  __m128i D.14225;
  __m128i D.14224;
  __m128i D.14223;
  __m128i D.14222;
  __m128i D.14221;
  __m128i D.14220;
  __m128i D.14219;
  __m128i D.14218;
  vector(2) long long int D.14217;
  __m128i D.14216;
  vector(2) long long int D.14215;
  __m128i D.14214;
  vector(2) long long int D.14213;
  __m128i D.14212;
  vector(2) long long int D.14211;
  __m128i D.14210;
  __m128i D.14209;
  __m128i D.14208;
  __m128i D.14207;
  __m128i D.14206;
  __m128i D.14205;
  __m128i p3;
  __m128i p2;
  __m128i p1;
  __m128i p0;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i x7_h;
  __m128i x7_l;
  __m128i x6_h;
  __m128i x6_l;
  __m128i x5_h;
  __m128i x5_l;
  __m128i x4_h;
  __m128i x4_l;
  __m128i y5o_h;
  __m128i y5o_l;
  __m128i y4o_h;
  __m128i y4o_l;
  __m128i rot1_0hi;
  __m128i rot1_0lo;
  __m128i sum35;
  __m128i sum17;
  __m128i y3o_h;
  __m128i y3o_l;
  __m128i y1o_h;
  __m128i y1o_l;
  __m128i rot3_0hi;
  __m128i rot3_0lo;
  __m128i y2o_h;
  __m128i y2o_l;
  __m128i y0o_h;
  __m128i y0o_l;
  __m128i rot2_0hi;
  __m128i rot2_0lo;
  __m128i x2_h;
  __m128i x2_l;
  __m128i x1_h;
  __m128i x1_l;
  __m128i x3_h;
  __m128i x3_l;
  __m128i x0_h;
  __m128i x0_l;
  __m128i t1e_h;
  __m128i t1e_l;
  __m128i t0e_h;
  __m128i t0e_l;
  __m128i dif04;
  __m128i sum04;
  __m128i t3e_h;
  __m128i t3e_l;
  __m128i t2e_h;
  __m128i t2e_l;
  __m128i rot0_0hi;
  __m128i rot0_0lo;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i x7_h;
  __m128i x7_l;
  __m128i x6_h;
  __m128i x6_l;
  __m128i x5_h;
  __m128i x5_l;
  __m128i x4_h;
  __m128i x4_l;
  __m128i y5o_h;
  __m128i y5o_l;
  __m128i y4o_h;
  __m128i y4o_l;
  __m128i rot1_0hi;
  __m128i rot1_0lo;
  __m128i sum35;
  __m128i sum17;
  __m128i y3o_h;
  __m128i y3o_l;
  __m128i y1o_h;
  __m128i y1o_l;
  __m128i rot3_0hi;
  __m128i rot3_0lo;
  __m128i y2o_h;
  __m128i y2o_l;
  __m128i y0o_h;
  __m128i y0o_l;
  __m128i rot2_0hi;
  __m128i rot2_0lo;
  __m128i x2_h;
  __m128i x2_l;
  __m128i x1_h;
  __m128i x1_l;
  __m128i x3_h;
  __m128i x3_l;
  __m128i x0_h;
  __m128i x0_l;
  __m128i t1e_h;
  __m128i t1e_l;
  __m128i t0e_h;
  __m128i t0e_l;
  __m128i dif04;
  __m128i sum04;
  __m128i t3e_h;
  __m128i t3e_l;
  __m128i t2e_h;
  __m128i t2e_l;
  __m128i rot0_0hi;
  __m128i rot0_0lo;
  __m128i bias_1;
  __m128i bias_0;
  __m128i rot3_1;
  __m128i rot3_0;
  __m128i rot2_1;
  __m128i rot2_0;
  __m128i rot1_1;
  __m128i rot1_0;
  __m128i rot0_1;
  __m128i rot0_0;
  __m128i tmp;
  __m128i row7;
  __m128i row6;
  __m128i row5;
  __m128i row4;
  __m128i row3;
  __m128i row2;
  __m128i row1;
  __m128i row0;
  short int * _1;
  vector(2) long long int _2;
  short int * _3;
  vector(2) long long int _4;
  short int * _5;
  vector(2) long long int _6;
  short int * _7;
  short int * _8;
  vector(2) long long int _9;
  short int * _10;
  vector(2) long long int _11;
  short int * _12;
  vector(2) long long int _13;
  vector(2) long long int row6.122_14;
  vector(2) long long int row2.123_15;
  vector(2) long long int row6.124_16;
  vector(2) long long int row2.125_17;
  vector(2) long long int _18;
  vector(2) long long int _19;
  vector(2) long long int sum04.126_20;
  vector(2) long long int _21;
  vector(2) long long int _22;
  vector(2) long long int sum04.127_23;
  vector(2) long long int _24;
  vector(2) long long int _25;
  vector(2) long long int dif04.128_26;
  vector(2) long long int _27;
  vector(2) long long int _28;
  vector(2) long long int dif04.129_29;
  vector(2) long long int _30;
  vector(2) long long int _31;
  vector(2) long long int row3.130_32;
  vector(2) long long int row7.131_33;
  vector(2) long long int row3.132_34;
  vector(2) long long int row7.133_35;
  vector(2) long long int row1.134_36;
  vector(2) long long int row5.135_37;
  vector(2) long long int row1.136_38;
  vector(2) long long int row5.137_39;
  vector(2) long long int row7.138_40;
  vector(2) long long int row1.139_41;
  vector(2) long long int _42;
  vector(2) long long int row5.140_43;
  vector(2) long long int row3.141_44;
  vector(2) long long int _45;
  vector(2) long long int sum35.142_46;
  vector(2) long long int sum17.143_47;
  vector(2) long long int sum35.144_48;
  vector(2) long long int sum17.145_49;
  vector(2) long long int _50;
  vector(2) long long int _51;
  vector(2) long long int _52;
  vector(2) long long int _53;
  vector(2) long long int _54;
  vector(2) long long int _55;
  vector(2) long long int _56;
  vector(2) long long int _57;
  vector(2) long long int _58;
  vector(2) long long int _59;
  vector(2) long long int _60;
  vector(2) long long int _61;
  vector(2) long long int _62;
  vector(2) long long int _63;
  vector(2) long long int _64;
  vector(2) long long int _65;
  vector(2) long long int _66;
  vector(2) long long int _67;
  vector(2) long long int _68;
  vector(2) long long int _69;
  vector(2) long long int _70;
  vector(2) long long int _71;
  vector(2) long long int row5.146_72;
  vector(2) long long int row1.147_73;
  vector(2) long long int _74;
  vector(2) long long int row5.148_75;
  vector(2) long long int _76;
  vector(2) long long int row6.149_77;
  vector(2) long long int row2.150_78;
  vector(2) long long int _79;
  vector(2) long long int row6.151_80;
  vector(2) long long int _81;
  vector(2) long long int row7.152_82;
  vector(2) long long int row3.153_83;
  vector(2) long long int _84;
  vector(2) long long int row7.154_85;
  vector(2) long long int _86;
  vector(2) long long int row2.155_87;
  vector(2) long long int row2.156_88;
  vector(2) long long int _89;
  vector(2) long long int row3.157_90;
  vector(2) long long int row1.158_91;
  vector(2) long long int _92;
  vector(2) long long int row3.159_93;
  vector(2) long long int _94;
  vector(2) long long int row6.160_95;
  vector(2) long long int row6.161_96;
  vector(2) long long int _97;
  vector(2) long long int row7.162_98;
  vector(2) long long int row5.163_99;
  vector(2) long long int _100;
  vector(2) long long int row7.164_101;
  vector(2) long long int _102;
  vector(2) long long int row1.165_103;
  vector(2) long long int row1.166_104;
  vector(2) long long int _105;
  vector(2) long long int row3.167_106;
  vector(2) long long int row2.168_107;
  vector(2) long long int _108;
  vector(2) long long int row3.169_109;
  vector(2) long long int _110;
  vector(2) long long int row5.170_111;
  vector(2) long long int row5.171_112;
  vector(2) long long int _113;
  vector(2) long long int row7.172_114;
  vector(2) long long int row6.173_115;
  vector(2) long long int _116;
  vector(2) long long int row7.174_117;
  vector(2) long long int _118;
  vector(2) long long int row6.175_119;
  vector(2) long long int row2.176_120;
  vector(2) long long int row6.177_121;
  vector(2) long long int row2.178_122;
  vector(2) long long int _123;
  vector(2) long long int _124;
  vector(2) long long int sum04.179_125;
  vector(2) long long int _126;
  vector(2) long long int _127;
  vector(2) long long int sum04.180_128;
  vector(2) long long int _129;
  vector(2) long long int _130;
  vector(2) long long int dif04.181_131;
  vector(2) long long int _132;
  vector(2) long long int _133;
  vector(2) long long int dif04.182_134;
  vector(2) long long int _135;
  vector(2) long long int _136;
  vector(2) long long int row3.183_137;
  vector(2) long long int row7.184_138;
  vector(2) long long int row3.185_139;
  vector(2) long long int row7.186_140;
  vector(2) long long int row1.187_141;
  vector(2) long long int row5.188_142;
  vector(2) long long int row1.189_143;
  vector(2) long long int row5.190_144;
  vector(2) long long int row7.191_145;
  vector(2) long long int row1.192_146;
  vector(2) long long int _147;
  vector(2) long long int row5.193_148;
  vector(2) long long int row3.194_149;
  vector(2) long long int _150;
  vector(2) long long int sum35.195_151;
  vector(2) long long int sum17.196_152;
  vector(2) long long int sum35.197_153;
  vector(2) long long int sum17.198_154;
  vector(2) long long int _155;
  vector(2) long long int _156;
  vector(2) long long int _157;
  vector(2) long long int _158;
  vector(2) long long int _159;
  vector(2) long long int _160;
  vector(2) long long int _161;
  vector(2) long long int _162;
  vector(2) long long int _163;
  vector(2) long long int _164;
  vector(2) long long int _165;
  vector(2) long long int _166;
  vector(2) long long int _167;
  vector(2) long long int _168;
  vector(2) long long int _169;
  vector(2) long long int _170;
  vector(2) long long int _171;
  vector(2) long long int _172;
  vector(2) long long int _173;
  vector(2) long long int _174;
  vector(2) long long int _175;
  vector(2) long long int _176;
  vector(2) long long int row1.199_177;
  vector(2) long long int _178;
  vector(2) long long int row3.200_179;
  vector(2) long long int row2.201_180;
  vector(2) long long int _181;
  vector(2) long long int row5.202_182;
  vector(2) long long int _183;
  vector(2) long long int row7.203_184;
  vector(2) long long int row6.204_185;
  vector(2) long long int _186;
  vector(2) long long int p2.205_187;
  vector(2) long long int p0.206_188;
  vector(2) long long int _189;
  vector(2) long long int p2.207_190;
  vector(2) long long int _191;
  vector(2) long long int p3.208_192;
  vector(2) long long int p1.209_193;
  vector(2) long long int _194;
  vector(2) long long int p3.210_195;
  vector(2) long long int _196;
  vector(2) long long int p1.211_197;
  vector(2) long long int p0.212_198;
  vector(2) long long int _199;
  vector(2) long long int p1.213_200;
  vector(2) long long int _201;
  vector(2) long long int p3.214_202;
  vector(2) long long int p2.215_203;
  vector(2) long long int _204;
  vector(2) long long int p3.216_205;
  vector(2) long long int _206;
  vector(2) long long int p2.217_207;
  vector(2) long long int p0.218_208;
  vector(2) long long int _209;
  vector(2) long long int p2.219_210;
  vector(2) long long int _211;
  vector(2) long long int p3.220_212;
  vector(2) long long int p1.221_213;
  vector(2) long long int _214;
  vector(2) long long int p3.222_215;
  vector(2) long long int _216;
  vector(2) long long int p0.223_217;
  sizetype _218;
  vector(2) long long int p0.224_219;
  vector(4) int _220;
  vector(4) int _221;
  vector(2) long long int _222;
  sizetype _223;
  vector(2) long long int p2.225_224;
  sizetype _225;
  vector(2) long long int p2.226_226;
  vector(4) int _227;
  vector(4) int _228;
  vector(2) long long int _229;
  sizetype _230;
  vector(2) long long int p1.227_231;
  sizetype _232;
  vector(2) long long int p1.228_233;
  vector(4) int _234;
  vector(4) int _235;
  vector(2) long long int _236;
  sizetype _237;
  vector(2) long long int p3.229_238;
  sizetype _239;
  vector(2) long long int p3.230_240;
  vector(4) int _241;
  vector(4) int _242;
  vector(2) long long int _243;
  __m128i _268;
  __m128i _270;
  __m128i _272;
  __m128i _274;
  __m128i _276;
  __m128i _278;
  vector(2) long long int _282;
  __m128i _283;
  vector(2) long long int _285;
  __m128i _286;
  vector(2) long long int _288;
  __m128i _289;
  vector(2) long long int _291;
  __m128i _292;
  __m128i _302;
  __m128i _304;
  __m128i _306;
  __m128i _308;
  __m128i _310;
  __m128i _312;
  __m128i _314;
  __m128i _316;
  __m128i _318;
  __m128i _320;
  __m128i _322;
  __m128i _324;
  __m128i _328;
  __m128i _330;
  __m128i _332;
  __m128i _334;
  __m128i _336;
  __m128i _338;
  vector(2) long long int _354;
  vector(2) long long int _355;
  __m128i _356;
  vector(2) long long int _358;
  vector(2) long long int _359;
  vector(2) long long int _360;
  vector(2) long long int _368;
  vector(2) long long int _369;
  vector(2) long long int _370;
  vector(2) long long int _372;
  vector(2) long long int _373;
  vector(2) long long int _374;
  vector(2) long long int _382;
  vector(2) long long int _383;
  vector(2) long long int _384;
  vector(2) long long int _386;
  vector(2) long long int _387;
  vector(2) long long int _388;
  vector(2) long long int _396;
  vector(2) long long int _397;
  vector(2) long long int _398;
  vector(2) long long int _400;
  vector(2) long long int _401;
  __m128i _402;
  __m128i _409;
  __m128i _411;
  vector(2) long long int _414;
  vector(2) long long int _416;
  vector(2) long long int _419;
  vector(2) long long int _421;
  vector(2) long long int _424;
  vector(2) long long int _426;
  __m128i _429;
  vector(2) long long int _431;
  vector(2) long long int _434;
  vector(2) long long int _436;
  __m128i _439;
  vector(2) long long int _441;
  vector(2) long long int _444;
  vector(2) long long int _446;
  __m128i _449;
  vector(2) long long int _451;
  vector(2) long long int _454;
  vector(2) long long int _456;
  __m128i _459;
  vector(2) long long int _461;
  vector(2) long long int _464;
  vector(2) long long int _466;
  __m128i _468;
  __m128i _470;
  __m128i _472;
  __m128i _474;
  __m128i _476;
  __m128i _478;
  vector(2) long long int _482;
  __m128i _483;
  vector(2) long long int _485;
  __m128i _486;
  vector(2) long long int _488;
  __m128i _489;
  vector(2) long long int _491;
  __m128i _492;
  __m128i _502;
  __m128i _504;
  __m128i _506;
  __m128i _508;
  __m128i _510;
  __m128i _512;
  __m128i _514;
  __m128i _516;
  __m128i _518;
  __m128i _520;
  __m128i _522;
  __m128i _524;
  __m128i _528;
  __m128i _530;
  __m128i _532;
  __m128i _534;
  __m128i _536;
  __m128i _538;
  vector(2) long long int _554;
  vector(2) long long int _555;
  __m128i _556;
  vector(2) long long int _558;
  vector(2) long long int _559;
  vector(2) long long int _560;
  vector(2) long long int _568;
  vector(2) long long int _569;
  vector(2) long long int _570;
  vector(2) long long int _572;
  vector(2) long long int _573;
  vector(2) long long int _574;
  vector(2) long long int _582;
  vector(2) long long int _583;
  vector(2) long long int _584;
  vector(2) long long int _586;
  vector(2) long long int _587;
  vector(2) long long int _588;
  vector(2) long long int _596;
  vector(2) long long int _597;
  vector(2) long long int _598;
  vector(2) long long int _600;
  vector(2) long long int _601;
  __m128i _602;
  vector(2) long long int _608;
  vector(2) long long int _610;
  vector(2) long long int _612;
  vector(2) long long int _614;
  vector(2) long long int _617;
  vector(2) long long int _619;
  vector(2) long long int _622;
  vector(2) long long int _624;
  vector(2) long long int _627;
  vector(2) long long int _629;
  vector(2) long long int _632;
  vector(2) long long int _634;
  vector(2) long long int _637;
  vector(2) long long int _639;
  vector(2) long long int _642;
  vector(2) long long int _644;
  vector(4) int _649;
  vector(4) int _652;
  vector(4) int _655;
  vector(4) int _658;
  vector(8) short int _689;
  vector(8) short int _690;
  vector(8) short int _691;
  vector(8) short int _692;
  vector(2) long long int _693;
  vector(2) long long int _695;
  vector(2) long long int _697;
  vector(2) long long int _699;
  vector(2) long long int _701;
  vector(2) long long int _703;
  vector(2) long long int _705;
  vector(2) long long int _707;
  vector(2) long long int _709;
  vector(4) int _715;
  vector(2) long long int _716;
  vector(2) long long int _717;
  vector(2) long long int _718;
  vector(4) int _724;
  vector(2) long long int _725;
  vector(2) long long int _726;
  vector(2) long long int _727;
  int _736;
  int _737;
  int _738;
  int _739;
  int _740;
  int _741;
  int _742;
  int _743;
  vector(8) short int _752;
  vector(2) long long int _753;
  vector(2) long long int _754;
  vector(2) long long int _755;
  int _764;
  int _765;
  int _766;
  int _767;
  int _768;
  int _769;
  int _770;
  int _771;
  vector(8) short int _780;
  vector(2) long long int _781;
  vector(2) long long int _782;
  vector(2) long long int _783;
  int _792;
  int _793;
  int _794;
  int _795;
  int _796;
  int _797;
  int _798;
  int _799;
  vector(8) short int _808;
  vector(2) long long int _809;
  vector(2) long long int _810;
  vector(2) long long int _811;
  int _820;
  int _821;
  int _822;
  int _823;
  int _824;
  int _825;
  int _826;
  int _827;
  vector(8) short int _836;
  vector(2) long long int _837;
  vector(2) long long int _838;
  vector(2) long long int _839;
  int _848;
  int _849;
  int _850;
  int _851;
  int _852;
  int _853;
  int _854;
  int _855;
  vector(8) short int _864;
  vector(2) long long int _865;
  vector(2) long long int _866;
  vector(2) long long int _867;
  int _876;
  int _877;
  int _878;
  int _879;
  int _880;
  int _881;
  int _882;
  int _883;
  vector(8) short int _892;
  vector(2) long long int _893;
  vector(2) long long int _894;
  vector(2) long long int _895;
  int _904;
  int _905;
  int _906;
  int _907;
  int _908;
  int _909;
  int _910;
  int _911;
  vector(8) short int _920;
  vector(2) long long int _921;
  vector(2) long long int _922;
  vector(2) long long int _923;
  int _932;
  int _933;
  int _934;
  int _935;
  int _936;
  int _937;
  int _938;
  int _939;
  vector(8) short int _948;
  vector(2) long long int _949;
  vector(2) long long int _950;
  vector(2) long long int _951;
  vector(8) short int _954;
  vector(8) short int _955;
  vector(8) short int _956;
  vector(8) short int _957;
  vector(2) long long int _958;
  vector(8) short int _961;
  vector(8) short int _962;
  vector(4) int _963;
  vector(4) int _964;
  vector(2) long long int _965;
  vector(8) short int _968;
  vector(8) short int _969;
  vector(4) int _970;
  vector(4) int _971;
  vector(2) long long int _972;
  vector(8) short int _975;
  vector(8) short int _976;
  vector(4) int _977;
  vector(4) int _978;
  vector(2) long long int _979;
  vector(8) short int _982;
  vector(8) short int _983;
  vector(4) int _984;
  vector(4) int _985;
  vector(2) long long int _986;
  vector(8) short int _989;
  vector(8) short int _990;
  vector(8) short int _991;
  vector(8) short int _992;
  vector(2) long long int _993;
  vector(2) long long int _994;
  vector(8) short unsigned int _997;
  vector(8) short unsigned int _998;
  vector(8) short unsigned int _999;
  vector(2) long long int _1000;
  vector(8) short unsigned int _1003;
  vector(8) short unsigned int _1004;
  vector(8) short unsigned int _1005;
  vector(2) long long int _1006;
  vector(4) int _1009;
  vector(4) int _1010;
  vector(4) int _1011;
  vector(2) long long int _1012;
  vector(8) short int _1015;
  vector(8) short int _1016;
  vector(8) short int _1017;
  vector(8) short int _1018;
  vector(2) long long int _1019;
  vector(2) long long int _1020;
  vector(4) int _1023;
  vector(4) int _1024;
  vector(4) int _1025;
  vector(2) long long int _1026;
  vector(8) short int _1029;
  vector(8) short int _1030;
  vector(8) short int _1031;
  vector(8) short int _1032;
  vector(2) long long int _1033;
  vector(2) long long int _1034;
  vector(4) int _1037;
  vector(4) int _1038;
  vector(4) int _1039;
  vector(2) long long int _1040;
  vector(8) short int _1043;
  vector(8) short int _1044;
  vector(8) short int _1045;
  vector(8) short int _1046;
  vector(2) long long int _1047;
  vector(2) long long int _1048;
  vector(4) int _1051;
  vector(4) int _1052;
  vector(4) int _1053;
  vector(2) long long int _1054;
  vector(8) short int _1057;
  vector(8) short int _1058;
  vector(8) short int _1059;
  vector(8) short int _1060;
  vector(2) long long int _1061;
  vector(4) unsigned int _1064;
  vector(4) unsigned int _1065;
  vector(4) unsigned int _1066;
  vector(2) long long int _1067;
  vector(4) unsigned int _1070;
  vector(4) unsigned int _1071;
  vector(4) unsigned int _1072;
  vector(2) long long int _1073;
  vector(4) unsigned int _1076;
  vector(4) unsigned int _1077;
  vector(4) unsigned int _1078;
  vector(2) long long int _1079;
  vector(4) unsigned int _1082;
  vector(4) unsigned int _1083;
  vector(4) unsigned int _1084;
  vector(2) long long int _1085;
  vector(4) unsigned int _1088;
  vector(4) unsigned int _1089;
  vector(4) unsigned int _1090;
  vector(2) long long int _1091;
  vector(4) unsigned int _1094;
  vector(4) unsigned int _1095;
  vector(4) unsigned int _1096;
  vector(2) long long int _1097;
  vector(4) unsigned int _1100;
  vector(4) unsigned int _1101;
  vector(4) unsigned int _1102;
  vector(2) long long int _1103;
  vector(4) unsigned int _1106;
  vector(4) unsigned int _1107;
  vector(4) unsigned int _1108;
  vector(2) long long int _1109;
  vector(8) short int _1112;
  vector(8) short int _1113;
  vector(8) short int _1114;
  vector(8) short int _1115;
  vector(2) long long int _1116;
  vector(8) short int _1119;
  vector(8) short int _1120;
  vector(4) int _1121;
  vector(4) int _1122;
  vector(2) long long int _1123;
  vector(8) short int _1126;
  vector(8) short int _1127;
  vector(4) int _1128;
  vector(4) int _1129;
  vector(2) long long int _1130;
  vector(8) short int _1133;
  vector(8) short int _1134;
  vector(4) int _1135;
  vector(4) int _1136;
  vector(2) long long int _1137;
  vector(8) short int _1140;
  vector(8) short int _1141;
  vector(4) int _1142;
  vector(4) int _1143;
  vector(2) long long int _1144;
  vector(8) short int _1147;
  vector(8) short int _1148;
  vector(8) short int _1149;
  vector(8) short int _1150;
  vector(2) long long int _1151;
  vector(8) short int _1154;
  vector(8) short int _1155;
  vector(8) short int _1156;
  vector(8) short int _1157;
  vector(2) long long int _1158;
  vector(8) short int _1161;
  vector(8) short int _1162;
  vector(4) int _1163;
  vector(4) int _1164;
  vector(2) long long int _1165;
  vector(8) short int _1168;
  vector(8) short int _1169;
  vector(4) int _1170;
  vector(4) int _1171;
  vector(2) long long int _1172;
  vector(8) short int _1175;
  vector(8) short int _1176;
  vector(4) int _1177;
  vector(4) int _1178;
  vector(2) long long int _1179;
  vector(8) short int _1182;
  vector(8) short int _1183;
  vector(4) int _1184;
  vector(4) int _1185;
  vector(2) long long int _1186;
  vector(8) short int _1189;
  vector(8) short int _1190;
  vector(8) short int _1191;
  vector(8) short int _1192;
  vector(2) long long int _1193;
  vector(8) short unsigned int _1196;
  vector(8) short unsigned int _1197;
  vector(8) short unsigned int _1198;
  vector(2) long long int _1199;
  vector(8) short unsigned int _1202;
  vector(8) short unsigned int _1203;
  vector(8) short unsigned int _1204;
  vector(2) long long int _1205;
  vector(8) short int _1208;
  vector(8) short int _1209;
  vector(8) short int _1210;
  vector(8) short int _1211;
  vector(2) long long int _1212;
  vector(8) short int _1215;
  vector(8) short int _1216;
  vector(4) int _1217;
  vector(4) int _1218;
  vector(2) long long int _1219;
  vector(8) short int _1222;
  vector(8) short int _1223;
  vector(4) int _1224;
  vector(4) int _1225;
  vector(2) long long int _1226;
  vector(8) short int _1229;
  vector(8) short int _1230;
  vector(4) int _1231;
  vector(4) int _1232;
  vector(2) long long int _1233;
  vector(8) short int _1236;
  vector(8) short int _1237;
  vector(4) int _1238;
  vector(4) int _1239;
  vector(2) long long int _1240;
  vector(4) int _1243;
  vector(4) int _1244;
  vector(4) int _1245;
  vector(2) long long int _1246;
  vector(4) unsigned int _1249;
  vector(4) unsigned int _1250;
  vector(4) unsigned int _1251;
  vector(2) long long int _1252;
  vector(4) unsigned int _1255;
  vector(4) unsigned int _1256;
  vector(4) unsigned int _1257;
  vector(2) long long int _1258;
  vector(4) unsigned int _1261;
  vector(4) unsigned int _1262;
  vector(4) unsigned int _1263;
  vector(2) long long int _1264;
  vector(4) unsigned int _1267;
  vector(4) unsigned int _1268;
  vector(4) unsigned int _1269;
  vector(2) long long int _1270;
  vector(4) unsigned int _1273;
  vector(4) unsigned int _1274;
  vector(4) unsigned int _1275;
  vector(2) long long int _1276;
  vector(4) unsigned int _1279;
  vector(4) unsigned int _1280;
  vector(4) unsigned int _1281;
  vector(2) long long int _1282;
  vector(4) unsigned int _1285;
  vector(4) unsigned int _1286;
  vector(4) unsigned int _1287;
  vector(2) long long int _1288;
  vector(4) unsigned int _1291;
  vector(4) unsigned int _1292;
  vector(4) unsigned int _1293;
  vector(2) long long int _1294;
  vector(4) unsigned int _1297;
  vector(4) unsigned int _1298;
  vector(4) unsigned int _1299;
  vector(2) long long int _1300;
  vector(4) unsigned int _1303;
  vector(4) unsigned int _1304;
  vector(4) unsigned int _1305;
  vector(2) long long int _1306;
  vector(4) unsigned int _1309;
  vector(4) unsigned int _1310;
  vector(4) unsigned int _1311;
  vector(2) long long int _1312;
  vector(4) unsigned int _1315;
  vector(4) unsigned int _1316;
  vector(4) unsigned int _1317;
  vector(2) long long int _1318;
  vector(4) unsigned int _1321;
  vector(4) unsigned int _1322;
  vector(4) unsigned int _1323;
  vector(2) long long int _1324;
  vector(4) unsigned int _1327;
  vector(4) unsigned int _1328;
  vector(4) unsigned int _1329;
  vector(2) long long int _1330;
  vector(4) int _1333;
  vector(4) int _1334;
  vector(4) int _1335;
  vector(2) long long int _1336;
  vector(4) int _1339;
  vector(4) int _1340;
  vector(8) short int _1341;
  vector(8) short int _1342;
  vector(2) long long int _1343;
  vector(4) int _1346;
  vector(4) int _1347;
  vector(4) int _1348;
  vector(2) long long int _1349;
  vector(4) int _1352;
  vector(4) int _1353;
  vector(4) int _1354;
  vector(2) long long int _1355;
  vector(4) int _1358;
  vector(4) int _1359;
  vector(8) short int _1360;
  vector(8) short int _1361;
  vector(2) long long int _1362;
  vector(4) int _1365;
  vector(4) int _1366;
  vector(4) int _1367;
  vector(2) long long int _1368;
  vector(4) unsigned int _1371;
  vector(4) unsigned int _1372;
  vector(4) unsigned int _1373;
  vector(2) long long int _1374;
  vector(4) unsigned int _1377;
  vector(4) unsigned int _1378;
  vector(4) unsigned int _1379;
  vector(2) long long int _1380;
  vector(4) unsigned int _1383;
  vector(4) unsigned int _1384;
  vector(4) unsigned int _1385;
  vector(2) long long int _1386;
  vector(4) unsigned int _1389;
  vector(4) unsigned int _1390;
  vector(4) unsigned int _1391;
  vector(2) long long int _1392;
  vector(4) unsigned int _1395;
  vector(4) unsigned int _1396;
  vector(4) unsigned int _1397;
  vector(2) long long int _1398;
  vector(4) unsigned int _1401;
  vector(4) unsigned int _1402;
  vector(4) unsigned int _1403;
  vector(2) long long int _1404;
  vector(4) int _1407;
  vector(4) int _1408;
  vector(4) int _1409;
  vector(2) long long int _1410;
  vector(4) int _1413;
  vector(4) int _1414;
  vector(8) short int _1415;
  vector(8) short int _1416;
  vector(2) long long int _1417;
  vector(4) int _1420;
  vector(4) int _1421;
  vector(4) int _1422;
  vector(2) long long int _1423;
  vector(4) int _1426;
  vector(4) int _1427;
  vector(4) int _1428;
  vector(2) long long int _1429;
  vector(4) int _1432;
  vector(4) int _1433;
  vector(8) short int _1434;
  vector(8) short int _1435;
  vector(2) long long int _1436;
  vector(4) int _1439;
  vector(4) int _1440;
  vector(4) int _1441;
  vector(2) long long int _1442;
  vector(4) unsigned int _1445;
  vector(4) unsigned int _1446;
  vector(4) unsigned int _1447;
  vector(2) long long int _1448;
  vector(4) unsigned int _1451;
  vector(4) unsigned int _1452;
  vector(4) unsigned int _1453;
  vector(2) long long int _1454;
  vector(4) unsigned int _1457;
  vector(4) unsigned int _1458;
  vector(4) unsigned int _1459;
  vector(2) long long int _1460;
  vector(4) unsigned int _1463;
  vector(4) unsigned int _1464;
  vector(4) unsigned int _1465;
  vector(2) long long int _1466;
  vector(4) unsigned int _1469;
  vector(4) unsigned int _1470;
  vector(4) unsigned int _1471;
  vector(2) long long int _1472;
  vector(4) unsigned int _1475;
  vector(4) unsigned int _1476;
  vector(4) unsigned int _1477;
  vector(2) long long int _1478;
  vector(4) int _1481;
  vector(4) int _1482;
  vector(4) int _1483;
  vector(2) long long int _1484;
  vector(4) int _1487;
  vector(4) int _1488;
  vector(8) short int _1489;
  vector(8) short int _1490;
  vector(2) long long int _1491;
  vector(4) int _1494;
  vector(4) int _1495;
  vector(4) int _1496;
  vector(2) long long int _1497;
  vector(4) int _1500;
  vector(4) int _1501;
  vector(4) int _1502;
  vector(2) long long int _1503;
  vector(4) int _1506;
  vector(4) int _1507;
  vector(8) short int _1508;
  vector(8) short int _1509;
  vector(2) long long int _1510;
  vector(4) int _1513;
  vector(4) int _1514;
  vector(4) int _1515;
  vector(2) long long int _1516;
  vector(4) unsigned int _1519;
  vector(4) unsigned int _1520;
  vector(4) unsigned int _1521;
  vector(2) long long int _1522;
  vector(4) unsigned int _1525;
  vector(4) unsigned int _1526;
  vector(4) unsigned int _1527;
  vector(2) long long int _1528;
  vector(4) unsigned int _1531;
  vector(4) unsigned int _1532;
  vector(4) unsigned int _1533;
  vector(2) long long int _1534;
  vector(4) unsigned int _1537;
  vector(4) unsigned int _1538;
  vector(4) unsigned int _1539;
  vector(2) long long int _1540;
  vector(4) unsigned int _1543;
  vector(4) unsigned int _1544;
  vector(4) unsigned int _1545;
  vector(2) long long int _1546;
  vector(4) unsigned int _1549;
  vector(4) unsigned int _1550;
  vector(4) unsigned int _1551;
  vector(2) long long int _1552;
  vector(4) int _1555;
  vector(4) int _1556;
  vector(4) int _1557;
  vector(2) long long int _1558;
  vector(4) int _1561;
  vector(4) int _1562;
  vector(8) short int _1563;
  vector(8) short int _1564;
  vector(2) long long int _1565;
  vector(4) int _1568;
  vector(4) int _1569;
  vector(4) int _1570;
  vector(2) long long int _1571;
  vector(4) int _1574;
  vector(4) int _1575;
  vector(4) int _1576;
  vector(2) long long int _1577;
  vector(4) int _1580;
  vector(4) int _1581;
  vector(8) short int _1582;
  vector(8) short int _1583;
  vector(2) long long int _1584;
  vector(8) short int _1587;
  vector(8) short int _1588;
  vector(8) short int _1589;
  vector(8) short int _1590;
  vector(2) long long int _1591;
  vector(8) short int _1594;
  vector(8) short int _1595;
  vector(8) short int _1596;
  vector(8) short int _1597;
  vector(2) long long int _1598;
  vector(8) short int _1601;
  vector(8) short int _1602;
  vector(8) short int _1603;
  vector(8) short int _1604;
  vector(2) long long int _1605;
  vector(8) short int _1608;
  vector(8) short int _1609;
  vector(8) short int _1610;
  vector(8) short int _1611;
  vector(2) long long int _1612;
  vector(8) short int _1615;
  vector(8) short int _1616;
  vector(8) short int _1617;
  vector(8) short int _1618;
  vector(2) long long int _1619;
  vector(8) short int _1622;
  vector(8) short int _1623;
  vector(8) short int _1624;
  vector(8) short int _1625;
  vector(2) long long int _1626;
  vector(8) short int _1629;
  vector(8) short int _1630;
  vector(8) short int _1631;
  vector(8) short int _1632;
  vector(2) long long int _1633;
  vector(8) short int _1636;
  vector(8) short int _1637;
  vector(8) short int _1638;
  vector(8) short int _1639;
  vector(2) long long int _1640;
  vector(8) short int _1643;
  vector(8) short int _1644;
  vector(8) short int _1645;
  vector(8) short int _1646;
  vector(2) long long int _1647;
  vector(8) short int _1650;
  vector(8) short int _1651;
  vector(8) short int _1652;
  vector(8) short int _1653;
  vector(2) long long int _1654;
  vector(8) short int _1657;
  vector(8) short int _1658;
  vector(8) short int _1659;
  vector(8) short int _1660;
  vector(2) long long int _1661;
  vector(8) short int _1664;
  vector(8) short int _1665;
  vector(8) short int _1666;
  vector(8) short int _1667;
  vector(2) long long int _1668;
  vector(8) short int _1671;
  vector(8) short int _1672;
  vector(8) short int _1673;
  vector(8) short int _1674;
  vector(2) long long int _1675;
  vector(8) short int _1678;
  vector(8) short int _1679;
  vector(8) short int _1680;
  vector(8) short int _1681;
  vector(2) long long int _1682;
  vector(8) short int _1685;
  vector(8) short int _1686;
  vector(8) short int _1687;
  vector(8) short int _1688;
  vector(2) long long int _1689;
  vector(8) short int _1692;
  vector(8) short int _1693;
  vector(8) short int _1694;
  vector(8) short int _1695;
  vector(2) long long int _1696;
  vector(8) short int _1699;
  vector(8) short int _1700;
  vector(8) short int _1701;
  vector(8) short int _1702;
  vector(2) long long int _1703;
  vector(8) short int _1706;
  vector(8) short int _1707;
  vector(8) short int _1708;
  vector(8) short int _1709;
  vector(2) long long int _1710;
  vector(8) short int _1713;
  vector(8) short int _1714;
  vector(8) short int _1715;
  vector(8) short int _1716;
  vector(2) long long int _1717;
  vector(8) short int _1720;
  vector(8) short int _1721;
  vector(8) short int _1722;
  vector(8) short int _1723;
  vector(2) long long int _1724;
  vector(8) short int _1727;
  vector(8) short int _1728;
  vector(8) short int _1729;
  vector(8) short int _1730;
  vector(2) long long int _1731;
  vector(8) short int _1734;
  vector(8) short int _1735;
  vector(8) short int _1736;
  vector(8) short int _1737;
  vector(2) long long int _1738;
  vector(8) short int _1741;
  vector(8) short int _1742;
  vector(8) short int _1743;
  vector(8) short int _1744;
  vector(2) long long int _1745;
  vector(8) short int _1748;
  vector(8) short int _1749;
  vector(8) short int _1750;
  vector(8) short int _1751;
  vector(2) long long int _1752;
  vector(8) short int _1755;
  vector(8) short int _1756;
  vector(8) short int _1757;
  vector(8) short int _1758;
  vector(2) long long int _1759;
  vector(8) short int _1762;
  vector(8) short int _1763;
  vector(8) short int _1764;
  vector(8) short int _1765;
  vector(2) long long int _1766;
  vector(8) short int _1769;
  vector(8) short int _1770;
  vector(4) int _1771;
  vector(4) int _1772;
  vector(2) long long int _1773;
  vector(8) short int _1776;
  vector(8) short int _1777;
  vector(4) int _1778;
  vector(4) int _1779;
  vector(2) long long int _1780;
  vector(8) short int _1783;
  vector(8) short int _1784;
  vector(4) int _1785;
  vector(4) int _1786;
  vector(2) long long int _1787;
  vector(8) short int _1790;
  vector(8) short int _1791;
  vector(4) int _1792;
  vector(4) int _1793;
  vector(2) long long int _1794;
  vector(8) short int _1797;
  vector(8) short int _1798;
  vector(8) short int _1799;
  vector(8) short int _1800;
  vector(2) long long int _1801;
  vector(2) long long int _1802;
  vector(8) short unsigned int _1805;
  vector(8) short unsigned int _1806;
  vector(8) short unsigned int _1807;
  vector(2) long long int _1808;
  vector(8) short unsigned int _1811;
  vector(8) short unsigned int _1812;
  vector(8) short unsigned int _1813;
  vector(2) long long int _1814;
  vector(4) int _1817;
  vector(4) int _1818;
  vector(4) int _1819;
  vector(2) long long int _1820;
  vector(8) short int _1823;
  vector(8) short int _1824;
  vector(8) short int _1825;
  vector(8) short int _1826;
  vector(2) long long int _1827;
  vector(2) long long int _1828;
  vector(4) int _1831;
  vector(4) int _1832;
  vector(4) int _1833;
  vector(2) long long int _1834;
  vector(8) short int _1837;
  vector(8) short int _1838;
  vector(8) short int _1839;
  vector(8) short int _1840;
  vector(2) long long int _1841;
  vector(2) long long int _1842;
  vector(4) int _1845;
  vector(4) int _1846;
  vector(4) int _1847;
  vector(2) long long int _1848;
  vector(8) short int _1851;
  vector(8) short int _1852;
  vector(8) short int _1853;
  vector(8) short int _1854;
  vector(2) long long int _1855;
  vector(2) long long int _1856;
  vector(4) int _1859;
  vector(4) int _1860;
  vector(4) int _1861;
  vector(2) long long int _1862;
  vector(8) short int _1865;
  vector(8) short int _1866;
  vector(8) short int _1867;
  vector(8) short int _1868;
  vector(2) long long int _1869;
  vector(4) unsigned int _1872;
  vector(4) unsigned int _1873;
  vector(4) unsigned int _1874;
  vector(2) long long int _1875;
  vector(4) unsigned int _1878;
  vector(4) unsigned int _1879;
  vector(4) unsigned int _1880;
  vector(2) long long int _1881;
  vector(4) unsigned int _1884;
  vector(4) unsigned int _1885;
  vector(4) unsigned int _1886;
  vector(2) long long int _1887;
  vector(4) unsigned int _1890;
  vector(4) unsigned int _1891;
  vector(4) unsigned int _1892;
  vector(2) long long int _1893;
  vector(4) unsigned int _1896;
  vector(4) unsigned int _1897;
  vector(4) unsigned int _1898;
  vector(2) long long int _1899;
  vector(4) unsigned int _1902;
  vector(4) unsigned int _1903;
  vector(4) unsigned int _1904;
  vector(2) long long int _1905;
  vector(4) unsigned int _1908;
  vector(4) unsigned int _1909;
  vector(4) unsigned int _1910;
  vector(2) long long int _1911;
  vector(4) unsigned int _1914;
  vector(4) unsigned int _1915;
  vector(4) unsigned int _1916;
  vector(2) long long int _1917;
  vector(8) short int _1920;
  vector(8) short int _1921;
  vector(8) short int _1922;
  vector(8) short int _1923;
  vector(2) long long int _1924;
  vector(8) short int _1927;
  vector(8) short int _1928;
  vector(4) int _1929;
  vector(4) int _1930;
  vector(2) long long int _1931;
  vector(8) short int _1934;
  vector(8) short int _1935;
  vector(4) int _1936;
  vector(4) int _1937;
  vector(2) long long int _1938;
  vector(8) short int _1941;
  vector(8) short int _1942;
  vector(4) int _1943;
  vector(4) int _1944;
  vector(2) long long int _1945;
  vector(8) short int _1948;
  vector(8) short int _1949;
  vector(4) int _1950;
  vector(4) int _1951;
  vector(2) long long int _1952;
  vector(8) short int _1955;
  vector(8) short int _1956;
  vector(8) short int _1957;
  vector(8) short int _1958;
  vector(2) long long int _1959;
  vector(8) short int _1962;
  vector(8) short int _1963;
  vector(8) short int _1964;
  vector(8) short int _1965;
  vector(2) long long int _1966;
  vector(8) short int _1969;
  vector(8) short int _1970;
  vector(4) int _1971;
  vector(4) int _1972;
  vector(2) long long int _1973;
  vector(8) short int _1976;
  vector(8) short int _1977;
  vector(4) int _1978;
  vector(4) int _1979;
  vector(2) long long int _1980;
  vector(8) short int _1983;
  vector(8) short int _1984;
  vector(4) int _1985;
  vector(4) int _1986;
  vector(2) long long int _1987;
  vector(8) short int _1990;
  vector(8) short int _1991;
  vector(4) int _1992;
  vector(4) int _1993;
  vector(2) long long int _1994;
  vector(8) short int _1997;
  vector(8) short int _1998;
  vector(8) short int _1999;
  vector(8) short int _2000;
  vector(2) long long int _2001;
  vector(8) short unsigned int _2004;
  vector(8) short unsigned int _2005;
  vector(8) short unsigned int _2006;
  vector(2) long long int _2007;
  vector(8) short unsigned int _2010;
  vector(8) short unsigned int _2011;
  vector(8) short unsigned int _2012;
  vector(2) long long int _2013;
  vector(8) short int _2016;
  vector(8) short int _2017;
  vector(8) short int _2018;
  vector(8) short int _2019;
  vector(2) long long int _2020;
  vector(8) short int _2023;
  vector(8) short int _2024;
  vector(4) int _2025;
  vector(4) int _2026;
  vector(2) long long int _2027;
  vector(8) short int _2030;
  vector(8) short int _2031;
  vector(4) int _2032;
  vector(4) int _2033;
  vector(2) long long int _2034;
  vector(8) short int _2037;
  vector(8) short int _2038;
  vector(4) int _2039;
  vector(4) int _2040;
  vector(2) long long int _2041;
  vector(8) short int _2044;
  vector(8) short int _2045;
  vector(4) int _2046;
  vector(4) int _2047;
  vector(2) long long int _2048;
  vector(4) int _2051;
  vector(4) int _2052;
  vector(4) int _2053;
  vector(2) long long int _2054;
  vector(4) unsigned int _2057;
  vector(4) unsigned int _2058;
  vector(4) unsigned int _2059;
  vector(2) long long int _2060;
  vector(4) unsigned int _2063;
  vector(4) unsigned int _2064;
  vector(4) unsigned int _2065;
  vector(2) long long int _2066;
  vector(4) unsigned int _2069;
  vector(4) unsigned int _2070;
  vector(4) unsigned int _2071;
  vector(2) long long int _2072;
  vector(4) unsigned int _2075;
  vector(4) unsigned int _2076;
  vector(4) unsigned int _2077;
  vector(2) long long int _2078;
  vector(4) unsigned int _2081;
  vector(4) unsigned int _2082;
  vector(4) unsigned int _2083;
  vector(2) long long int _2084;
  vector(4) unsigned int _2087;
  vector(4) unsigned int _2088;
  vector(4) unsigned int _2089;
  vector(2) long long int _2090;
  vector(4) unsigned int _2093;
  vector(4) unsigned int _2094;
  vector(4) unsigned int _2095;
  vector(2) long long int _2096;
  vector(4) unsigned int _2099;
  vector(4) unsigned int _2100;
  vector(4) unsigned int _2101;
  vector(2) long long int _2102;
  vector(4) unsigned int _2105;
  vector(4) unsigned int _2106;
  vector(4) unsigned int _2107;
  vector(2) long long int _2108;
  vector(4) unsigned int _2111;
  vector(4) unsigned int _2112;
  vector(4) unsigned int _2113;
  vector(2) long long int _2114;
  vector(4) unsigned int _2117;
  vector(4) unsigned int _2118;
  vector(4) unsigned int _2119;
  vector(2) long long int _2120;
  vector(4) unsigned int _2123;
  vector(4) unsigned int _2124;
  vector(4) unsigned int _2125;
  vector(2) long long int _2126;
  vector(4) unsigned int _2129;
  vector(4) unsigned int _2130;
  vector(4) unsigned int _2131;
  vector(2) long long int _2132;
  vector(4) unsigned int _2135;
  vector(4) unsigned int _2136;
  vector(4) unsigned int _2137;
  vector(2) long long int _2138;
  vector(4) int _2141;
  vector(4) int _2142;
  vector(4) int _2143;
  vector(2) long long int _2144;
  vector(4) int _2147;
  vector(4) int _2148;
  vector(8) short int _2149;
  vector(8) short int _2150;
  vector(2) long long int _2151;
  vector(4) int _2154;
  vector(4) int _2155;
  vector(4) int _2156;
  vector(2) long long int _2157;
  vector(4) int _2160;
  vector(4) int _2161;
  vector(4) int _2162;
  vector(2) long long int _2163;
  vector(4) int _2166;
  vector(4) int _2167;
  vector(8) short int _2168;
  vector(8) short int _2169;
  vector(2) long long int _2170;
  vector(4) int _2173;
  vector(4) int _2174;
  vector(4) int _2175;
  vector(2) long long int _2176;
  vector(4) unsigned int _2179;
  vector(4) unsigned int _2180;
  vector(4) unsigned int _2181;
  vector(2) long long int _2182;
  vector(4) unsigned int _2185;
  vector(4) unsigned int _2186;
  vector(4) unsigned int _2187;
  vector(2) long long int _2188;
  vector(4) unsigned int _2191;
  vector(4) unsigned int _2192;
  vector(4) unsigned int _2193;
  vector(2) long long int _2194;
  vector(4) unsigned int _2197;
  vector(4) unsigned int _2198;
  vector(4) unsigned int _2199;
  vector(2) long long int _2200;
  vector(4) unsigned int _2203;
  vector(4) unsigned int _2204;
  vector(4) unsigned int _2205;
  vector(2) long long int _2206;
  vector(4) unsigned int _2209;
  vector(4) unsigned int _2210;
  vector(4) unsigned int _2211;
  vector(2) long long int _2212;
  vector(4) int _2215;
  vector(4) int _2216;
  vector(4) int _2217;
  vector(2) long long int _2218;
  vector(4) int _2221;
  vector(4) int _2222;
  vector(8) short int _2223;
  vector(8) short int _2224;
  vector(2) long long int _2225;
  vector(4) int _2228;
  vector(4) int _2229;
  vector(4) int _2230;
  vector(2) long long int _2231;
  vector(4) int _2234;
  vector(4) int _2235;
  vector(4) int _2236;
  vector(2) long long int _2237;
  vector(4) int _2240;
  vector(4) int _2241;
  vector(8) short int _2242;
  vector(8) short int _2243;
  vector(2) long long int _2244;
  vector(4) int _2247;
  vector(4) int _2248;
  vector(4) int _2249;
  vector(2) long long int _2250;
  vector(4) unsigned int _2253;
  vector(4) unsigned int _2254;
  vector(4) unsigned int _2255;
  vector(2) long long int _2256;
  vector(4) unsigned int _2259;
  vector(4) unsigned int _2260;
  vector(4) unsigned int _2261;
  vector(2) long long int _2262;
  vector(4) unsigned int _2265;
  vector(4) unsigned int _2266;
  vector(4) unsigned int _2267;
  vector(2) long long int _2268;
  vector(4) unsigned int _2271;
  vector(4) unsigned int _2272;
  vector(4) unsigned int _2273;
  vector(2) long long int _2274;
  vector(4) unsigned int _2277;
  vector(4) unsigned int _2278;
  vector(4) unsigned int _2279;
  vector(2) long long int _2280;
  vector(4) unsigned int _2283;
  vector(4) unsigned int _2284;
  vector(4) unsigned int _2285;
  vector(2) long long int _2286;
  vector(4) int _2289;
  vector(4) int _2290;
  vector(4) int _2291;
  vector(2) long long int _2292;
  vector(4) int _2295;
  vector(4) int _2296;
  vector(8) short int _2297;
  vector(8) short int _2298;
  vector(2) long long int _2299;
  vector(4) int _2302;
  vector(4) int _2303;
  vector(4) int _2304;
  vector(2) long long int _2305;
  vector(4) int _2308;
  vector(4) int _2309;
  vector(4) int _2310;
  vector(2) long long int _2311;
  vector(4) int _2314;
  vector(4) int _2315;
  vector(8) short int _2316;
  vector(8) short int _2317;
  vector(2) long long int _2318;
  vector(4) int _2321;
  vector(4) int _2322;
  vector(4) int _2323;
  vector(2) long long int _2324;
  vector(4) unsigned int _2327;
  vector(4) unsigned int _2328;
  vector(4) unsigned int _2329;
  vector(2) long long int _2330;
  vector(4) unsigned int _2333;
  vector(4) unsigned int _2334;
  vector(4) unsigned int _2335;
  vector(2) long long int _2336;
  vector(4) unsigned int _2339;
  vector(4) unsigned int _2340;
  vector(4) unsigned int _2341;
  vector(2) long long int _2342;
  vector(4) unsigned int _2345;
  vector(4) unsigned int _2346;
  vector(4) unsigned int _2347;
  vector(2) long long int _2348;
  vector(4) unsigned int _2351;
  vector(4) unsigned int _2352;
  vector(4) unsigned int _2353;
  vector(2) long long int _2354;
  vector(4) unsigned int _2357;
  vector(4) unsigned int _2358;
  vector(4) unsigned int _2359;
  vector(2) long long int _2360;
  vector(4) int _2363;
  vector(4) int _2364;
  vector(4) int _2365;
  vector(2) long long int _2366;
  vector(4) int _2369;
  vector(4) int _2370;
  vector(8) short int _2371;
  vector(8) short int _2372;
  vector(2) long long int _2373;
  vector(4) int _2376;
  vector(4) int _2377;
  vector(4) int _2378;
  vector(2) long long int _2379;
  vector(4) int _2382;
  vector(4) int _2383;
  vector(4) int _2384;
  vector(2) long long int _2385;
  vector(4) int _2388;
  vector(4) int _2389;
  vector(8) short int _2390;
  vector(8) short int _2391;
  vector(2) long long int _2392;
  vector(8) short int _2395;
  vector(8) short int _2396;
  vector(16) char _2397;
  vector(16) char _2398;
  vector(2) long long int _2399;
  vector(8) short int _2402;
  vector(8) short int _2403;
  vector(16) char _2404;
  vector(16) char _2405;
  vector(2) long long int _2406;
  vector(8) short int _2409;
  vector(8) short int _2410;
  vector(16) char _2411;
  vector(16) char _2412;
  vector(2) long long int _2413;
  vector(8) short int _2416;
  vector(8) short int _2417;
  vector(16) char _2418;
  vector(16) char _2419;
  vector(2) long long int _2420;
  vector(16) char _2423;
  vector(16) char _2424;
  vector(16) char _2425;
  vector(16) char _2426;
  vector(2) long long int _2427;
  vector(16) char _2430;
  vector(16) char _2431;
  vector(16) char _2432;
  vector(16) char _2433;
  vector(2) long long int _2434;
  vector(16) char _2437;
  vector(16) char _2438;
  vector(16) char _2439;
  vector(16) char _2440;
  vector(2) long long int _2441;
  vector(16) char _2444;
  vector(16) char _2445;
  vector(16) char _2446;
  vector(16) char _2447;
  vector(2) long long int _2448;
  vector(16) char _2451;
  vector(16) char _2452;
  vector(16) char _2453;
  vector(16) char _2454;
  vector(2) long long int _2455;
  vector(16) char _2458;
  vector(16) char _2459;
  vector(16) char _2460;
  vector(16) char _2461;
  vector(2) long long int _2462;
  vector(16) char _2465;
  vector(16) char _2466;
  vector(16) char _2467;
  vector(16) char _2468;
  vector(2) long long int _2469;
  vector(16) char _2472;
  vector(16) char _2473;
  vector(16) char _2474;
  vector(16) char _2475;
  vector(2) long long int _2476;
  vector(16) char _2479;
  vector(16) char _2480;
  vector(16) char _2481;
  vector(16) char _2482;
  vector(2) long long int _2483;
  vector(16) char _2486;
  vector(16) char _2487;
  vector(16) char _2488;
  vector(16) char _2489;
  vector(2) long long int _2490;
  vector(16) char _2493;
  vector(16) char _2494;
  vector(16) char _2495;
  vector(16) char _2496;
  vector(2) long long int _2497;
  vector(16) char _2500;
  vector(16) char _2501;
  vector(16) char _2502;
  vector(16) char _2503;
  vector(2) long long int _2504;
  long long int _2507;
  vector(2) int _2508;
  long long int _2511;
  vector(2) int _2512;
  long long int _2515;
  vector(2) int _2516;
  long long int _2519;
  vector(2) int _2520;
  long long int _2523;
  vector(2) int _2524;
  long long int _2527;
  vector(2) int _2528;
  long long int _2531;
  vector(2) int _2532;
  long long int _2535;
  vector(2) int _2536;

  <bb 2> :
  __q0_924 = 2217;
  __q1_925 = -5350;
  __q2_926 = 2217;
  __q3_927 = -5350;
  __q4_928 = 2217;
  __q5_929 = -5350;
  __q6_930 = 2217;
  __q7_931 = -5350;
  _932 = (int) __q0_924;
  _933 = (int) __q1_925;
  _934 = (int) __q2_926;
  _935 = (int) __q3_927;
  _936 = (int) __q4_928;
  _937 = (int) __q5_929;
  _938 = (int) __q6_930;
  _939 = (int) __q7_931;
  __q7_940 = (short int) _939;
  __q6_941 = (short int) _938;
  __q5_942 = (short int) _937;
  __q4_943 = (short int) _936;
  __q3_944 = (short int) _935;
  __q2_945 = (short int) _934;
  __q1_946 = (short int) _933;
  __q0_947 = (short int) _932;
  _948 = {__q0_947, __q1_946, __q2_945, __q3_944, __q4_943, __q5_942, __q6_941, __q7_940};
  _949 = VIEW_CONVERT_EXPR<__m128i>(_948);

  <bb 3> :
<L31>:
  _950 = _949;
  _951 = _950;

  <bb 4> :
<L32>:
  _2537 = _951;
  rot0_0_249 = _2537;
  __q0_896 = 5352;
  __q1_897 = 2217;
  __q2_898 = 5352;
  __q3_899 = 2217;
  __q4_900 = 5352;
  __q5_901 = 2217;
  __q6_902 = 5352;
  __q7_903 = 2217;
  _904 = (int) __q0_896;
  _905 = (int) __q1_897;
  _906 = (int) __q2_898;
  _907 = (int) __q3_899;
  _908 = (int) __q4_900;
  _909 = (int) __q5_901;
  _910 = (int) __q6_902;
  _911 = (int) __q7_903;
  __q7_912 = (short int) _911;
  __q6_913 = (short int) _910;
  __q5_914 = (short int) _909;
  __q4_915 = (short int) _908;
  __q3_916 = (short int) _907;
  __q2_917 = (short int) _906;
  __q1_918 = (short int) _905;
  __q0_919 = (short int) _904;
  _920 = {__q0_919, __q1_918, __q2_917, __q3_916, __q4_915, __q5_914, __q6_913, __q7_912};
  _921 = VIEW_CONVERT_EXPR<__m128i>(_920);

  <bb 5> :
<L29>:
  _922 = _921;
  _923 = _922;

  <bb 6> :
<L30>:
  _2538 = _923;
  rot0_1_250 = _2538;
  __q0_868 = 1131;
  __q1_869 = 4816;
  __q2_870 = 1131;
  __q3_871 = 4816;
  __q4_872 = 1131;
  __q5_873 = 4816;
  __q6_874 = 1131;
  __q7_875 = 4816;
  _876 = (int) __q0_868;
  _877 = (int) __q1_869;
  _878 = (int) __q2_870;
  _879 = (int) __q3_871;
  _880 = (int) __q4_872;
  _881 = (int) __q5_873;
  _882 = (int) __q6_874;
  _883 = (int) __q7_875;
  __q7_884 = (short int) _883;
  __q6_885 = (short int) _882;
  __q5_886 = (short int) _881;
  __q4_887 = (short int) _880;
  __q3_888 = (short int) _879;
  __q2_889 = (short int) _878;
  __q1_890 = (short int) _877;
  __q0_891 = (short int) _876;
  _892 = {__q0_891, __q1_890, __q2_889, __q3_888, __q4_887, __q5_886, __q6_885, __q7_884};
  _893 = VIEW_CONVERT_EXPR<__m128i>(_892);

  <bb 7> :
<L27>:
  _894 = _893;
  _895 = _894;

  <bb 8> :
<L28>:
  _2539 = _895;
  rot1_0_251 = _2539;
  __q0_840 = 4816;
  __q1_841 = -5681;
  __q2_842 = 4816;
  __q3_843 = -5681;
  __q4_844 = 4816;
  __q5_845 = -5681;
  __q6_846 = 4816;
  __q7_847 = -5681;
  _848 = (int) __q0_840;
  _849 = (int) __q1_841;
  _850 = (int) __q2_842;
  _851 = (int) __q3_843;
  _852 = (int) __q4_844;
  _853 = (int) __q5_845;
  _854 = (int) __q6_846;
  _855 = (int) __q7_847;
  __q7_856 = (short int) _855;
  __q6_857 = (short int) _854;
  __q5_858 = (short int) _853;
  __q4_859 = (short int) _852;
  __q3_860 = (short int) _851;
  __q2_861 = (short int) _850;
  __q1_862 = (short int) _849;
  __q0_863 = (short int) _848;
  _864 = {__q0_863, __q1_862, __q2_861, __q3_860, __q4_859, __q5_858, __q6_857, __q7_856};
  _865 = VIEW_CONVERT_EXPR<__m128i>(_864);

  <bb 9> :
<L25>:
  _866 = _865;
  _867 = _866;

  <bb 10> :
<L26>:
  _2540 = _867;
  rot1_1_252 = _2540;
  __q0_812 = -6811;
  __q1_813 = -8034;
  __q2_814 = -6811;
  __q3_815 = -8034;
  __q4_816 = -6811;
  __q5_817 = -8034;
  __q6_818 = -6811;
  __q7_819 = -8034;
  _820 = (int) __q0_812;
  _821 = (int) __q1_813;
  _822 = (int) __q2_814;
  _823 = (int) __q3_815;
  _824 = (int) __q4_816;
  _825 = (int) __q5_817;
  _826 = (int) __q6_818;
  _827 = (int) __q7_819;
  __q7_828 = (short int) _827;
  __q6_829 = (short int) _826;
  __q5_830 = (short int) _825;
  __q4_831 = (short int) _824;
  __q3_832 = (short int) _823;
  __q2_833 = (short int) _822;
  __q1_834 = (short int) _821;
  __q0_835 = (short int) _820;
  _836 = {__q0_835, __q1_834, __q2_833, __q3_832, __q4_831, __q5_830, __q6_829, __q7_828};
  _837 = VIEW_CONVERT_EXPR<__m128i>(_836);

  <bb 11> :
<L23>:
  _838 = _837;
  _839 = _838;

  <bb 12> :
<L24>:
  _2541 = _839;
  rot2_0_253 = _2541;
  __q0_784 = -8034;
  __q1_785 = 4552;
  __q2_786 = -8034;
  __q3_787 = 4552;
  __q4_788 = -8034;
  __q5_789 = 4552;
  __q6_790 = -8034;
  __q7_791 = 4552;
  _792 = (int) __q0_784;
  _793 = (int) __q1_785;
  _794 = (int) __q2_786;
  _795 = (int) __q3_787;
  _796 = (int) __q4_788;
  _797 = (int) __q5_789;
  _798 = (int) __q6_790;
  _799 = (int) __q7_791;
  __q7_800 = (short int) _799;
  __q6_801 = (short int) _798;
  __q5_802 = (short int) _797;
  __q4_803 = (short int) _796;
  __q3_804 = (short int) _795;
  __q2_805 = (short int) _794;
  __q1_806 = (short int) _793;
  __q0_807 = (short int) _792;
  _808 = {__q0_807, __q1_806, __q2_805, __q3_804, __q4_803, __q5_802, __q6_801, __q7_800};
  _809 = VIEW_CONVERT_EXPR<__m128i>(_808);

  <bb 13> :
<L21>:
  _810 = _809;
  _811 = _810;

  <bb 14> :
<L22>:
  _2542 = _811;
  rot2_1_254 = _2542;
  __q0_756 = 6813;
  __q1_757 = -1597;
  __q2_758 = 6813;
  __q3_759 = -1597;
  __q4_760 = 6813;
  __q5_761 = -1597;
  __q6_762 = 6813;
  __q7_763 = -1597;
  _764 = (int) __q0_756;
  _765 = (int) __q1_757;
  _766 = (int) __q2_758;
  _767 = (int) __q3_759;
  _768 = (int) __q4_760;
  _769 = (int) __q5_761;
  _770 = (int) __q6_762;
  _771 = (int) __q7_763;
  __q7_772 = (short int) _771;
  __q6_773 = (short int) _770;
  __q5_774 = (short int) _769;
  __q4_775 = (short int) _768;
  __q3_776 = (short int) _767;
  __q2_777 = (short int) _766;
  __q1_778 = (short int) _765;
  __q0_779 = (short int) _764;
  _780 = {__q0_779, __q1_778, __q2_777, __q3_776, __q4_775, __q5_774, __q6_773, __q7_772};
  _781 = VIEW_CONVERT_EXPR<__m128i>(_780);

  <bb 15> :
<L19>:
  _782 = _781;
  _783 = _782;

  <bb 16> :
<L20>:
  _2543 = _783;
  rot3_0_255 = _2543;
  __q0_728 = -1597;
  __q1_729 = 4552;
  __q2_730 = -1597;
  __q3_731 = 4552;
  __q4_732 = -1597;
  __q5_733 = 4552;
  __q6_734 = -1597;
  __q7_735 = 4552;
  _736 = (int) __q0_728;
  _737 = (int) __q1_729;
  _738 = (int) __q2_730;
  _739 = (int) __q3_731;
  _740 = (int) __q4_732;
  _741 = (int) __q5_733;
  _742 = (int) __q6_734;
  _743 = (int) __q7_735;
  __q7_744 = (short int) _743;
  __q6_745 = (short int) _742;
  __q5_746 = (short int) _741;
  __q4_747 = (short int) _740;
  __q3_748 = (short int) _739;
  __q2_749 = (short int) _738;
  __q1_750 = (short int) _737;
  __q0_751 = (short int) _736;
  _752 = {__q0_751, __q1_750, __q2_749, __q3_748, __q4_747, __q5_746, __q6_745, __q7_744};
  _753 = VIEW_CONVERT_EXPR<__m128i>(_752);

  <bb 17> :
<L17>:
  _754 = _753;
  _755 = _754;

  <bb 18> :
<L18>:
  _2544 = _755;
  rot3_1_256 = _2544;
  __A_719 = 512;
  __q3_720 = __A_719;
  __q2_721 = __A_719;
  __q1_722 = __A_719;
  __q0_723 = __A_719;
  _724 = {__q0_723, __q1_722, __q2_721, __q3_720};
  _725 = VIEW_CONVERT_EXPR<__m128i>(_724);

  <bb 19> :
<L15>:
  _726 = _725;
  _727 = _726;

  <bb 20> :
<L16>:
  _2545 = _727;
  bias_0_257 = _2545;
  __A_710 = 16842752;
  __q3_711 = __A_710;
  __q2_712 = __A_710;
  __q1_713 = __A_710;
  __q0_714 = __A_710;
  _715 = {__q0_714, __q1_713, __q2_712, __q3_711};
  _716 = VIEW_CONVERT_EXPR<__m128i>(_715);

  <bb 21> :
<L13>:
  _717 = _716;
  _718 = _717;

  <bb 22> :
<L14>:
  _2546 = _718;
  bias_1_258 = _2546;
  __P_708 = data_259(D);
  _709 = *__P_708;

  <bb 23> :
<L12>:
  _2547 = _709;
  row0_260 = _2547;
  _1 = data_259(D) + 16;
  __P_706 = _1;
  _707 = *__P_706;

  <bb 24> :
<L11>:
  _2548 = _707;
  _2 = _2548;
  row1 = _2;
  _3 = data_259(D) + 32;
  __P_704 = _3;
  _705 = *__P_704;

  <bb 25> :
<L10>:
  _2549 = _705;
  _4 = _2549;
  row2 = _4;
  _5 = data_259(D) + 48;
  __P_702 = _5;
  _703 = *__P_702;

  <bb 26> :
<L9>:
  _2550 = _703;
  _6 = _2550;
  row3 = _6;
  _7 = data_259(D) + 64;
  __P_700 = _7;
  _701 = *__P_700;

  <bb 27> :
<L8>:
  _2551 = _701;
  row4_264 = _2551;
  _8 = data_259(D) + 80;
  __P_698 = _8;
  _699 = *__P_698;

  <bb 28> :
<L7>:
  _2552 = _699;
  _9 = _2552;
  row5 = _9;
  _10 = data_259(D) + 96;
  __P_696 = _10;
  _697 = *__P_696;

  <bb 29> :
<L6>:
  _2553 = _697;
  _11 = _2553;
  row6 = _11;
  _12 = data_259(D) + 112;
  __P_694 = _12;
  _695 = *__P_694;

  <bb 30> :
<L5>:
  _2554 = _695;
  _13 = _2554;
  row7 = _13;
  row6.122_14 = row6;
  row2.123_15 = row2;
  __A_687 = row2.123_15;
  __B_688 = row6.122_14;
  _689 = VIEW_CONVERT_EXPR<__v8hi>(__B_688);
  _690 = VIEW_CONVERT_EXPR<__v8hi>(__A_687);
  _691 = __builtin_ia32_punpcklwd128 (_690, _689);

  <bb 31> :
  _692 = _691;
  _693 = VIEW_CONVERT_EXPR<__m128i>(_692);

  <bb 32> :
<L4>:
  _2555 = _693;
  _268 = _2555;
  rot0_0lo_269 = _268;
  row6.124_16 = row6;
  row2.125_17 = row2;
  __A_952 = row2.125_17;
  __B_953 = row6.124_16;
  _954 = VIEW_CONVERT_EXPR<__v8hi>(__B_953);
  _955 = VIEW_CONVERT_EXPR<__v8hi>(__A_952);
  _956 = __builtin_ia32_punpckhwd128 (_955, _954);

  <bb 33> :
  _957 = _956;
  _958 = VIEW_CONVERT_EXPR<__m128i>(_957);

  <bb 34> :
<L33>:
  _2556 = _958;
  _270 = _2556;
  rot0_0hi_271 = _270;
  __A_959 = rot0_0lo_269;
  __B_960 = rot0_0_249;
  _961 = VIEW_CONVERT_EXPR<__v8hi>(__B_960);
  _962 = VIEW_CONVERT_EXPR<__v8hi>(__A_959);
  _963 = __builtin_ia32_pmaddwd128 (_962, _961);

  <bb 35> :
  _964 = _963;
  _965 = VIEW_CONVERT_EXPR<__m128i>(_964);

  <bb 36> :
<L34>:
  _2557 = _965;
  _272 = _2557;
  t2e_l_273 = _272;
  __A_966 = rot0_0hi_271;
  __B_967 = rot0_0_249;
  _968 = VIEW_CONVERT_EXPR<__v8hi>(__B_967);
  _969 = VIEW_CONVERT_EXPR<__v8hi>(__A_966);
  _970 = __builtin_ia32_pmaddwd128 (_969, _968);

  <bb 37> :
  _971 = _970;
  _972 = VIEW_CONVERT_EXPR<__m128i>(_971);

  <bb 38> :
<L35>:
  _2558 = _972;
  _274 = _2558;
  t2e_h_275 = _274;
  __A_973 = rot0_0lo_269;
  __B_974 = rot0_1_250;
  _975 = VIEW_CONVERT_EXPR<__v8hi>(__B_974);
  _976 = VIEW_CONVERT_EXPR<__v8hi>(__A_973);
  _977 = __builtin_ia32_pmaddwd128 (_976, _975);

  <bb 39> :
  _978 = _977;
  _979 = VIEW_CONVERT_EXPR<__m128i>(_978);

  <bb 40> :
<L36>:
  _2559 = _979;
  _276 = _2559;
  t3e_l_277 = _276;
  __A_980 = rot0_0hi_271;
  __B_981 = rot0_1_250;
  _982 = VIEW_CONVERT_EXPR<__v8hi>(__B_981);
  _983 = VIEW_CONVERT_EXPR<__v8hi>(__A_980);
  _984 = __builtin_ia32_pmaddwd128 (_983, _982);

  <bb 41> :
  _985 = _984;
  _986 = VIEW_CONVERT_EXPR<__m128i>(_985);

  <bb 42> :
<L37>:
  _2560 = _986;
  _278 = _2560;
  t3e_h_279 = _278;
  __A_1001 = row0_260;
  __B_1002 = row4_264;
  _1003 = VIEW_CONVERT_EXPR<__v8hu>(__A_1001);
  _1004 = VIEW_CONVERT_EXPR<__v8hu>(__B_1002);
  _1005 = _1003 + _1004;
  _1006 = VIEW_CONVERT_EXPR<__m128i>(_1005);

  <bb 43> :
<L41>:
  _2561 = _1006;
  _18 = _2561;
  sum04 = _18;
  __A_995 = row0_260;
  __B_996 = row4_264;
  _997 = VIEW_CONVERT_EXPR<__v8hu>(__A_995);
  _998 = VIEW_CONVERT_EXPR<__v8hu>(__B_996);
  _999 = _997 - _998;
  _1000 = VIEW_CONVERT_EXPR<__m128i>(_999);

  <bb 44> :
<L40>:
  _2562 = _1000;
  _19 = _2562;
  dif04 = _19;
  sum04.126_20 = sum04;
  _994 = { 0, 0 };

  <bb 45> :
<L39>:
  _2563 = _994;
  _21 = _2563;
  __A_987 = _21;
  __B_988 = sum04.126_20;
  _989 = VIEW_CONVERT_EXPR<__v8hi>(__B_988);
  _990 = VIEW_CONVERT_EXPR<__v8hi>(__A_987);
  _991 = __builtin_ia32_punpcklwd128 (_990, _989);

  <bb 46> :
  _992 = _991;
  _993 = VIEW_CONVERT_EXPR<__m128i>(_992);

  <bb 47> :
<L38>:
  _2564 = _993;
  _282 = _2564;
  _22 = _282;
  __A_1007 = _22;
  __B_1008 = 4;
  _1009 = VIEW_CONVERT_EXPR<__v4si>(__A_1007);
  _1010 = __builtin_ia32_psradi128 (_1009, __B_1008);

  <bb 48> :
  _1011 = _1010;
  _1012 = VIEW_CONVERT_EXPR<__m128i>(_1011);

  <bb 49> :
<L42>:
  _2565 = _1012;
  _283 = _2565;
  t0e_l_284 = _283;
  sum04.127_23 = sum04;
  _1020 = { 0, 0 };

  <bb 50> :
<L44>:
  _2566 = _1020;
  _24 = _2566;
  __A_1013 = _24;
  __B_1014 = sum04.127_23;
  _1015 = VIEW_CONVERT_EXPR<__v8hi>(__B_1014);
  _1016 = VIEW_CONVERT_EXPR<__v8hi>(__A_1013);
  _1017 = __builtin_ia32_punpckhwd128 (_1016, _1015);

  <bb 51> :
  _1018 = _1017;
  _1019 = VIEW_CONVERT_EXPR<__m128i>(_1018);

  <bb 52> :
<L43>:
  _2567 = _1019;
  _285 = _2567;
  _25 = _285;
  __A_1021 = _25;
  __B_1022 = 4;
  _1023 = VIEW_CONVERT_EXPR<__v4si>(__A_1021);
  _1024 = __builtin_ia32_psradi128 (_1023, __B_1022);

  <bb 53> :
  _1025 = _1024;
  _1026 = VIEW_CONVERT_EXPR<__m128i>(_1025);

  <bb 54> :
<L45>:
  _2568 = _1026;
  _286 = _2568;
  t0e_h_287 = _286;
  dif04.128_26 = dif04;
  _1034 = { 0, 0 };

  <bb 55> :
<L47>:
  _2569 = _1034;
  _27 = _2569;
  __A_1027 = _27;
  __B_1028 = dif04.128_26;
  _1029 = VIEW_CONVERT_EXPR<__v8hi>(__B_1028);
  _1030 = VIEW_CONVERT_EXPR<__v8hi>(__A_1027);
  _1031 = __builtin_ia32_punpcklwd128 (_1030, _1029);

  <bb 56> :
  _1032 = _1031;
  _1033 = VIEW_CONVERT_EXPR<__m128i>(_1032);

  <bb 57> :
<L46>:
  _2570 = _1033;
  _288 = _2570;
  _28 = _288;
  __A_1035 = _28;
  __B_1036 = 4;
  _1037 = VIEW_CONVERT_EXPR<__v4si>(__A_1035);
  _1038 = __builtin_ia32_psradi128 (_1037, __B_1036);

  <bb 58> :
  _1039 = _1038;
  _1040 = VIEW_CONVERT_EXPR<__m128i>(_1039);

  <bb 59> :
<L48>:
  _2571 = _1040;
  _289 = _2571;
  t1e_l_290 = _289;
  dif04.129_29 = dif04;
  _1048 = { 0, 0 };

  <bb 60> :
<L50>:
  _2572 = _1048;
  _30 = _2572;
  __A_1041 = _30;
  __B_1042 = dif04.129_29;
  _1043 = VIEW_CONVERT_EXPR<__v8hi>(__B_1042);
  _1044 = VIEW_CONVERT_EXPR<__v8hi>(__A_1041);
  _1045 = __builtin_ia32_punpckhwd128 (_1044, _1043);

  <bb 61> :
  _1046 = _1045;
  _1047 = VIEW_CONVERT_EXPR<__m128i>(_1046);

  <bb 62> :
<L49>:
  _2573 = _1047;
  _291 = _2573;
  _31 = _291;
  __A_1049 = _31;
  __B_1050 = 4;
  _1051 = VIEW_CONVERT_EXPR<__v4si>(__A_1049);
  _1052 = __builtin_ia32_psradi128 (_1051, __B_1050);

  <bb 63> :
  _1053 = _1052;
  _1054 = VIEW_CONVERT_EXPR<__m128i>(_1053);

  <bb 64> :
<L51>:
  _2574 = _1054;
  _292 = _2574;
  t1e_h_293 = _292;
  __A_1104 = t0e_l_284;
  __B_1105 = t3e_l_277;
  _1106 = VIEW_CONVERT_EXPR<__v4su>(__A_1104);
  _1107 = VIEW_CONVERT_EXPR<__v4su>(__B_1105);
  _1108 = _1106 + _1107;
  _1109 = VIEW_CONVERT_EXPR<__m128i>(_1108);

  <bb 65> :
<L60>:
  _2575 = _1109;
  x0_l_294 = _2575;
  __A_1098 = t0e_h_287;
  __B_1099 = t3e_h_279;
  _1100 = VIEW_CONVERT_EXPR<__v4su>(__A_1098);
  _1101 = VIEW_CONVERT_EXPR<__v4su>(__B_1099);
  _1102 = _1100 + _1101;
  _1103 = VIEW_CONVERT_EXPR<__m128i>(_1102);

  <bb 66> :
<L59>:
  _2576 = _1103;
  x0_h_295 = _2576;
  __A_1092 = t0e_l_284;
  __B_1093 = t3e_l_277;
  _1094 = VIEW_CONVERT_EXPR<__v4su>(__A_1092);
  _1095 = VIEW_CONVERT_EXPR<__v4su>(__B_1093);
  _1096 = _1094 - _1095;
  _1097 = VIEW_CONVERT_EXPR<__m128i>(_1096);

  <bb 67> :
<L58>:
  _2577 = _1097;
  x3_l_296 = _2577;
  __A_1086 = t0e_h_287;
  __B_1087 = t3e_h_279;
  _1088 = VIEW_CONVERT_EXPR<__v4su>(__A_1086);
  _1089 = VIEW_CONVERT_EXPR<__v4su>(__B_1087);
  _1090 = _1088 - _1089;
  _1091 = VIEW_CONVERT_EXPR<__m128i>(_1090);

  <bb 68> :
<L57>:
  _2578 = _1091;
  x3_h_297 = _2578;
  __A_1080 = t1e_l_290;
  __B_1081 = t2e_l_273;
  _1082 = VIEW_CONVERT_EXPR<__v4su>(__A_1080);
  _1083 = VIEW_CONVERT_EXPR<__v4su>(__B_1081);
  _1084 = _1082 + _1083;
  _1085 = VIEW_CONVERT_EXPR<__m128i>(_1084);

  <bb 69> :
<L56>:
  _2579 = _1085;
  x1_l_298 = _2579;
  __A_1074 = t1e_h_293;
  __B_1075 = t2e_h_275;
  _1076 = VIEW_CONVERT_EXPR<__v4su>(__A_1074);
  _1077 = VIEW_CONVERT_EXPR<__v4su>(__B_1075);
  _1078 = _1076 + _1077;
  _1079 = VIEW_CONVERT_EXPR<__m128i>(_1078);

  <bb 70> :
<L55>:
  _2580 = _1079;
  x1_h_299 = _2580;
  __A_1068 = t1e_l_290;
  __B_1069 = t2e_l_273;
  _1070 = VIEW_CONVERT_EXPR<__v4su>(__A_1068);
  _1071 = VIEW_CONVERT_EXPR<__v4su>(__B_1069);
  _1072 = _1070 - _1071;
  _1073 = VIEW_CONVERT_EXPR<__m128i>(_1072);

  <bb 71> :
<L54>:
  _2581 = _1073;
  x2_l_300 = _2581;
  __A_1062 = t1e_h_293;
  __B_1063 = t2e_h_275;
  _1064 = VIEW_CONVERT_EXPR<__v4su>(__A_1062);
  _1065 = VIEW_CONVERT_EXPR<__v4su>(__B_1063);
  _1066 = _1064 - _1065;
  _1067 = VIEW_CONVERT_EXPR<__m128i>(_1066);

  <bb 72> :
<L53>:
  _2582 = _1067;
  x2_h_301 = _2582;
  row3.130_32 = row3;
  row7.131_33 = row7;
  __A_1055 = row7.131_33;
  __B_1056 = row3.130_32;
  _1057 = VIEW_CONVERT_EXPR<__v8hi>(__B_1056);
  _1058 = VIEW_CONVERT_EXPR<__v8hi>(__A_1055);
  _1059 = __builtin_ia32_punpcklwd128 (_1058, _1057);

  <bb 73> :
  _1060 = _1059;
  _1061 = VIEW_CONVERT_EXPR<__m128i>(_1060);

  <bb 74> :
<L52>:
  _2583 = _1061;
  _302 = _2583;
  rot2_0lo_303 = _302;
  row3.132_34 = row3;
  row7.133_35 = row7;
  __A_1110 = row7.133_35;
  __B_1111 = row3.132_34;
  _1112 = VIEW_CONVERT_EXPR<__v8hi>(__B_1111);
  _1113 = VIEW_CONVERT_EXPR<__v8hi>(__A_1110);
  _1114 = __builtin_ia32_punpckhwd128 (_1113, _1112);

  <bb 75> :
  _1115 = _1114;
  _1116 = VIEW_CONVERT_EXPR<__m128i>(_1115);

  <bb 76> :
<L61>:
  _2584 = _1116;
  _304 = _2584;
  rot2_0hi_305 = _304;
  __A_1117 = rot2_0lo_303;
  __B_1118 = rot2_0_253;
  _1119 = VIEW_CONVERT_EXPR<__v8hi>(__B_1118);
  _1120 = VIEW_CONVERT_EXPR<__v8hi>(__A_1117);
  _1121 = __builtin_ia32_pmaddwd128 (_1120, _1119);

  <bb 77> :
  _1122 = _1121;
  _1123 = VIEW_CONVERT_EXPR<__m128i>(_1122);

  <bb 78> :
<L62>:
  _2585 = _1123;
  _306 = _2585;
  y0o_l_307 = _306;
  __A_1124 = rot2_0hi_305;
  __B_1125 = rot2_0_253;
  _1126 = VIEW_CONVERT_EXPR<__v8hi>(__B_1125);
  _1127 = VIEW_CONVERT_EXPR<__v8hi>(__A_1124);
  _1128 = __builtin_ia32_pmaddwd128 (_1127, _1126);

  <bb 79> :
  _1129 = _1128;
  _1130 = VIEW_CONVERT_EXPR<__m128i>(_1129);

  <bb 80> :
<L63>:
  _2586 = _1130;
  _308 = _2586;
  y0o_h_309 = _308;
  __A_1131 = rot2_0lo_303;
  __B_1132 = rot2_1_254;
  _1133 = VIEW_CONVERT_EXPR<__v8hi>(__B_1132);
  _1134 = VIEW_CONVERT_EXPR<__v8hi>(__A_1131);
  _1135 = __builtin_ia32_pmaddwd128 (_1134, _1133);

  <bb 81> :
  _1136 = _1135;
  _1137 = VIEW_CONVERT_EXPR<__m128i>(_1136);

  <bb 82> :
<L64>:
  _2587 = _1137;
  _310 = _2587;
  y2o_l_311 = _310;
  __A_1138 = rot2_0hi_305;
  __B_1139 = rot2_1_254;
  _1140 = VIEW_CONVERT_EXPR<__v8hi>(__B_1139);
  _1141 = VIEW_CONVERT_EXPR<__v8hi>(__A_1138);
  _1142 = __builtin_ia32_pmaddwd128 (_1141, _1140);

  <bb 83> :
  _1143 = _1142;
  _1144 = VIEW_CONVERT_EXPR<__m128i>(_1143);

  <bb 84> :
<L65>:
  _2588 = _1144;
  _312 = _2588;
  y2o_h_313 = _312;
  row1.134_36 = row1;
  row5.135_37 = row5;
  __A_1145 = row5.135_37;
  __B_1146 = row1.134_36;
  _1147 = VIEW_CONVERT_EXPR<__v8hi>(__B_1146);
  _1148 = VIEW_CONVERT_EXPR<__v8hi>(__A_1145);
  _1149 = __builtin_ia32_punpcklwd128 (_1148, _1147);

  <bb 85> :
  _1150 = _1149;
  _1151 = VIEW_CONVERT_EXPR<__m128i>(_1150);

  <bb 86> :
<L66>:
  _2589 = _1151;
  _314 = _2589;
  rot3_0lo_315 = _314;
  row1.136_38 = row1;
  row5.137_39 = row5;
  __A_1152 = row5.137_39;
  __B_1153 = row1.136_38;
  _1154 = VIEW_CONVERT_EXPR<__v8hi>(__B_1153);
  _1155 = VIEW_CONVERT_EXPR<__v8hi>(__A_1152);
  _1156 = __builtin_ia32_punpckhwd128 (_1155, _1154);

  <bb 87> :
  _1157 = _1156;
  _1158 = VIEW_CONVERT_EXPR<__m128i>(_1157);

  <bb 88> :
<L67>:
  _2590 = _1158;
  _316 = _2590;
  rot3_0hi_317 = _316;
  __A_1159 = rot3_0lo_315;
  __B_1160 = rot3_0_255;
  _1161 = VIEW_CONVERT_EXPR<__v8hi>(__B_1160);
  _1162 = VIEW_CONVERT_EXPR<__v8hi>(__A_1159);
  _1163 = __builtin_ia32_pmaddwd128 (_1162, _1161);

  <bb 89> :
  _1164 = _1163;
  _1165 = VIEW_CONVERT_EXPR<__m128i>(_1164);

  <bb 90> :
<L68>:
  _2591 = _1165;
  _318 = _2591;
  y1o_l_319 = _318;
  __A_1166 = rot3_0hi_317;
  __B_1167 = rot3_0_255;
  _1168 = VIEW_CONVERT_EXPR<__v8hi>(__B_1167);
  _1169 = VIEW_CONVERT_EXPR<__v8hi>(__A_1166);
  _1170 = __builtin_ia32_pmaddwd128 (_1169, _1168);

  <bb 91> :
  _1171 = _1170;
  _1172 = VIEW_CONVERT_EXPR<__m128i>(_1171);

  <bb 92> :
<L69>:
  _2592 = _1172;
  _320 = _2592;
  y1o_h_321 = _320;
  __A_1173 = rot3_0lo_315;
  __B_1174 = rot3_1_256;
  _1175 = VIEW_CONVERT_EXPR<__v8hi>(__B_1174);
  _1176 = VIEW_CONVERT_EXPR<__v8hi>(__A_1173);
  _1177 = __builtin_ia32_pmaddwd128 (_1176, _1175);

  <bb 93> :
  _1178 = _1177;
  _1179 = VIEW_CONVERT_EXPR<__m128i>(_1178);

  <bb 94> :
<L70>:
  _2593 = _1179;
  _322 = _2593;
  y3o_l_323 = _322;
  __A_1180 = rot3_0hi_317;
  __B_1181 = rot3_1_256;
  _1182 = VIEW_CONVERT_EXPR<__v8hi>(__B_1181);
  _1183 = VIEW_CONVERT_EXPR<__v8hi>(__A_1180);
  _1184 = __builtin_ia32_pmaddwd128 (_1183, _1182);

  <bb 95> :
  _1185 = _1184;
  _1186 = VIEW_CONVERT_EXPR<__m128i>(_1185);

  <bb 96> :
<L71>:
  _2594 = _1186;
  _324 = _2594;
  y3o_h_325 = _324;
  row7.138_40 = row7;
  row1.139_41 = row1;
  __A_1200 = row1.139_41;
  __B_1201 = row7.138_40;
  _1202 = VIEW_CONVERT_EXPR<__v8hu>(__A_1200);
  _1203 = VIEW_CONVERT_EXPR<__v8hu>(__B_1201);
  _1204 = _1202 + _1203;
  _1205 = VIEW_CONVERT_EXPR<__m128i>(_1204);

  <bb 97> :
<L74>:
  _2595 = _1205;
  _42 = _2595;
  sum17 = _42;
  row5.140_43 = row5;
  row3.141_44 = row3;
  __A_1194 = row3.141_44;
  __B_1195 = row5.140_43;
  _1196 = VIEW_CONVERT_EXPR<__v8hu>(__A_1194);
  _1197 = VIEW_CONVERT_EXPR<__v8hu>(__B_1195);
  _1198 = _1196 + _1197;
  _1199 = VIEW_CONVERT_EXPR<__m128i>(_1198);

  <bb 98> :
<L73>:
  _2596 = _1199;
  _45 = _2596;
  sum35 = _45;
  sum35.142_46 = sum35;
  sum17.143_47 = sum17;
  __A_1187 = sum17.143_47;
  __B_1188 = sum35.142_46;
  _1189 = VIEW_CONVERT_EXPR<__v8hi>(__B_1188);
  _1190 = VIEW_CONVERT_EXPR<__v8hi>(__A_1187);
  _1191 = __builtin_ia32_punpcklwd128 (_1190, _1189);

  <bb 99> :
  _1192 = _1191;
  _1193 = VIEW_CONVERT_EXPR<__m128i>(_1192);

  <bb 100> :
<L72>:
  _2597 = _1193;
  _328 = _2597;
  rot1_0lo_329 = _328;
  sum35.144_48 = sum35;
  sum17.145_49 = sum17;
  __A_1206 = sum17.145_49;
  __B_1207 = sum35.144_48;
  _1208 = VIEW_CONVERT_EXPR<__v8hi>(__B_1207);
  _1209 = VIEW_CONVERT_EXPR<__v8hi>(__A_1206);
  _1210 = __builtin_ia32_punpckhwd128 (_1209, _1208);

  <bb 101> :
  _1211 = _1210;
  _1212 = VIEW_CONVERT_EXPR<__m128i>(_1211);

  <bb 102> :
<L75>:
  _2598 = _1212;
  _330 = _2598;
  rot1_0hi_331 = _330;
  __A_1213 = rot1_0lo_329;
  __B_1214 = rot1_0_251;
  _1215 = VIEW_CONVERT_EXPR<__v8hi>(__B_1214);
  _1216 = VIEW_CONVERT_EXPR<__v8hi>(__A_1213);
  _1217 = __builtin_ia32_pmaddwd128 (_1216, _1215);

  <bb 103> :
  _1218 = _1217;
  _1219 = VIEW_CONVERT_EXPR<__m128i>(_1218);

  <bb 104> :
<L76>:
  _2599 = _1219;
  _332 = _2599;
  y4o_l_333 = _332;
  __A_1220 = rot1_0hi_331;
  __B_1221 = rot1_0_251;
  _1222 = VIEW_CONVERT_EXPR<__v8hi>(__B_1221);
  _1223 = VIEW_CONVERT_EXPR<__v8hi>(__A_1220);
  _1224 = __builtin_ia32_pmaddwd128 (_1223, _1222);

  <bb 105> :
  _1225 = _1224;
  _1226 = VIEW_CONVERT_EXPR<__m128i>(_1225);

  <bb 106> :
<L77>:
  _2600 = _1226;
  _334 = _2600;
  y4o_h_335 = _334;
  __A_1227 = rot1_0lo_329;
  __B_1228 = rot1_1_252;
  _1229 = VIEW_CONVERT_EXPR<__v8hi>(__B_1228);
  _1230 = VIEW_CONVERT_EXPR<__v8hi>(__A_1227);
  _1231 = __builtin_ia32_pmaddwd128 (_1230, _1229);

  <bb 107> :
  _1232 = _1231;
  _1233 = VIEW_CONVERT_EXPR<__m128i>(_1232);

  <bb 108> :
<L78>:
  _2601 = _1233;
  _336 = _2601;
  y5o_l_337 = _336;
  __A_1234 = rot1_0hi_331;
  __B_1235 = rot1_1_252;
  _1236 = VIEW_CONVERT_EXPR<__v8hi>(__B_1235);
  _1237 = VIEW_CONVERT_EXPR<__v8hi>(__A_1234);
  _1238 = __builtin_ia32_pmaddwd128 (_1237, _1236);

  <bb 109> :
  _1239 = _1238;
  _1240 = VIEW_CONVERT_EXPR<__m128i>(_1239);

  <bb 110> :
<L79>:
  _2602 = _1240;
  _338 = _2602;
  y5o_h_339 = _338;
  __A_1325 = y0o_l_307;
  __B_1326 = y4o_l_333;
  _1327 = VIEW_CONVERT_EXPR<__v4su>(__A_1325);
  _1328 = VIEW_CONVERT_EXPR<__v4su>(__B_1326);
  _1329 = _1327 + _1328;
  _1330 = VIEW_CONVERT_EXPR<__m128i>(_1329);

  <bb 111> :
<L94>:
  _2603 = _1330;
  x4_l_340 = _2603;
  __A_1319 = y0o_h_309;
  __B_1320 = y4o_h_335;
  _1321 = VIEW_CONVERT_EXPR<__v4su>(__A_1319);
  _1322 = VIEW_CONVERT_EXPR<__v4su>(__B_1320);
  _1323 = _1321 + _1322;
  _1324 = VIEW_CONVERT_EXPR<__m128i>(_1323);

  <bb 112> :
<L93>:
  _2604 = _1324;
  x4_h_341 = _2604;
  __A_1313 = y1o_l_319;
  __B_1314 = y5o_l_337;
  _1315 = VIEW_CONVERT_EXPR<__v4su>(__A_1313);
  _1316 = VIEW_CONVERT_EXPR<__v4su>(__B_1314);
  _1317 = _1315 + _1316;
  _1318 = VIEW_CONVERT_EXPR<__m128i>(_1317);

  <bb 113> :
<L92>:
  _2605 = _1318;
  x5_l_342 = _2605;
  __A_1307 = y1o_h_321;
  __B_1308 = y5o_h_339;
  _1309 = VIEW_CONVERT_EXPR<__v4su>(__A_1307);
  _1310 = VIEW_CONVERT_EXPR<__v4su>(__B_1308);
  _1311 = _1309 + _1310;
  _1312 = VIEW_CONVERT_EXPR<__m128i>(_1311);

  <bb 114> :
<L91>:
  _2606 = _1312;
  x5_h_343 = _2606;
  __A_1301 = y2o_l_311;
  __B_1302 = y5o_l_337;
  _1303 = VIEW_CONVERT_EXPR<__v4su>(__A_1301);
  _1304 = VIEW_CONVERT_EXPR<__v4su>(__B_1302);
  _1305 = _1303 + _1304;
  _1306 = VIEW_CONVERT_EXPR<__m128i>(_1305);

  <bb 115> :
<L90>:
  _2607 = _1306;
  x6_l_344 = _2607;
  __A_1295 = y2o_h_313;
  __B_1296 = y5o_h_339;
  _1297 = VIEW_CONVERT_EXPR<__v4su>(__A_1295);
  _1298 = VIEW_CONVERT_EXPR<__v4su>(__B_1296);
  _1299 = _1297 + _1298;
  _1300 = VIEW_CONVERT_EXPR<__m128i>(_1299);

  <bb 116> :
<L89>:
  _2608 = _1300;
  x6_h_345 = _2608;
  __A_1289 = y3o_l_323;
  __B_1290 = y4o_l_333;
  _1291 = VIEW_CONVERT_EXPR<__v4su>(__A_1289);
  _1292 = VIEW_CONVERT_EXPR<__v4su>(__B_1290);
  _1293 = _1291 + _1292;
  _1294 = VIEW_CONVERT_EXPR<__m128i>(_1293);

  <bb 117> :
<L88>:
  _2609 = _1294;
  x7_l_346 = _2609;
  __A_1283 = y3o_h_325;
  __B_1284 = y4o_h_335;
  _1285 = VIEW_CONVERT_EXPR<__v4su>(__A_1283);
  _1286 = VIEW_CONVERT_EXPR<__v4su>(__B_1284);
  _1287 = _1285 + _1286;
  _1288 = VIEW_CONVERT_EXPR<__m128i>(_1287);

  <bb 118> :
<L87>:
  _2610 = _1288;
  x7_h_347 = _2610;
  __A_1277 = x0_l_294;
  __B_1278 = bias_0_257;
  _1279 = VIEW_CONVERT_EXPR<__v4su>(__A_1277);
  _1280 = VIEW_CONVERT_EXPR<__v4su>(__B_1278);
  _1281 = _1279 + _1280;
  _1282 = VIEW_CONVERT_EXPR<__m128i>(_1281);

  <bb 119> :
<L86>:
  _2611 = _1282;
  abiased_l_348 = _2611;
  __A_1271 = x0_h_295;
  __B_1272 = bias_0_257;
  _1273 = VIEW_CONVERT_EXPR<__v4su>(__A_1271);
  _1274 = VIEW_CONVERT_EXPR<__v4su>(__B_1272);
  _1275 = _1273 + _1274;
  _1276 = VIEW_CONVERT_EXPR<__m128i>(_1275);

  <bb 120> :
<L85>:
  _2612 = _1276;
  abiased_h_349 = _2612;
  __A_1265 = abiased_l_348;
  __B_1266 = x7_l_346;
  _1267 = VIEW_CONVERT_EXPR<__v4su>(__A_1265);
  _1268 = VIEW_CONVERT_EXPR<__v4su>(__B_1266);
  _1269 = _1267 + _1268;
  _1270 = VIEW_CONVERT_EXPR<__m128i>(_1269);

  <bb 121> :
<L84>:
  _2613 = _1270;
  sum_l_350 = _2613;
  __A_1259 = abiased_h_349;
  __B_1260 = x7_h_347;
  _1261 = VIEW_CONVERT_EXPR<__v4su>(__A_1259);
  _1262 = VIEW_CONVERT_EXPR<__v4su>(__B_1260);
  _1263 = _1261 + _1262;
  _1264 = VIEW_CONVERT_EXPR<__m128i>(_1263);

  <bb 122> :
<L83>:
  _2614 = _1264;
  sum_h_351 = _2614;
  __A_1253 = abiased_l_348;
  __B_1254 = x7_l_346;
  _1255 = VIEW_CONVERT_EXPR<__v4su>(__A_1253);
  _1256 = VIEW_CONVERT_EXPR<__v4su>(__B_1254);
  _1257 = _1255 - _1256;
  _1258 = VIEW_CONVERT_EXPR<__m128i>(_1257);

  <bb 123> :
<L82>:
  _2615 = _1258;
  dif_l_352 = _2615;
  __A_1247 = abiased_h_349;
  __B_1248 = x7_h_347;
  _1249 = VIEW_CONVERT_EXPR<__v4su>(__A_1247);
  _1250 = VIEW_CONVERT_EXPR<__v4su>(__B_1248);
  _1251 = _1249 - _1250;
  _1252 = VIEW_CONVERT_EXPR<__m128i>(_1251);

  <bb 124> :
<L81>:
  _2616 = _1252;
  dif_h_353 = _2616;
  __A_1241 = sum_h_351;
  __B_1242 = 10;
  _1243 = VIEW_CONVERT_EXPR<__v4si>(__A_1241);
  _1244 = __builtin_ia32_psradi128 (_1243, __B_1242);

  <bb 125> :
  _1245 = _1244;
  _1246 = VIEW_CONVERT_EXPR<__m128i>(_1245);

  <bb 126> :
<L80>:
  _2617 = _1246;
  _354 = _2617;
  _50 = _354;
  __A_1331 = sum_l_350;
  __B_1332 = 10;
  _1333 = VIEW_CONVERT_EXPR<__v4si>(__A_1331);
  _1334 = __builtin_ia32_psradi128 (_1333, __B_1332);

  <bb 127> :
  _1335 = _1334;
  _1336 = VIEW_CONVERT_EXPR<__m128i>(_1335);

  <bb 128> :
<L95>:
  _2618 = _1336;
  _355 = _2618;
  _51 = _355;
  __A_1337 = _51;
  __B_1338 = _50;
  _1339 = VIEW_CONVERT_EXPR<__v4si>(__B_1338);
  _1340 = VIEW_CONVERT_EXPR<__v4si>(__A_1337);
  _1341 = __builtin_ia32_packssdw128 (_1340, _1339);

  <bb 129> :
  _1342 = _1341;
  _1343 = VIEW_CONVERT_EXPR<__m128i>(_1342);

  <bb 130> :
<L96>:
  _2619 = _1343;
  _356 = _2619;
  row0_357 = _356;
  __A_1344 = dif_h_353;
  __B_1345 = 10;
  _1346 = VIEW_CONVERT_EXPR<__v4si>(__A_1344);
  _1347 = __builtin_ia32_psradi128 (_1346, __B_1345);

  <bb 131> :
  _1348 = _1347;
  _1349 = VIEW_CONVERT_EXPR<__m128i>(_1348);

  <bb 132> :
<L97>:
  _2620 = _1349;
  _358 = _2620;
  _52 = _358;
  __A_1350 = dif_l_352;
  __B_1351 = 10;
  _1352 = VIEW_CONVERT_EXPR<__v4si>(__A_1350);
  _1353 = __builtin_ia32_psradi128 (_1352, __B_1351);

  <bb 133> :
  _1354 = _1353;
  _1355 = VIEW_CONVERT_EXPR<__m128i>(_1354);

  <bb 134> :
<L98>:
  _2621 = _1355;
  _359 = _2621;
  _53 = _359;
  __A_1356 = _53;
  __B_1357 = _52;
  _1358 = VIEW_CONVERT_EXPR<__v4si>(__B_1357);
  _1359 = VIEW_CONVERT_EXPR<__v4si>(__A_1356);
  _1360 = __builtin_ia32_packssdw128 (_1359, _1358);

  <bb 135> :
  _1361 = _1360;
  _1362 = VIEW_CONVERT_EXPR<__m128i>(_1361);

  <bb 136> :
<L99>:
  _2622 = _1362;
  _360 = _2622;
  _54 = _360;
  row7 = _54;
  __A_1399 = x1_l_298;
  __B_1400 = bias_0_257;
  _1401 = VIEW_CONVERT_EXPR<__v4su>(__A_1399);
  _1402 = VIEW_CONVERT_EXPR<__v4su>(__B_1400);
  _1403 = _1401 + _1402;
  _1404 = VIEW_CONVERT_EXPR<__m128i>(_1403);

  <bb 137> :
<L106>:
  _2623 = _1404;
  abiased_l_362 = _2623;
  __A_1393 = x1_h_299;
  __B_1394 = bias_0_257;
  _1395 = VIEW_CONVERT_EXPR<__v4su>(__A_1393);
  _1396 = VIEW_CONVERT_EXPR<__v4su>(__B_1394);
  _1397 = _1395 + _1396;
  _1398 = VIEW_CONVERT_EXPR<__m128i>(_1397);

  <bb 138> :
<L105>:
  _2624 = _1398;
  abiased_h_363 = _2624;
  __A_1387 = abiased_l_362;
  __B_1388 = x6_l_344;
  _1389 = VIEW_CONVERT_EXPR<__v4su>(__A_1387);
  _1390 = VIEW_CONVERT_EXPR<__v4su>(__B_1388);
  _1391 = _1389 + _1390;
  _1392 = VIEW_CONVERT_EXPR<__m128i>(_1391);

  <bb 139> :
<L104>:
  _2625 = _1392;
  sum_l_364 = _2625;
  __A_1381 = abiased_h_363;
  __B_1382 = x6_h_345;
  _1383 = VIEW_CONVERT_EXPR<__v4su>(__A_1381);
  _1384 = VIEW_CONVERT_EXPR<__v4su>(__B_1382);
  _1385 = _1383 + _1384;
  _1386 = VIEW_CONVERT_EXPR<__m128i>(_1385);

  <bb 140> :
<L103>:
  _2626 = _1386;
  sum_h_365 = _2626;
  __A_1375 = abiased_l_362;
  __B_1376 = x6_l_344;
  _1377 = VIEW_CONVERT_EXPR<__v4su>(__A_1375);
  _1378 = VIEW_CONVERT_EXPR<__v4su>(__B_1376);
  _1379 = _1377 - _1378;
  _1380 = VIEW_CONVERT_EXPR<__m128i>(_1379);

  <bb 141> :
<L102>:
  _2627 = _1380;
  dif_l_366 = _2627;
  __A_1369 = abiased_h_363;
  __B_1370 = x6_h_345;
  _1371 = VIEW_CONVERT_EXPR<__v4su>(__A_1369);
  _1372 = VIEW_CONVERT_EXPR<__v4su>(__B_1370);
  _1373 = _1371 - _1372;
  _1374 = VIEW_CONVERT_EXPR<__m128i>(_1373);

  <bb 142> :
<L101>:
  _2628 = _1374;
  dif_h_367 = _2628;
  __A_1363 = sum_h_365;
  __B_1364 = 10;
  _1365 = VIEW_CONVERT_EXPR<__v4si>(__A_1363);
  _1366 = __builtin_ia32_psradi128 (_1365, __B_1364);

  <bb 143> :
  _1367 = _1366;
  _1368 = VIEW_CONVERT_EXPR<__m128i>(_1367);

  <bb 144> :
<L100>:
  _2629 = _1368;
  _368 = _2629;
  _55 = _368;
  __A_1405 = sum_l_364;
  __B_1406 = 10;
  _1407 = VIEW_CONVERT_EXPR<__v4si>(__A_1405);
  _1408 = __builtin_ia32_psradi128 (_1407, __B_1406);

  <bb 145> :
  _1409 = _1408;
  _1410 = VIEW_CONVERT_EXPR<__m128i>(_1409);

  <bb 146> :
<L107>:
  _2630 = _1410;
  _369 = _2630;
  _56 = _369;
  __A_1411 = _56;
  __B_1412 = _55;
  _1413 = VIEW_CONVERT_EXPR<__v4si>(__B_1412);
  _1414 = VIEW_CONVERT_EXPR<__v4si>(__A_1411);
  _1415 = __builtin_ia32_packssdw128 (_1414, _1413);

  <bb 147> :
  _1416 = _1415;
  _1417 = VIEW_CONVERT_EXPR<__m128i>(_1416);

  <bb 148> :
<L108>:
  _2631 = _1417;
  _370 = _2631;
  _57 = _370;
  row1 = _57;
  __A_1418 = dif_h_367;
  __B_1419 = 10;
  _1420 = VIEW_CONVERT_EXPR<__v4si>(__A_1418);
  _1421 = __builtin_ia32_psradi128 (_1420, __B_1419);

  <bb 149> :
  _1422 = _1421;
  _1423 = VIEW_CONVERT_EXPR<__m128i>(_1422);

  <bb 150> :
<L109>:
  _2632 = _1423;
  _372 = _2632;
  _58 = _372;
  __A_1424 = dif_l_366;
  __B_1425 = 10;
  _1426 = VIEW_CONVERT_EXPR<__v4si>(__A_1424);
  _1427 = __builtin_ia32_psradi128 (_1426, __B_1425);

  <bb 151> :
  _1428 = _1427;
  _1429 = VIEW_CONVERT_EXPR<__m128i>(_1428);

  <bb 152> :
<L110>:
  _2633 = _1429;
  _373 = _2633;
  _59 = _373;
  __A_1430 = _59;
  __B_1431 = _58;
  _1432 = VIEW_CONVERT_EXPR<__v4si>(__B_1431);
  _1433 = VIEW_CONVERT_EXPR<__v4si>(__A_1430);
  _1434 = __builtin_ia32_packssdw128 (_1433, _1432);

  <bb 153> :
  _1435 = _1434;
  _1436 = VIEW_CONVERT_EXPR<__m128i>(_1435);

  <bb 154> :
<L111>:
  _2634 = _1436;
  _374 = _2634;
  _60 = _374;
  row6 = _60;
  __A_1473 = x2_l_300;
  __B_1474 = bias_0_257;
  _1475 = VIEW_CONVERT_EXPR<__v4su>(__A_1473);
  _1476 = VIEW_CONVERT_EXPR<__v4su>(__B_1474);
  _1477 = _1475 + _1476;
  _1478 = VIEW_CONVERT_EXPR<__m128i>(_1477);

  <bb 155> :
<L118>:
  _2635 = _1478;
  abiased_l_376 = _2635;
  __A_1467 = x2_h_301;
  __B_1468 = bias_0_257;
  _1469 = VIEW_CONVERT_EXPR<__v4su>(__A_1467);
  _1470 = VIEW_CONVERT_EXPR<__v4su>(__B_1468);
  _1471 = _1469 + _1470;
  _1472 = VIEW_CONVERT_EXPR<__m128i>(_1471);

  <bb 156> :
<L117>:
  _2636 = _1472;
  abiased_h_377 = _2636;
  __A_1461 = abiased_l_376;
  __B_1462 = x5_l_342;
  _1463 = VIEW_CONVERT_EXPR<__v4su>(__A_1461);
  _1464 = VIEW_CONVERT_EXPR<__v4su>(__B_1462);
  _1465 = _1463 + _1464;
  _1466 = VIEW_CONVERT_EXPR<__m128i>(_1465);

  <bb 157> :
<L116>:
  _2637 = _1466;
  sum_l_378 = _2637;
  __A_1455 = abiased_h_377;
  __B_1456 = x5_h_343;
  _1457 = VIEW_CONVERT_EXPR<__v4su>(__A_1455);
  _1458 = VIEW_CONVERT_EXPR<__v4su>(__B_1456);
  _1459 = _1457 + _1458;
  _1460 = VIEW_CONVERT_EXPR<__m128i>(_1459);

  <bb 158> :
<L115>:
  _2638 = _1460;
  sum_h_379 = _2638;
  __A_1449 = abiased_l_376;
  __B_1450 = x5_l_342;
  _1451 = VIEW_CONVERT_EXPR<__v4su>(__A_1449);
  _1452 = VIEW_CONVERT_EXPR<__v4su>(__B_1450);
  _1453 = _1451 - _1452;
  _1454 = VIEW_CONVERT_EXPR<__m128i>(_1453);

  <bb 159> :
<L114>:
  _2639 = _1454;
  dif_l_380 = _2639;
  __A_1443 = abiased_h_377;
  __B_1444 = x5_h_343;
  _1445 = VIEW_CONVERT_EXPR<__v4su>(__A_1443);
  _1446 = VIEW_CONVERT_EXPR<__v4su>(__B_1444);
  _1447 = _1445 - _1446;
  _1448 = VIEW_CONVERT_EXPR<__m128i>(_1447);

  <bb 160> :
<L113>:
  _2640 = _1448;
  dif_h_381 = _2640;
  __A_1437 = sum_h_379;
  __B_1438 = 10;
  _1439 = VIEW_CONVERT_EXPR<__v4si>(__A_1437);
  _1440 = __builtin_ia32_psradi128 (_1439, __B_1438);

  <bb 161> :
  _1441 = _1440;
  _1442 = VIEW_CONVERT_EXPR<__m128i>(_1441);

  <bb 162> :
<L112>:
  _2641 = _1442;
  _382 = _2641;
  _61 = _382;
  __A_1479 = sum_l_378;
  __B_1480 = 10;
  _1481 = VIEW_CONVERT_EXPR<__v4si>(__A_1479);
  _1482 = __builtin_ia32_psradi128 (_1481, __B_1480);

  <bb 163> :
  _1483 = _1482;
  _1484 = VIEW_CONVERT_EXPR<__m128i>(_1483);

  <bb 164> :
<L119>:
  _2642 = _1484;
  _383 = _2642;
  _62 = _383;
  __A_1485 = _62;
  __B_1486 = _61;
  _1487 = VIEW_CONVERT_EXPR<__v4si>(__B_1486);
  _1488 = VIEW_CONVERT_EXPR<__v4si>(__A_1485);
  _1489 = __builtin_ia32_packssdw128 (_1488, _1487);

  <bb 165> :
  _1490 = _1489;
  _1491 = VIEW_CONVERT_EXPR<__m128i>(_1490);

  <bb 166> :
<L120>:
  _2643 = _1491;
  _384 = _2643;
  _63 = _384;
  row2 = _63;
  __A_1492 = dif_h_381;
  __B_1493 = 10;
  _1494 = VIEW_CONVERT_EXPR<__v4si>(__A_1492);
  _1495 = __builtin_ia32_psradi128 (_1494, __B_1493);

  <bb 167> :
  _1496 = _1495;
  _1497 = VIEW_CONVERT_EXPR<__m128i>(_1496);

  <bb 168> :
<L121>:
  _2644 = _1497;
  _386 = _2644;
  _64 = _386;
  __A_1498 = dif_l_380;
  __B_1499 = 10;
  _1500 = VIEW_CONVERT_EXPR<__v4si>(__A_1498);
  _1501 = __builtin_ia32_psradi128 (_1500, __B_1499);

  <bb 169> :
  _1502 = _1501;
  _1503 = VIEW_CONVERT_EXPR<__m128i>(_1502);

  <bb 170> :
<L122>:
  _2645 = _1503;
  _387 = _2645;
  _65 = _387;
  __A_1504 = _65;
  __B_1505 = _64;
  _1506 = VIEW_CONVERT_EXPR<__v4si>(__B_1505);
  _1507 = VIEW_CONVERT_EXPR<__v4si>(__A_1504);
  _1508 = __builtin_ia32_packssdw128 (_1507, _1506);

  <bb 171> :
  _1509 = _1508;
  _1510 = VIEW_CONVERT_EXPR<__m128i>(_1509);

  <bb 172> :
<L123>:
  _2646 = _1510;
  _388 = _2646;
  _66 = _388;
  row5 = _66;
  __A_1547 = x3_l_296;
  __B_1548 = bias_0_257;
  _1549 = VIEW_CONVERT_EXPR<__v4su>(__A_1547);
  _1550 = VIEW_CONVERT_EXPR<__v4su>(__B_1548);
  _1551 = _1549 + _1550;
  _1552 = VIEW_CONVERT_EXPR<__m128i>(_1551);

  <bb 173> :
<L130>:
  _2647 = _1552;
  abiased_l_390 = _2647;
  __A_1541 = x3_h_297;
  __B_1542 = bias_0_257;
  _1543 = VIEW_CONVERT_EXPR<__v4su>(__A_1541);
  _1544 = VIEW_CONVERT_EXPR<__v4su>(__B_1542);
  _1545 = _1543 + _1544;
  _1546 = VIEW_CONVERT_EXPR<__m128i>(_1545);

  <bb 174> :
<L129>:
  _2648 = _1546;
  abiased_h_391 = _2648;
  __A_1535 = abiased_l_390;
  __B_1536 = x4_l_340;
  _1537 = VIEW_CONVERT_EXPR<__v4su>(__A_1535);
  _1538 = VIEW_CONVERT_EXPR<__v4su>(__B_1536);
  _1539 = _1537 + _1538;
  _1540 = VIEW_CONVERT_EXPR<__m128i>(_1539);

  <bb 175> :
<L128>:
  _2649 = _1540;
  sum_l_392 = _2649;
  __A_1529 = abiased_h_391;
  __B_1530 = x4_h_341;
  _1531 = VIEW_CONVERT_EXPR<__v4su>(__A_1529);
  _1532 = VIEW_CONVERT_EXPR<__v4su>(__B_1530);
  _1533 = _1531 + _1532;
  _1534 = VIEW_CONVERT_EXPR<__m128i>(_1533);

  <bb 176> :
<L127>:
  _2650 = _1534;
  sum_h_393 = _2650;
  __A_1523 = abiased_l_390;
  __B_1524 = x4_l_340;
  _1525 = VIEW_CONVERT_EXPR<__v4su>(__A_1523);
  _1526 = VIEW_CONVERT_EXPR<__v4su>(__B_1524);
  _1527 = _1525 - _1526;
  _1528 = VIEW_CONVERT_EXPR<__m128i>(_1527);

  <bb 177> :
<L126>:
  _2651 = _1528;
  dif_l_394 = _2651;
  __A_1517 = abiased_h_391;
  __B_1518 = x4_h_341;
  _1519 = VIEW_CONVERT_EXPR<__v4su>(__A_1517);
  _1520 = VIEW_CONVERT_EXPR<__v4su>(__B_1518);
  _1521 = _1519 - _1520;
  _1522 = VIEW_CONVERT_EXPR<__m128i>(_1521);

  <bb 178> :
<L125>:
  _2652 = _1522;
  dif_h_395 = _2652;
  __A_1511 = sum_h_393;
  __B_1512 = 10;
  _1513 = VIEW_CONVERT_EXPR<__v4si>(__A_1511);
  _1514 = __builtin_ia32_psradi128 (_1513, __B_1512);

  <bb 179> :
  _1515 = _1514;
  _1516 = VIEW_CONVERT_EXPR<__m128i>(_1515);

  <bb 180> :
<L124>:
  _2653 = _1516;
  _396 = _2653;
  _67 = _396;
  __A_1553 = sum_l_392;
  __B_1554 = 10;
  _1555 = VIEW_CONVERT_EXPR<__v4si>(__A_1553);
  _1556 = __builtin_ia32_psradi128 (_1555, __B_1554);

  <bb 181> :
  _1557 = _1556;
  _1558 = VIEW_CONVERT_EXPR<__m128i>(_1557);

  <bb 182> :
<L131>:
  _2654 = _1558;
  _397 = _2654;
  _68 = _397;
  __A_1559 = _68;
  __B_1560 = _67;
  _1561 = VIEW_CONVERT_EXPR<__v4si>(__B_1560);
  _1562 = VIEW_CONVERT_EXPR<__v4si>(__A_1559);
  _1563 = __builtin_ia32_packssdw128 (_1562, _1561);

  <bb 183> :
  _1564 = _1563;
  _1565 = VIEW_CONVERT_EXPR<__m128i>(_1564);

  <bb 184> :
<L132>:
  _2655 = _1565;
  _398 = _2655;
  _69 = _398;
  row3 = _69;
  __A_1566 = dif_h_395;
  __B_1567 = 10;
  _1568 = VIEW_CONVERT_EXPR<__v4si>(__A_1566);
  _1569 = __builtin_ia32_psradi128 (_1568, __B_1567);

  <bb 185> :
  _1570 = _1569;
  _1571 = VIEW_CONVERT_EXPR<__m128i>(_1570);

  <bb 186> :
<L133>:
  _2656 = _1571;
  _400 = _2656;
  _70 = _400;
  __A_1572 = dif_l_394;
  __B_1573 = 10;
  _1574 = VIEW_CONVERT_EXPR<__v4si>(__A_1572);
  _1575 = __builtin_ia32_psradi128 (_1574, __B_1573);

  <bb 187> :
  _1576 = _1575;
  _1577 = VIEW_CONVERT_EXPR<__m128i>(_1576);

  <bb 188> :
<L134>:
  _2657 = _1577;
  _401 = _2657;
  _71 = _401;
  __A_1578 = _71;
  __B_1579 = _70;
  _1580 = VIEW_CONVERT_EXPR<__v4si>(__B_1579);
  _1581 = VIEW_CONVERT_EXPR<__v4si>(__A_1578);
  _1582 = __builtin_ia32_packssdw128 (_1581, _1580);

  <bb 189> :
  _1583 = _1582;
  _1584 = VIEW_CONVERT_EXPR<__m128i>(_1583);

  <bb 190> :
<L135>:
  _2658 = _1584;
  _402 = _2658;
  row4_403 = _402;
  sum04 ={v} {CLOBBER};
  dif04 ={v} {CLOBBER};
  sum17 ={v} {CLOBBER};
  sum35 ={v} {CLOBBER};
  tmp_408 = row0_357;
  __A_1585 = row0_357;
  __B_1586 = row4_403;
  _1587 = VIEW_CONVERT_EXPR<__v8hi>(__B_1586);
  _1588 = VIEW_CONVERT_EXPR<__v8hi>(__A_1585);
  _1589 = __builtin_ia32_punpcklwd128 (_1588, _1587);

  <bb 191> :
  _1590 = _1589;
  _1591 = VIEW_CONVERT_EXPR<__m128i>(_1590);

  <bb 192> :
<L136>:
  _2659 = _1591;
  _409 = _2659;
  row0_410 = _409;
  __A_1592 = tmp_408;
  __B_1593 = row4_403;
  _1594 = VIEW_CONVERT_EXPR<__v8hi>(__B_1593);
  _1595 = VIEW_CONVERT_EXPR<__v8hi>(__A_1592);
  _1596 = __builtin_ia32_punpckhwd128 (_1595, _1594);

  <bb 193> :
  _1597 = _1596;
  _1598 = VIEW_CONVERT_EXPR<__m128i>(_1597);

  <bb 194> :
<L137>:
  _2660 = _1598;
  _411 = _2660;
  row4_412 = _411;
  tmp_413 = row1;
  row5.146_72 = row5;
  row1.147_73 = row1;
  __A_1599 = row1.147_73;
  __B_1600 = row5.146_72;
  _1601 = VIEW_CONVERT_EXPR<__v8hi>(__B_1600);
  _1602 = VIEW_CONVERT_EXPR<__v8hi>(__A_1599);
  _1603 = __builtin_ia32_punpcklwd128 (_1602, _1601);

  <bb 195> :
  _1604 = _1603;
  _1605 = VIEW_CONVERT_EXPR<__m128i>(_1604);

  <bb 196> :
<L138>:
  _2661 = _1605;
  _414 = _2661;
  _74 = _414;
  row1 = _74;
  row5.148_75 = row5;
  __A_1606 = tmp_413;
  __B_1607 = row5.148_75;
  _1608 = VIEW_CONVERT_EXPR<__v8hi>(__B_1607);
  _1609 = VIEW_CONVERT_EXPR<__v8hi>(__A_1606);
  _1610 = __builtin_ia32_punpckhwd128 (_1609, _1608);

  <bb 197> :
  _1611 = _1610;
  _1612 = VIEW_CONVERT_EXPR<__m128i>(_1611);

  <bb 198> :
<L139>:
  _2662 = _1612;
  _416 = _2662;
  _76 = _416;
  row5 = _76;
  tmp_418 = row2;
  row6.149_77 = row6;
  row2.150_78 = row2;
  __A_1613 = row2.150_78;
  __B_1614 = row6.149_77;
  _1615 = VIEW_CONVERT_EXPR<__v8hi>(__B_1614);
  _1616 = VIEW_CONVERT_EXPR<__v8hi>(__A_1613);
  _1617 = __builtin_ia32_punpcklwd128 (_1616, _1615);

  <bb 199> :
  _1618 = _1617;
  _1619 = VIEW_CONVERT_EXPR<__m128i>(_1618);

  <bb 200> :
<L140>:
  _2663 = _1619;
  _419 = _2663;
  _79 = _419;
  row2 = _79;
  row6.151_80 = row6;
  __A_1620 = tmp_418;
  __B_1621 = row6.151_80;
  _1622 = VIEW_CONVERT_EXPR<__v8hi>(__B_1621);
  _1623 = VIEW_CONVERT_EXPR<__v8hi>(__A_1620);
  _1624 = __builtin_ia32_punpckhwd128 (_1623, _1622);

  <bb 201> :
  _1625 = _1624;
  _1626 = VIEW_CONVERT_EXPR<__m128i>(_1625);

  <bb 202> :
<L141>:
  _2664 = _1626;
  _421 = _2664;
  _81 = _421;
  row6 = _81;
  tmp_423 = row3;
  row7.152_82 = row7;
  row3.153_83 = row3;
  __A_1627 = row3.153_83;
  __B_1628 = row7.152_82;
  _1629 = VIEW_CONVERT_EXPR<__v8hi>(__B_1628);
  _1630 = VIEW_CONVERT_EXPR<__v8hi>(__A_1627);
  _1631 = __builtin_ia32_punpcklwd128 (_1630, _1629);

  <bb 203> :
  _1632 = _1631;
  _1633 = VIEW_CONVERT_EXPR<__m128i>(_1632);

  <bb 204> :
<L142>:
  _2665 = _1633;
  _424 = _2665;
  _84 = _424;
  row3 = _84;
  row7.154_85 = row7;
  __A_1634 = tmp_423;
  __B_1635 = row7.154_85;
  _1636 = VIEW_CONVERT_EXPR<__v8hi>(__B_1635);
  _1637 = VIEW_CONVERT_EXPR<__v8hi>(__A_1634);
  _1638 = __builtin_ia32_punpckhwd128 (_1637, _1636);

  <bb 205> :
  _1639 = _1638;
  _1640 = VIEW_CONVERT_EXPR<__m128i>(_1639);

  <bb 206> :
<L143>:
  _2666 = _1640;
  _426 = _2666;
  _86 = _426;
  row7 = _86;
  tmp_428 = row0_410;
  row2.155_87 = row2;
  __A_1641 = row0_410;
  __B_1642 = row2.155_87;
  _1643 = VIEW_CONVERT_EXPR<__v8hi>(__B_1642);
  _1644 = VIEW_CONVERT_EXPR<__v8hi>(__A_1641);
  _1645 = __builtin_ia32_punpcklwd128 (_1644, _1643);

  <bb 207> :
  _1646 = _1645;
  _1647 = VIEW_CONVERT_EXPR<__m128i>(_1646);

  <bb 208> :
<L144>:
  _2667 = _1647;
  _429 = _2667;
  row0_430 = _429;
  row2.156_88 = row2;
  __A_1648 = tmp_428;
  __B_1649 = row2.156_88;
  _1650 = VIEW_CONVERT_EXPR<__v8hi>(__B_1649);
  _1651 = VIEW_CONVERT_EXPR<__v8hi>(__A_1648);
  _1652 = __builtin_ia32_punpckhwd128 (_1651, _1650);

  <bb 209> :
  _1653 = _1652;
  _1654 = VIEW_CONVERT_EXPR<__m128i>(_1653);

  <bb 210> :
<L145>:
  _2668 = _1654;
  _431 = _2668;
  _89 = _431;
  row2 = _89;
  tmp_433 = row1;
  row3.157_90 = row3;
  row1.158_91 = row1;
  __A_1655 = row1.158_91;
  __B_1656 = row3.157_90;
  _1657 = VIEW_CONVERT_EXPR<__v8hi>(__B_1656);
  _1658 = VIEW_CONVERT_EXPR<__v8hi>(__A_1655);
  _1659 = __builtin_ia32_punpcklwd128 (_1658, _1657);

  <bb 211> :
  _1660 = _1659;
  _1661 = VIEW_CONVERT_EXPR<__m128i>(_1660);

  <bb 212> :
<L146>:
  _2669 = _1661;
  _434 = _2669;
  _92 = _434;
  row1 = _92;
  row3.159_93 = row3;
  __A_1662 = tmp_433;
  __B_1663 = row3.159_93;
  _1664 = VIEW_CONVERT_EXPR<__v8hi>(__B_1663);
  _1665 = VIEW_CONVERT_EXPR<__v8hi>(__A_1662);
  _1666 = __builtin_ia32_punpckhwd128 (_1665, _1664);

  <bb 213> :
  _1667 = _1666;
  _1668 = VIEW_CONVERT_EXPR<__m128i>(_1667);

  <bb 214> :
<L147>:
  _2670 = _1668;
  _436 = _2670;
  _94 = _436;
  row3 = _94;
  tmp_438 = row4_412;
  row6.160_95 = row6;
  __A_1669 = row4_412;
  __B_1670 = row6.160_95;
  _1671 = VIEW_CONVERT_EXPR<__v8hi>(__B_1670);
  _1672 = VIEW_CONVERT_EXPR<__v8hi>(__A_1669);
  _1673 = __builtin_ia32_punpcklwd128 (_1672, _1671);

  <bb 215> :
  _1674 = _1673;
  _1675 = VIEW_CONVERT_EXPR<__m128i>(_1674);

  <bb 216> :
<L148>:
  _2671 = _1675;
  _439 = _2671;
  row4_440 = _439;
  row6.161_96 = row6;
  __A_1676 = tmp_438;
  __B_1677 = row6.161_96;
  _1678 = VIEW_CONVERT_EXPR<__v8hi>(__B_1677);
  _1679 = VIEW_CONVERT_EXPR<__v8hi>(__A_1676);
  _1680 = __builtin_ia32_punpckhwd128 (_1679, _1678);

  <bb 217> :
  _1681 = _1680;
  _1682 = VIEW_CONVERT_EXPR<__m128i>(_1681);

  <bb 218> :
<L149>:
  _2672 = _1682;
  _441 = _2672;
  _97 = _441;
  row6 = _97;
  tmp_443 = row5;
  row7.162_98 = row7;
  row5.163_99 = row5;
  __A_1683 = row5.163_99;
  __B_1684 = row7.162_98;
  _1685 = VIEW_CONVERT_EXPR<__v8hi>(__B_1684);
  _1686 = VIEW_CONVERT_EXPR<__v8hi>(__A_1683);
  _1687 = __builtin_ia32_punpcklwd128 (_1686, _1685);

  <bb 219> :
  _1688 = _1687;
  _1689 = VIEW_CONVERT_EXPR<__m128i>(_1688);

  <bb 220> :
<L150>:
  _2673 = _1689;
  _444 = _2673;
  _100 = _444;
  row5 = _100;
  row7.164_101 = row7;
  __A_1690 = tmp_443;
  __B_1691 = row7.164_101;
  _1692 = VIEW_CONVERT_EXPR<__v8hi>(__B_1691);
  _1693 = VIEW_CONVERT_EXPR<__v8hi>(__A_1690);
  _1694 = __builtin_ia32_punpckhwd128 (_1693, _1692);

  <bb 221> :
  _1695 = _1694;
  _1696 = VIEW_CONVERT_EXPR<__m128i>(_1695);

  <bb 222> :
<L151>:
  _2674 = _1696;
  _446 = _2674;
  _102 = _446;
  row7 = _102;
  tmp_448 = row0_430;
  row1.165_103 = row1;
  __A_1697 = row0_430;
  __B_1698 = row1.165_103;
  _1699 = VIEW_CONVERT_EXPR<__v8hi>(__B_1698);
  _1700 = VIEW_CONVERT_EXPR<__v8hi>(__A_1697);
  _1701 = __builtin_ia32_punpcklwd128 (_1700, _1699);

  <bb 223> :
  _1702 = _1701;
  _1703 = VIEW_CONVERT_EXPR<__m128i>(_1702);

  <bb 224> :
<L152>:
  _2675 = _1703;
  _449 = _2675;
  row0_450 = _449;
  row1.166_104 = row1;
  __A_1704 = tmp_448;
  __B_1705 = row1.166_104;
  _1706 = VIEW_CONVERT_EXPR<__v8hi>(__B_1705);
  _1707 = VIEW_CONVERT_EXPR<__v8hi>(__A_1704);
  _1708 = __builtin_ia32_punpckhwd128 (_1707, _1706);

  <bb 225> :
  _1709 = _1708;
  _1710 = VIEW_CONVERT_EXPR<__m128i>(_1709);

  <bb 226> :
<L153>:
  _2676 = _1710;
  _451 = _2676;
  _105 = _451;
  row1 = _105;
  tmp_453 = row2;
  row3.167_106 = row3;
  row2.168_107 = row2;
  __A_1711 = row2.168_107;
  __B_1712 = row3.167_106;
  _1713 = VIEW_CONVERT_EXPR<__v8hi>(__B_1712);
  _1714 = VIEW_CONVERT_EXPR<__v8hi>(__A_1711);
  _1715 = __builtin_ia32_punpcklwd128 (_1714, _1713);

  <bb 227> :
  _1716 = _1715;
  _1717 = VIEW_CONVERT_EXPR<__m128i>(_1716);

  <bb 228> :
<L154>:
  _2677 = _1717;
  _454 = _2677;
  _108 = _454;
  row2 = _108;
  row3.169_109 = row3;
  __A_1718 = tmp_453;
  __B_1719 = row3.169_109;
  _1720 = VIEW_CONVERT_EXPR<__v8hi>(__B_1719);
  _1721 = VIEW_CONVERT_EXPR<__v8hi>(__A_1718);
  _1722 = __builtin_ia32_punpckhwd128 (_1721, _1720);

  <bb 229> :
  _1723 = _1722;
  _1724 = VIEW_CONVERT_EXPR<__m128i>(_1723);

  <bb 230> :
<L155>:
  _2678 = _1724;
  _456 = _2678;
  _110 = _456;
  row3 = _110;
  tmp_458 = row4_440;
  row5.170_111 = row5;
  __A_1725 = row4_440;
  __B_1726 = row5.170_111;
  _1727 = VIEW_CONVERT_EXPR<__v8hi>(__B_1726);
  _1728 = VIEW_CONVERT_EXPR<__v8hi>(__A_1725);
  _1729 = __builtin_ia32_punpcklwd128 (_1728, _1727);

  <bb 231> :
  _1730 = _1729;
  _1731 = VIEW_CONVERT_EXPR<__m128i>(_1730);

  <bb 232> :
<L156>:
  _2679 = _1731;
  _459 = _2679;
  row4_460 = _459;
  row5.171_112 = row5;
  __A_1732 = tmp_458;
  __B_1733 = row5.171_112;
  _1734 = VIEW_CONVERT_EXPR<__v8hi>(__B_1733);
  _1735 = VIEW_CONVERT_EXPR<__v8hi>(__A_1732);
  _1736 = __builtin_ia32_punpckhwd128 (_1735, _1734);

  <bb 233> :
  _1737 = _1736;
  _1738 = VIEW_CONVERT_EXPR<__m128i>(_1737);

  <bb 234> :
<L157>:
  _2680 = _1738;
  _461 = _2680;
  _113 = _461;
  row5 = _113;
  tmp_463 = row6;
  row7.172_114 = row7;
  row6.173_115 = row6;
  __A_1739 = row6.173_115;
  __B_1740 = row7.172_114;
  _1741 = VIEW_CONVERT_EXPR<__v8hi>(__B_1740);
  _1742 = VIEW_CONVERT_EXPR<__v8hi>(__A_1739);
  _1743 = __builtin_ia32_punpcklwd128 (_1742, _1741);

  <bb 235> :
  _1744 = _1743;
  _1745 = VIEW_CONVERT_EXPR<__m128i>(_1744);

  <bb 236> :
<L158>:
  _2681 = _1745;
  _464 = _2681;
  _116 = _464;
  row6 = _116;
  row7.174_117 = row7;
  __A_1746 = tmp_463;
  __B_1747 = row7.174_117;
  _1748 = VIEW_CONVERT_EXPR<__v8hi>(__B_1747);
  _1749 = VIEW_CONVERT_EXPR<__v8hi>(__A_1746);
  _1750 = __builtin_ia32_punpckhwd128 (_1749, _1748);

  <bb 237> :
  _1751 = _1750;
  _1752 = VIEW_CONVERT_EXPR<__m128i>(_1751);

  <bb 238> :
<L159>:
  _2682 = _1752;
  _466 = _2682;
  _118 = _466;
  row7 = _118;
  row6.175_119 = row6;
  row2.176_120 = row2;
  __A_1753 = row2.176_120;
  __B_1754 = row6.175_119;
  _1755 = VIEW_CONVERT_EXPR<__v8hi>(__B_1754);
  _1756 = VIEW_CONVERT_EXPR<__v8hi>(__A_1753);
  _1757 = __builtin_ia32_punpcklwd128 (_1756, _1755);

  <bb 239> :
  _1758 = _1757;
  _1759 = VIEW_CONVERT_EXPR<__m128i>(_1758);

  <bb 240> :
<L160>:
  _2683 = _1759;
  _468 = _2683;
  rot0_0lo_469 = _468;
  row6.177_121 = row6;
  row2.178_122 = row2;
  __A_1760 = row2.178_122;
  __B_1761 = row6.177_121;
  _1762 = VIEW_CONVERT_EXPR<__v8hi>(__B_1761);
  _1763 = VIEW_CONVERT_EXPR<__v8hi>(__A_1760);
  _1764 = __builtin_ia32_punpckhwd128 (_1763, _1762);

  <bb 241> :
  _1765 = _1764;
  _1766 = VIEW_CONVERT_EXPR<__m128i>(_1765);

  <bb 242> :
<L161>:
  _2684 = _1766;
  _470 = _2684;
  rot0_0hi_471 = _470;
  __A_1767 = rot0_0lo_469;
  __B_1768 = rot0_0_249;
  _1769 = VIEW_CONVERT_EXPR<__v8hi>(__B_1768);
  _1770 = VIEW_CONVERT_EXPR<__v8hi>(__A_1767);
  _1771 = __builtin_ia32_pmaddwd128 (_1770, _1769);

  <bb 243> :
  _1772 = _1771;
  _1773 = VIEW_CONVERT_EXPR<__m128i>(_1772);

  <bb 244> :
<L162>:
  _2685 = _1773;
  _472 = _2685;
  t2e_l_473 = _472;
  __A_1774 = rot0_0hi_471;
  __B_1775 = rot0_0_249;
  _1776 = VIEW_CONVERT_EXPR<__v8hi>(__B_1775);
  _1777 = VIEW_CONVERT_EXPR<__v8hi>(__A_1774);
  _1778 = __builtin_ia32_pmaddwd128 (_1777, _1776);

  <bb 245> :
  _1779 = _1778;
  _1780 = VIEW_CONVERT_EXPR<__m128i>(_1779);

  <bb 246> :
<L163>:
  _2686 = _1780;
  _474 = _2686;
  t2e_h_475 = _474;
  __A_1781 = rot0_0lo_469;
  __B_1782 = rot0_1_250;
  _1783 = VIEW_CONVERT_EXPR<__v8hi>(__B_1782);
  _1784 = VIEW_CONVERT_EXPR<__v8hi>(__A_1781);
  _1785 = __builtin_ia32_pmaddwd128 (_1784, _1783);

  <bb 247> :
  _1786 = _1785;
  _1787 = VIEW_CONVERT_EXPR<__m128i>(_1786);

  <bb 248> :
<L164>:
  _2687 = _1787;
  _476 = _2687;
  t3e_l_477 = _476;
  __A_1788 = rot0_0hi_471;
  __B_1789 = rot0_1_250;
  _1790 = VIEW_CONVERT_EXPR<__v8hi>(__B_1789);
  _1791 = VIEW_CONVERT_EXPR<__v8hi>(__A_1788);
  _1792 = __builtin_ia32_pmaddwd128 (_1791, _1790);

  <bb 249> :
  _1793 = _1792;
  _1794 = VIEW_CONVERT_EXPR<__m128i>(_1793);

  <bb 250> :
<L165>:
  _2688 = _1794;
  _478 = _2688;
  t3e_h_479 = _478;
  __A_1809 = row0_450;
  __B_1810 = row4_460;
  _1811 = VIEW_CONVERT_EXPR<__v8hu>(__A_1809);
  _1812 = VIEW_CONVERT_EXPR<__v8hu>(__B_1810);
  _1813 = _1811 + _1812;
  _1814 = VIEW_CONVERT_EXPR<__m128i>(_1813);

  <bb 251> :
<L169>:
  _2689 = _1814;
  _123 = _2689;
  sum04 = _123;
  __A_1803 = row0_450;
  __B_1804 = row4_460;
  _1805 = VIEW_CONVERT_EXPR<__v8hu>(__A_1803);
  _1806 = VIEW_CONVERT_EXPR<__v8hu>(__B_1804);
  _1807 = _1805 - _1806;
  _1808 = VIEW_CONVERT_EXPR<__m128i>(_1807);

  <bb 252> :
<L168>:
  _2690 = _1808;
  _124 = _2690;
  dif04 = _124;
  sum04.179_125 = sum04;
  _1802 = { 0, 0 };

  <bb 253> :
<L167>:
  _2691 = _1802;
  _126 = _2691;
  __A_1795 = _126;
  __B_1796 = sum04.179_125;
  _1797 = VIEW_CONVERT_EXPR<__v8hi>(__B_1796);
  _1798 = VIEW_CONVERT_EXPR<__v8hi>(__A_1795);
  _1799 = __builtin_ia32_punpcklwd128 (_1798, _1797);

  <bb 254> :
  _1800 = _1799;
  _1801 = VIEW_CONVERT_EXPR<__m128i>(_1800);

  <bb 255> :
<L166>:
  _2692 = _1801;
  _482 = _2692;
  _127 = _482;
  __A_1815 = _127;
  __B_1816 = 4;
  _1817 = VIEW_CONVERT_EXPR<__v4si>(__A_1815);
  _1818 = __builtin_ia32_psradi128 (_1817, __B_1816);

  <bb 256> :
  _1819 = _1818;
  _1820 = VIEW_CONVERT_EXPR<__m128i>(_1819);

  <bb 257> :
<L170>:
  _2693 = _1820;
  _483 = _2693;
  t0e_l_484 = _483;
  sum04.180_128 = sum04;
  _1828 = { 0, 0 };

  <bb 258> :
<L172>:
  _2694 = _1828;
  _129 = _2694;
  __A_1821 = _129;
  __B_1822 = sum04.180_128;
  _1823 = VIEW_CONVERT_EXPR<__v8hi>(__B_1822);
  _1824 = VIEW_CONVERT_EXPR<__v8hi>(__A_1821);
  _1825 = __builtin_ia32_punpckhwd128 (_1824, _1823);

  <bb 259> :
  _1826 = _1825;
  _1827 = VIEW_CONVERT_EXPR<__m128i>(_1826);

  <bb 260> :
<L171>:
  _2695 = _1827;
  _485 = _2695;
  _130 = _485;
  __A_1829 = _130;
  __B_1830 = 4;
  _1831 = VIEW_CONVERT_EXPR<__v4si>(__A_1829);
  _1832 = __builtin_ia32_psradi128 (_1831, __B_1830);

  <bb 261> :
  _1833 = _1832;
  _1834 = VIEW_CONVERT_EXPR<__m128i>(_1833);

  <bb 262> :
<L173>:
  _2696 = _1834;
  _486 = _2696;
  t0e_h_487 = _486;
  dif04.181_131 = dif04;
  _1842 = { 0, 0 };

  <bb 263> :
<L175>:
  _2697 = _1842;
  _132 = _2697;
  __A_1835 = _132;
  __B_1836 = dif04.181_131;
  _1837 = VIEW_CONVERT_EXPR<__v8hi>(__B_1836);
  _1838 = VIEW_CONVERT_EXPR<__v8hi>(__A_1835);
  _1839 = __builtin_ia32_punpcklwd128 (_1838, _1837);

  <bb 264> :
  _1840 = _1839;
  _1841 = VIEW_CONVERT_EXPR<__m128i>(_1840);

  <bb 265> :
<L174>:
  _2698 = _1841;
  _488 = _2698;
  _133 = _488;
  __A_1843 = _133;
  __B_1844 = 4;
  _1845 = VIEW_CONVERT_EXPR<__v4si>(__A_1843);
  _1846 = __builtin_ia32_psradi128 (_1845, __B_1844);

  <bb 266> :
  _1847 = _1846;
  _1848 = VIEW_CONVERT_EXPR<__m128i>(_1847);

  <bb 267> :
<L176>:
  _2699 = _1848;
  _489 = _2699;
  t1e_l_490 = _489;
  dif04.182_134 = dif04;
  _1856 = { 0, 0 };

  <bb 268> :
<L178>:
  _2700 = _1856;
  _135 = _2700;
  __A_1849 = _135;
  __B_1850 = dif04.182_134;
  _1851 = VIEW_CONVERT_EXPR<__v8hi>(__B_1850);
  _1852 = VIEW_CONVERT_EXPR<__v8hi>(__A_1849);
  _1853 = __builtin_ia32_punpckhwd128 (_1852, _1851);

  <bb 269> :
  _1854 = _1853;
  _1855 = VIEW_CONVERT_EXPR<__m128i>(_1854);

  <bb 270> :
<L177>:
  _2701 = _1855;
  _491 = _2701;
  _136 = _491;
  __A_1857 = _136;
  __B_1858 = 4;
  _1859 = VIEW_CONVERT_EXPR<__v4si>(__A_1857);
  _1860 = __builtin_ia32_psradi128 (_1859, __B_1858);

  <bb 271> :
  _1861 = _1860;
  _1862 = VIEW_CONVERT_EXPR<__m128i>(_1861);

  <bb 272> :
<L179>:
  _2702 = _1862;
  _492 = _2702;
  t1e_h_493 = _492;
  __A_1912 = t0e_l_484;
  __B_1913 = t3e_l_477;
  _1914 = VIEW_CONVERT_EXPR<__v4su>(__A_1912);
  _1915 = VIEW_CONVERT_EXPR<__v4su>(__B_1913);
  _1916 = _1914 + _1915;
  _1917 = VIEW_CONVERT_EXPR<__m128i>(_1916);

  <bb 273> :
<L188>:
  _2703 = _1917;
  x0_l_494 = _2703;
  __A_1906 = t0e_h_487;
  __B_1907 = t3e_h_479;
  _1908 = VIEW_CONVERT_EXPR<__v4su>(__A_1906);
  _1909 = VIEW_CONVERT_EXPR<__v4su>(__B_1907);
  _1910 = _1908 + _1909;
  _1911 = VIEW_CONVERT_EXPR<__m128i>(_1910);

  <bb 274> :
<L187>:
  _2704 = _1911;
  x0_h_495 = _2704;
  __A_1900 = t0e_l_484;
  __B_1901 = t3e_l_477;
  _1902 = VIEW_CONVERT_EXPR<__v4su>(__A_1900);
  _1903 = VIEW_CONVERT_EXPR<__v4su>(__B_1901);
  _1904 = _1902 - _1903;
  _1905 = VIEW_CONVERT_EXPR<__m128i>(_1904);

  <bb 275> :
<L186>:
  _2705 = _1905;
  x3_l_496 = _2705;
  __A_1894 = t0e_h_487;
  __B_1895 = t3e_h_479;
  _1896 = VIEW_CONVERT_EXPR<__v4su>(__A_1894);
  _1897 = VIEW_CONVERT_EXPR<__v4su>(__B_1895);
  _1898 = _1896 - _1897;
  _1899 = VIEW_CONVERT_EXPR<__m128i>(_1898);

  <bb 276> :
<L185>:
  _2706 = _1899;
  x3_h_497 = _2706;
  __A_1888 = t1e_l_490;
  __B_1889 = t2e_l_473;
  _1890 = VIEW_CONVERT_EXPR<__v4su>(__A_1888);
  _1891 = VIEW_CONVERT_EXPR<__v4su>(__B_1889);
  _1892 = _1890 + _1891;
  _1893 = VIEW_CONVERT_EXPR<__m128i>(_1892);

  <bb 277> :
<L184>:
  _2707 = _1893;
  x1_l_498 = _2707;
  __A_1882 = t1e_h_493;
  __B_1883 = t2e_h_475;
  _1884 = VIEW_CONVERT_EXPR<__v4su>(__A_1882);
  _1885 = VIEW_CONVERT_EXPR<__v4su>(__B_1883);
  _1886 = _1884 + _1885;
  _1887 = VIEW_CONVERT_EXPR<__m128i>(_1886);

  <bb 278> :
<L183>:
  _2708 = _1887;
  x1_h_499 = _2708;
  __A_1876 = t1e_l_490;
  __B_1877 = t2e_l_473;
  _1878 = VIEW_CONVERT_EXPR<__v4su>(__A_1876);
  _1879 = VIEW_CONVERT_EXPR<__v4su>(__B_1877);
  _1880 = _1878 - _1879;
  _1881 = VIEW_CONVERT_EXPR<__m128i>(_1880);

  <bb 279> :
<L182>:
  _2709 = _1881;
  x2_l_500 = _2709;
  __A_1870 = t1e_h_493;
  __B_1871 = t2e_h_475;
  _1872 = VIEW_CONVERT_EXPR<__v4su>(__A_1870);
  _1873 = VIEW_CONVERT_EXPR<__v4su>(__B_1871);
  _1874 = _1872 - _1873;
  _1875 = VIEW_CONVERT_EXPR<__m128i>(_1874);

  <bb 280> :
<L181>:
  _2710 = _1875;
  x2_h_501 = _2710;
  row3.183_137 = row3;
  row7.184_138 = row7;
  __A_1863 = row7.184_138;
  __B_1864 = row3.183_137;
  _1865 = VIEW_CONVERT_EXPR<__v8hi>(__B_1864);
  _1866 = VIEW_CONVERT_EXPR<__v8hi>(__A_1863);
  _1867 = __builtin_ia32_punpcklwd128 (_1866, _1865);

  <bb 281> :
  _1868 = _1867;
  _1869 = VIEW_CONVERT_EXPR<__m128i>(_1868);

  <bb 282> :
<L180>:
  _2711 = _1869;
  _502 = _2711;
  rot2_0lo_503 = _502;
  row3.185_139 = row3;
  row7.186_140 = row7;
  __A_1918 = row7.186_140;
  __B_1919 = row3.185_139;
  _1920 = VIEW_CONVERT_EXPR<__v8hi>(__B_1919);
  _1921 = VIEW_CONVERT_EXPR<__v8hi>(__A_1918);
  _1922 = __builtin_ia32_punpckhwd128 (_1921, _1920);

  <bb 283> :
  _1923 = _1922;
  _1924 = VIEW_CONVERT_EXPR<__m128i>(_1923);

  <bb 284> :
<L189>:
  _2712 = _1924;
  _504 = _2712;
  rot2_0hi_505 = _504;
  __A_1925 = rot2_0lo_503;
  __B_1926 = rot2_0_253;
  _1927 = VIEW_CONVERT_EXPR<__v8hi>(__B_1926);
  _1928 = VIEW_CONVERT_EXPR<__v8hi>(__A_1925);
  _1929 = __builtin_ia32_pmaddwd128 (_1928, _1927);

  <bb 285> :
  _1930 = _1929;
  _1931 = VIEW_CONVERT_EXPR<__m128i>(_1930);

  <bb 286> :
<L190>:
  _2713 = _1931;
  _506 = _2713;
  y0o_l_507 = _506;
  __A_1932 = rot2_0hi_505;
  __B_1933 = rot2_0_253;
  _1934 = VIEW_CONVERT_EXPR<__v8hi>(__B_1933);
  _1935 = VIEW_CONVERT_EXPR<__v8hi>(__A_1932);
  _1936 = __builtin_ia32_pmaddwd128 (_1935, _1934);

  <bb 287> :
  _1937 = _1936;
  _1938 = VIEW_CONVERT_EXPR<__m128i>(_1937);

  <bb 288> :
<L191>:
  _2714 = _1938;
  _508 = _2714;
  y0o_h_509 = _508;
  __A_1939 = rot2_0lo_503;
  __B_1940 = rot2_1_254;
  _1941 = VIEW_CONVERT_EXPR<__v8hi>(__B_1940);
  _1942 = VIEW_CONVERT_EXPR<__v8hi>(__A_1939);
  _1943 = __builtin_ia32_pmaddwd128 (_1942, _1941);

  <bb 289> :
  _1944 = _1943;
  _1945 = VIEW_CONVERT_EXPR<__m128i>(_1944);

  <bb 290> :
<L192>:
  _2715 = _1945;
  _510 = _2715;
  y2o_l_511 = _510;
  __A_1946 = rot2_0hi_505;
  __B_1947 = rot2_1_254;
  _1948 = VIEW_CONVERT_EXPR<__v8hi>(__B_1947);
  _1949 = VIEW_CONVERT_EXPR<__v8hi>(__A_1946);
  _1950 = __builtin_ia32_pmaddwd128 (_1949, _1948);

  <bb 291> :
  _1951 = _1950;
  _1952 = VIEW_CONVERT_EXPR<__m128i>(_1951);

  <bb 292> :
<L193>:
  _2716 = _1952;
  _512 = _2716;
  y2o_h_513 = _512;
  row1.187_141 = row1;
  row5.188_142 = row5;
  __A_1953 = row5.188_142;
  __B_1954 = row1.187_141;
  _1955 = VIEW_CONVERT_EXPR<__v8hi>(__B_1954);
  _1956 = VIEW_CONVERT_EXPR<__v8hi>(__A_1953);
  _1957 = __builtin_ia32_punpcklwd128 (_1956, _1955);

  <bb 293> :
  _1958 = _1957;
  _1959 = VIEW_CONVERT_EXPR<__m128i>(_1958);

  <bb 294> :
<L194>:
  _2717 = _1959;
  _514 = _2717;
  rot3_0lo_515 = _514;
  row1.189_143 = row1;
  row5.190_144 = row5;
  __A_1960 = row5.190_144;
  __B_1961 = row1.189_143;
  _1962 = VIEW_CONVERT_EXPR<__v8hi>(__B_1961);
  _1963 = VIEW_CONVERT_EXPR<__v8hi>(__A_1960);
  _1964 = __builtin_ia32_punpckhwd128 (_1963, _1962);

  <bb 295> :
  _1965 = _1964;
  _1966 = VIEW_CONVERT_EXPR<__m128i>(_1965);

  <bb 296> :
<L195>:
  _2718 = _1966;
  _516 = _2718;
  rot3_0hi_517 = _516;
  __A_1967 = rot3_0lo_515;
  __B_1968 = rot3_0_255;
  _1969 = VIEW_CONVERT_EXPR<__v8hi>(__B_1968);
  _1970 = VIEW_CONVERT_EXPR<__v8hi>(__A_1967);
  _1971 = __builtin_ia32_pmaddwd128 (_1970, _1969);

  <bb 297> :
  _1972 = _1971;
  _1973 = VIEW_CONVERT_EXPR<__m128i>(_1972);

  <bb 298> :
<L196>:
  _2719 = _1973;
  _518 = _2719;
  y1o_l_519 = _518;
  __A_1974 = rot3_0hi_517;
  __B_1975 = rot3_0_255;
  _1976 = VIEW_CONVERT_EXPR<__v8hi>(__B_1975);
  _1977 = VIEW_CONVERT_EXPR<__v8hi>(__A_1974);
  _1978 = __builtin_ia32_pmaddwd128 (_1977, _1976);

  <bb 299> :
  _1979 = _1978;
  _1980 = VIEW_CONVERT_EXPR<__m128i>(_1979);

  <bb 300> :
<L197>:
  _2720 = _1980;
  _520 = _2720;
  y1o_h_521 = _520;
  __A_1981 = rot3_0lo_515;
  __B_1982 = rot3_1_256;
  _1983 = VIEW_CONVERT_EXPR<__v8hi>(__B_1982);
  _1984 = VIEW_CONVERT_EXPR<__v8hi>(__A_1981);
  _1985 = __builtin_ia32_pmaddwd128 (_1984, _1983);

  <bb 301> :
  _1986 = _1985;
  _1987 = VIEW_CONVERT_EXPR<__m128i>(_1986);

  <bb 302> :
<L198>:
  _2721 = _1987;
  _522 = _2721;
  y3o_l_523 = _522;
  __A_1988 = rot3_0hi_517;
  __B_1989 = rot3_1_256;
  _1990 = VIEW_CONVERT_EXPR<__v8hi>(__B_1989);
  _1991 = VIEW_CONVERT_EXPR<__v8hi>(__A_1988);
  _1992 = __builtin_ia32_pmaddwd128 (_1991, _1990);

  <bb 303> :
  _1993 = _1992;
  _1994 = VIEW_CONVERT_EXPR<__m128i>(_1993);

  <bb 304> :
<L199>:
  _2722 = _1994;
  _524 = _2722;
  y3o_h_525 = _524;
  row7.191_145 = row7;
  row1.192_146 = row1;
  __A_2008 = row1.192_146;
  __B_2009 = row7.191_145;
  _2010 = VIEW_CONVERT_EXPR<__v8hu>(__A_2008);
  _2011 = VIEW_CONVERT_EXPR<__v8hu>(__B_2009);
  _2012 = _2010 + _2011;
  _2013 = VIEW_CONVERT_EXPR<__m128i>(_2012);

  <bb 305> :
<L202>:
  _2723 = _2013;
  _147 = _2723;
  sum17 = _147;
  row5.193_148 = row5;
  row3.194_149 = row3;
  __A_2002 = row3.194_149;
  __B_2003 = row5.193_148;
  _2004 = VIEW_CONVERT_EXPR<__v8hu>(__A_2002);
  _2005 = VIEW_CONVERT_EXPR<__v8hu>(__B_2003);
  _2006 = _2004 + _2005;
  _2007 = VIEW_CONVERT_EXPR<__m128i>(_2006);

  <bb 306> :
<L201>:
  _2724 = _2007;
  _150 = _2724;
  sum35 = _150;
  sum35.195_151 = sum35;
  sum17.196_152 = sum17;
  __A_1995 = sum17.196_152;
  __B_1996 = sum35.195_151;
  _1997 = VIEW_CONVERT_EXPR<__v8hi>(__B_1996);
  _1998 = VIEW_CONVERT_EXPR<__v8hi>(__A_1995);
  _1999 = __builtin_ia32_punpcklwd128 (_1998, _1997);

  <bb 307> :
  _2000 = _1999;
  _2001 = VIEW_CONVERT_EXPR<__m128i>(_2000);

  <bb 308> :
<L200>:
  _2725 = _2001;
  _528 = _2725;
  rot1_0lo_529 = _528;
  sum35.197_153 = sum35;
  sum17.198_154 = sum17;
  __A_2014 = sum17.198_154;
  __B_2015 = sum35.197_153;
  _2016 = VIEW_CONVERT_EXPR<__v8hi>(__B_2015);
  _2017 = VIEW_CONVERT_EXPR<__v8hi>(__A_2014);
  _2018 = __builtin_ia32_punpckhwd128 (_2017, _2016);

  <bb 309> :
  _2019 = _2018;
  _2020 = VIEW_CONVERT_EXPR<__m128i>(_2019);

  <bb 310> :
<L203>:
  _2726 = _2020;
  _530 = _2726;
  rot1_0hi_531 = _530;
  __A_2021 = rot1_0lo_529;
  __B_2022 = rot1_0_251;
  _2023 = VIEW_CONVERT_EXPR<__v8hi>(__B_2022);
  _2024 = VIEW_CONVERT_EXPR<__v8hi>(__A_2021);
  _2025 = __builtin_ia32_pmaddwd128 (_2024, _2023);

  <bb 311> :
  _2026 = _2025;
  _2027 = VIEW_CONVERT_EXPR<__m128i>(_2026);

  <bb 312> :
<L204>:
  _2727 = _2027;
  _532 = _2727;
  y4o_l_533 = _532;
  __A_2028 = rot1_0hi_531;
  __B_2029 = rot1_0_251;
  _2030 = VIEW_CONVERT_EXPR<__v8hi>(__B_2029);
  _2031 = VIEW_CONVERT_EXPR<__v8hi>(__A_2028);
  _2032 = __builtin_ia32_pmaddwd128 (_2031, _2030);

  <bb 313> :
  _2033 = _2032;
  _2034 = VIEW_CONVERT_EXPR<__m128i>(_2033);

  <bb 314> :
<L205>:
  _2728 = _2034;
  _534 = _2728;
  y4o_h_535 = _534;
  __A_2035 = rot1_0lo_529;
  __B_2036 = rot1_1_252;
  _2037 = VIEW_CONVERT_EXPR<__v8hi>(__B_2036);
  _2038 = VIEW_CONVERT_EXPR<__v8hi>(__A_2035);
  _2039 = __builtin_ia32_pmaddwd128 (_2038, _2037);

  <bb 315> :
  _2040 = _2039;
  _2041 = VIEW_CONVERT_EXPR<__m128i>(_2040);

  <bb 316> :
<L206>:
  _2729 = _2041;
  _536 = _2729;
  y5o_l_537 = _536;
  __A_2042 = rot1_0hi_531;
  __B_2043 = rot1_1_252;
  _2044 = VIEW_CONVERT_EXPR<__v8hi>(__B_2043);
  _2045 = VIEW_CONVERT_EXPR<__v8hi>(__A_2042);
  _2046 = __builtin_ia32_pmaddwd128 (_2045, _2044);

  <bb 317> :
  _2047 = _2046;
  _2048 = VIEW_CONVERT_EXPR<__m128i>(_2047);

  <bb 318> :
<L207>:
  _2730 = _2048;
  _538 = _2730;
  y5o_h_539 = _538;
  __A_2133 = y0o_l_507;
  __B_2134 = y4o_l_533;
  _2135 = VIEW_CONVERT_EXPR<__v4su>(__A_2133);
  _2136 = VIEW_CONVERT_EXPR<__v4su>(__B_2134);
  _2137 = _2135 + _2136;
  _2138 = VIEW_CONVERT_EXPR<__m128i>(_2137);

  <bb 319> :
<L222>:
  _2731 = _2138;
  x4_l_540 = _2731;
  __A_2127 = y0o_h_509;
  __B_2128 = y4o_h_535;
  _2129 = VIEW_CONVERT_EXPR<__v4su>(__A_2127);
  _2130 = VIEW_CONVERT_EXPR<__v4su>(__B_2128);
  _2131 = _2129 + _2130;
  _2132 = VIEW_CONVERT_EXPR<__m128i>(_2131);

  <bb 320> :
<L221>:
  _2732 = _2132;
  x4_h_541 = _2732;
  __A_2121 = y1o_l_519;
  __B_2122 = y5o_l_537;
  _2123 = VIEW_CONVERT_EXPR<__v4su>(__A_2121);
  _2124 = VIEW_CONVERT_EXPR<__v4su>(__B_2122);
  _2125 = _2123 + _2124;
  _2126 = VIEW_CONVERT_EXPR<__m128i>(_2125);

  <bb 321> :
<L220>:
  _2733 = _2126;
  x5_l_542 = _2733;
  __A_2115 = y1o_h_521;
  __B_2116 = y5o_h_539;
  _2117 = VIEW_CONVERT_EXPR<__v4su>(__A_2115);
  _2118 = VIEW_CONVERT_EXPR<__v4su>(__B_2116);
  _2119 = _2117 + _2118;
  _2120 = VIEW_CONVERT_EXPR<__m128i>(_2119);

  <bb 322> :
<L219>:
  _2734 = _2120;
  x5_h_543 = _2734;
  __A_2109 = y2o_l_511;
  __B_2110 = y5o_l_537;
  _2111 = VIEW_CONVERT_EXPR<__v4su>(__A_2109);
  _2112 = VIEW_CONVERT_EXPR<__v4su>(__B_2110);
  _2113 = _2111 + _2112;
  _2114 = VIEW_CONVERT_EXPR<__m128i>(_2113);

  <bb 323> :
<L218>:
  _2735 = _2114;
  x6_l_544 = _2735;
  __A_2103 = y2o_h_513;
  __B_2104 = y5o_h_539;
  _2105 = VIEW_CONVERT_EXPR<__v4su>(__A_2103);
  _2106 = VIEW_CONVERT_EXPR<__v4su>(__B_2104);
  _2107 = _2105 + _2106;
  _2108 = VIEW_CONVERT_EXPR<__m128i>(_2107);

  <bb 324> :
<L217>:
  _2736 = _2108;
  x6_h_545 = _2736;
  __A_2097 = y3o_l_523;
  __B_2098 = y4o_l_533;
  _2099 = VIEW_CONVERT_EXPR<__v4su>(__A_2097);
  _2100 = VIEW_CONVERT_EXPR<__v4su>(__B_2098);
  _2101 = _2099 + _2100;
  _2102 = VIEW_CONVERT_EXPR<__m128i>(_2101);

  <bb 325> :
<L216>:
  _2737 = _2102;
  x7_l_546 = _2737;
  __A_2091 = y3o_h_525;
  __B_2092 = y4o_h_535;
  _2093 = VIEW_CONVERT_EXPR<__v4su>(__A_2091);
  _2094 = VIEW_CONVERT_EXPR<__v4su>(__B_2092);
  _2095 = _2093 + _2094;
  _2096 = VIEW_CONVERT_EXPR<__m128i>(_2095);

  <bb 326> :
<L215>:
  _2738 = _2096;
  x7_h_547 = _2738;
  __A_2085 = x0_l_494;
  __B_2086 = bias_1_258;
  _2087 = VIEW_CONVERT_EXPR<__v4su>(__A_2085);
  _2088 = VIEW_CONVERT_EXPR<__v4su>(__B_2086);
  _2089 = _2087 + _2088;
  _2090 = VIEW_CONVERT_EXPR<__m128i>(_2089);

  <bb 327> :
<L214>:
  _2739 = _2090;
  abiased_l_548 = _2739;
  __A_2079 = x0_h_495;
  __B_2080 = bias_1_258;
  _2081 = VIEW_CONVERT_EXPR<__v4su>(__A_2079);
  _2082 = VIEW_CONVERT_EXPR<__v4su>(__B_2080);
  _2083 = _2081 + _2082;
  _2084 = VIEW_CONVERT_EXPR<__m128i>(_2083);

  <bb 328> :
<L213>:
  _2740 = _2084;
  abiased_h_549 = _2740;
  __A_2073 = abiased_l_548;
  __B_2074 = x7_l_546;
  _2075 = VIEW_CONVERT_EXPR<__v4su>(__A_2073);
  _2076 = VIEW_CONVERT_EXPR<__v4su>(__B_2074);
  _2077 = _2075 + _2076;
  _2078 = VIEW_CONVERT_EXPR<__m128i>(_2077);

  <bb 329> :
<L212>:
  _2741 = _2078;
  sum_l_550 = _2741;
  __A_2067 = abiased_h_549;
  __B_2068 = x7_h_547;
  _2069 = VIEW_CONVERT_EXPR<__v4su>(__A_2067);
  _2070 = VIEW_CONVERT_EXPR<__v4su>(__B_2068);
  _2071 = _2069 + _2070;
  _2072 = VIEW_CONVERT_EXPR<__m128i>(_2071);

  <bb 330> :
<L211>:
  _2742 = _2072;
  sum_h_551 = _2742;
  __A_2061 = abiased_l_548;
  __B_2062 = x7_l_546;
  _2063 = VIEW_CONVERT_EXPR<__v4su>(__A_2061);
  _2064 = VIEW_CONVERT_EXPR<__v4su>(__B_2062);
  _2065 = _2063 - _2064;
  _2066 = VIEW_CONVERT_EXPR<__m128i>(_2065);

  <bb 331> :
<L210>:
  _2743 = _2066;
  dif_l_552 = _2743;
  __A_2055 = abiased_h_549;
  __B_2056 = x7_h_547;
  _2057 = VIEW_CONVERT_EXPR<__v4su>(__A_2055);
  _2058 = VIEW_CONVERT_EXPR<__v4su>(__B_2056);
  _2059 = _2057 - _2058;
  _2060 = VIEW_CONVERT_EXPR<__m128i>(_2059);

  <bb 332> :
<L209>:
  _2744 = _2060;
  dif_h_553 = _2744;
  __A_2049 = sum_h_551;
  __B_2050 = 17;
  _2051 = VIEW_CONVERT_EXPR<__v4si>(__A_2049);
  _2052 = __builtin_ia32_psradi128 (_2051, __B_2050);

  <bb 333> :
  _2053 = _2052;
  _2054 = VIEW_CONVERT_EXPR<__m128i>(_2053);

  <bb 334> :
<L208>:
  _2745 = _2054;
  _554 = _2745;
  _155 = _554;
  __A_2139 = sum_l_550;
  __B_2140 = 17;
  _2141 = VIEW_CONVERT_EXPR<__v4si>(__A_2139);
  _2142 = __builtin_ia32_psradi128 (_2141, __B_2140);

  <bb 335> :
  _2143 = _2142;
  _2144 = VIEW_CONVERT_EXPR<__m128i>(_2143);

  <bb 336> :
<L223>:
  _2746 = _2144;
  _555 = _2746;
  _156 = _555;
  __A_2145 = _156;
  __B_2146 = _155;
  _2147 = VIEW_CONVERT_EXPR<__v4si>(__B_2146);
  _2148 = VIEW_CONVERT_EXPR<__v4si>(__A_2145);
  _2149 = __builtin_ia32_packssdw128 (_2148, _2147);

  <bb 337> :
  _2150 = _2149;
  _2151 = VIEW_CONVERT_EXPR<__m128i>(_2150);

  <bb 338> :
<L224>:
  _2747 = _2151;
  _556 = _2747;
  row0_557 = _556;
  __A_2152 = dif_h_553;
  __B_2153 = 17;
  _2154 = VIEW_CONVERT_EXPR<__v4si>(__A_2152);
  _2155 = __builtin_ia32_psradi128 (_2154, __B_2153);

  <bb 339> :
  _2156 = _2155;
  _2157 = VIEW_CONVERT_EXPR<__m128i>(_2156);

  <bb 340> :
<L225>:
  _2748 = _2157;
  _558 = _2748;
  _157 = _558;
  __A_2158 = dif_l_552;
  __B_2159 = 17;
  _2160 = VIEW_CONVERT_EXPR<__v4si>(__A_2158);
  _2161 = __builtin_ia32_psradi128 (_2160, __B_2159);

  <bb 341> :
  _2162 = _2161;
  _2163 = VIEW_CONVERT_EXPR<__m128i>(_2162);

  <bb 342> :
<L226>:
  _2749 = _2163;
  _559 = _2749;
  _158 = _559;
  __A_2164 = _158;
  __B_2165 = _157;
  _2166 = VIEW_CONVERT_EXPR<__v4si>(__B_2165);
  _2167 = VIEW_CONVERT_EXPR<__v4si>(__A_2164);
  _2168 = __builtin_ia32_packssdw128 (_2167, _2166);

  <bb 343> :
  _2169 = _2168;
  _2170 = VIEW_CONVERT_EXPR<__m128i>(_2169);

  <bb 344> :
<L227>:
  _2750 = _2170;
  _560 = _2750;
  _159 = _560;
  row7 = _159;
  __A_2207 = x1_l_498;
  __B_2208 = bias_1_258;
  _2209 = VIEW_CONVERT_EXPR<__v4su>(__A_2207);
  _2210 = VIEW_CONVERT_EXPR<__v4su>(__B_2208);
  _2211 = _2209 + _2210;
  _2212 = VIEW_CONVERT_EXPR<__m128i>(_2211);

  <bb 345> :
<L234>:
  _2751 = _2212;
  abiased_l_562 = _2751;
  __A_2201 = x1_h_499;
  __B_2202 = bias_1_258;
  _2203 = VIEW_CONVERT_EXPR<__v4su>(__A_2201);
  _2204 = VIEW_CONVERT_EXPR<__v4su>(__B_2202);
  _2205 = _2203 + _2204;
  _2206 = VIEW_CONVERT_EXPR<__m128i>(_2205);

  <bb 346> :
<L233>:
  _2752 = _2206;
  abiased_h_563 = _2752;
  __A_2195 = abiased_l_562;
  __B_2196 = x6_l_544;
  _2197 = VIEW_CONVERT_EXPR<__v4su>(__A_2195);
  _2198 = VIEW_CONVERT_EXPR<__v4su>(__B_2196);
  _2199 = _2197 + _2198;
  _2200 = VIEW_CONVERT_EXPR<__m128i>(_2199);

  <bb 347> :
<L232>:
  _2753 = _2200;
  sum_l_564 = _2753;
  __A_2189 = abiased_h_563;
  __B_2190 = x6_h_545;
  _2191 = VIEW_CONVERT_EXPR<__v4su>(__A_2189);
  _2192 = VIEW_CONVERT_EXPR<__v4su>(__B_2190);
  _2193 = _2191 + _2192;
  _2194 = VIEW_CONVERT_EXPR<__m128i>(_2193);

  <bb 348> :
<L231>:
  _2754 = _2194;
  sum_h_565 = _2754;
  __A_2183 = abiased_l_562;
  __B_2184 = x6_l_544;
  _2185 = VIEW_CONVERT_EXPR<__v4su>(__A_2183);
  _2186 = VIEW_CONVERT_EXPR<__v4su>(__B_2184);
  _2187 = _2185 - _2186;
  _2188 = VIEW_CONVERT_EXPR<__m128i>(_2187);

  <bb 349> :
<L230>:
  _2755 = _2188;
  dif_l_566 = _2755;
  __A_2177 = abiased_h_563;
  __B_2178 = x6_h_545;
  _2179 = VIEW_CONVERT_EXPR<__v4su>(__A_2177);
  _2180 = VIEW_CONVERT_EXPR<__v4su>(__B_2178);
  _2181 = _2179 - _2180;
  _2182 = VIEW_CONVERT_EXPR<__m128i>(_2181);

  <bb 350> :
<L229>:
  _2756 = _2182;
  dif_h_567 = _2756;
  __A_2171 = sum_h_565;
  __B_2172 = 17;
  _2173 = VIEW_CONVERT_EXPR<__v4si>(__A_2171);
  _2174 = __builtin_ia32_psradi128 (_2173, __B_2172);

  <bb 351> :
  _2175 = _2174;
  _2176 = VIEW_CONVERT_EXPR<__m128i>(_2175);

  <bb 352> :
<L228>:
  _2757 = _2176;
  _568 = _2757;
  _160 = _568;
  __A_2213 = sum_l_564;
  __B_2214 = 17;
  _2215 = VIEW_CONVERT_EXPR<__v4si>(__A_2213);
  _2216 = __builtin_ia32_psradi128 (_2215, __B_2214);

  <bb 353> :
  _2217 = _2216;
  _2218 = VIEW_CONVERT_EXPR<__m128i>(_2217);

  <bb 354> :
<L235>:
  _2758 = _2218;
  _569 = _2758;
  _161 = _569;
  __A_2219 = _161;
  __B_2220 = _160;
  _2221 = VIEW_CONVERT_EXPR<__v4si>(__B_2220);
  _2222 = VIEW_CONVERT_EXPR<__v4si>(__A_2219);
  _2223 = __builtin_ia32_packssdw128 (_2222, _2221);

  <bb 355> :
  _2224 = _2223;
  _2225 = VIEW_CONVERT_EXPR<__m128i>(_2224);

  <bb 356> :
<L236>:
  _2759 = _2225;
  _570 = _2759;
  _162 = _570;
  row1 = _162;
  __A_2226 = dif_h_567;
  __B_2227 = 17;
  _2228 = VIEW_CONVERT_EXPR<__v4si>(__A_2226);
  _2229 = __builtin_ia32_psradi128 (_2228, __B_2227);

  <bb 357> :
  _2230 = _2229;
  _2231 = VIEW_CONVERT_EXPR<__m128i>(_2230);

  <bb 358> :
<L237>:
  _2760 = _2231;
  _572 = _2760;
  _163 = _572;
  __A_2232 = dif_l_566;
  __B_2233 = 17;
  _2234 = VIEW_CONVERT_EXPR<__v4si>(__A_2232);
  _2235 = __builtin_ia32_psradi128 (_2234, __B_2233);

  <bb 359> :
  _2236 = _2235;
  _2237 = VIEW_CONVERT_EXPR<__m128i>(_2236);

  <bb 360> :
<L238>:
  _2761 = _2237;
  _573 = _2761;
  _164 = _573;
  __A_2238 = _164;
  __B_2239 = _163;
  _2240 = VIEW_CONVERT_EXPR<__v4si>(__B_2239);
  _2241 = VIEW_CONVERT_EXPR<__v4si>(__A_2238);
  _2242 = __builtin_ia32_packssdw128 (_2241, _2240);

  <bb 361> :
  _2243 = _2242;
  _2244 = VIEW_CONVERT_EXPR<__m128i>(_2243);

  <bb 362> :
<L239>:
  _2762 = _2244;
  _574 = _2762;
  _165 = _574;
  row6 = _165;
  __A_2281 = x2_l_500;
  __B_2282 = bias_1_258;
  _2283 = VIEW_CONVERT_EXPR<__v4su>(__A_2281);
  _2284 = VIEW_CONVERT_EXPR<__v4su>(__B_2282);
  _2285 = _2283 + _2284;
  _2286 = VIEW_CONVERT_EXPR<__m128i>(_2285);

  <bb 363> :
<L246>:
  _2763 = _2286;
  abiased_l_576 = _2763;
  __A_2275 = x2_h_501;
  __B_2276 = bias_1_258;
  _2277 = VIEW_CONVERT_EXPR<__v4su>(__A_2275);
  _2278 = VIEW_CONVERT_EXPR<__v4su>(__B_2276);
  _2279 = _2277 + _2278;
  _2280 = VIEW_CONVERT_EXPR<__m128i>(_2279);

  <bb 364> :
<L245>:
  _2764 = _2280;
  abiased_h_577 = _2764;
  __A_2269 = abiased_l_576;
  __B_2270 = x5_l_542;
  _2271 = VIEW_CONVERT_EXPR<__v4su>(__A_2269);
  _2272 = VIEW_CONVERT_EXPR<__v4su>(__B_2270);
  _2273 = _2271 + _2272;
  _2274 = VIEW_CONVERT_EXPR<__m128i>(_2273);

  <bb 365> :
<L244>:
  _2765 = _2274;
  sum_l_578 = _2765;
  __A_2263 = abiased_h_577;
  __B_2264 = x5_h_543;
  _2265 = VIEW_CONVERT_EXPR<__v4su>(__A_2263);
  _2266 = VIEW_CONVERT_EXPR<__v4su>(__B_2264);
  _2267 = _2265 + _2266;
  _2268 = VIEW_CONVERT_EXPR<__m128i>(_2267);

  <bb 366> :
<L243>:
  _2766 = _2268;
  sum_h_579 = _2766;
  __A_2257 = abiased_l_576;
  __B_2258 = x5_l_542;
  _2259 = VIEW_CONVERT_EXPR<__v4su>(__A_2257);
  _2260 = VIEW_CONVERT_EXPR<__v4su>(__B_2258);
  _2261 = _2259 - _2260;
  _2262 = VIEW_CONVERT_EXPR<__m128i>(_2261);

  <bb 367> :
<L242>:
  _2767 = _2262;
  dif_l_580 = _2767;
  __A_2251 = abiased_h_577;
  __B_2252 = x5_h_543;
  _2253 = VIEW_CONVERT_EXPR<__v4su>(__A_2251);
  _2254 = VIEW_CONVERT_EXPR<__v4su>(__B_2252);
  _2255 = _2253 - _2254;
  _2256 = VIEW_CONVERT_EXPR<__m128i>(_2255);

  <bb 368> :
<L241>:
  _2768 = _2256;
  dif_h_581 = _2768;
  __A_2245 = sum_h_579;
  __B_2246 = 17;
  _2247 = VIEW_CONVERT_EXPR<__v4si>(__A_2245);
  _2248 = __builtin_ia32_psradi128 (_2247, __B_2246);

  <bb 369> :
  _2249 = _2248;
  _2250 = VIEW_CONVERT_EXPR<__m128i>(_2249);

  <bb 370> :
<L240>:
  _2769 = _2250;
  _582 = _2769;
  _166 = _582;
  __A_2287 = sum_l_578;
  __B_2288 = 17;
  _2289 = VIEW_CONVERT_EXPR<__v4si>(__A_2287);
  _2290 = __builtin_ia32_psradi128 (_2289, __B_2288);

  <bb 371> :
  _2291 = _2290;
  _2292 = VIEW_CONVERT_EXPR<__m128i>(_2291);

  <bb 372> :
<L247>:
  _2770 = _2292;
  _583 = _2770;
  _167 = _583;
  __A_2293 = _167;
  __B_2294 = _166;
  _2295 = VIEW_CONVERT_EXPR<__v4si>(__B_2294);
  _2296 = VIEW_CONVERT_EXPR<__v4si>(__A_2293);
  _2297 = __builtin_ia32_packssdw128 (_2296, _2295);

  <bb 373> :
  _2298 = _2297;
  _2299 = VIEW_CONVERT_EXPR<__m128i>(_2298);

  <bb 374> :
<L248>:
  _2771 = _2299;
  _584 = _2771;
  _168 = _584;
  row2 = _168;
  __A_2300 = dif_h_581;
  __B_2301 = 17;
  _2302 = VIEW_CONVERT_EXPR<__v4si>(__A_2300);
  _2303 = __builtin_ia32_psradi128 (_2302, __B_2301);

  <bb 375> :
  _2304 = _2303;
  _2305 = VIEW_CONVERT_EXPR<__m128i>(_2304);

  <bb 376> :
<L249>:
  _2772 = _2305;
  _586 = _2772;
  _169 = _586;
  __A_2306 = dif_l_580;
  __B_2307 = 17;
  _2308 = VIEW_CONVERT_EXPR<__v4si>(__A_2306);
  _2309 = __builtin_ia32_psradi128 (_2308, __B_2307);

  <bb 377> :
  _2310 = _2309;
  _2311 = VIEW_CONVERT_EXPR<__m128i>(_2310);

  <bb 378> :
<L250>:
  _2773 = _2311;
  _587 = _2773;
  _170 = _587;
  __A_2312 = _170;
  __B_2313 = _169;
  _2314 = VIEW_CONVERT_EXPR<__v4si>(__B_2313);
  _2315 = VIEW_CONVERT_EXPR<__v4si>(__A_2312);
  _2316 = __builtin_ia32_packssdw128 (_2315, _2314);

  <bb 379> :
  _2317 = _2316;
  _2318 = VIEW_CONVERT_EXPR<__m128i>(_2317);

  <bb 380> :
<L251>:
  _2774 = _2318;
  _588 = _2774;
  _171 = _588;
  row5 = _171;
  __A_2355 = x3_l_496;
  __B_2356 = bias_1_258;
  _2357 = VIEW_CONVERT_EXPR<__v4su>(__A_2355);
  _2358 = VIEW_CONVERT_EXPR<__v4su>(__B_2356);
  _2359 = _2357 + _2358;
  _2360 = VIEW_CONVERT_EXPR<__m128i>(_2359);

  <bb 381> :
<L258>:
  _2775 = _2360;
  abiased_l_590 = _2775;
  __A_2349 = x3_h_497;
  __B_2350 = bias_1_258;
  _2351 = VIEW_CONVERT_EXPR<__v4su>(__A_2349);
  _2352 = VIEW_CONVERT_EXPR<__v4su>(__B_2350);
  _2353 = _2351 + _2352;
  _2354 = VIEW_CONVERT_EXPR<__m128i>(_2353);

  <bb 382> :
<L257>:
  _2776 = _2354;
  abiased_h_591 = _2776;
  __A_2343 = abiased_l_590;
  __B_2344 = x4_l_540;
  _2345 = VIEW_CONVERT_EXPR<__v4su>(__A_2343);
  _2346 = VIEW_CONVERT_EXPR<__v4su>(__B_2344);
  _2347 = _2345 + _2346;
  _2348 = VIEW_CONVERT_EXPR<__m128i>(_2347);

  <bb 383> :
<L256>:
  _2777 = _2348;
  sum_l_592 = _2777;
  __A_2337 = abiased_h_591;
  __B_2338 = x4_h_541;
  _2339 = VIEW_CONVERT_EXPR<__v4su>(__A_2337);
  _2340 = VIEW_CONVERT_EXPR<__v4su>(__B_2338);
  _2341 = _2339 + _2340;
  _2342 = VIEW_CONVERT_EXPR<__m128i>(_2341);

  <bb 384> :
<L255>:
  _2778 = _2342;
  sum_h_593 = _2778;
  __A_2331 = abiased_l_590;
  __B_2332 = x4_l_540;
  _2333 = VIEW_CONVERT_EXPR<__v4su>(__A_2331);
  _2334 = VIEW_CONVERT_EXPR<__v4su>(__B_2332);
  _2335 = _2333 - _2334;
  _2336 = VIEW_CONVERT_EXPR<__m128i>(_2335);

  <bb 385> :
<L254>:
  _2779 = _2336;
  dif_l_594 = _2779;
  __A_2325 = abiased_h_591;
  __B_2326 = x4_h_541;
  _2327 = VIEW_CONVERT_EXPR<__v4su>(__A_2325);
  _2328 = VIEW_CONVERT_EXPR<__v4su>(__B_2326);
  _2329 = _2327 - _2328;
  _2330 = VIEW_CONVERT_EXPR<__m128i>(_2329);

  <bb 386> :
<L253>:
  _2780 = _2330;
  dif_h_595 = _2780;
  __A_2319 = sum_h_593;
  __B_2320 = 17;
  _2321 = VIEW_CONVERT_EXPR<__v4si>(__A_2319);
  _2322 = __builtin_ia32_psradi128 (_2321, __B_2320);

  <bb 387> :
  _2323 = _2322;
  _2324 = VIEW_CONVERT_EXPR<__m128i>(_2323);

  <bb 388> :
<L252>:
  _2781 = _2324;
  _596 = _2781;
  _172 = _596;
  __A_2361 = sum_l_592;
  __B_2362 = 17;
  _2363 = VIEW_CONVERT_EXPR<__v4si>(__A_2361);
  _2364 = __builtin_ia32_psradi128 (_2363, __B_2362);

  <bb 389> :
  _2365 = _2364;
  _2366 = VIEW_CONVERT_EXPR<__m128i>(_2365);

  <bb 390> :
<L259>:
  _2782 = _2366;
  _597 = _2782;
  _173 = _597;
  __A_2367 = _173;
  __B_2368 = _172;
  _2369 = VIEW_CONVERT_EXPR<__v4si>(__B_2368);
  _2370 = VIEW_CONVERT_EXPR<__v4si>(__A_2367);
  _2371 = __builtin_ia32_packssdw128 (_2370, _2369);

  <bb 391> :
  _2372 = _2371;
  _2373 = VIEW_CONVERT_EXPR<__m128i>(_2372);

  <bb 392> :
<L260>:
  _2783 = _2373;
  _598 = _2783;
  _174 = _598;
  row3 = _174;
  __A_2374 = dif_h_595;
  __B_2375 = 17;
  _2376 = VIEW_CONVERT_EXPR<__v4si>(__A_2374);
  _2377 = __builtin_ia32_psradi128 (_2376, __B_2375);

  <bb 393> :
  _2378 = _2377;
  _2379 = VIEW_CONVERT_EXPR<__m128i>(_2378);

  <bb 394> :
<L261>:
  _2784 = _2379;
  _600 = _2784;
  _175 = _600;
  __A_2380 = dif_l_594;
  __B_2381 = 17;
  _2382 = VIEW_CONVERT_EXPR<__v4si>(__A_2380);
  _2383 = __builtin_ia32_psradi128 (_2382, __B_2381);

  <bb 395> :
  _2384 = _2383;
  _2385 = VIEW_CONVERT_EXPR<__m128i>(_2384);

  <bb 396> :
<L262>:
  _2785 = _2385;
  _601 = _2785;
  _176 = _601;
  __A_2386 = _176;
  __B_2387 = _175;
  _2388 = VIEW_CONVERT_EXPR<__v4si>(__B_2387);
  _2389 = VIEW_CONVERT_EXPR<__v4si>(__A_2386);
  _2390 = __builtin_ia32_packssdw128 (_2389, _2388);

  <bb 397> :
  _2391 = _2390;
  _2392 = VIEW_CONVERT_EXPR<__m128i>(_2391);

  <bb 398> :
<L263>:
  _2786 = _2392;
  _602 = _2786;
  row4_603 = _602;
  sum04 ={v} {CLOBBER};
  dif04 ={v} {CLOBBER};
  sum17 ={v} {CLOBBER};
  sum35 ={v} {CLOBBER};
  row1.199_177 = row1;
  __A_2393 = row0_557;
  __B_2394 = row1.199_177;
  _2395 = VIEW_CONVERT_EXPR<__v8hi>(__B_2394);
  _2396 = VIEW_CONVERT_EXPR<__v8hi>(__A_2393);
  _2397 = __builtin_ia32_packuswb128 (_2396, _2395);

  <bb 399> :
  _2398 = _2397;
  _2399 = VIEW_CONVERT_EXPR<__m128i>(_2398);

  <bb 400> :
<L264>:
  _2787 = _2399;
  _608 = _2787;
  _178 = _608;
  p0 = _178;
  row3.200_179 = row3;
  row2.201_180 = row2;
  __A_2400 = row2.201_180;
  __B_2401 = row3.200_179;
  _2402 = VIEW_CONVERT_EXPR<__v8hi>(__B_2401);
  _2403 = VIEW_CONVERT_EXPR<__v8hi>(__A_2400);
  _2404 = __builtin_ia32_packuswb128 (_2403, _2402);

  <bb 401> :
  _2405 = _2404;
  _2406 = VIEW_CONVERT_EXPR<__m128i>(_2405);

  <bb 402> :
<L265>:
  _2788 = _2406;
  _610 = _2788;
  _181 = _610;
  p1 = _181;
  row5.202_182 = row5;
  __A_2407 = row4_603;
  __B_2408 = row5.202_182;
  _2409 = VIEW_CONVERT_EXPR<__v8hi>(__B_2408);
  _2410 = VIEW_CONVERT_EXPR<__v8hi>(__A_2407);
  _2411 = __builtin_ia32_packuswb128 (_2410, _2409);

  <bb 403> :
  _2412 = _2411;
  _2413 = VIEW_CONVERT_EXPR<__m128i>(_2412);

  <bb 404> :
<L266>:
  _2789 = _2413;
  _612 = _2789;
  _183 = _612;
  p2 = _183;
  row7.203_184 = row7;
  row6.204_185 = row6;
  __A_2414 = row6.204_185;
  __B_2415 = row7.203_184;
  _2416 = VIEW_CONVERT_EXPR<__v8hi>(__B_2415);
  _2417 = VIEW_CONVERT_EXPR<__v8hi>(__A_2414);
  _2418 = __builtin_ia32_packuswb128 (_2417, _2416);

  <bb 405> :
  _2419 = _2418;
  _2420 = VIEW_CONVERT_EXPR<__m128i>(_2419);

  <bb 406> :
<L267>:
  _2790 = _2420;
  _614 = _2790;
  _186 = _614;
  p3 = _186;
  tmp_616 = p0;
  p2.205_187 = p2;
  p0.206_188 = p0;
  __A_2421 = p0.206_188;
  __B_2422 = p2.205_187;
  _2423 = VIEW_CONVERT_EXPR<__v16qi>(__B_2422);
  _2424 = VIEW_CONVERT_EXPR<__v16qi>(__A_2421);
  _2425 = __builtin_ia32_punpcklbw128 (_2424, _2423);

  <bb 407> :
  _2426 = _2425;
  _2427 = VIEW_CONVERT_EXPR<__m128i>(_2426);

  <bb 408> :
<L268>:
  _2791 = _2427;
  _617 = _2791;
  _189 = _617;
  p0 = _189;
  p2.207_190 = p2;
  __A_2428 = tmp_616;
  __B_2429 = p2.207_190;
  _2430 = VIEW_CONVERT_EXPR<__v16qi>(__B_2429);
  _2431 = VIEW_CONVERT_EXPR<__v16qi>(__A_2428);
  _2432 = __builtin_ia32_punpckhbw128 (_2431, _2430);

  <bb 409> :
  _2433 = _2432;
  _2434 = VIEW_CONVERT_EXPR<__m128i>(_2433);

  <bb 410> :
<L269>:
  _2792 = _2434;
  _619 = _2792;
  _191 = _619;
  p2 = _191;
  tmp_621 = p1;
  p3.208_192 = p3;
  p1.209_193 = p1;
  __A_2435 = p1.209_193;
  __B_2436 = p3.208_192;
  _2437 = VIEW_CONVERT_EXPR<__v16qi>(__B_2436);
  _2438 = VIEW_CONVERT_EXPR<__v16qi>(__A_2435);
  _2439 = __builtin_ia32_punpcklbw128 (_2438, _2437);

  <bb 411> :
  _2440 = _2439;
  _2441 = VIEW_CONVERT_EXPR<__m128i>(_2440);

  <bb 412> :
<L270>:
  _2793 = _2441;
  _622 = _2793;
  _194 = _622;
  p1 = _194;
  p3.210_195 = p3;
  __A_2442 = tmp_621;
  __B_2443 = p3.210_195;
  _2444 = VIEW_CONVERT_EXPR<__v16qi>(__B_2443);
  _2445 = VIEW_CONVERT_EXPR<__v16qi>(__A_2442);
  _2446 = __builtin_ia32_punpckhbw128 (_2445, _2444);

  <bb 413> :
  _2447 = _2446;
  _2448 = VIEW_CONVERT_EXPR<__m128i>(_2447);

  <bb 414> :
<L271>:
  _2794 = _2448;
  _624 = _2794;
  _196 = _624;
  p3 = _196;
  tmp_626 = p0;
  p1.211_197 = p1;
  p0.212_198 = p0;
  __A_2449 = p0.212_198;
  __B_2450 = p1.211_197;
  _2451 = VIEW_CONVERT_EXPR<__v16qi>(__B_2450);
  _2452 = VIEW_CONVERT_EXPR<__v16qi>(__A_2449);
  _2453 = __builtin_ia32_punpcklbw128 (_2452, _2451);

  <bb 415> :
  _2454 = _2453;
  _2455 = VIEW_CONVERT_EXPR<__m128i>(_2454);

  <bb 416> :
<L272>:
  _2795 = _2455;
  _627 = _2795;
  _199 = _627;
  p0 = _199;
  p1.213_200 = p1;
  __A_2456 = tmp_626;
  __B_2457 = p1.213_200;
  _2458 = VIEW_CONVERT_EXPR<__v16qi>(__B_2457);
  _2459 = VIEW_CONVERT_EXPR<__v16qi>(__A_2456);
  _2460 = __builtin_ia32_punpckhbw128 (_2459, _2458);

  <bb 417> :
  _2461 = _2460;
  _2462 = VIEW_CONVERT_EXPR<__m128i>(_2461);

  <bb 418> :
<L273>:
  _2796 = _2462;
  _629 = _2796;
  _201 = _629;
  p1 = _201;
  tmp_631 = p2;
  p3.214_202 = p3;
  p2.215_203 = p2;
  __A_2463 = p2.215_203;
  __B_2464 = p3.214_202;
  _2465 = VIEW_CONVERT_EXPR<__v16qi>(__B_2464);
  _2466 = VIEW_CONVERT_EXPR<__v16qi>(__A_2463);
  _2467 = __builtin_ia32_punpcklbw128 (_2466, _2465);

  <bb 419> :
  _2468 = _2467;
  _2469 = VIEW_CONVERT_EXPR<__m128i>(_2468);

  <bb 420> :
<L274>:
  _2797 = _2469;
  _632 = _2797;
  _204 = _632;
  p2 = _204;
  p3.216_205 = p3;
  __A_2470 = tmp_631;
  __B_2471 = p3.216_205;
  _2472 = VIEW_CONVERT_EXPR<__v16qi>(__B_2471);
  _2473 = VIEW_CONVERT_EXPR<__v16qi>(__A_2470);
  _2474 = __builtin_ia32_punpckhbw128 (_2473, _2472);

  <bb 421> :
  _2475 = _2474;
  _2476 = VIEW_CONVERT_EXPR<__m128i>(_2475);

  <bb 422> :
<L275>:
  _2798 = _2476;
  _634 = _2798;
  _206 = _634;
  p3 = _206;
  tmp_636 = p0;
  p2.217_207 = p2;
  p0.218_208 = p0;
  __A_2477 = p0.218_208;
  __B_2478 = p2.217_207;
  _2479 = VIEW_CONVERT_EXPR<__v16qi>(__B_2478);
  _2480 = VIEW_CONVERT_EXPR<__v16qi>(__A_2477);
  _2481 = __builtin_ia32_punpcklbw128 (_2480, _2479);

  <bb 423> :
  _2482 = _2481;
  _2483 = VIEW_CONVERT_EXPR<__m128i>(_2482);

  <bb 424> :
<L276>:
  _2799 = _2483;
  _637 = _2799;
  _209 = _637;
  p0 = _209;
  p2.219_210 = p2;
  __A_2484 = tmp_636;
  __B_2485 = p2.219_210;
  _2486 = VIEW_CONVERT_EXPR<__v16qi>(__B_2485);
  _2487 = VIEW_CONVERT_EXPR<__v16qi>(__A_2484);
  _2488 = __builtin_ia32_punpckhbw128 (_2487, _2486);

  <bb 425> :
  _2489 = _2488;
  _2490 = VIEW_CONVERT_EXPR<__m128i>(_2489);

  <bb 426> :
<L277>:
  _2800 = _2490;
  _639 = _2800;
  _211 = _639;
  p2 = _211;
  tmp_641 = p1;
  p3.220_212 = p3;
  p1.221_213 = p1;
  __A_2491 = p1.221_213;
  __B_2492 = p3.220_212;
  _2493 = VIEW_CONVERT_EXPR<__v16qi>(__B_2492);
  _2494 = VIEW_CONVERT_EXPR<__v16qi>(__A_2491);
  _2495 = __builtin_ia32_punpcklbw128 (_2494, _2493);

  <bb 427> :
  _2496 = _2495;
  _2497 = VIEW_CONVERT_EXPR<__m128i>(_2496);

  <bb 428> :
<L278>:
  _2801 = _2497;
  _642 = _2801;
  _214 = _642;
  p1 = _214;
  p3.222_215 = p3;
  __A_2498 = tmp_641;
  __B_2499 = p3.222_215;
  _2500 = VIEW_CONVERT_EXPR<__v16qi>(__B_2499);
  _2501 = VIEW_CONVERT_EXPR<__v16qi>(__A_2498);
  _2502 = __builtin_ia32_punpckhbw128 (_2501, _2500);

  <bb 429> :
  _2503 = _2502;
  _2504 = VIEW_CONVERT_EXPR<__m128i>(_2503);

  <bb 430> :
<L279>:
  _2802 = _2504;
  _644 = _2802;
  _216 = _644;
  p3 = _216;
  p0.223_217 = p0;
  __P_2505 = out_646(D);
  __B_2506 = p0.223_217;
  _2507 = BIT_FIELD_REF <__B_2506, 64, 0>;
  _2508 = VIEW_CONVERT_EXPR<__m64>(_2507);
  MEM[(__m64_u * {ref-all})__P_2505] = _2508;
  _218 = (sizetype) out_stride_647(D);
  out_648 = out_646(D) + _218;
  p0.224_219 = p0;
  _220 = VIEW_CONVERT_EXPR<__v4si>(p0.224_219);
  _649 = __builtin_ia32_pshufd (_220, 78);

  <bb 431> :
  _221 = _649;
  _222 = VIEW_CONVERT_EXPR<__m128i>(_221);
  __P_2513 = out_648;
  __B_2514 = _222;
  _2515 = BIT_FIELD_REF <__B_2514, 64, 0>;
  _2516 = VIEW_CONVERT_EXPR<__m64>(_2515);
  MEM[(__m64_u * {ref-all})__P_2513] = _2516;
  _223 = (sizetype) out_stride_647(D);
  out_650 = out_648 + _223;
  p2.225_224 = p2;
  __P_2509 = out_650;
  __B_2510 = p2.225_224;
  _2511 = BIT_FIELD_REF <__B_2510, 64, 0>;
  _2512 = VIEW_CONVERT_EXPR<__m64>(_2511);
  MEM[(__m64_u * {ref-all})__P_2509] = _2512;
  _225 = (sizetype) out_stride_647(D);
  out_651 = out_650 + _225;
  p2.226_226 = p2;
  _227 = VIEW_CONVERT_EXPR<__v4si>(p2.226_226);
  _652 = __builtin_ia32_pshufd (_227, 78);

  <bb 432> :
  _228 = _652;
  _229 = VIEW_CONVERT_EXPR<__m128i>(_228);
  __P_2521 = out_651;
  __B_2522 = _229;
  _2523 = BIT_FIELD_REF <__B_2522, 64, 0>;
  _2524 = VIEW_CONVERT_EXPR<__m64>(_2523);
  MEM[(__m64_u * {ref-all})__P_2521] = _2524;
  _230 = (sizetype) out_stride_647(D);
  out_653 = out_651 + _230;
  p1.227_231 = p1;
  __P_2517 = out_653;
  __B_2518 = p1.227_231;
  _2519 = BIT_FIELD_REF <__B_2518, 64, 0>;
  _2520 = VIEW_CONVERT_EXPR<__m64>(_2519);
  MEM[(__m64_u * {ref-all})__P_2517] = _2520;
  _232 = (sizetype) out_stride_647(D);
  out_654 = out_653 + _232;
  p1.228_233 = p1;
  _234 = VIEW_CONVERT_EXPR<__v4si>(p1.228_233);
  _655 = __builtin_ia32_pshufd (_234, 78);

  <bb 433> :
  _235 = _655;
  _236 = VIEW_CONVERT_EXPR<__m128i>(_235);
  __P_2529 = out_654;
  __B_2530 = _236;
  _2531 = BIT_FIELD_REF <__B_2530, 64, 0>;
  _2532 = VIEW_CONVERT_EXPR<__m64>(_2531);
  MEM[(__m64_u * {ref-all})__P_2529] = _2532;
  _237 = (sizetype) out_stride_647(D);
  out_656 = out_654 + _237;
  p3.229_238 = p3;
  __P_2525 = out_656;
  __B_2526 = p3.229_238;
  _2527 = BIT_FIELD_REF <__B_2526, 64, 0>;
  _2528 = VIEW_CONVERT_EXPR<__m64>(_2527);
  MEM[(__m64_u * {ref-all})__P_2525] = _2528;
  _239 = (sizetype) out_stride_647(D);
  out_657 = out_656 + _239;
  p3.230_240 = p3;
  _241 = VIEW_CONVERT_EXPR<__v4si>(p3.230_240);
  _658 = __builtin_ia32_pshufd (_241, 78);

  <bb 434> :
  _242 = _658;
  _243 = VIEW_CONVERT_EXPR<__m128i>(_242);
  __P_2533 = out_657;
  __B_2534 = _243;
  _2535 = BIT_FIELD_REF <__B_2534, 64, 0>;
  _2536 = VIEW_CONVERT_EXPR<__m64>(_2535);
  MEM[(__m64_u * {ref-all})__P_2533] = _2536;
  p0 ={v} {CLOBBER};
  p1 ={v} {CLOBBER};
  p2 ={v} {CLOBBER};
  p3 ={v} {CLOBBER};
  row1 ={v} {CLOBBER};
  row2 ={v} {CLOBBER};
  row3 ={v} {CLOBBER};
  row5 ={v} {CLOBBER};
  row6 ={v} {CLOBBER};
  row7 ={v} {CLOBBER};
  return;

  <bb 435> :
<L0>:
  resx 2

  <bb 436> :
<L1>:
  resx 4

  <bb 437> :
<L2>:
  resx 6

  <bb 438> :
<L3>:
  resx 1

}



;; Function stbi__get_marker (_ZL16stbi__get_markerP10stbi__jpeg, funcdef_no=851, decl_uid=11283, cgraph_uid=757, symbol_order=769)

stbi__get_marker (struct stbi__jpeg * j)
{
  stbi_uc D.14418;
  stbi_uc D.14417;
  stbi_uc x;
  stbi_uc D.14411;
  unsigned char _1;
  struct stbi__context * _2;
  struct stbi__context * _3;
  stbi_uc _5;
  stbi_uc _12;
  stbi_uc _14;
  stbi_uc _16;
  stbi_uc _18;
  stbi_uc _20;

  <bb 2> :
  _1 = j_9(D)->marker;
  if (_1 != 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_10 = j_9(D)->marker;
  j_9(D)->marker = 255;
  _12 = x_10;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 4> :
  _2 = j_9(D)->s;
  _14 = stbi__get8 (_2);
  x_15 = _14;
  if (x_15 != 255)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _16 = 255;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  # x_4 = PHI <x_15(4), x_19(7)>
  if (x_4 != 255)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _3 = j_9(D)->s;
  _18 = stbi__get8 (_3);
  x_19 = _18;
  goto <bb 6>; [INV]

  <bb 8> :
  _20 = x_4;

  <bb 9> :
  # _5 = PHI <_12(3), _16(5), _20(8)>
<L7>:
  return _5;

}



;; Function stbi__jpeg_reset (_ZL16stbi__jpeg_resetP10stbi__jpeg, funcdef_no=852, decl_uid=11289, cgraph_uid=758, symbol_order=770)

stbi__jpeg_reset (struct stbi__jpeg * j)
{
  int iftmp.231;
  int _1;
  int _2;
  int _3;
  int _4;
  int iftmp.231_5;
  int iftmp.231_16;
  int iftmp.231_17;

  <bb 2> :
  j_7(D)->code_bits = 0;
  j_7(D)->code_buffer = 0;
  j_7(D)->nomore = 0;
  j_7(D)->img_comp[3].dc_pred = 0;
  _1 = j_7(D)->img_comp[3].dc_pred;
  j_7(D)->img_comp[2].dc_pred = _1;
  _2 = j_7(D)->img_comp[2].dc_pred;
  j_7(D)->img_comp[1].dc_pred = _2;
  _3 = j_7(D)->img_comp[1].dc_pred;
  j_7(D)->img_comp[0].dc_pred = _3;
  j_7(D)->marker = 255;
  _4 = j_7(D)->restart_interval;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.231_16 = j_7(D)->restart_interval;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.231_17 = 2147483647;

  <bb 5> :
  # iftmp.231_5 = PHI <iftmp.231_16(3), iftmp.231_17(4)>
  j_7(D)->todo = iftmp.231_5;
  j_7(D)->eob_run = 0;
  return;

}



;; Function stbi__parse_entropy_coded_data (_ZL30stbi__parse_entropy_coded_dataP10stbi__jpeg, funcdef_no=853, decl_uid=11292, cgraph_uid=759, symbol_order=771)

stbi__parse_entropy_coded_data (struct stbi__jpeg * z)
{
  int D.14525;
  int D.14524;
  int D.14523;
  int D.14520;
  int D.14517;
  short int * data;
  int y2;
  int x2;
  int n;
  int y;
  int x;
  int k;
  int j;
  int i;
  int ha;
  short int * data;
  int h;
  int w;
  int n;
  int j;
  int i;
  int ha;
  int y2;
  int x2;
  int n;
  short int data[64];
  int y;
  int x;
  int k;
  int j;
  int i;
  int ha;
  int h;
  int w;
  int n;
  short int data[64];
  int j;
  int i;
  bool retval.240;
  bool retval.239;
  bool retval.238;
  bool retval.237;
  bool retval.236;
  bool retval.235;
  bool retval.234;
  bool retval.233;
  int D.14434;
  bool retval.232;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  stbi__uint16[64] * _8;
  stbi__int16[512] * _9;
  struct stbi__huffman[4] * _10;
  long long unsigned int _11;
  long long unsigned int _12;
  struct stbi__huffman * _13;
  struct stbi__huffman[4] * _14;
  int _15;
  long long unsigned int _16;
  long long unsigned int _17;
  struct stbi__huffman * _18;
  int _19;
  void (*<Tc52>) (stbi_uc *, int, short int *) _20;
  int _21;
  stbi_uc * _22;
  int _23;
  int _24;
  int _25;
  sizetype _26;
  int _27;
  sizetype _28;
  sizetype _29;
  stbi_uc * _30;
  int _31;
  int _32;
  int _33;
  int _34;
  unsigned char _35;
  unsigned char _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  stbi__uint16[64] * _49;
  stbi__int16[512] * _50;
  struct stbi__huffman[4] * _51;
  long long unsigned int _52;
  long long unsigned int _53;
  struct stbi__huffman * _54;
  struct stbi__huffman[4] * _55;
  int _56;
  long long unsigned int _57;
  long long unsigned int _58;
  struct stbi__huffman * _59;
  int _60;
  void (*<Tc52>) (stbi_uc *, int, short int *) _61;
  int _62;
  stbi_uc * _63;
  int _64;
  int _65;
  sizetype _66;
  sizetype _67;
  sizetype _68;
  stbi_uc * _69;
  int _70;
  int _71;
  int _72;
  int _73;
  unsigned char _74;
  unsigned char _75;
  int _76;
  int _77;
  int _78;
  int _79;
  int _80;
  short int * _81;
  int _82;
  int _83;
  int _84;
  int _85;
  long long unsigned int _86;
  long long unsigned int _87;
  int _88;
  int _89;
  struct stbi__huffman * _90;
  int _91;
  stbi__int16[512] * _92;
  struct stbi__huffman * _93;
  int _94;
  int _95;
  int _96;
  int _97;
  int _98;
  unsigned char _99;
  unsigned char _100;
  int _101;
  int _102;
  int _103;
  int _104;
  int _105;
  int _106;
  int _107;
  int _108;
  int _109;
  short int * _110;
  int _111;
  int _112;
  int _113;
  int _114;
  long long unsigned int _115;
  long long unsigned int _116;
  int _117;
  struct stbi__huffman * _118;
  int _119;
  int _120;
  int _121;
  int _122;
  int _123;
  unsigned char _124;
  unsigned char _125;
  int _140;
  int _141;
  int _142;
  int _181;
  bool retval.232_182;
  int _183;
  bool retval.233_186;
  int _189;
  int _193;
  int _205;
  bool retval.234_206;
  int _207;
  bool retval.235_213;
  int _216;
  int _220;
  int _229;
  bool retval.236_230;
  int _231;
  int _234;
  bool retval.237_235;
  int _236;
  bool retval.238_238;
  int _241;
  int _244;
  int _255;
  bool retval.239_256;
  int _257;
  bool retval.240_262;
  int _265;
  int _268;

  <bb 2> :
  stbi__jpeg_reset (z_172(D));
  _1 = z_172(D)->progressive;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 3> :
  _2 = z_172(D)->scan_n;
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 4> :
  n_174 = z_172(D)->order[0];
  _3 = z_172(D)->img_comp[n_174].x;
  _4 = _3 + 7;
  w_175 = _4 >> 3;
  _5 = z_172(D)->img_comp[n_174].y;
  _6 = _5 + 7;
  h_176 = _6 >> 3;
  j_177 = 0;

  <bb 5> :
  # j_127 = PHI <j_177(4), j_192(21)>
  if (j_127 >= h_176)
    goto <bb 22>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  i_178 = 0;

  <bb 7> :
  # i_126 = PHI <i_178(6), i_190(20)>
  if (i_126 >= w_175)
    goto <bb 21>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  ha_179 = z_172(D)->img_comp[n_174].ha;
  _7 = z_172(D)->img_comp[n_174].tq;
  _8 = &z_172(D)->dequant[_7];
  _9 = &z_172(D)->fast_ac[ha_179];
  _10 = &z_172(D)->huff_ac;
  _11 = (long long unsigned int) ha_179;
  _12 = _11 * 1680;
  _13 = _10 + _12;
  _14 = &z_172(D)->huff_dc;
  _15 = z_172(D)->img_comp[n_174].hd;
  _16 = (long long unsigned int) _15;
  _17 = _16 * 1680;
  _18 = _14 + _17;
  _181 = stbi__jpeg_decode_block (z_172(D), &data, _18, _13, _9, n_174, _8);

  <bb 9> :
  _19 = _181;
  retval.232_182 = _19 == 0;
  if (retval.232_182 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _183 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 11> :
  _20 = z_172(D)->idct_block_kernel;
  _21 = z_172(D)->img_comp[n_174].w2;
  _22 = z_172(D)->img_comp[n_174].data;
  _23 = z_172(D)->img_comp[n_174].w2;
  _24 = j_127 * _23;
  _25 = _24 * 8;
  _26 = (sizetype) _25;
  _27 = i_126 * 8;
  _28 = (sizetype) _27;
  _29 = _26 + _28;
  _30 = _22 + _29;
  _20 (_30, _21, &data);

  <bb 12> :
  _31 = z_172(D)->todo;
  _32 = _31 + -1;
  z_172(D)->todo = _32;
  _33 = z_172(D)->todo;
  retval.233_186 = _33 <= 0;
  if (retval.233_186 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 13> :
  _34 = z_172(D)->code_bits;
  if (_34 <= 23)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 15> :

  <bb 16> :
  _35 = z_172(D)->marker;
  if (_35 <= 207)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _36 = z_172(D)->marker;
  if (_36 > 215)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _189 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 19> :
  stbi__jpeg_reset (z_172(D));

  <bb 20> :
  i_190 = i_126 + 1;
  goto <bb 7>; [INV]

  <bb 21> :
  j_192 = j_127 + 1;
  goto <bb 5>; [INV]

  <bb 22> :
  _193 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 23> :
  # _140 = PHI <_183(10), _189(18), _193(22)>
  data ={v} {CLOBBER};
  goto <bb 98>; [INV]

  <bb 24> :
  j_195 = 0;

  <bb 25> :
  # j_129 = PHI <j_195(24), j_219(50)>
  _37 = z_172(D)->img_mcu_y;
  if (j_129 >= _37)
    goto <bb 51>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  i_196 = 0;

  <bb 27> :
  # i_128 = PHI <i_196(26), i_217(49)>
  _38 = z_172(D)->img_mcu_x;
  if (i_128 >= _38)
    goto <bb 50>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  k_197 = 0;

  <bb 29> :
  # k_130 = PHI <k_197(28), k_211(40)>
  _39 = z_172(D)->scan_n;
  if (k_130 >= _39)
    goto <bb 41>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  n_198 = z_172(D)->order[k_130];
  y_199 = 0;

  <bb 31> :
  # y_132 = PHI <y_199(30), y_210(39)>
  _40 = z_172(D)->img_comp[n_198].v;
  if (y_132 >= _40)
    goto <bb 40>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  x_200 = 0;

  <bb 33> :
  # x_131 = PHI <x_200(32), x_209(38)>
  _41 = z_172(D)->img_comp[n_198].h;
  if (x_131 >= _41)
    goto <bb 39>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _42 = z_172(D)->img_comp[n_198].h;
  _43 = i_128 * _42;
  _44 = x_131 + _43;
  x2_201 = _44 * 8;
  _45 = z_172(D)->img_comp[n_198].v;
  _46 = j_129 * _45;
  _47 = y_132 + _46;
  y2_202 = _47 * 8;
  ha_203 = z_172(D)->img_comp[n_198].ha;
  _48 = z_172(D)->img_comp[n_198].tq;
  _49 = &z_172(D)->dequant[_48];
  _50 = &z_172(D)->fast_ac[ha_203];
  _51 = &z_172(D)->huff_ac;
  _52 = (long long unsigned int) ha_203;
  _53 = _52 * 1680;
  _54 = _51 + _53;
  _55 = &z_172(D)->huff_dc;
  _56 = z_172(D)->img_comp[n_198].hd;
  _57 = (long long unsigned int) _56;
  _58 = _57 * 1680;
  _59 = _55 + _58;
  _205 = stbi__jpeg_decode_block (z_172(D), &data, _59, _54, _50, n_198, _49);

  <bb 35> :
  _60 = _205;
  retval.234_206 = _60 == 0;
  if (retval.234_206 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  _207 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 52>; [INV]

  <bb 37> :
  _61 = z_172(D)->idct_block_kernel;
  _62 = z_172(D)->img_comp[n_198].w2;
  _63 = z_172(D)->img_comp[n_198].data;
  _64 = z_172(D)->img_comp[n_198].w2;
  _65 = y2_202 * _64;
  _66 = (sizetype) _65;
  _67 = (sizetype) x2_201;
  _68 = _66 + _67;
  _69 = _63 + _68;
  _61 (_69, _62, &data);

  <bb 38> :
  x_209 = x_131 + 1;
  goto <bb 33>; [INV]

  <bb 39> :
  y_210 = y_132 + 1;
  goto <bb 31>; [INV]

  <bb 40> :
  k_211 = k_130 + 1;
  goto <bb 29>; [INV]

  <bb 41> :
  _70 = z_172(D)->todo;
  _71 = _70 + -1;
  z_172(D)->todo = _71;
  _72 = z_172(D)->todo;
  retval.235_213 = _72 <= 0;
  if (retval.235_213 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 42> :
  _73 = z_172(D)->code_bits;
  if (_73 <= 23)
    goto <bb 43>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 43> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 44> :

  <bb 45> :
  _74 = z_172(D)->marker;
  if (_74 <= 207)
    goto <bb 47>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 46> :
  _75 = z_172(D)->marker;
  if (_75 > 215)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  _216 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 52>; [INV]

  <bb 48> :
  stbi__jpeg_reset (z_172(D));

  <bb 49> :
  i_217 = i_128 + 1;
  goto <bb 27>; [INV]

  <bb 50> :
  j_219 = j_129 + 1;
  goto <bb 25>; [INV]

  <bb 51> :
  _220 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 52> :
  # _141 = PHI <_207(36), _216(47), _220(51)>
  data ={v} {CLOBBER};
  goto <bb 98>; [INV]

  <bb 53> :
  _76 = z_172(D)->scan_n;
  if (_76 == 1)
    goto <bb 54>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 54> :
  n_222 = z_172(D)->order[0];
  _77 = z_172(D)->img_comp[n_222].x;
  _78 = _77 + 7;
  w_223 = _78 >> 3;
  _79 = z_172(D)->img_comp[n_222].y;
  _80 = _79 + 7;
  h_224 = _80 >> 3;
  j_225 = 0;

  <bb 55> :
  # j_134 = PHI <j_225(54), j_243(71)>
  if (j_134 >= h_224)
    goto <bb 72>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  i_226 = 0;

  <bb 57> :
  # i_133 = PHI <i_226(56), i_242(70)>
  if (i_133 >= w_223)
    goto <bb 71>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 58> :
  _81 = z_172(D)->img_comp[n_222].coeff;
  _82 = z_172(D)->img_comp[n_222].coeff_w;
  _83 = j_134 * _82;
  _84 = i_133 + _83;
  _85 = _84 * 64;
  _86 = (long long unsigned int) _85;
  _87 = _86 * 2;
  data_227 = _81 + _87;
  _88 = z_172(D)->spec_start;
  if (_88 == 0)
    goto <bb 59>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 59> :
  _89 = z_172(D)->img_comp[n_222].hd;
  _90 = &z_172(D)->huff_dc[_89];
  _229 = stbi__jpeg_decode_block_prog_dc (z_172(D), data_227, _90, n_222);
  _91 = _229;
  retval.236_230 = _91 == 0;
  if (retval.236_230 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  _231 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 98>; [INV]

  <bb 61> :
  ha_232 = z_172(D)->img_comp[n_222].ha;
  _92 = &z_172(D)->fast_ac[ha_232];
  _93 = &z_172(D)->huff_ac[ha_232];
  _234 = stbi__jpeg_decode_block_prog_ac (z_172(D), data_227, _93, _92);
  _94 = _234;
  retval.237_235 = _94 == 0;
  if (retval.237_235 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  _236 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 98>; [INV]

  <bb 63> :
  _95 = z_172(D)->todo;
  _96 = _95 + -1;
  z_172(D)->todo = _96;
  _97 = z_172(D)->todo;
  retval.238_238 = _97 <= 0;
  if (retval.238_238 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 64> :
  _98 = z_172(D)->code_bits;
  if (_98 <= 23)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 66> :
  _99 = z_172(D)->marker;
  if (_99 <= 207)
    goto <bb 68>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 67> :
  _100 = z_172(D)->marker;
  if (_100 > 215)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  _241 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 98>; [INV]

  <bb 69> :
  stbi__jpeg_reset (z_172(D));

  <bb 70> :
  i_242 = i_133 + 1;
  goto <bb 57>; [INV]

  <bb 71> :
  j_243 = j_134 + 1;
  goto <bb 55>; [INV]

  <bb 72> :
  _244 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 98>; [INV]

  <bb 73> :
  j_245 = 0;

  <bb 74> :
  # j_136 = PHI <j_245(73), j_267(96)>
  _101 = z_172(D)->img_mcu_y;
  if (j_136 >= _101)
    goto <bb 97>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 75> :
  i_246 = 0;

  <bb 76> :
  # i_135 = PHI <i_246(75), i_266(95)>
  _102 = z_172(D)->img_mcu_x;
  if (i_135 >= _102)
    goto <bb 96>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  k_247 = 0;

  <bb 78> :
  # k_137 = PHI <k_247(77), k_260(87)>
  _103 = z_172(D)->scan_n;
  if (k_137 >= _103)
    goto <bb 88>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 79> :
  n_248 = z_172(D)->order[k_137];
  y_249 = 0;

  <bb 80> :
  # y_139 = PHI <y_249(79), y_259(86)>
  _104 = z_172(D)->img_comp[n_248].v;
  if (y_139 >= _104)
    goto <bb 87>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 81> :
  x_250 = 0;

  <bb 82> :
  # x_138 = PHI <x_250(81), x_258(85)>
  _105 = z_172(D)->img_comp[n_248].h;
  if (x_138 >= _105)
    goto <bb 86>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _106 = z_172(D)->img_comp[n_248].h;
  _107 = i_135 * _106;
  x2_251 = x_138 + _107;
  _108 = z_172(D)->img_comp[n_248].v;
  _109 = j_136 * _108;
  y2_252 = y_139 + _109;
  _110 = z_172(D)->img_comp[n_248].coeff;
  _111 = z_172(D)->img_comp[n_248].coeff_w;
  _112 = y2_252 * _111;
  _113 = x2_251 + _112;
  _114 = _113 * 64;
  _115 = (long long unsigned int) _114;
  _116 = _115 * 2;
  data_253 = _110 + _116;
  _117 = z_172(D)->img_comp[n_248].hd;
  _118 = &z_172(D)->huff_dc[_117];
  _255 = stbi__jpeg_decode_block_prog_dc (z_172(D), data_253, _118, n_248);
  _119 = _255;
  retval.239_256 = _119 == 0;
  if (retval.239_256 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  _257 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 98>; [INV]

  <bb 85> :
  x_258 = x_138 + 1;
  goto <bb 82>; [INV]

  <bb 86> :
  y_259 = y_139 + 1;
  goto <bb 80>; [INV]

  <bb 87> :
  k_260 = k_137 + 1;
  goto <bb 78>; [INV]

  <bb 88> :
  _120 = z_172(D)->todo;
  _121 = _120 + -1;
  z_172(D)->todo = _121;
  _122 = z_172(D)->todo;
  retval.240_262 = _122 <= 0;
  if (retval.240_262 != 0)
    goto <bb 89>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 89> :
  _123 = z_172(D)->code_bits;
  if (_123 <= 23)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 91> :
  _124 = z_172(D)->marker;
  if (_124 <= 207)
    goto <bb 93>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 92> :
  _125 = z_172(D)->marker;
  if (_125 > 215)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  _265 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 98>; [INV]

  <bb 94> :
  stbi__jpeg_reset (z_172(D));

  <bb 95> :
  i_266 = i_135 + 1;
  goto <bb 76>; [INV]

  <bb 96> :
  j_267 = j_136 + 1;
  goto <bb 74>; [INV]

  <bb 97> :
  _268 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 98> :
  # _142 = PHI <_140(23), _141(52), _231(60), _236(62), _241(68), _244(72), _257(84), _265(93), _268(97)>
<L99>:
  return _142;

  <bb 99> :
<L100>:
  resx 1

  <bb 100> :
<L101>:
  resx 3

}



;; Function stbi__jpeg_dequantize (_ZL21stbi__jpeg_dequantizePsPt, funcdef_no=854, decl_uid=11357, cgraph_uid=760, symbol_order=772)

stbi__jpeg_dequantize (short int * data, stbi__uint16 * dequant)
{
  int i;
  long long unsigned int _1;
  long long unsigned int _2;
  short int * _3;
  short int _4;
  unsigned short _5;
  long long unsigned int _6;
  long long unsigned int _7;
  stbi__uint16 * _8;
  short unsigned int _9;
  unsigned short _10;
  long long unsigned int _11;
  long long unsigned int _12;
  short int * _13;
  short int _14;

  <bb 2> :
  i_17 = 0;

  <bb 3> :
  # i_15 = PHI <i_17(2), i_22(4)>
  if (i_15 > 63)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = (long long unsigned int) i_15;
  _2 = _1 * 2;
  _3 = data_19(D) + _2;
  _4 = *_3;
  _5 = (unsigned short) _4;
  _6 = (long long unsigned int) i_15;
  _7 = _6 * 2;
  _8 = dequant_20(D) + _7;
  _9 = *_8;
  _10 = _5 * _9;
  _11 = (long long unsigned int) i_15;
  _12 = _11 * 2;
  _13 = data_19(D) + _12;
  _14 = (short int) _10;
  *_13 = _14;
  i_22 = i_15 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  return;

}



;; Function stbi__jpeg_finish (_ZL17stbi__jpeg_finishP10stbi__jpeg, funcdef_no=855, decl_uid=11363, cgraph_uid=761, symbol_order=773)

stbi__jpeg_finish (struct stbi__jpeg * z)
{
  short int * data;
  int h;
  int w;
  int n;
  int j;
  int i;
  int _1;
  struct stbi__context * _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  short int * _8;
  int _9;
  int _10;
  int _11;
  int _12;
  long long unsigned int _13;
  long long unsigned int _14;
  int _15;
  stbi__uint16[64] * _16;
  void (*<Tc52>) (stbi_uc *, int, short int *) _17;
  int _18;
  stbi_uc * _19;
  int _20;
  int _21;
  int _22;
  sizetype _23;
  int _24;
  sizetype _25;
  sizetype _26;
  stbi_uc * _27;

  <bb 2> :
  _1 = z_36(D)->progressive;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  n_37 = 0;

  <bb 4> :
  # n_30 = PHI <n_37(3), n_47(11)>
  _2 = z_36(D)->s;
  _3 = _2->img_n;
  if (n_30 >= _3)
    goto <bb 12>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _4 = z_36(D)->img_comp[n_30].x;
  _5 = _4 + 7;
  w_38 = _5 >> 3;
  _6 = z_36(D)->img_comp[n_30].y;
  _7 = _6 + 7;
  h_39 = _7 >> 3;
  j_40 = 0;

  <bb 6> :
  # j_29 = PHI <j_40(5), j_46(10)>
  if (j_29 >= h_39)
    goto <bb 11>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  i_41 = 0;

  <bb 8> :
  # i_28 = PHI <i_41(7), i_45(9)>
  if (i_28 >= w_38)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _8 = z_36(D)->img_comp[n_30].coeff;
  _9 = z_36(D)->img_comp[n_30].coeff_w;
  _10 = j_29 * _9;
  _11 = i_28 + _10;
  _12 = _11 * 64;
  _13 = (long long unsigned int) _12;
  _14 = _13 * 2;
  data_42 = _8 + _14;
  _15 = z_36(D)->img_comp[n_30].tq;
  _16 = &z_36(D)->dequant[_15];
  stbi__jpeg_dequantize (data_42, _16);
  _17 = z_36(D)->idct_block_kernel;
  _18 = z_36(D)->img_comp[n_30].w2;
  _19 = z_36(D)->img_comp[n_30].data;
  _20 = z_36(D)->img_comp[n_30].w2;
  _21 = j_29 * _20;
  _22 = _21 * 8;
  _23 = (sizetype) _22;
  _24 = i_28 * 8;
  _25 = (sizetype) _24;
  _26 = _23 + _25;
  _27 = _19 + _26;
  _17 (_27, _18, data_42);
  i_45 = i_28 + 1;
  goto <bb 8>; [INV]

  <bb 10> :
  j_46 = j_29 + 1;
  goto <bb 6>; [INV]

  <bb 11> :
  n_47 = n_30 + 1;
  goto <bb 4>; [INV]

  <bb 12> :

  <bb 13> :
  return;

}



;; Function stbi__process_marker (_ZL20stbi__process_markerP10stbi__jpegi, funcdef_no=856, decl_uid=11379, cgraph_uid=762, symbol_order=776)

stbi__process_marker (struct stbi__jpeg * z, int m)
{
  unsigned char D.14633;
  unsigned char D.14632;
  unsigned char D.14631;
  int D.14630;
  unsigned char D.14626;
  unsigned char D.14625;
  unsigned char D.14624;
  int D.14623;
  unsigned char D.14622;
  int D.14621;
  unsigned char D.14620;
  int D.14619;
  int D.14618;
  int D.14617;
  int i;
  int ok;
  static const unsigned char tag[6] = {65, 100, 111, 98, 101, 0};
  int i;
  int ok;
  static const unsigned char tag[5] = {74, 70, 73, 70, 0};
  int th;
  int tc;
  int q;
  int n;
  int i;
  int sizes[16];
  stbi_uc * v;
  int i;
  int t;
  int sixteen;
  int p;
  int q;
  int L;
  bool retval.247;
  bool retval.246;
  bool retval.245;
  bool retval.244;
  int iftmp.243;
  stbi__uint16 iftmp.242;
  bool retval.241;
  int D.14537;
  struct stbi__context * _1;
  int _2;
  struct stbi__context * _3;
  int _4;
  struct stbi__context * _5;
  int _6;
  struct stbi__context * _7;
  unsigned char _8;
  bool _9;
  struct stbi__context * _10;
  int _11;
  struct stbi__context * _12;
  unsigned char _13;
  unsigned char _14;
  int _15;
  bool _16;
  struct stbi__context * _17;
  int _18;
  struct stbi__context * _19;
  unsigned char _20;
  struct stbi__context * _21;
  unsigned char _22;
  int _23;
  int _24;
  struct stbi__huffman[4] * _25;
  long long unsigned int _26;
  long long unsigned int _27;
  struct stbi__huffman * _28;
  int _29;
  struct stbi__huffman[4] * _30;
  long long unsigned int _31;
  long long unsigned int _32;
  struct stbi__huffman * _33;
  int _34;
  struct stbi__context * _35;
  sizetype _36;
  stbi_uc * _37;
  unsigned char _38;
  struct stbi__huffman[4] * _39;
  long long unsigned int _40;
  long long unsigned int _41;
  struct stbi__huffman * _42;
  stbi__int16[512] * _43;
  bool _44;
  struct stbi__context * _45;
  struct stbi__context * _46;
  unsigned char _47;
  unsigned char _48;
  struct stbi__context * _49;
  unsigned char _50;
  unsigned char _51;
  struct stbi__context * _52;
  struct stbi__context * _53;
  struct stbi__context * _54;
  struct stbi__context * _55;
  unsigned char _56;
  int _57;
  struct stbi__context * _58;
  int _74;
  int _75;
  stbi__uint16 iftmp.242_76;
  int iftmp.243_77;
  int _97;
  int _100;
  bool retval.241_101;
  int _103;
  int _105;
  int _107;
  int _109;
  unsigned char _112;
  int _118;
  int _120;
  int _123;
  stbi__uint16 iftmp.242_124;
  unsigned char _126;
  stbi__uint16 iftmp.242_127;
  int iftmp.243_130;
  int iftmp.243_131;
  int _133;
  int _135;
  unsigned char _139;
  unsigned char _145;
  bool retval.244_151;
  int _152;
  bool retval.245_155;
  int _156;
  unsigned char _160;
  int _167;
  int _170;
  int _172;
  int _174;
  int _177;
  int _179;
  unsigned char _184;
  bool retval.246_185;
  unsigned char _193;
  bool retval.247_194;
  unsigned char _202;
  int _206;

  <bb 2> :
  switch (m_94(D)) <default: <L48> [INV], case 196: <L23> [INV], case 219: <L4> [INV], case 221: <L1> [INV], case 255: <L0> [INV]>

  <bb 3> :
<L0>:
  _97 = stbi__err ("expected marker");
  goto <bb 80>; [INV]

  <bb 4> :
<L1>:
  _1 = z_98(D)->s;
  _100 = stbi__get16be (_1);
  _2 = _100;
  retval.241_101 = _2 != 4;
  if (retval.241_101 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _103 = stbi__err ("bad DRI len");
  goto <bb 80>; [INV]

  <bb 6> :
  _3 = z_98(D)->s;
  _105 = stbi__get16be (_3);
  _4 = _105;
  z_98(D)->restart_interval = _4;
  _107 = 1;
  goto <bb 80>; [INV]

  <bb 7> :
<L4>:
  _5 = z_98(D)->s;
  _109 = stbi__get16be (_5);
  _6 = _109;
  L_110 = _6 + -2;

  <bb 8> :
  # L_59 = PHI <L_110(7), L_132(23)>
  if (L_59 <= 0)
    goto <bb 24>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _7 = z_98(D)->s;
  _112 = stbi__get8 (_7);
  _8 = _112;
  q_113 = (int) _8;
  p_114 = q_113 >> 4;
  _9 = p_114 != 0;
  sixteen_115 = (int) _9;
  t_116 = q_113 & 15;
  if (p_114 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (p_114 != 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _118 = stbi__err ("bad DQT type");
  goto <bb 80>; [INV]

  <bb 12> :
  if (t_116 > 3)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _120 = stbi__err ("bad DQT table");
  goto <bb 80>; [INV]

  <bb 14> :
  i_121 = 0;

  <bb 15> :
  # i_63 = PHI <i_121(14), i_129(19)>
  if (i_63 > 63)
    goto <bb 20>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  if (sixteen_115 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _10 = z_98(D)->s;
  _123 = stbi__get16be (_10);
  _11 = _123;
  iftmp.242_124 = (stbi__uint16) _11;
  goto <bb 19>; [INV]

  <bb 18> :
  _12 = z_98(D)->s;
  _126 = stbi__get8 (_12);
  _13 = _126;
  iftmp.242_127 = (stbi__uint16) _13;

  <bb 19> :
  # iftmp.242_76 = PHI <iftmp.242_124(17), iftmp.242_127(18)>
  _14 = stbi__jpeg_dezigzag[i_63];
  _15 = (int) _14;
  z_98(D)->dequant[t_116][_15] = iftmp.242_76;
  i_129 = i_63 + 1;
  goto <bb 15>; [INV]

  <bb 20> :
  if (sixteen_115 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.243_130 = 129;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.243_131 = 65;

  <bb 23> :
  # iftmp.243_77 = PHI <iftmp.243_130(21), iftmp.243_131(22)>
  L_132 = L_59 - iftmp.243_77;
  goto <bb 8>; [INV]

  <bb 24> :
  _16 = L_59 == 0;
  _133 = (int) _16;
  goto <bb 80>; [INV]

  <bb 25> :
<L23>:
  _17 = z_98(D)->s;
  _135 = stbi__get16be (_17);
  _18 = _135;
  L_136 = _18 + -2;

  <bb 26> :
  # L_60 = PHI <L_136(25), L_164(48)>
  if (L_60 <= 0)
    goto <bb 50>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  n_137 = 0;
  _19 = z_98(D)->s;
  _139 = stbi__get8 (_19);

  <bb 28> :
  _20 = _139;
  q_140 = (int) _20;
  tc_141 = q_140 >> 4;
  th_142 = q_140 & 15;
  if (tc_141 > 1)
    goto <bb 30>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  if (th_142 > 3)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _167 = stbi__err ("bad DHT header");
  goto <bb 49>; [INV]

  <bb 31> :
  i_143 = 0;

  <bb 32> :
  # i_65 = PHI <i_143(31), i_148(34)>
  # n_67 = PHI <n_137(31), n_147(34)>
  if (i_65 > 15)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  _21 = z_98(D)->s;
  _145 = stbi__get8 (_21);

  <bb 34> :
  _22 = _145;
  _23 = (int) _22;
  sizes[i_65] = _23;
  _24 = sizes[i_65];
  n_147 = n_67 + _24;
  i_148 = i_65 + 1;
  goto <bb 32>; [INV]

  <bb 35> :
  L_149 = L_60 + -17;
  if (tc_141 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 36> :
  _25 = &z_98(D)->huff_dc;
  _26 = (long long unsigned int) th_142;
  _27 = _26 * 1680;
  _28 = _25 + _27;
  _29 = stbi__build_huffman (_28, &sizes);
  retval.244_151 = _29 == 0;
  if (retval.244_151 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  _152 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 49>; [INV]

  <bb 38> :
  v_153 = &z_98(D)->huff_dc[th_142].values;
  goto <bb 42>; [INV]

  <bb 39> :
  _30 = &z_98(D)->huff_ac;
  _31 = (long long unsigned int) th_142;
  _32 = _31 * 1680;
  _33 = _30 + _32;
  _34 = stbi__build_huffman (_33, &sizes);
  retval.245_155 = _34 == 0;
  if (retval.245_155 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  _156 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 49>; [INV]

  <bb 41> :
  v_157 = &z_98(D)->huff_ac[th_142].values;

  <bb 42> :
  # v_64 = PHI <v_153(38), v_157(41)>
  i_158 = 0;

  <bb 43> :
  # i_66 = PHI <i_158(42), i_162(45)>
  if (i_66 >= n_67)
    goto <bb 46>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 44> :
  _35 = z_98(D)->s;
  _36 = (sizetype) i_66;
  _37 = v_64 + _36;
  _160 = stbi__get8 (_35);

  <bb 45> :
  _38 = _160;
  *_37 = _38;
  i_162 = i_66 + 1;
  goto <bb 43>; [INV]

  <bb 46> :
  if (tc_141 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  _39 = &z_98(D)->huff_ac;
  _40 = (long long unsigned int) th_142;
  _41 = _40 * 1680;
  _42 = _39 + _41;
  _43 = &z_98(D)->fast_ac[th_142];
  stbi__build_fast_ac (_43, _42);

  <bb 48> :
  L_164 = L_149 - n_67;
  sizes ={v} {CLOBBER};
  goto <bb 26>; [INV]

  <bb 49> :
  # _74 = PHI <_167(30), _152(37), _156(40)>
  sizes ={v} {CLOBBER};
  goto <bb 80>; [INV]

  <bb 50> :
  _44 = L_60 == 0;
  _170 = (int) _44;
  goto <bb 80>; [INV]

  <bb 51> :
<L48>:
  if (m_94(D) > 223)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  if (m_94(D) <= 239)
    goto <bb 54>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  if (m_94(D) == 254)
    goto <bb 54>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 54> :
  _45 = z_98(D)->s;
  _174 = stbi__get16be (_45);
  L_175 = _174;
  if (L_175 <= 1)
    goto <bb 55>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 55> :
  if (m_94(D) == 254)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  _177 = stbi__err ("bad COM len");
  goto <bb 80>; [INV]

  <bb 57> :
  _179 = stbi__err ("bad APP len");
  goto <bb 80>; [INV]

  <bb 58> :
  L_180 = L_175 + -2;
  if (m_94(D) == 224)
    goto <bb 59>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 59> :
  if (L_180 > 4)
    goto <bb 60>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 60> :
  ok_181 = 1;
  i_182 = 0;

  <bb 61> :
  # ok_68 = PHI <ok_181(60), ok_69(64)>
  # i_70 = PHI <i_182(60), i_187(64)>
  if (i_70 > 4)
    goto <bb 65>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 62> :
  _46 = z_98(D)->s;
  _184 = stbi__get8 (_46);
  _47 = _184;
  _48 = tag[i_70];
  retval.246_185 = _47 != _48;
  if (retval.246_185 != 0)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  ok_186 = 0;

  <bb 64> :
  # ok_69 = PHI <ok_68(62), ok_186(63)>
  i_187 = i_70 + 1;
  goto <bb 61>; [INV]

  <bb 65> :
  L_188 = L_180 + -5;
  if (ok_68 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  z_98(D)->jfif = 1;

  <bb 67> :
  goto <bb 78>; [INV]

  <bb 68> :
  if (m_94(D) == 238)
    goto <bb 69>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 69> :
  if (L_180 > 11)
    goto <bb 70>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 70> :
  ok_190 = 1;
  i_191 = 0;

  <bb 71> :
  # ok_71 = PHI <ok_190(70), ok_72(74)>
  # i_73 = PHI <i_191(70), i_196(74)>
  if (i_73 > 5)
    goto <bb 75>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  _49 = z_98(D)->s;
  _193 = stbi__get8 (_49);
  _50 = _193;
  _51 = tag[i_73];
  retval.247_194 = _50 != _51;
  if (retval.247_194 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  ok_195 = 0;

  <bb 74> :
  # ok_72 = PHI <ok_71(72), ok_195(73)>
  i_196 = i_73 + 1;
  goto <bb 71>; [INV]

  <bb 75> :
  L_197 = L_180 + -6;
  if (ok_71 != 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  _52 = z_98(D)->s;
  stbi__get8 (_52);
  _53 = z_98(D)->s;
  stbi__get16be (_53);
  _54 = z_98(D)->s;
  stbi__get16be (_54);
  _55 = z_98(D)->s;
  _202 = stbi__get8 (_55);
  _56 = _202;
  _57 = (int) _56;
  z_98(D)->app14_color_transform = _57;
  L_204 = L_197 + -6;

  <bb 77> :
  # L_61 = PHI <L_197(75), L_204(76)>

  <bb 78> :
  # L_62 = PHI <L_188(67), L_180(68), L_180(69), L_61(77)>
  _58 = z_98(D)->s;
  stbi__skip (_58, L_62);
  _206 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 80>; [INV]

  <bb 79> :
  _172 = stbi__err ("unknown marker");

  <bb 80> :
  # _75 = PHI <_97(3), _103(5), _107(6), _118(11), _120(13), _133(24), _74(49), _170(50), _177(56), _179(57), _206(78), _172(79)>
<L84>:
  return _75;

  <bb 81> :
<L85>:
  resx 1

}



;; Function stbi__process_scan_header (_ZL25stbi__process_scan_headerP10stbi__jpeg, funcdef_no=857, decl_uid=11420, cgraph_uid=763, symbol_order=777)

stbi__process_scan_header (struct stbi__jpeg * z)
{
  unsigned char D.14674;
  unsigned char D.14673;
  unsigned char D.14672;
  unsigned char D.14671;
  unsigned char D.14670;
  unsigned char D.14669;
  int D.14668;
  int aa;
  int q;
  int which;
  int id;
  int Ls;
  int i;
  int D.14638;
  struct stbi__context * _1;
  struct stbi__context * _2;
  unsigned char _3;
  int _4;
  int _5;
  int _6;
  int _7;
  struct stbi__context * _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  struct stbi__context * _14;
  unsigned char _15;
  struct stbi__context * _16;
  unsigned char _17;
  struct stbi__context * _18;
  int _19;
  int _20;
  struct stbi__context * _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  struct stbi__context * _27;
  unsigned char _28;
  int _29;
  struct stbi__context * _30;
  unsigned char _31;
  int _32;
  struct stbi__context * _33;
  unsigned char _34;
  int _35;
  int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  int _49;
  int _56;
  unsigned char _59;
  int _62;
  unsigned char _65;
  unsigned char _68;
  int _72;
  int _75;
  int _78;
  unsigned char _82;
  unsigned char _85;
  unsigned char _88;
  int _93;
  int _95;
  int _98;
  int _99;
  int _101;

  <bb 2> :
  _1 = z_54(D)->s;
  _56 = stbi__get16be (_1);
  Ls_57 = _56;
  _2 = z_54(D)->s;
  _59 = stbi__get8 (_2);
  _3 = _59;
  _4 = (int) _3;
  z_54(D)->scan_n = _4;
  _5 = z_54(D)->scan_n;
  if (_5 <= 0)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _6 = z_54(D)->scan_n;
  if (_6 > 4)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _7 = z_54(D)->scan_n;
  _8 = z_54(D)->s;
  _9 = _8->img_n;
  if (_7 > _9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _101 = stbi__err ("bad SOS component count");
  goto <bb 36>; [INV]

  <bb 6> :
  _10 = z_54(D)->scan_n;
  _11 = _10 + 3;
  _12 = _11 * 2;
  if (Ls_57 != _12)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _62 = stbi__err ("bad SOS len");
  goto <bb 36>; [INV]

  <bb 8> :
  i_63 = 0;

  <bb 9> :
  # i_47 = PHI <i_63(8), i_80(21)>
  _13 = z_54(D)->scan_n;
  if (i_47 >= _13)
    goto <bb 22>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _14 = z_54(D)->s;
  _65 = stbi__get8 (_14);
  _15 = _65;
  id_66 = (int) _15;
  _16 = z_54(D)->s;
  _68 = stbi__get8 (_16);
  _17 = _68;
  q_69 = (int) _17;
  which_70 = 0;

  <bb 11> :
  # which_48 = PHI <which_70(10), which_71(14)>
  _18 = z_54(D)->s;
  _19 = _18->img_n;
  if (which_48 >= _19)
    goto <bb 15>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _20 = z_54(D)->img_comp[which_48].id;
  if (id_66 == _20)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  goto <bb 15>; [INV]

  <bb 14> :
  which_71 = which_48 + 1;
  goto <bb 11>; [INV]

  <bb 15> :
  _21 = z_54(D)->s;
  _22 = _21->img_n;
  if (which_48 == _22)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _72 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 17> :
  _23 = q_69 >> 4;
  z_54(D)->img_comp[which_48].hd = _23;
  _24 = z_54(D)->img_comp[which_48].hd;
  if (_24 > 3)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _75 = stbi__err ("bad DC huff");
  goto <bb 36>; [INV]

  <bb 19> :
  _25 = q_69 & 15;
  z_54(D)->img_comp[which_48].ha = _25;
  _26 = z_54(D)->img_comp[which_48].ha;
  if (_26 > 3)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _78 = stbi__err ("bad AC huff");
  goto <bb 36>; [INV]

  <bb 21> :
  z_54(D)->order[i_47] = which_48;
  i_80 = i_47 + 1;
  goto <bb 9>; [INV]

  <bb 22> :
  _27 = z_54(D)->s;
  _82 = stbi__get8 (_27);
  _28 = _82;
  _29 = (int) _28;
  z_54(D)->spec_start = _29;
  _30 = z_54(D)->s;
  _85 = stbi__get8 (_30);
  _31 = _85;
  _32 = (int) _31;
  z_54(D)->spec_end = _32;
  _33 = z_54(D)->s;
  _88 = stbi__get8 (_33);
  _34 = _88;
  aa_89 = (int) _34;
  _35 = aa_89 >> 4;
  z_54(D)->succ_high = _35;
  _36 = aa_89 & 15;
  z_54(D)->succ_low = _36;
  _37 = z_54(D)->progressive;
  if (_37 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 23> :
  _38 = z_54(D)->spec_start;
  if (_38 > 63)
    goto <bb 28>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _39 = z_54(D)->spec_end;
  if (_39 > 63)
    goto <bb 28>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _40 = z_54(D)->spec_start;
  _41 = z_54(D)->spec_end;
  if (_40 > _41)
    goto <bb 28>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  _42 = z_54(D)->succ_high;
  if (_42 > 13)
    goto <bb 28>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _43 = z_54(D)->succ_low;
  if (_43 > 13)
    goto <bb 28>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 28> :
  _93 = stbi__err ("bad SOS");
  goto <bb 36>; [INV]

  <bb 29> :
  _44 = z_54(D)->spec_start;
  if (_44 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _95 = stbi__err ("bad SOS");
  goto <bb 36>; [INV]

  <bb 31> :
  _45 = z_54(D)->succ_high;
  if (_45 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _46 = z_54(D)->succ_low;
  if (_46 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _98 = stbi__err ("bad SOS");
  goto <bb 36>; [INV]

  <bb 34> :
  z_54(D)->spec_end = 63;

  <bb 35> :
  _99 = 1;

  <bb 36> :
  # _49 = PHI <_101(5), _62(7), _72(16), _75(18), _78(20), _93(28), _95(30), _98(33), _99(35)>
<L34>:
  return _49;

}



;; Function stbi__free_jpeg_components (_ZL26stbi__free_jpeg_componentsP10stbi__jpegii, funcdef_no=858, decl_uid=11435, cgraph_uid=764, symbol_order=778)

stbi__free_jpeg_components (struct stbi__jpeg * z, int ncomp, int why)
{
  int i;
  int D.14686;
  void * _1;
  void * _2;
  void * _3;
  void * _4;
  stbi_uc * _5;
  stbi_uc * _6;
  int _26;

  <bb 2> :
  i_12 = 0;

  <bb 3> :
  # i_7 = PHI <i_12(2), i_24(10)>
  if (i_7 >= ncomp_14(D))
    goto <bb 11>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = z_15(D)->img_comp[i_7].raw_data;
  if (_1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = z_15(D)->img_comp[i_7].raw_data;
  free (_2);
  z_15(D)->img_comp[i_7].raw_data = 0B;
  z_15(D)->img_comp[i_7].data = 0B;

  <bb 6> :
  _3 = z_15(D)->img_comp[i_7].raw_coeff;
  if (_3 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _4 = z_15(D)->img_comp[i_7].raw_coeff;
  free (_4);
  z_15(D)->img_comp[i_7].raw_coeff = 0B;
  z_15(D)->img_comp[i_7].coeff = 0B;

  <bb 8> :
  _5 = z_15(D)->img_comp[i_7].linebuf;
  if (_5 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _6 = z_15(D)->img_comp[i_7].linebuf;
  free (_6);
  z_15(D)->img_comp[i_7].linebuf = 0B;

  <bb 10> :
  i_24 = i_7 + 1;
  goto <bb 3>; [INV]

  <bb 11> :
  _26 = why_25(D);

  <bb 12> :
<L12>:
  return _26;

}



;; Function stbi__process_frame_header (_ZL26stbi__process_frame_headerP10stbi__jpegi, funcdef_no=859, decl_uid=11442, cgraph_uid=765, symbol_order=780)

stbi__process_frame_header (struct stbi__jpeg * z, int scan)
{
  unsigned char D.14756;
  unsigned char D.14755;
  unsigned char D.14754;
  unsigned char D.14753;
  int D.14752;
  int D.14751;
  unsigned char D.14750;
  int D.14749;
  static const unsigned char rgb[3] = {82, 71, 66};
  int c;
  int v_max;
  int h_max;
  int q;
  int i;
  int p;
  int Lf;
  struct stbi__context * s;
  bool retval.248;
  int D.14690;
  unsigned char _1;
  int _2;
  unsigned int _3;
  unsigned int _4;
  int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  unsigned char _19;
  int _20;
  int _21;
  int _22;
  unsigned char _23;
  int _24;
  int _25;
  int _26;
  int _27;
  int _28;
  int _29;
  unsigned char _30;
  int _31;
  int _32;
  int _33;
  unsigned int _34;
  int _35;
  unsigned int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  unsigned int _44;
  int _45;
  unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  int _49;
  unsigned int _50;
  unsigned int _51;
  int _52;
  unsigned int _53;
  int _54;
  unsigned int _55;
  unsigned int _56;
  unsigned int _57;
  int _58;
  unsigned int _59;
  unsigned int _60;
  int _61;
  int _62;
  unsigned int _63;
  int _64;
  unsigned int _65;
  unsigned int _66;
  unsigned int h_max.249_67;
  unsigned int _68;
  unsigned int _69;
  unsigned int h_max.250_70;
  unsigned int _71;
  int _72;
  unsigned int _73;
  int _74;
  unsigned int _75;
  unsigned int _76;
  unsigned int v_max.251_77;
  unsigned int _78;
  unsigned int _79;
  unsigned int v_max.252_80;
  unsigned int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  void * _93;
  void * _94;
  int _95;
  int _96;
  void * _97;
  long long unsigned int _98;
  long long unsigned int _99;
  long long unsigned int _100;
  stbi_uc * _101;
  int _102;
  int _103;
  int _104;
  int _105;
  int _106;
  int _107;
  int _108;
  void * _109;
  void * _110;
  int _111;
  int _112;
  void * _113;
  long long unsigned int _114;
  long long unsigned int _115;
  long long unsigned int _116;
  short int * _117;
  int _126;
  int _139;
  int _142;
  unsigned char _144;
  int _147;
  int _149;
  int _152;
  int _154;
  int _157;
  int _159;
  int _161;
  unsigned char _163;
  int _166;
  int _173;
  unsigned char _177;
  unsigned char _181;
  unsigned char _186;
  int _189;
  int _192;
  int _194;
  int _196;
  bool retval.248_198;
  int _200;
  int _223;
  int _231;
  int _234;

  <bb 2> :
  s_135 = z_134(D)->s;
  h_max_136 = 1;
  v_max_137 = 1;
  _139 = stbi__get16be (s_135);
  Lf_140 = _139;
  if (Lf_140 <= 10)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _142 = stbi__err ("bad SOF len");
  goto <bb 58>; [INV]

  <bb 4> :
  _144 = stbi__get8 (s_135);
  _1 = _144;
  p_145 = (int) _1;
  if (p_145 != 8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _147 = stbi__err ("only 8-bit");
  goto <bb 58>; [INV]

  <bb 6> :
  _149 = stbi__get16be (s_135);
  _2 = _149;
  _3 = (unsigned int) _2;
  s_135->img_y = _3;
  _4 = s_135->img_y;
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _152 = stbi__err ("no header height");
  goto <bb 58>; [INV]

  <bb 8> :
  _154 = stbi__get16be (s_135);
  _5 = _154;
  _6 = (unsigned int) _5;
  s_135->img_x = _6;
  _7 = s_135->img_x;
  if (_7 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _157 = stbi__err ("0 width");
  goto <bb 58>; [INV]

  <bb 10> :
  _8 = s_135->img_y;
  if (_8 > 16777216)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _159 = stbi__err ("too large");
  goto <bb 58>; [INV]

  <bb 12> :
  _9 = s_135->img_x;
  if (_9 > 16777216)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _161 = stbi__err ("too large");
  goto <bb 58>; [INV]

  <bb 14> :
  _163 = stbi__get8 (s_135);
  _10 = _163;
  c_164 = (int) _10;
  if (c_164 != 3)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  if (c_164 != 1)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  if (c_164 != 4)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _166 = stbi__err ("bad component count");
  goto <bb 58>; [INV]

  <bb 18> :
  s_135->img_n = c_164;
  i_168 = 0;

  <bb 19> :
  # i_118 = PHI <i_168(18), i_171(20)>
  if (i_118 >= c_164)
    goto <bb 21>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  z_134(D)->img_comp[i_118].data = 0B;
  z_134(D)->img_comp[i_118].linebuf = 0B;
  i_171 = i_118 + 1;
  goto <bb 19>; [INV]

  <bb 21> :
  _11 = s_135->img_n;
  _12 = _11 * 3;
  _13 = _12 + 8;
  if (Lf_140 != _13)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _173 = stbi__err ("bad SOF len");
  goto <bb 58>; [INV]

  <bb 23> :
  z_134(D)->rgb = 0;
  i_175 = 0;

  <bb 24> :
  # i_119 = PHI <i_175(23), i_190(36)>
  _14 = s_135->img_n;
  if (i_119 >= _14)
    goto <bb 37>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _177 = stbi__get8 (s_135);
  _15 = _177;
  _16 = (int) _15;
  z_134(D)->img_comp[i_119].id = _16;
  _17 = s_135->img_n;
  if (_17 == 3)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _18 = z_134(D)->img_comp[i_119].id;
  _19 = rgb[i_119];
  _20 = (int) _19;
  if (_18 == _20)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  _21 = z_134(D)->rgb;
  _22 = _21 + 1;
  z_134(D)->rgb = _22;

  <bb 28> :
  _181 = stbi__get8 (s_135);
  _23 = _181;
  q_182 = (int) _23;
  _24 = q_182 >> 4;
  z_134(D)->img_comp[i_119].h = _24;
  _25 = z_134(D)->img_comp[i_119].h;
  if (_25 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _26 = z_134(D)->img_comp[i_119].h;
  if (_26 > 4)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _194 = stbi__err ("bad H");
  goto <bb 58>; [INV]

  <bb 31> :
  _27 = q_182 & 15;
  z_134(D)->img_comp[i_119].v = _27;
  _28 = z_134(D)->img_comp[i_119].v;
  if (_28 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _29 = z_134(D)->img_comp[i_119].v;
  if (_29 > 4)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _192 = stbi__err ("bad V");
  goto <bb 58>; [INV]

  <bb 34> :
  _186 = stbi__get8 (s_135);
  _30 = _186;
  _31 = (int) _30;
  z_134(D)->img_comp[i_119].tq = _31;
  _32 = z_134(D)->img_comp[i_119].tq;
  if (_32 > 3)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _189 = stbi__err ("bad TQ");
  goto <bb 58>; [INV]

  <bb 36> :
  i_190 = i_119 + 1;
  goto <bb 24>; [INV]

  <bb 37> :
  if (scan_195(D) != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  _196 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 58>; [INV]

  <bb 39> :
  _33 = s_135->img_n;
  _34 = s_135->img_y;
  _35 = (int) _34;
  _36 = s_135->img_x;
  _37 = (int) _36;
  _38 = stbi__mad3sizes_valid (_37, _35, _33, 0);
  retval.248_198 = _38 == 0;
  if (retval.248_198 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  _200 = stbi__err ("too large");
  goto <bb 58>; [INV]

  <bb 41> :
  i_201 = 0;

  <bb 42> :
  # i_120 = PHI <i_201(41), i_204(47)>
  # h_max_122 = PHI <h_max_136(41), h_max_123(47)>
  # v_max_124 = PHI <v_max_137(41), v_max_125(47)>
  _39 = s_135->img_n;
  if (i_120 >= _39)
    goto <bb 48>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _40 = z_134(D)->img_comp[i_120].h;
  if (h_max_122 < _40)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  h_max_202 = z_134(D)->img_comp[i_120].h;

  <bb 45> :
  # h_max_123 = PHI <h_max_122(43), h_max_202(44)>
  _41 = z_134(D)->img_comp[i_120].v;
  if (v_max_124 < _41)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  v_max_203 = z_134(D)->img_comp[i_120].v;

  <bb 47> :
  # v_max_125 = PHI <v_max_124(45), v_max_203(46)>
  i_204 = i_120 + 1;
  goto <bb 42>; [INV]

  <bb 48> :
  z_134(D)->img_h_max = h_max_122;
  z_134(D)->img_v_max = v_max_124;
  _42 = h_max_122 * 8;
  z_134(D)->img_mcu_w = _42;
  _43 = v_max_124 * 8;
  z_134(D)->img_mcu_h = _43;
  _44 = s_135->img_x;
  _45 = z_134(D)->img_mcu_w;
  _46 = (unsigned int) _45;
  _47 = _44 + _46;
  _48 = _47 + 4294967295;
  _49 = z_134(D)->img_mcu_w;
  _50 = (unsigned int) _49;
  _51 = _48 / _50;
  _52 = (int) _51;
  z_134(D)->img_mcu_x = _52;
  _53 = s_135->img_y;
  _54 = z_134(D)->img_mcu_h;
  _55 = (unsigned int) _54;
  _56 = _53 + _55;
  _57 = _56 + 4294967295;
  _58 = z_134(D)->img_mcu_h;
  _59 = (unsigned int) _58;
  _60 = _57 / _59;
  _61 = (int) _60;
  z_134(D)->img_mcu_y = _61;
  i_211 = 0;

  <bb 49> :
  # i_121 = PHI <i_211(48), i_233(56)>
  _62 = s_135->img_n;
  if (i_121 >= _62)
    goto <bb 57>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 50> :
  _63 = s_135->img_x;
  _64 = z_134(D)->img_comp[i_121].h;
  _65 = (unsigned int) _64;
  _66 = _63 * _65;
  h_max.249_67 = (unsigned int) h_max_122;
  _68 = _66 + h_max.249_67;
  _69 = _68 + 4294967295;
  h_max.250_70 = (unsigned int) h_max_122;
  _71 = _69 / h_max.250_70;
  _72 = (int) _71;
  z_134(D)->img_comp[i_121].x = _72;
  _73 = s_135->img_y;
  _74 = z_134(D)->img_comp[i_121].v;
  _75 = (unsigned int) _74;
  _76 = _73 * _75;
  v_max.251_77 = (unsigned int) v_max_124;
  _78 = _76 + v_max.251_77;
  _79 = _78 + 4294967295;
  v_max.252_80 = (unsigned int) v_max_124;
  _81 = _79 / v_max.252_80;
  _82 = (int) _81;
  z_134(D)->img_comp[i_121].y = _82;
  _83 = z_134(D)->img_mcu_x;
  _84 = z_134(D)->img_comp[i_121].h;
  _85 = _83 * _84;
  _86 = _85 * 8;
  z_134(D)->img_comp[i_121].w2 = _86;
  _87 = z_134(D)->img_mcu_y;
  _88 = z_134(D)->img_comp[i_121].v;
  _89 = _87 * _88;
  _90 = _89 * 8;
  z_134(D)->img_comp[i_121].h2 = _90;
  z_134(D)->img_comp[i_121].coeff = 0B;
  z_134(D)->img_comp[i_121].raw_coeff = 0B;
  z_134(D)->img_comp[i_121].linebuf = 0B;
  _91 = z_134(D)->img_comp[i_121].h2;
  _92 = z_134(D)->img_comp[i_121].w2;
  _93 = stbi__malloc_mad2 (_92, _91, 15);
  z_134(D)->img_comp[i_121].raw_data = _93;
  _94 = z_134(D)->img_comp[i_121].raw_data;
  if (_94 == 0B)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  _95 = stbi__err ("outofmem");
  _96 = i_121 + 1;
  _223 = stbi__free_jpeg_components (z_134(D), _96, _95);
  goto <bb 58>; [INV]

  <bb 52> :
  _97 = z_134(D)->img_comp[i_121].raw_data;
  _98 = (long long unsigned int) _97;
  _99 = _98 + 15;
  _100 = _99 & 18446744073709551600;
  _101 = (stbi_uc *) _100;
  z_134(D)->img_comp[i_121].data = _101;
  _102 = z_134(D)->progressive;
  if (_102 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 53> :
  _103 = z_134(D)->img_comp[i_121].w2;
  _104 = _103 / 8;
  z_134(D)->img_comp[i_121].coeff_w = _104;
  _105 = z_134(D)->img_comp[i_121].h2;
  _106 = _105 / 8;
  z_134(D)->img_comp[i_121].coeff_h = _106;
  _107 = z_134(D)->img_comp[i_121].h2;
  _108 = z_134(D)->img_comp[i_121].w2;
  _109 = stbi__malloc_mad3 (_108, _107, 2, 15);
  z_134(D)->img_comp[i_121].raw_coeff = _109;
  _110 = z_134(D)->img_comp[i_121].raw_coeff;
  if (_110 == 0B)
    goto <bb 54>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 54> :
  _111 = stbi__err ("outofmem");
  _112 = i_121 + 1;
  _231 = stbi__free_jpeg_components (z_134(D), _112, _111);
  goto <bb 58>; [INV]

  <bb 55> :
  _113 = z_134(D)->img_comp[i_121].raw_coeff;
  _114 = (long long unsigned int) _113;
  _115 = _114 + 15;
  _116 = _115 & 18446744073709551600;
  _117 = (short int *) _116;
  z_134(D)->img_comp[i_121].coeff = _117;

  <bb 56> :
  i_233 = i_121 + 1;
  goto <bb 49>; [INV]

  <bb 57> :
  _234 = 1;

  <bb 58> :
  # _126 = PHI <_142(3), _147(5), _152(7), _157(9), _159(11), _161(13), _166(17), _173(22), _194(30), _192(33), _189(35), _196(38), _200(40), _223(51), _231(54), _234(57)>
<L62>:
  return _126;

}



;; Function stbi__decode_jpeg_header (_ZL24stbi__decode_jpeg_headerP10stbi__jpegi, funcdef_no=860, decl_uid=11463, cgraph_uid=766, symbol_order=781)

stbi__decode_jpeg_header (struct stbi__jpeg * z, int scan)
{
  int D.14784;
  unsigned char D.14783;
  int D.14782;
  unsigned char D.14781;
  int D.14780;
  unsigned char D.14779;
  unsigned char D.14778;
  int m;
  bool retval.262;
  bool retval.260;
  bool retval.257;
  int D.14759;
  unsigned char _1;
  int _2;
  int m.253_3;
  unsigned char _4;
  int _5;
  int m.254_6;
  int m.255_7;
  int m.256_8;
  int m.258_9;
  int _10;
  unsigned char _11;
  int _12;
  int m.259_13;
  struct stbi__context * _14;
  int _15;
  unsigned char _16;
  int _17;
  int m.261_18;
  bool _19;
  int _20;
  int _21;
  int _22;
  unsigned char _33;
  int _36;
  int _38;
  unsigned char _40;
  int _43;
  bool retval.257_44;
  int _45;
  unsigned char _47;
  int _50;
  bool retval.260_51;
  int _53;
  unsigned char _55;
  int _59;
  bool retval.262_60;
  int _61;
  int _62;

  <bb 2> :
  z_28(D)->jfif = 0;
  z_28(D)->app14_color_transform = -1;
  z_28(D)->marker = 255;
  _33 = stbi__get_marker (z_28(D));

  <bb 3> :
  _1 = _33;
  _2 = (int) _1;
  m = _2;
  m.253_3 = m;
  if (m.253_3 != 216)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _36 = stbi__err ("no SOI");
  goto <bb 28>; [INV]

  <bb 5> :
  if (scan_37(D) == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _38 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 7> :
  _40 = stbi__get_marker (z_28(D));

  <bb 8> :
  _4 = _40;
  _5 = (int) _4;
  m = _5;

  <bb 9> :
  m.254_6 = m;
  if (m.254_6 == 192)
    goto <bb 24>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  m.255_7 = m;
  if (m.255_7 == 193)
    goto <bb 24>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  m.256_8 = m;
  if (m.256_8 == 194)
    goto <bb 24>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  m.258_9 = m;
  _43 = stbi__process_marker (z_28(D), m.258_9);

  <bb 13> :
  _10 = _43;
  retval.257_44 = _10 == 0;
  if (retval.257_44 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 15> :
  _47 = stbi__get_marker (z_28(D));

  <bb 16> :
  _11 = _47;
  _12 = (int) _11;
  m = _12;

  <bb 17> :
  m.259_13 = m;
  if (m.259_13 != 255)
    goto <bb 23>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _14 = z_28(D)->s;
  _50 = stbi__at_eof (_14);

  <bb 19> :
  _15 = _50;
  retval.260_51 = _15 != 0;
  if (retval.260_51 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _53 = stbi__err ("no SOF");
  goto <bb 28>; [INV]

  <bb 21> :
  _55 = stbi__get_marker (z_28(D));

  <bb 22> :
  _16 = _55;
  _17 = (int) _16;
  m = _17;
  goto <bb 17>; [INV]

  <bb 23> :
  goto <bb 9>; [INV]

  <bb 24> :
  m.261_18 = m;
  _19 = m.261_18 == 194;
  _20 = (int) _19;
  z_28(D)->progressive = _20;
  _59 = stbi__process_frame_header (z_28(D), scan_37(D));

  <bb 25> :
  _21 = _59;
  retval.262_60 = _21 == 0;
  if (retval.262_60 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _61 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 27> :
  _62 = 1;

  <bb 28> :
  # _22 = PHI <_36(4), _38(6), _45(14), _53(20), _61(26), _62(27)>
  m ={v} {CLOBBER};

  <bb 29> :
<L19>:
  return _22;

  <bb 30> :
<L20>:
  resx 1

}



;; Function stbi__decode_jpeg_image (_ZL23stbi__decode_jpeg_imageP10stbi__jpeg, funcdef_no=861, decl_uid=11471, cgraph_uid=767, symbol_order=782)

stbi__decode_jpeg_image (struct stbi__jpeg * j)
{
  unsigned char D.14847;
  int D.14846;
  int D.14845;
  int D.14844;
  unsigned char D.14843;
  unsigned char D.14842;
  int D.14841;
  int D.14840;
  int D.14839;
  unsigned char D.14838;
  int D.14837;
  stbi__uint32 NL;
  int Ld;
  int x;
  int m;
  bool retval.275;
  bool retval.273;
  bool retval.272;
  bool retval.271;
  int D.14803;
  bool retval.268;
  int m.264_1;
  int m.265_2;
  int m.266_3;
  int m.267_4;
  int _5;
  int _6;
  unsigned char _7;
  int _8;
  int m.269_9;
  int m.270_10;
  int _11;
  int _12;
  unsigned char _13;
  struct stbi__context * _14;
  int _15;
  struct stbi__context * _16;
  unsigned char _17;
  struct stbi__context * _18;
  unsigned char _19;
  int m.274_20;
  struct stbi__context * _21;
  struct stbi__context * _22;
  int _23;
  struct stbi__context * _24;
  unsigned int _25;
  int m.276_26;
  int _27;
  unsigned char _28;
  int _29;
  int _30;
  int _31;
  int _49;
  bool retval.268_50;
  int _51;
  unsigned char _53;
  int _56;
  bool retval.271_57;
  int _58;
  int _60;
  bool retval.272_61;
  int _62;
  int _64;
  bool retval.273_65;
  unsigned char _67;
  unsigned char _70;
  int _73;
  int _76;
  int _79;
  int _81;
  int _83;
  bool retval.275_84;
  int _85;
  unsigned char _87;
  int _90;

  <bb 2> :
  m = 0;

  <bb 3> :
  m.264_1 = m;
  if (m.264_1 > 3)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  m.265_2 = m;
  j_43(D)->img_comp[m.265_2].raw_data = 0B;
  m.266_3 = m;
  j_43(D)->img_comp[m.266_3].raw_coeff = 0B;
  m.267_4 = m;
  _5 = m.267_4 + 1;
  m = _5;
  goto <bb 3>; [INV]

  <bb 5> :
  j_43(D)->restart_interval = 0;
  _49 = stbi__decode_jpeg_header (j_43(D), 0);

  <bb 6> :
  _6 = _49;
  retval.268_50 = _6 == 0;
  if (retval.268_50 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 8> :
  _53 = stbi__get_marker (j_43(D));

  <bb 9> :
  _7 = _53;
  _8 = (int) _7;
  m = _8;

  <bb 10> :
  m.269_9 = m;
  if (m.269_9 == 217)
    goto <bb 41>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  m.270_10 = m;
  if (m.270_10 == 218)
    goto <bb 12>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 12> :
  _56 = stbi__process_scan_header (j_43(D));

  <bb 13> :
  _11 = _56;
  retval.271_57 = _11 == 0;
  if (retval.271_57 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _58 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 15> :
  _60 = stbi__parse_entropy_coded_data (j_43(D));

  <bb 16> :
  _12 = _60;
  retval.272_61 = _12 == 0;
  if (retval.272_61 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _62 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 18> :
  _13 = j_43(D)->marker;
  if (_13 == 255)
    goto <bb 19>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 19> :
  _14 = j_43(D)->s;
  _64 = stbi__at_eof (_14);

  <bb 20> :
  _15 = _64;
  retval.273_65 = _15 == 0;
  if (retval.273_65 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 21> :
  _16 = j_43(D)->s;
  _67 = stbi__get8 (_16);

  <bb 22> :
  _17 = _67;
  x_68 = (int) _17;
  if (x_68 == 255)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 23> :
  _18 = j_43(D)->s;
  _70 = stbi__get8 (_18);

  <bb 24> :
  _19 = _70;
  j_43(D)->marker = _19;
  goto <bb 26>; [INV]

  <bb 25> :
  goto <bb 19>; [INV]

  <bb 26> :

  <bb 27> :
  goto <bb 39>; [INV]

  <bb 28> :
  m.274_20 = m;
  if (m.274_20 == 220)
    goto <bb 29>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 29> :
  _21 = j_43(D)->s;
  _73 = stbi__get16be (_21);

  <bb 30> :
  Ld_74 = _73;
  _22 = j_43(D)->s;
  _76 = stbi__get16be (_22);

  <bb 31> :
  _23 = _76;
  NL_77 = (stbi__uint32) _23;
  if (Ld_74 != 4)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  _79 = stbi__err ("bad DNL len");
  goto <bb 45>; [INV]

  <bb 33> :
  _24 = j_43(D)->s;
  _25 = _24->img_y;
  if (NL_77 != _25)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  _81 = stbi__err ("bad DNL height");
  goto <bb 45>; [INV]

  <bb 35> :
  goto <bb 39>; [INV]

  <bb 36> :
  m.276_26 = m;
  _83 = stbi__process_marker (j_43(D), m.276_26);

  <bb 37> :
  _27 = _83;
  retval.275_84 = _27 == 0;
  if (retval.275_84 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  _85 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 39> :
  _87 = stbi__get_marker (j_43(D));

  <bb 40> :
  _28 = _87;
  _29 = (int) _28;
  m = _29;
  goto <bb 10>; [INV]

  <bb 41> :
  _30 = j_43(D)->progressive;
  if (_30 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 42> :
  stbi__jpeg_finish (j_43(D));

  <bb 43> :

  <bb 44> :
  _90 = 1;

  <bb 45> :
  # _31 = PHI <_51(7), _58(14), _62(17), _79(32), _81(34), _85(38), _90(44)>
  m ={v} {CLOBBER};

  <bb 46> :
<L36>:
  return _31;

  <bb 47> :
<L37>:
  resx 1

}



;; Function resample_row_1 (_ZL14resample_row_1PhS_S_ii, funcdef_no=862, decl_uid=11494, cgraph_uid=768, symbol_order=783)

resample_row_1 (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  stbi_uc * D.14850;
  stbi_uc * _2;

  <bb 2> :
  _2 = in_near_1(D);

  <bb 3> :
<L0>:
  return _2;

}



;; Function stbi__resample_row_v_2 (_ZL22stbi__resample_row_v_2PhS_S_ii, funcdef_no=863, decl_uid=11501, cgraph_uid=769, symbol_order=784)

stbi__resample_row_v_2 (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  int i;
  stbi_uc * D.14854;
  sizetype _1;
  stbi_uc * _2;
  unsigned char _3;
  int _4;
  int _5;
  sizetype _6;
  stbi_uc * _7;
  unsigned char _8;
  int _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  stbi_uc * _14;
  unsigned char _15;
  stbi_uc * _26;

  <bb 2> :
  i_18 = 0;

  <bb 3> :
  # i_16 = PHI <i_18(2), i_25(4)>
  if (i_16 >= w_20(D))
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = (sizetype) i_16;
  _2 = in_near_21(D) + _1;
  _3 = *_2;
  _4 = (int) _3;
  _5 = _4 * 3;
  _6 = (sizetype) i_16;
  _7 = in_far_22(D) + _6;
  _8 = *_7;
  _9 = (int) _8;
  _10 = _5 + _9;
  _11 = _10 + 2;
  _12 = _11 >> 2;
  _13 = (sizetype) i_16;
  _14 = out_23(D) + _13;
  _15 = (unsigned char) _12;
  *_14 = _15;
  i_25 = i_16 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  _26 = out_23(D);

  <bb 6> :
<L3>:
  return _26;

}



;; Function stbi__resample_row_h_2 (_ZL22stbi__resample_row_h_2PhS_S_ii, funcdef_no=864, decl_uid=11511, cgraph_uid=770, symbol_order=785)

stbi__resample_row_h_2 (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  int n;
  stbi_uc * input;
  int i;
  stbi_uc * D.14858;
  stbi_uc * _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _6;
  int _7;
  stbi_uc * _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  int _13;
  stbi_uc * _14;
  unsigned char _15;
  int _16;
  sizetype _17;
  stbi_uc * _18;
  unsigned char _19;
  int _20;
  int _21;
  sizetype _22;
  sizetype _23;
  stbi_uc * _24;
  unsigned char _25;
  int _26;
  int _27;
  int _28;
  int _29;
  sizetype _30;
  stbi_uc * _31;
  unsigned char _32;
  sizetype _33;
  sizetype _34;
  stbi_uc * _35;
  unsigned char _36;
  int _37;
  int _38;
  int _39;
  int _40;
  sizetype _41;
  sizetype _42;
  stbi_uc * _43;
  unsigned char _44;
  sizetype _45;
  sizetype _46;
  stbi_uc * _47;
  unsigned char _48;
  int _49;
  int _50;
  sizetype _51;
  sizetype _52;
  stbi_uc * _53;
  unsigned char _54;
  int _55;
  int _56;
  int _57;
  int _58;
  int _59;
  sizetype _60;
  stbi_uc * _61;
  unsigned char _62;
  sizetype _63;
  sizetype _64;
  stbi_uc * _65;
  int _66;
  sizetype _67;
  sizetype _68;
  stbi_uc * _69;
  unsigned char _70;
  stbi_uc * _72;
  stbi_uc * _82;
  stbi_uc * _92;

  <bb 2> :
  input_76 = in_near_75(D);
  if (w_77(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = out_78(D) + 1;
  _2 = *input_76;
  *_1 = _2;
  _3 = *_1;
  *out_78(D) = _3;
  _82 = out_78(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  _4 = *input_76;
  *out_78(D) = _4;
  _5 = *input_76;
  _6 = (int) _5;
  _7 = _6 * 3;
  _8 = input_76 + 1;
  _9 = *_8;
  _10 = (int) _9;
  _11 = _7 + _10;
  _12 = _11 + 2;
  _13 = _12 >> 2;
  _14 = out_78(D) + 1;
  _15 = (unsigned char) _13;
  *_14 = _15;
  i_85 = 1;

  <bb 5> :
  # i_71 = PHI <i_85(4), i_89(6)>
  _16 = w_77(D) + -1;
  if (i_71 >= _16)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _17 = (sizetype) i_71;
  _18 = input_76 + _17;
  _19 = *_18;
  _20 = (int) _19;
  _21 = _20 * 3;
  n_86 = _21 + 2;
  _22 = (sizetype) i_71;
  _23 = _22 + 18446744073709551615;
  _24 = input_76 + _23;
  _25 = *_24;
  _26 = (int) _25;
  _27 = n_86 + _26;
  _28 = _27 >> 2;
  _29 = i_71 * 2;
  _30 = (sizetype) _29;
  _31 = out_78(D) + _30;
  _32 = (unsigned char) _28;
  *_31 = _32;
  _33 = (sizetype) i_71;
  _34 = _33 + 1;
  _35 = input_76 + _34;
  _36 = *_35;
  _37 = (int) _36;
  _38 = n_86 + _37;
  _39 = _38 >> 2;
  _40 = i_71 * 2;
  _41 = (sizetype) _40;
  _42 = _41 + 1;
  _43 = out_78(D) + _42;
  _44 = (unsigned char) _39;
  *_43 = _44;
  i_89 = i_71 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  _45 = (sizetype) w_77(D);
  _46 = _45 + 18446744073709551614;
  _47 = input_76 + _46;
  _48 = *_47;
  _49 = (int) _48;
  _50 = _49 * 3;
  _51 = (sizetype) w_77(D);
  _52 = _51 + 18446744073709551615;
  _53 = input_76 + _52;
  _54 = *_53;
  _55 = (int) _54;
  _56 = _50 + _55;
  _57 = _56 + 2;
  _58 = _57 >> 2;
  _59 = i_71 * 2;
  _60 = (sizetype) _59;
  _61 = out_78(D) + _60;
  _62 = (unsigned char) _58;
  *_61 = _62;
  _63 = (sizetype) w_77(D);
  _64 = _63 + 18446744073709551615;
  _65 = input_76 + _64;
  _66 = i_71 * 2;
  _67 = (sizetype) _66;
  _68 = _67 + 1;
  _69 = out_78(D) + _68;
  _70 = *_65;
  *_69 = _70;
  _92 = out_78(D);

  <bb 8> :
  # _72 = PHI <_82(3), _92(7)>
<L5>:
  return _72;

}



;; Function stbi__resample_row_hv_2 (_ZL23stbi__resample_row_hv_2PhS_S_ii, funcdef_no=865, decl_uid=11523, cgraph_uid=771, symbol_order=786)

stbi__resample_row_hv_2 (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  int t1;
  int t0;
  int i;
  stbi_uc * D.14864;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  stbi_uc * _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  int _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  unsigned char _19;
  sizetype _20;
  stbi_uc * _21;
  unsigned char _22;
  int _23;
  int _24;
  sizetype _25;
  stbi_uc * _26;
  unsigned char _27;
  int _28;
  int _29;
  int _30;
  int _31;
  int _32;
  int _33;
  sizetype _34;
  sizetype _35;
  stbi_uc * _36;
  unsigned char _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  sizetype _43;
  stbi_uc * _44;
  unsigned char _45;
  int _46;
  int _47;
  int _48;
  sizetype _49;
  sizetype _50;
  stbi_uc * _51;
  unsigned char _52;
  stbi_uc * _55;
  stbi_uc * _65;
  stbi_uc * _75;

  <bb 2> :
  if (w_58(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = *in_near_60(D);
  _2 = (int) _1;
  _3 = _2 * 3;
  _4 = *in_far_61(D);
  _5 = (int) _4;
  _6 = _3 + _5;
  _7 = _6 + 2;
  _8 = _7 >> 2;
  _9 = out_62(D) + 1;
  _10 = (unsigned char) _8;
  *_9 = _10;
  _11 = *_9;
  *out_62(D) = _11;
  _65 = out_62(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  _12 = *in_near_60(D);
  _13 = (int) _12;
  _14 = _13 * 3;
  _15 = *in_far_61(D);
  _16 = (int) _15;
  t1_66 = _14 + _16;
  _17 = t1_66 + 2;
  _18 = _17 >> 2;
  _19 = (unsigned char) _18;
  *out_62(D) = _19;
  i_68 = 1;

  <bb 5> :
  # i_53 = PHI <i_68(4), i_73(6)>
  # t1_54 = PHI <t1_66(4), t1_70(6)>
  if (i_53 >= w_58(D))
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  t0_69 = t1_54;
  _20 = (sizetype) i_53;
  _21 = in_near_60(D) + _20;
  _22 = *_21;
  _23 = (int) _22;
  _24 = _23 * 3;
  _25 = (sizetype) i_53;
  _26 = in_far_61(D) + _25;
  _27 = *_26;
  _28 = (int) _27;
  t1_70 = _24 + _28;
  _29 = t0_69 * 3;
  _30 = t1_70 + _29;
  _31 = _30 + 8;
  _32 = _31 >> 4;
  _33 = i_53 * 2;
  _34 = (sizetype) _33;
  _35 = _34 + 18446744073709551615;
  _36 = out_62(D) + _35;
  _37 = (unsigned char) _32;
  *_36 = _37;
  _38 = t1_70 * 3;
  _39 = t0_69 + _38;
  _40 = _39 + 8;
  _41 = _40 >> 4;
  _42 = i_53 * 2;
  _43 = (sizetype) _42;
  _44 = out_62(D) + _43;
  _45 = (unsigned char) _41;
  *_44 = _45;
  i_73 = i_53 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  _46 = t1_54 + 2;
  _47 = _46 >> 2;
  _48 = w_58(D) * 2;
  _49 = (sizetype) _48;
  _50 = _49 + 18446744073709551615;
  _51 = out_62(D) + _50;
  _52 = (unsigned char) _47;
  *_51 = _52;
  _75 = out_62(D);

  <bb 8> :
  # _55 = PHI <_65(3), _75(7)>
<L5>:
  return _55;

}



;; Function stbi__resample_row_hv_2_simd (_ZL28stbi__resample_row_hv_2_simdPhS_S_ii, funcdef_no=866, decl_uid=11535, cgraph_uid=772, symbol_order=787)

stbi__resample_row_hv_2_simd (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i D.20181;
  vector(16) char D.20180;
  __m128i D.20179;
  __m128i __A;
  __m128i __B;
  __m128i D.20175;
  vector(8) short int D.20174;
  __m128i D.20173;
  __m128i __A;
  int __B;
  __m128i D.20169;
  vector(8) short int D.20168;
  __m128i D.20167;
  __m128i __A;
  int __B;
  __m128i D.20163;
  vector(8) short int D.20162;
  __m128i D.20161;
  __m128i __A;
  __m128i __B;
  __m128i D.20157;
  __m128i D.20156;
  __m128i __A;
  __m128i __B;
  __m128i D.20152;
  __m128i D.20151;
  __m128i __A;
  __m128i __B;
  __m128i D.20147;
  __m128i D.20146;
  __m128i __A;
  __m128i __B;
  __m128i D.20142;
  __m128i D.20141;
  __m128i __A;
  __m128i __B;
  __m128i D.20137;
  __m128i D.20136;
  __m128i __A;
  __m128i __B;
  __m128i D.20132;
  vector(8) short int D.20131;
  __m128i D.20130;
  __m128i __A;
  __m128i __B;
  __m128i D.20125;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.20122;
  __m128i D.20124;
  __m128i D.20123;
  short int __A;
  __m128i D.20111;
  vector(8) short int D.20110;
  __m128i D.20109;
  __m128i __A;
  int __B;
  __m128i D.20105;
  __m128i D.20104;
  __m128i __A;
  __m128i __B;
  __m128i D.20100;
  __m128i D.20099;
  __m128i __A;
  __m128i __B;
  __m128i D.20095;
  vector(8) short int D.20094;
  __m128i D.20093;
  __m128i __A;
  int __B;
  __m128i D.20089;
  vector(16) char D.20088;
  __m128i D.20087;
  __m128i __A;
  __m128i __B;
  __m128i D.20083;
  __m128i D.20082;
  __m128i D.20078;
  __m64 __q0;
  __m64 __q1;
  __m128i D.20071;
  __m128i D.20077;
  __m128i D.20074;
  long long int __q1;
  long long int __q0;
  __m128i D.20076;
  __m128i D.20075;
  const __m128i_u * {ref-all} __P;
  __m128i D.20064;
  __m64 __q0;
  __m64 __q1;
  __m128i D.20057;
  __m128i D.20063;
  __m128i D.20060;
  long long int __q1;
  long long int __q0;
  __m128i D.20062;
  __m128i D.20061;
  const __m128i_u * {ref-all} __P;
  __m128i D.20052;
  vector(16) char D.20051;
  __m128i D.20050;
  __m128i __A;
  __m128i __B;
  __m128i D.14888;
  __m128i D.14887;
  __m128i D.14886;
  __m128i D.14885;
  __m128i D.14884;
  __m128i D.14883;
  vector(8) short int D.14882;
  vector(8) short int D.14881;
  vector(2) long long int D.14880;
  vector(2) long long int D.14879;
  __m128i D.14878;
  __m128i D.14877;
  __m128i D.14876;
  __m128i outv;
  __m128i de1;
  __m128i de0;
  __m128i int1;
  __m128i int0;
  __m128i odd;
  __m128i even;
  __m128i curb;
  __m128i nxtd;
  __m128i prvd;
  __m128i curs;
  __m128i bias;
  __m128i next;
  __m128i prev;
  __m128i nxt0;
  __m128i prv0;
  __m128i curr;
  __m128i nears;
  __m128i diff;
  __m128i nearw;
  __m128i farw;
  __m128i nearb;
  __m128i farb;
  __m128i zero;
  int t1;
  int t0;
  int i;
  stbi_uc * D.14870;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  stbi_uc * _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  int _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  int _19;
  sizetype _20;
  stbi_uc * _21;
  sizetype _22;
  stbi_uc * _23;
  vector(2) long long int _24;
  vector(2) long long int curr.277_25;
  vector(2) long long int _26;
  vector(2) long long int curr.278_27;
  vector(2) long long int _28;
  int t1.279_29;
  short int _30;
  int _31;
  vector(2) long long int prv0.280_32;
  vector(8) short int _33;
  vector(8) short int _34;
  sizetype _35;
  sizetype _36;
  stbi_uc * _37;
  unsigned char _38;
  unsigned short _39;
  unsigned short _40;
  sizetype _41;
  sizetype _42;
  stbi_uc * _43;
  unsigned char _44;
  unsigned short _45;
  unsigned short _46;
  short int _47;
  int _48;
  vector(2) long long int nxt0.281_49;
  vector(8) short int _50;
  vector(8) short int _51;
  vector(2) long long int curr.282_52;
  vector(2) long long int curr.283_53;
  vector(2) long long int curr.284_54;
  int _55;
  sizetype _56;
  stbi_uc * _57;
  sizetype _58;
  sizetype _59;
  stbi_uc * _60;
  unsigned char _61;
  int _62;
  int _63;
  sizetype _64;
  sizetype _65;
  stbi_uc * _66;
  unsigned char _67;
  int _68;
  int _69;
  sizetype _70;
  stbi_uc * _71;
  unsigned char _72;
  int _73;
  int _74;
  sizetype _75;
  stbi_uc * _76;
  unsigned char _77;
  int _78;
  int _79;
  int t1.285_80;
  int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  sizetype _86;
  stbi_uc * _87;
  unsigned char _88;
  sizetype _89;
  stbi_uc * _90;
  unsigned char _91;
  int _92;
  int _93;
  sizetype _94;
  stbi_uc * _95;
  unsigned char _96;
  int _97;
  int _98;
  int _99;
  int t1.286_100;
  int _101;
  int _102;
  int _103;
  int _104;
  sizetype _105;
  sizetype _106;
  stbi_uc * _107;
  unsigned char _108;
  int t1.287_109;
  int _110;
  int _111;
  int _112;
  int _113;
  int _114;
  sizetype _115;
  stbi_uc * _116;
  unsigned char _117;
  int t1.288_118;
  int _119;
  int _120;
  int _121;
  sizetype _122;
  sizetype _123;
  stbi_uc * _124;
  unsigned char _125;
  stbi_uc * _128;
  stbi_uc * _141;
  __m128i _146;
  __m128i _148;
  __m128i _151;
  vector(2) long long int _154;
  vector(2) long long int _156;
  vector(8) short int _158;
  vector(8) short int _160;
  __m128i _163;
  __m128i _170;
  __m128i _172;
  __m128i _174;
  __m128i _176;
  __m128i _178;
  stbi_uc * _199;
  vector(16) char _203;
  vector(16) char _204;
  vector(16) char _205;
  vector(16) char _206;
  vector(2) long long int _207;
  vector(2) int _209;
  long long int _212;
  long long int _213;
  vector(2) long long int _216;
  vector(2) long long int _217;
  vector(2) long long int _218;
  vector(2) long long int _219;
  vector(2) long long int _220;
  vector(2) int _222;
  long long int _225;
  long long int _226;
  vector(2) long long int _229;
  vector(2) long long int _230;
  vector(2) long long int _231;
  vector(2) long long int _232;
  vector(2) long long int _233;
  vector(2) long long int _234;
  vector(16) char _237;
  vector(16) char _238;
  vector(16) char _239;
  vector(16) char _240;
  vector(2) long long int _241;
  vector(8) short int _244;
  vector(8) short int _245;
  vector(8) short int _246;
  vector(2) long long int _247;
  vector(8) short unsigned int _250;
  vector(8) short unsigned int _251;
  vector(8) short unsigned int _252;
  vector(2) long long int _253;
  vector(8) short unsigned int _256;
  vector(8) short unsigned int _257;
  vector(8) short unsigned int _258;
  vector(2) long long int _259;
  vector(8) short int _262;
  vector(8) short int _263;
  vector(8) short int _264;
  vector(2) long long int _265;
  int _267;
  int _268;
  int _269;
  int _270;
  int _271;
  int _272;
  int _273;
  int _274;
  vector(8) short int _283;
  vector(2) long long int _284;
  vector(2) long long int _285;
  vector(2) long long int _286;
  vector(8) short int _289;
  vector(8) short int _290;
  vector(8) short int _291;
  vector(8) short int _292;
  vector(2) long long int _293;
  vector(8) short unsigned int _296;
  vector(8) short unsigned int _297;
  vector(8) short unsigned int _298;
  vector(2) long long int _299;
  vector(8) short unsigned int _302;
  vector(8) short unsigned int _303;
  vector(8) short unsigned int _304;
  vector(2) long long int _305;
  vector(8) short unsigned int _308;
  vector(8) short unsigned int _309;
  vector(8) short unsigned int _310;
  vector(2) long long int _311;
  vector(8) short unsigned int _314;
  vector(8) short unsigned int _315;
  vector(8) short unsigned int _316;
  vector(2) long long int _317;
  vector(8) short unsigned int _320;
  vector(8) short unsigned int _321;
  vector(8) short unsigned int _322;
  vector(2) long long int _323;
  vector(8) short int _326;
  vector(8) short int _327;
  vector(8) short int _328;
  vector(8) short int _329;
  vector(2) long long int _330;
  vector(8) short int _333;
  vector(8) short int _334;
  vector(8) short int _335;
  vector(2) long long int _336;
  vector(8) short int _339;
  vector(8) short int _340;
  vector(8) short int _341;
  vector(2) long long int _342;
  vector(8) short int _345;
  vector(8) short int _346;
  vector(16) char _347;
  vector(16) char _348;
  vector(2) long long int _349;

  <bb 2> :
  i_133 = 0;
  if (w_134(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = *in_near_136(D);
  _2 = (int) _1;
  _3 = _2 * 3;
  _4 = *in_far_137(D);
  _5 = (int) _4;
  _6 = _3 + _5;
  _7 = _6 + 2;
  _8 = _7 >> 2;
  _9 = out_138(D) + 1;
  _10 = (unsigned char) _8;
  *_9 = _10;
  _11 = *_9;
  *out_138(D) = _11;
  _141 = out_138(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 49>; [INV]

  <bb 4> :
  _12 = *in_near_136(D);
  _13 = (int) _12;
  _14 = _13 * 3;
  _15 = *in_far_137(D);
  _16 = (int) _15;
  _17 = _14 + _16;
  t1 = _17;

  <bb 5> :
  # i_126 = PHI <i_133(4), i_184(44)>
  _18 = w_134(D) + -1;
  _19 = _18 & -8;
  if (i_126 >= _19)
    goto <bb 45>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _234 = { 0, 0 };

  <bb 7> :
<L19>:
  _352 = _234;
  zero_143 = _352;
  _20 = (sizetype) i_126;
  _21 = in_far_137(D) + _20;
  __P_221 = _21;
  _222 = MEM[(__m64_u * {ref-all})__P_221];
  __q1_223 = { 0, 0 };
  __q0_224 = _222;
  _225 = VIEW_CONVERT_EXPR<long long int>(__q0_224);
  _226 = VIEW_CONVERT_EXPR<long long int>(__q1_223);
  __q1_227 = _226;
  __q0_228 = _225;
  _229 = {__q0_228, __q1_227};

  <bb 8> :
<L16>:
  _230 = _229;
  _231 = _230;

  <bb 9> :
<L17>:
  _232 = _231;
  _233 = _232;

  <bb 10> :
<L18>:
  _353 = _233;
  farb_144 = _353;
  _22 = (sizetype) i_126;
  _23 = in_near_136(D) + _22;
  __P_208 = _23;
  _209 = MEM[(__m64_u * {ref-all})__P_208];
  __q1_210 = { 0, 0 };
  __q0_211 = _209;
  _212 = VIEW_CONVERT_EXPR<long long int>(__q0_211);
  _213 = VIEW_CONVERT_EXPR<long long int>(__q1_210);
  __q1_214 = _213;
  __q0_215 = _212;
  _216 = {__q0_215, __q1_214};

  <bb 11> :
<L13>:
  _217 = _216;
  _218 = _217;

  <bb 12> :
<L14>:
  _219 = _218;
  _220 = _219;

  <bb 13> :
<L15>:
  _354 = _220;
  nearb_145 = _354;
  __A_201 = farb_144;
  __B_202 = zero_143;
  _203 = VIEW_CONVERT_EXPR<__v16qi>(__B_202);
  _204 = VIEW_CONVERT_EXPR<__v16qi>(__A_201);
  _205 = __builtin_ia32_punpcklbw128 (_204, _203);

  <bb 14> :
  _206 = _205;
  _207 = VIEW_CONVERT_EXPR<__m128i>(_206);

  <bb 15> :
<L12>:
  _355 = _207;
  _146 = _355;
  farw_147 = _146;
  __A_235 = nearb_145;
  __B_236 = zero_143;
  _237 = VIEW_CONVERT_EXPR<__v16qi>(__B_236);
  _238 = VIEW_CONVERT_EXPR<__v16qi>(__A_235);
  _239 = __builtin_ia32_punpcklbw128 (_238, _237);

  <bb 16> :
  _240 = _239;
  _241 = VIEW_CONVERT_EXPR<__m128i>(_240);

  <bb 17> :
<L20>:
  _356 = _241;
  _148 = _356;
  nearw_149 = _148;
  __A_248 = farw_147;
  __B_249 = nearw_149;
  _250 = VIEW_CONVERT_EXPR<__v8hu>(__A_248);
  _251 = VIEW_CONVERT_EXPR<__v8hu>(__B_249);
  _252 = _250 - _251;
  _253 = VIEW_CONVERT_EXPR<__m128i>(_252);

  <bb 18> :
<L22>:
  _357 = _253;
  diff_150 = _357;
  __A_242 = nearw_149;
  __B_243 = 2;
  _244 = VIEW_CONVERT_EXPR<__v8hi>(__A_242);
  _245 = __builtin_ia32_psllwi128 (_244, __B_243);

  <bb 19> :
  _246 = _245;
  _247 = VIEW_CONVERT_EXPR<__m128i>(_246);

  <bb 20> :
<L21>:
  _358 = _247;
  _151 = _358;
  nears_152 = _151;
  __A_254 = nears_152;
  __B_255 = diff_150;
  _256 = VIEW_CONVERT_EXPR<__v8hu>(__A_254);
  _257 = VIEW_CONVERT_EXPR<__v8hu>(__B_255);
  _258 = _256 + _257;
  _259 = VIEW_CONVERT_EXPR<__m128i>(_258);

  <bb 21> :
<L23>:
  _359 = _259;
  _24 = _359;
  curr = _24;
  curr.277_25 = curr;
  _154 = __builtin_ia32_pslldqi128 (curr.277_25, 16);

  <bb 22> :
  _26 = _154;
  prv0 = _26;
  curr.278_27 = curr;
  _156 = __builtin_ia32_psrldqi128 (curr.278_27, 16);

  <bb 23> :
  _28 = _156;
  nxt0 = _28;
  t1.279_29 = t1;
  _30 = (short int) t1.279_29;
  _31 = (int) _30;
  prv0.280_32 = prv0;
  _33 = VIEW_CONVERT_EXPR<__v8hi>(prv0.280_32);
  _158 = __builtin_ia32_vec_set_v8hi (_33, _31, 0);

  <bb 24> :
  _34 = _158;
  prev_159 = VIEW_CONVERT_EXPR<__m128i>(_34);
  _35 = (sizetype) i_126;
  _36 = _35 + 8;
  _37 = in_near_136(D) + _36;
  _38 = *_37;
  _39 = (unsigned short) _38;
  _40 = _39 * 3;
  _41 = (sizetype) i_126;
  _42 = _41 + 8;
  _43 = in_far_137(D) + _42;
  _44 = *_43;
  _45 = (unsigned short) _44;
  _46 = _40 + _45;
  _47 = (short int) _46;
  _48 = (int) _47;
  nxt0.281_49 = nxt0;
  _50 = VIEW_CONVERT_EXPR<__v8hi>(nxt0.281_49);
  _160 = __builtin_ia32_vec_set_v8hi (_50, _48, 7);

  <bb 25> :
  _51 = _160;
  next_161 = VIEW_CONVERT_EXPR<__m128i>(_51);
  __A_266 = 8;
  _267 = (int) __A_266;
  _268 = (int) __A_266;
  _269 = (int) __A_266;
  _270 = (int) __A_266;
  _271 = (int) __A_266;
  _272 = (int) __A_266;
  _273 = (int) __A_266;
  _274 = (int) __A_266;
  __q7_275 = (short int) _274;
  __q6_276 = (short int) _273;
  __q5_277 = (short int) _272;
  __q4_278 = (short int) _271;
  __q3_279 = (short int) _270;
  __q2_280 = (short int) _269;
  __q1_281 = (short int) _268;
  __q0_282 = (short int) _267;
  _283 = {__q0_282, __q1_281, __q2_280, __q3_279, __q4_278, __q5_277, __q6_276, __q7_275};
  _284 = VIEW_CONVERT_EXPR<__m128i>(_283);

  <bb 26> :
<L25>:
  _285 = _284;
  _286 = _285;

  <bb 27> :
<L26>:
  _360 = _286;
  bias_162 = _360;
  curr.282_52 = curr;
  __A_260 = curr.282_52;
  __B_261 = 2;
  _262 = VIEW_CONVERT_EXPR<__v8hi>(__A_260);
  _263 = __builtin_ia32_psllwi128 (_262, __B_261);

  <bb 28> :
  _264 = _263;
  _265 = VIEW_CONVERT_EXPR<__m128i>(_264);

  <bb 29> :
<L24>:
  _361 = _265;
  _163 = _361;
  curs_164 = _163;
  curr.283_53 = curr;
  __A_318 = prev_159;
  __B_319 = curr.283_53;
  _320 = VIEW_CONVERT_EXPR<__v8hu>(__A_318);
  _321 = VIEW_CONVERT_EXPR<__v8hu>(__B_319);
  _322 = _320 - _321;
  _323 = VIEW_CONVERT_EXPR<__m128i>(_322);

  <bb 30> :
<L32>:
  _362 = _323;
  prvd_165 = _362;
  curr.284_54 = curr;
  __A_312 = next_161;
  __B_313 = curr.284_54;
  _314 = VIEW_CONVERT_EXPR<__v8hu>(__A_312);
  _315 = VIEW_CONVERT_EXPR<__v8hu>(__B_313);
  _316 = _314 - _315;
  _317 = VIEW_CONVERT_EXPR<__m128i>(_316);

  <bb 31> :
<L31>:
  _363 = _317;
  nxtd_166 = _363;
  __A_306 = curs_164;
  __B_307 = bias_162;
  _308 = VIEW_CONVERT_EXPR<__v8hu>(__A_306);
  _309 = VIEW_CONVERT_EXPR<__v8hu>(__B_307);
  _310 = _308 + _309;
  _311 = VIEW_CONVERT_EXPR<__m128i>(_310);

  <bb 32> :
<L30>:
  _364 = _311;
  curb_167 = _364;
  __A_300 = prvd_165;
  __B_301 = curb_167;
  _302 = VIEW_CONVERT_EXPR<__v8hu>(__A_300);
  _303 = VIEW_CONVERT_EXPR<__v8hu>(__B_301);
  _304 = _302 + _303;
  _305 = VIEW_CONVERT_EXPR<__m128i>(_304);

  <bb 33> :
<L29>:
  _365 = _305;
  even_168 = _365;
  __A_294 = nxtd_166;
  __B_295 = curb_167;
  _296 = VIEW_CONVERT_EXPR<__v8hu>(__A_294);
  _297 = VIEW_CONVERT_EXPR<__v8hu>(__B_295);
  _298 = _296 + _297;
  _299 = VIEW_CONVERT_EXPR<__m128i>(_298);

  <bb 34> :
<L28>:
  _366 = _299;
  odd_169 = _366;
  __A_287 = even_168;
  __B_288 = odd_169;
  _289 = VIEW_CONVERT_EXPR<__v8hi>(__B_288);
  _290 = VIEW_CONVERT_EXPR<__v8hi>(__A_287);
  _291 = __builtin_ia32_punpcklwd128 (_290, _289);

  <bb 35> :
  _292 = _291;
  _293 = VIEW_CONVERT_EXPR<__m128i>(_292);

  <bb 36> :
<L27>:
  _367 = _293;
  _170 = _367;
  int0_171 = _170;
  __A_324 = even_168;
  __B_325 = odd_169;
  _326 = VIEW_CONVERT_EXPR<__v8hi>(__B_325);
  _327 = VIEW_CONVERT_EXPR<__v8hi>(__A_324);
  _328 = __builtin_ia32_punpckhwd128 (_327, _326);

  <bb 37> :
  _329 = _328;
  _330 = VIEW_CONVERT_EXPR<__m128i>(_329);

  <bb 38> :
<L33>:
  _368 = _330;
  _172 = _368;
  int1_173 = _172;
  __A_331 = int0_171;
  __B_332 = 4;
  _333 = VIEW_CONVERT_EXPR<__v8hi>(__A_331);
  _334 = __builtin_ia32_psrlwi128 (_333, __B_332);

  <bb 39> :
  _335 = _334;
  _336 = VIEW_CONVERT_EXPR<__m128i>(_335);

  <bb 40> :
<L34>:
  _369 = _336;
  _174 = _369;
  de0_175 = _174;
  __A_337 = int1_173;
  __B_338 = 4;
  _339 = VIEW_CONVERT_EXPR<__v8hi>(__A_337);
  _340 = __builtin_ia32_psrlwi128 (_339, __B_338);

  <bb 41> :
  _341 = _340;
  _342 = VIEW_CONVERT_EXPR<__m128i>(_341);

  <bb 42> :
<L35>:
  _370 = _342;
  _176 = _370;
  de1_177 = _176;
  __A_343 = de0_175;
  __B_344 = de1_177;
  _345 = VIEW_CONVERT_EXPR<__v8hi>(__B_344);
  _346 = VIEW_CONVERT_EXPR<__v8hi>(__A_343);
  _347 = __builtin_ia32_packuswb128 (_346, _345);

  <bb 43> :
  _348 = _347;
  _349 = VIEW_CONVERT_EXPR<__m128i>(_348);

  <bb 44> :
<L36>:
  _371 = _349;
  _178 = _371;
  outv_179 = _178;
  _55 = i_126 * 2;
  _56 = (sizetype) _55;
  _57 = out_138(D) + _56;
  __P_350 = _57;
  __B_351 = outv_179;
  *__P_350 = __B_351;
  _58 = (sizetype) i_126;
  _59 = _58 + 7;
  _60 = in_near_136(D) + _59;
  _61 = *_60;
  _62 = (int) _61;
  _63 = _62 * 3;
  _64 = (sizetype) i_126;
  _65 = _64 + 7;
  _66 = in_far_137(D) + _65;
  _67 = *_66;
  _68 = (int) _67;
  _69 = _63 + _68;
  t1 = _69;
  curr ={v} {CLOBBER};
  prv0 ={v} {CLOBBER};
  nxt0 ={v} {CLOBBER};
  i_184 = i_126 + 8;
  goto <bb 5>; [INV]

  <bb 45> :
  t0_189 = t1;
  _70 = (sizetype) i_126;
  _71 = in_near_136(D) + _70;
  _72 = *_71;
  _73 = (int) _72;
  _74 = _73 * 3;
  _75 = (sizetype) i_126;
  _76 = in_far_137(D) + _75;
  _77 = *_76;
  _78 = (int) _77;
  _79 = _74 + _78;
  t1 = _79;
  t1.285_80 = t1;
  _81 = t1.285_80 * 3;
  _82 = t0_189 + _81;
  _83 = _82 + 8;
  _84 = _83 >> 4;
  _85 = i_126 * 2;
  _86 = (sizetype) _85;
  _87 = out_138(D) + _86;
  _88 = (unsigned char) _84;
  *_87 = _88;
  i_192 = i_126 + 1;

  <bb 46> :
  # i_127 = PHI <i_192(45), i_197(47)>
  if (i_127 >= w_134(D))
    goto <bb 48>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  t0_193 = t1;
  _89 = (sizetype) i_127;
  _90 = in_near_136(D) + _89;
  _91 = *_90;
  _92 = (int) _91;
  _93 = _92 * 3;
  _94 = (sizetype) i_127;
  _95 = in_far_137(D) + _94;
  _96 = *_95;
  _97 = (int) _96;
  _98 = _93 + _97;
  t1 = _98;
  _99 = t0_193 * 3;
  t1.286_100 = t1;
  _101 = _99 + t1.286_100;
  _102 = _101 + 8;
  _103 = _102 >> 4;
  _104 = i_127 * 2;
  _105 = (sizetype) _104;
  _106 = _105 + 18446744073709551615;
  _107 = out_138(D) + _106;
  _108 = (unsigned char) _103;
  *_107 = _108;
  t1.287_109 = t1;
  _110 = t1.287_109 * 3;
  _111 = t0_193 + _110;
  _112 = _111 + 8;
  _113 = _112 >> 4;
  _114 = i_127 * 2;
  _115 = (sizetype) _114;
  _116 = out_138(D) + _115;
  _117 = (unsigned char) _113;
  *_116 = _117;
  i_197 = i_127 + 1;
  goto <bb 46>; [INV]

  <bb 48> :
  t1.288_118 = t1;
  _119 = t1.288_118 + 2;
  _120 = _119 >> 2;
  _121 = w_134(D) * 2;
  _122 = (sizetype) _121;
  _123 = _122 + 18446744073709551615;
  _124 = out_138(D) + _123;
  _125 = (unsigned char) _120;
  *_124 = _125;
  _199 = out_138(D);

  <bb 49> :
  # _128 = PHI <_141(3), _199(48)>
  t1 ={v} {CLOBBER};

  <bb 50> :
<L9>:
  return _128;

  <bb 51> :
<L10>:
  resx 2

  <bb 52> :
<L11>:
  resx 1

}



;; Function stbi__resample_row_generic (_ZL26stbi__resample_row_genericPhS_S_ii, funcdef_no=867, decl_uid=11573, cgraph_uid=773, symbol_order=788)

stbi__resample_row_generic (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  int j;
  int i;
  stbi_uc * D.14910;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  int _4;
  sizetype _5;
  stbi_uc * _6;
  unsigned char _7;
  stbi_uc * _22;

  <bb 2> :
  i_12 = 0;

  <bb 3> :
  # i_8 = PHI <i_12(2), i_21(7)>
  if (i_8 >= w_14(D))
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  j_15 = 0;

  <bb 5> :
  # j_9 = PHI <j_15(4), j_20(6)>
  if (j_9 >= hs_16(D))
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _1 = (sizetype) i_8;
  _2 = in_near_17(D) + _1;
  _3 = i_8 * hs_16(D);
  _4 = j_9 + _3;
  _5 = (sizetype) _4;
  _6 = out_18(D) + _5;
  _7 = *_2;
  *_6 = _7;
  j_20 = j_9 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  i_21 = i_8 + 1;
  goto <bb 3>; [INV]

  <bb 8> :
  _22 = out_18(D);

  <bb 9> :
<L6>:
  return _22;

}



;; Function stbi__YCbCr_to_RGB_row (_ZL22stbi__YCbCr_to_RGB_rowPhPKhS1_S1_ii, funcdef_no=868, decl_uid=11587, cgraph_uid=774, symbol_order=789)

stbi__YCbCr_to_RGB_row (stbi_uc * out, const stbi_uc * y, const stbi_uc * pcb, const stbi_uc * pcr, int count, int step)
{
  int cb;
  int cr;
  int b;
  int g;
  int r;
  int y_fixed;
  int i;
  sizetype _1;
  const stbi_uc * _2;
  unsigned char _3;
  int _4;
  int _5;
  sizetype _6;
  const stbi_uc * _7;
  unsigned char _8;
  int _9;
  sizetype _10;
  const stbi_uc * _11;
  unsigned char _12;
  int _13;
  int _14;
  int _15;
  int _16;
  unsigned int _17;
  int _18;
  unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  int _22;
  unsigned int r.289_23;
  unsigned int g.290_24;
  unsigned int b.291_25;
  unsigned char _26;
  stbi_uc * _27;
  unsigned char _28;
  stbi_uc * _29;
  unsigned char _30;
  stbi_uc * _31;
  sizetype _32;

  <bb 2> :
  i_42 = 0;

  <bb 3> :
  # out_33 = PHI <out_43(D)(2), out_69(19)>
  # i_34 = PHI <i_42(2), i_70(19)>
  if (i_34 >= count_45(D))
    goto <bb 20>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = (sizetype) i_34;
  _2 = y_46(D) + _1;
  _3 = *_2;
  _4 = (int) _3;
  _5 = _4 << 20;
  y_fixed_47 = _5 + 524288;
  _6 = (sizetype) i_34;
  _7 = pcr_48(D) + _6;
  _8 = *_7;
  _9 = (int) _8;
  cr_49 = _9 + -128;
  _10 = (sizetype) i_34;
  _11 = pcb_50(D) + _10;
  _12 = *_11;
  _13 = (int) _12;
  cb_51 = _13 + -128;
  _14 = cr_49 * 1470208;
  r_52 = y_fixed_47 + _14;
  _15 = cr_49 * -748800;
  _16 = y_fixed_47 + _15;
  _17 = (unsigned int) _16;
  _18 = cb_51 * -360960;
  _19 = (unsigned int) _18;
  _20 = _19 & 4294901760;
  _21 = _17 + _20;
  g_53 = (int) _21;
  _22 = cb_51 * 1858048;
  b_54 = y_fixed_47 + _22;
  r_55 = r_52 >> 20;
  g_56 = g_53 >> 20;
  b_57 = b_54 >> 20;
  r.289_23 = (unsigned int) r_55;
  if (r.289_23 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 5> :
  if (r_55 < 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  r_58 = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  r_59 = 255;

  <bb 8> :
  # r_35 = PHI <r_58(6), r_59(7)>

  <bb 9> :
  # r_36 = PHI <r_55(4), r_35(8)>
  g.290_24 = (unsigned int) g_56;
  if (g.290_24 > 255)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  if (g_56 < 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  g_60 = 0;
  goto <bb 13>; [INV]

  <bb 12> :
  g_61 = 255;

  <bb 13> :
  # g_37 = PHI <g_60(11), g_61(12)>

  <bb 14> :
  # g_38 = PHI <g_56(9), g_37(13)>
  b.291_25 = (unsigned int) b_57;
  if (b.291_25 > 255)
    goto <bb 15>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 15> :
  if (b_57 < 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  b_62 = 0;
  goto <bb 18>; [INV]

  <bb 17> :
  b_63 = 255;

  <bb 18> :
  # b_39 = PHI <b_62(16), b_63(17)>

  <bb 19> :
  # b_40 = PHI <b_57(14), b_39(18)>
  _26 = (unsigned char) r_36;
  *out_33 = _26;
  _27 = out_33 + 1;
  _28 = (unsigned char) g_38;
  *_27 = _28;
  _29 = out_33 + 2;
  _30 = (unsigned char) b_40;
  *_29 = _30;
  _31 = out_33 + 3;
  *_31 = 255;
  _32 = (sizetype) step_68(D);
  out_69 = out_33 + _32;
  i_70 = i_34 + 1;
  goto <bb 3>; [INV]

  <bb 20> :
  return;

}



;; Function stbi__YCbCr_to_RGB_simd (_ZL23stbi__YCbCr_to_RGB_simdPhPKhS1_S1_ii, funcdef_no=869, decl_uid=11604, cgraph_uid=775, symbol_order=790)

stbi__YCbCr_to_RGB_simd (stbi_uc * out, const stbi_uc * y, const stbi_uc * pcb, const stbi_uc * pcr, int count, int step)
{
  __m128i D.18422;
  __m64 __q0;
  __m64 __q1;
  __m128i D.18415;
  __m128i D.18421;
  __m128i D.18418;
  long long int __q1;
  long long int __q0;
  __m128i D.18420;
  __m128i D.18419;
  const __m128i_u * {ref-all} __P;
  __m128i D.18408;
  __m64 __q0;
  __m64 __q1;
  __m128i D.18401;
  __m128i D.18407;
  __m128i D.18404;
  long long int __q1;
  long long int __q0;
  __m128i D.18406;
  __m128i D.18405;
  const __m128i_u * {ref-all} __P;
  __m128i D.18394;
  __m64 __q0;
  __m64 __q1;
  __m128i D.18387;
  __m128i D.18393;
  __m128i D.18390;
  long long int __q1;
  long long int __q0;
  __m128i D.18392;
  __m128i D.18391;
  const __m128i_u * {ref-all} __P;
  __m128i D.18382;
  __m128i D.18381;
  __m128i __A;
  __m128i __B;
  __m128i D.18377;
  __m128i D.18376;
  __m128i __A;
  __m128i __B;
  __m128i D.18372;
  vector(16) char D.18371;
  __m128i D.18370;
  __m128i __A;
  __m128i __B;
  __m128i D.18366;
  __m128i D.18365;
  __m128i D.18363;
  vector(16) char D.18362;
  __m128i D.18361;
  __m128i __A;
  __m128i __B;
  __m128i D.18357;
  __m128i D.18356;
  __m128i D.18354;
  vector(16) char D.18353;
  __m128i D.18352;
  __m128i __A;
  __m128i __B;
  __m128i D.18348;
  vector(8) short int D.18347;
  __m128i D.18346;
  __m128i __A;
  int __B;
  __m128i D.18342;
  vector(8) short int D.18341;
  __m128i D.18340;
  __m128i __A;
  __m128i __B;
  __m128i D.18336;
  vector(8) short int D.18335;
  __m128i D.18334;
  __m128i __A;
  __m128i __B;
  __m128i D.18330;
  vector(8) short int D.18329;
  __m128i D.18328;
  __m128i __A;
  __m128i __B;
  __m128i D.18324;
  vector(8) short int D.18323;
  __m128i D.18322;
  __m128i __A;
  __m128i __B;
  __m128i D.18318;
  __m128i D.18317;
  __m128i __A;
  __m128i __B;
  __m128i D.18313;
  __m128i D.18312;
  __m128i __A;
  __m128i __B;
  __m128i D.18308;
  __m128i D.18307;
  __m128i __A;
  __m128i __B;
  __m128i D.18303;
  __m128i D.18302;
  __m128i __A;
  __m128i __B;
  __m128i D.18298;
  vector(8) short int D.18297;
  __m128i D.18296;
  __m128i __A;
  int __B;
  __m128i D.18292;
  vector(8) short int D.18291;
  __m128i D.18290;
  __m128i __A;
  int __B;
  __m128i D.18286;
  vector(8) short int D.18285;
  __m128i D.18284;
  __m128i __A;
  int __B;
  __m128i D.18280;
  vector(16) char D.18279;
  __m128i D.18278;
  __m128i __A;
  __m128i __B;
  __m128i D.18274;
  vector(16) char D.18273;
  __m128i D.18272;
  __m128i __A;
  __m128i __B;
  __m128i D.18268;
  vector(16) char D.18267;
  __m128i D.18266;
  __m128i __A;
  __m128i __B;
  __m128i D.18262;
  vector(16) char D.18261;
  __m128i D.18260;
  __m128i __A;
  __m128i __B;
  __m128i D.18256;
  vector(8) short int D.18255;
  __m128i D.18254;
  __m128i __A;
  __m128i __B;
  __m128i D.18250;
  vector(8) short int D.18249;
  __m128i D.18248;
  __m128i __A;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i D.18239;
  char __q00;
  char __q01;
  char __q02;
  char __q03;
  char __q04;
  char __q05;
  char __q06;
  char __q07;
  char __q08;
  char __q09;
  char __q10;
  char __q11;
  char __q12;
  char __q13;
  char __q14;
  char __q15;
  __m128i D.18236;
  __m128i D.18238;
  __m128i D.18237;
  char __A;
  __m128i D.18216;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18213;
  __m128i D.18215;
  __m128i D.18214;
  short int __A;
  __m128i D.18201;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18198;
  __m128i D.18200;
  __m128i D.18199;
  short int __A;
  __m128i D.18186;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18183;
  __m128i D.18185;
  __m128i D.18184;
  short int __A;
  __m128i D.18171;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18168;
  __m128i D.18170;
  __m128i D.18169;
  short int __A;
  __m128i D.18156;
  char __q00;
  char __q01;
  char __q02;
  char __q03;
  char __q04;
  char __q05;
  char __q06;
  char __q07;
  char __q08;
  char __q09;
  char __q10;
  char __q11;
  char __q12;
  char __q13;
  char __q14;
  char __q15;
  __m128i D.18153;
  __m128i D.18155;
  __m128i D.18154;
  char __A;
  __m128i D.18133;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18130;
  __m128i D.18132;
  __m128i D.18131;
  short int __A;
  __m128i D.14973;
  __m128i D.14972;
  __m128i D.14971;
  __m128i D.14970;
  __m128i D.14969;
  __m128i D.14968;
  __m128i D.14967;
  __m128i D.14966;
  __m128i D.14965;
  __m128i D.14964;
  __m128i D.14963;
  __m128i D.14962;
  __m128i D.14961;
  __m128i D.14960;
  __m128i D.14959;
  __m128i D.14958;
  __m128i D.14957;
  int cb;
  int cr;
  int b;
  int g;
  int r;
  int y_fixed;
  __m128i o1;
  __m128i o0;
  __m128i t1;
  __m128i t0;
  __m128i gxb;
  __m128i brb;
  __m128i gw;
  __m128i bw;
  __m128i rw;
  __m128i gws;
  __m128i bws;
  __m128i gwt;
  __m128i rws;
  __m128i cr1;
  __m128i cb1;
  __m128i cb0;
  __m128i cr0;
  __m128i yws;
  __m128i cbw;
  __m128i crw;
  __m128i yw;
  __m128i cb_biased;
  __m128i cr_biased;
  __m128i cb_bytes;
  __m128i cr_bytes;
  __m128i y_bytes;
  __m128i xw;
  __m128i y_bias;
  __m128i cb_const1;
  __m128i cb_const0;
  __m128i cr_const1;
  __m128i cr_const0;
  __m128i signflip;
  int i;
  int _1;
  sizetype _2;
  const stbi_uc * _3;
  sizetype _4;
  const stbi_uc * _5;
  sizetype _6;
  const stbi_uc * _7;
  vector(2) long long int _8;
  vector(2) long long int _9;
  stbi_uc * _10;
  sizetype _11;
  const stbi_uc * _12;
  unsigned char _13;
  int _14;
  int _15;
  sizetype _16;
  const stbi_uc * _17;
  unsigned char _18;
  int _19;
  sizetype _20;
  const stbi_uc * _21;
  unsigned char _22;
  int _23;
  int _24;
  int _25;
  int _26;
  unsigned int _27;
  int _28;
  unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  int _32;
  unsigned int r.292_33;
  unsigned int g.293_34;
  unsigned int b.294_35;
  unsigned char _36;
  stbi_uc * _37;
  unsigned char _38;
  stbi_uc * _39;
  unsigned char _40;
  stbi_uc * _41;
  sizetype _42;
  __m128i _75;
  __m128i _77;
  __m128i _79;
  __m128i _81;
  __m128i _83;
  __m128i _85;
  __m128i _87;
  __m128i _89;
  __m128i _95;
  __m128i _97;
  __m128i _99;
  __m128i _101;
  __m128i _103;
  __m128i _105;
  __m128i _107;
  __m128i _109;
  __m128i _111;
  int _137;
  int _138;
  int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  vector(8) short int _153;
  vector(2) long long int _154;
  vector(2) long long int _155;
  vector(2) long long int _156;
  int _158;
  int _159;
  int _160;
  int _161;
  int _162;
  int _163;
  int _164;
  int _165;
  int _166;
  int _167;
  int _168;
  int _169;
  int _170;
  int _171;
  int _172;
  int _173;
  vector(16) char _190;
  vector(2) long long int _191;
  vector(2) long long int _192;
  vector(2) long long int _193;
  int _195;
  int _196;
  int _197;
  int _198;
  int _199;
  int _200;
  int _201;
  int _202;
  vector(8) short int _211;
  vector(2) long long int _212;
  vector(2) long long int _213;
  vector(2) long long int _214;
  int _216;
  int _217;
  int _218;
  int _219;
  int _220;
  int _221;
  int _222;
  int _223;
  vector(8) short int _232;
  vector(2) long long int _233;
  vector(2) long long int _234;
  vector(2) long long int _235;
  int _237;
  int _238;
  int _239;
  int _240;
  int _241;
  int _242;
  int _243;
  int _244;
  vector(8) short int _253;
  vector(2) long long int _254;
  vector(2) long long int _255;
  vector(2) long long int _256;
  int _258;
  int _259;
  int _260;
  int _261;
  int _262;
  int _263;
  int _264;
  int _265;
  vector(8) short int _274;
  vector(2) long long int _275;
  vector(2) long long int _276;
  vector(2) long long int _277;
  int _279;
  int _280;
  int _281;
  int _282;
  int _283;
  int _284;
  int _285;
  int _286;
  int _287;
  int _288;
  int _289;
  int _290;
  int _291;
  int _292;
  int _293;
  int _294;
  vector(16) char _311;
  vector(2) long long int _312;
  vector(2) long long int _313;
  vector(2) long long int _314;
  vector(8) short int _321;
  vector(8) short int _322;
  vector(8) short int _323;
  vector(8) short int _324;
  vector(2) long long int _325;
  vector(8) short int _328;
  vector(8) short int _329;
  vector(8) short int _330;
  vector(8) short int _331;
  vector(2) long long int _332;
  vector(16) char _335;
  vector(16) char _336;
  vector(16) char _337;
  vector(16) char _338;
  vector(2) long long int _339;
  vector(16) char _342;
  vector(16) char _343;
  vector(16) char _344;
  vector(16) char _345;
  vector(2) long long int _346;
  vector(8) short int _349;
  vector(8) short int _350;
  vector(16) char _351;
  vector(16) char _352;
  vector(2) long long int _353;
  vector(8) short int _356;
  vector(8) short int _357;
  vector(16) char _358;
  vector(16) char _359;
  vector(2) long long int _360;
  vector(8) short int _363;
  vector(8) short int _364;
  vector(8) short int _365;
  vector(2) long long int _366;
  vector(8) short int _369;
  vector(8) short int _370;
  vector(8) short int _371;
  vector(2) long long int _372;
  vector(8) short int _375;
  vector(8) short int _376;
  vector(8) short int _377;
  vector(2) long long int _378;
  vector(8) short unsigned int _381;
  vector(8) short unsigned int _382;
  vector(8) short unsigned int _383;
  vector(2) long long int _384;
  vector(8) short unsigned int _387;
  vector(8) short unsigned int _388;
  vector(8) short unsigned int _389;
  vector(2) long long int _390;
  vector(8) short unsigned int _393;
  vector(8) short unsigned int _394;
  vector(8) short unsigned int _395;
  vector(2) long long int _396;
  vector(8) short unsigned int _399;
  vector(8) short unsigned int _400;
  vector(8) short unsigned int _401;
  vector(2) long long int _402;
  vector(8) short int _405;
  vector(8) short int _406;
  vector(8) short int _407;
  vector(8) short int _408;
  vector(2) long long int _409;
  vector(8) short int _412;
  vector(8) short int _413;
  vector(8) short int _414;
  vector(8) short int _415;
  vector(2) long long int _416;
  vector(8) short int _419;
  vector(8) short int _420;
  vector(8) short int _421;
  vector(8) short int _422;
  vector(2) long long int _423;
  vector(8) short int _426;
  vector(8) short int _427;
  vector(8) short int _428;
  vector(8) short int _429;
  vector(2) long long int _430;
  vector(8) short int _433;
  vector(8) short int _434;
  vector(8) short int _435;
  vector(2) long long int _436;
  vector(16) char _439;
  vector(16) char _440;
  vector(16) char _441;
  vector(16) char _442;
  vector(2) long long int _443;
  vector(2) long long int _444;
  vector(16) char _447;
  vector(16) char _448;
  vector(16) char _449;
  vector(16) char _450;
  vector(2) long long int _451;
  vector(2) long long int _452;
  vector(16) char _455;
  vector(16) char _456;
  vector(16) char _457;
  vector(16) char _458;
  vector(2) long long int _459;
  vector(2) long long unsigned int _462;
  vector(2) long long unsigned int _463;
  vector(2) long long unsigned int _464;
  vector(2) long long int _465;
  vector(2) long long unsigned int _468;
  vector(2) long long unsigned int _469;
  vector(2) long long unsigned int _470;
  vector(2) long long int _471;
  vector(2) int _473;
  long long int _476;
  long long int _477;
  vector(2) long long int _480;
  vector(2) long long int _481;
  vector(2) long long int _482;
  vector(2) long long int _483;
  vector(2) long long int _484;
  vector(2) int _486;
  long long int _489;
  long long int _490;
  vector(2) long long int _493;
  vector(2) long long int _494;
  vector(2) long long int _495;
  vector(2) long long int _496;
  vector(2) long long int _497;
  vector(2) int _499;
  long long int _502;
  long long int _503;
  vector(2) long long int _506;
  vector(2) long long int _507;
  vector(2) long long int _508;
  vector(2) long long int _509;
  vector(2) long long int _510;

  <bb 2> :
  i_55 = 0;
  if (step_56(D) == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 3> :
  __A_278 = -128;
  _279 = (int) __A_278;
  _280 = (int) __A_278;
  _281 = (int) __A_278;
  _282 = (int) __A_278;
  _283 = (int) __A_278;
  _284 = (int) __A_278;
  _285 = (int) __A_278;
  _286 = (int) __A_278;
  _287 = (int) __A_278;
  _288 = (int) __A_278;
  _289 = (int) __A_278;
  _290 = (int) __A_278;
  _291 = (int) __A_278;
  _292 = (int) __A_278;
  _293 = (int) __A_278;
  _294 = (int) __A_278;
  __q15_295 = (char) _294;
  __q14_296 = (char) _293;
  __q13_297 = (char) _292;
  __q12_298 = (char) _291;
  __q11_299 = (char) _290;
  __q10_300 = (char) _289;
  __q09_301 = (char) _288;
  __q08_302 = (char) _287;
  __q07_303 = (char) _286;
  __q06_304 = (char) _285;
  __q05_305 = (char) _284;
  __q04_306 = (char) _283;
  __q03_307 = (char) _282;
  __q02_308 = (char) _281;
  __q01_309 = (char) _280;
  __q00_310 = (char) _279;
  _311 = {__q00_310, __q01_309, __q02_308, __q03_307, __q04_306, __q05_305, __q06_304, __q07_303, __q08_302, __q09_301, __q10_300, __q11_299, __q12_298, __q13_297, __q14_296, __q15_295};
  _312 = VIEW_CONVERT_EXPR<__m128i>(_311);

  <bb 4> :
<L39>:
  _313 = _312;
  _314 = _313;

  <bb 5> :
<L40>:
  _514 = _314;
  signflip_59 = _514;
  __A_257 = 5743;
  _258 = (int) __A_257;
  _259 = (int) __A_257;
  _260 = (int) __A_257;
  _261 = (int) __A_257;
  _262 = (int) __A_257;
  _263 = (int) __A_257;
  _264 = (int) __A_257;
  _265 = (int) __A_257;
  __q7_266 = (short int) _265;
  __q6_267 = (short int) _264;
  __q5_268 = (short int) _263;
  __q4_269 = (short int) _262;
  __q3_270 = (short int) _261;
  __q2_271 = (short int) _260;
  __q1_272 = (short int) _259;
  __q0_273 = (short int) _258;
  _274 = {__q0_273, __q1_272, __q2_271, __q3_270, __q4_269, __q5_268, __q6_267, __q7_266};
  _275 = VIEW_CONVERT_EXPR<__m128i>(_274);

  <bb 6> :
<L37>:
  _276 = _275;
  _277 = _276;

  <bb 7> :
<L38>:
  _515 = _277;
  cr_const0_60 = _515;
  __A_236 = -2925;
  _237 = (int) __A_236;
  _238 = (int) __A_236;
  _239 = (int) __A_236;
  _240 = (int) __A_236;
  _241 = (int) __A_236;
  _242 = (int) __A_236;
  _243 = (int) __A_236;
  _244 = (int) __A_236;
  __q7_245 = (short int) _244;
  __q6_246 = (short int) _243;
  __q5_247 = (short int) _242;
  __q4_248 = (short int) _241;
  __q3_249 = (short int) _240;
  __q2_250 = (short int) _239;
  __q1_251 = (short int) _238;
  __q0_252 = (short int) _237;
  _253 = {__q0_252, __q1_251, __q2_250, __q3_249, __q4_248, __q5_247, __q6_246, __q7_245};
  _254 = VIEW_CONVERT_EXPR<__m128i>(_253);

  <bb 8> :
<L35>:
  _255 = _254;
  _256 = _255;

  <bb 9> :
<L36>:
  _516 = _256;
  cr_const1_61 = _516;
  __A_215 = -1410;
  _216 = (int) __A_215;
  _217 = (int) __A_215;
  _218 = (int) __A_215;
  _219 = (int) __A_215;
  _220 = (int) __A_215;
  _221 = (int) __A_215;
  _222 = (int) __A_215;
  _223 = (int) __A_215;
  __q7_224 = (short int) _223;
  __q6_225 = (short int) _222;
  __q5_226 = (short int) _221;
  __q4_227 = (short int) _220;
  __q3_228 = (short int) _219;
  __q2_229 = (short int) _218;
  __q1_230 = (short int) _217;
  __q0_231 = (short int) _216;
  _232 = {__q0_231, __q1_230, __q2_229, __q3_228, __q4_227, __q5_226, __q6_225, __q7_224};
  _233 = VIEW_CONVERT_EXPR<__m128i>(_232);

  <bb 10> :
<L33>:
  _234 = _233;
  _235 = _234;

  <bb 11> :
<L34>:
  _517 = _235;
  cb_const0_62 = _517;
  __A_194 = 7258;
  _195 = (int) __A_194;
  _196 = (int) __A_194;
  _197 = (int) __A_194;
  _198 = (int) __A_194;
  _199 = (int) __A_194;
  _200 = (int) __A_194;
  _201 = (int) __A_194;
  _202 = (int) __A_194;
  __q7_203 = (short int) _202;
  __q6_204 = (short int) _201;
  __q5_205 = (short int) _200;
  __q4_206 = (short int) _199;
  __q3_207 = (short int) _198;
  __q2_208 = (short int) _197;
  __q1_209 = (short int) _196;
  __q0_210 = (short int) _195;
  _211 = {__q0_210, __q1_209, __q2_208, __q3_207, __q4_206, __q5_205, __q6_204, __q7_203};
  _212 = VIEW_CONVERT_EXPR<__m128i>(_211);

  <bb 12> :
<L31>:
  _213 = _212;
  _214 = _213;

  <bb 13> :
<L32>:
  _518 = _214;
  cb_const1_63 = _518;
  __A_157 = -128;
  _158 = (int) __A_157;
  _159 = (int) __A_157;
  _160 = (int) __A_157;
  _161 = (int) __A_157;
  _162 = (int) __A_157;
  _163 = (int) __A_157;
  _164 = (int) __A_157;
  _165 = (int) __A_157;
  _166 = (int) __A_157;
  _167 = (int) __A_157;
  _168 = (int) __A_157;
  _169 = (int) __A_157;
  _170 = (int) __A_157;
  _171 = (int) __A_157;
  _172 = (int) __A_157;
  _173 = (int) __A_157;
  __q15_174 = (char) _173;
  __q14_175 = (char) _172;
  __q13_176 = (char) _171;
  __q12_177 = (char) _170;
  __q11_178 = (char) _169;
  __q10_179 = (char) _168;
  __q09_180 = (char) _167;
  __q08_181 = (char) _166;
  __q07_182 = (char) _165;
  __q06_183 = (char) _164;
  __q05_184 = (char) _163;
  __q04_185 = (char) _162;
  __q03_186 = (char) _161;
  __q02_187 = (char) _160;
  __q01_188 = (char) _159;
  __q00_189 = (char) _158;
  _190 = {__q00_189, __q01_188, __q02_187, __q03_186, __q04_185, __q05_184, __q06_183, __q07_182, __q08_181, __q09_180, __q10_179, __q11_178, __q12_177, __q13_176, __q14_175, __q15_174};
  _191 = VIEW_CONVERT_EXPR<__m128i>(_190);

  <bb 14> :
<L29>:
  _192 = _191;
  _193 = _192;

  <bb 15> :
<L30>:
  _519 = _193;
  y_bias_64 = _519;
  __A_136 = 255;
  _137 = (int) __A_136;
  _138 = (int) __A_136;
  _139 = (int) __A_136;
  _140 = (int) __A_136;
  _141 = (int) __A_136;
  _142 = (int) __A_136;
  _143 = (int) __A_136;
  _144 = (int) __A_136;
  __q7_145 = (short int) _144;
  __q6_146 = (short int) _143;
  __q5_147 = (short int) _142;
  __q4_148 = (short int) _141;
  __q3_149 = (short int) _140;
  __q2_150 = (short int) _139;
  __q1_151 = (short int) _138;
  __q0_152 = (short int) _137;
  _153 = {__q0_152, __q1_151, __q2_150, __q3_149, __q4_148, __q5_147, __q6_146, __q7_145};
  _154 = VIEW_CONVERT_EXPR<__m128i>(_153);

  <bb 16> :
<L27>:
  _155 = _154;
  _156 = _155;

  <bb 17> :
<L28>:
  _520 = _156;
  xw_65 = _520;

  <bb 18> :
  # out_43 = PHI <out_57(D)(17), out_113(53)>
  # i_45 = PHI <i_55(17), i_114(53)>
  _1 = i_45 + 7;
  if (count_66(D) <= _1)
    goto <bb 54>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  _2 = (sizetype) i_45;
  _3 = y_67(D) + _2;
  __P_498 = _3;
  _499 = MEM[(__m64_u * {ref-all})__P_498];
  __q1_500 = { 0, 0 };
  __q0_501 = _499;
  _502 = VIEW_CONVERT_EXPR<long long int>(__q0_501);
  _503 = VIEW_CONVERT_EXPR<long long int>(__q1_500);
  __q1_504 = _503;
  __q0_505 = _502;
  _506 = {__q0_505, __q1_504};

  <bb 20> :
<L72>:
  _507 = _506;
  _508 = _507;

  <bb 21> :
<L73>:
  _509 = _508;
  _510 = _509;

  <bb 22> :
<L74>:
  _521 = _510;
  y_bytes_68 = _521;
  _4 = (sizetype) i_45;
  _5 = pcr_69(D) + _4;
  __P_485 = _5;
  _486 = MEM[(__m64_u * {ref-all})__P_485];
  __q1_487 = { 0, 0 };
  __q0_488 = _486;
  _489 = VIEW_CONVERT_EXPR<long long int>(__q0_488);
  _490 = VIEW_CONVERT_EXPR<long long int>(__q1_487);
  __q1_491 = _490;
  __q0_492 = _489;
  _493 = {__q0_492, __q1_491};

  <bb 23> :
<L69>:
  _494 = _493;
  _495 = _494;

  <bb 24> :
<L70>:
  _496 = _495;
  _497 = _496;

  <bb 25> :
<L71>:
  _522 = _497;
  cr_bytes_70 = _522;
  _6 = (sizetype) i_45;
  _7 = pcb_71(D) + _6;
  __P_472 = _7;
  _473 = MEM[(__m64_u * {ref-all})__P_472];
  __q1_474 = { 0, 0 };
  __q0_475 = _473;
  _476 = VIEW_CONVERT_EXPR<long long int>(__q0_475);
  _477 = VIEW_CONVERT_EXPR<long long int>(__q1_474);
  __q1_478 = _477;
  __q0_479 = _476;
  _480 = {__q0_479, __q1_478};

  <bb 26> :
<L66>:
  _481 = _480;
  _482 = _481;

  <bb 27> :
<L67>:
  _483 = _482;
  _484 = _483;

  <bb 28> :
<L68>:
  _523 = _484;
  cb_bytes_72 = _523;
  __A_466 = cr_bytes_70;
  __B_467 = signflip_59;
  _468 = VIEW_CONVERT_EXPR<__v2du>(__A_466);
  _469 = VIEW_CONVERT_EXPR<__v2du>(__B_467);
  _470 = _468 ^ _469;
  _471 = VIEW_CONVERT_EXPR<__m128i>(_470);

  <bb 29> :
<L65>:
  _524 = _471;
  cr_biased_73 = _524;
  __A_460 = cb_bytes_72;
  __B_461 = signflip_59;
  _462 = VIEW_CONVERT_EXPR<__v2du>(__A_460);
  _463 = VIEW_CONVERT_EXPR<__v2du>(__B_461);
  _464 = _462 ^ _463;
  _465 = VIEW_CONVERT_EXPR<__m128i>(_464);

  <bb 30> :
<L64>:
  _525 = _465;
  cb_biased_74 = _525;
  __A_453 = y_bias_64;
  __B_454 = y_bytes_68;
  _455 = VIEW_CONVERT_EXPR<__v16qi>(__B_454);
  _456 = VIEW_CONVERT_EXPR<__v16qi>(__A_453);
  _457 = __builtin_ia32_punpcklbw128 (_456, _455);
  _458 = _457;
  _459 = VIEW_CONVERT_EXPR<__m128i>(_458);

  <bb 31> :
<L63>:
  _526 = _459;
  _75 = _526;
  yw_76 = _75;
  _452 = { 0, 0 };

  <bb 32> :
<L62>:
  _527 = _452;
  _8 = _527;
  __A_445 = _8;
  __B_446 = cr_biased_73;
  _447 = VIEW_CONVERT_EXPR<__v16qi>(__B_446);
  _448 = VIEW_CONVERT_EXPR<__v16qi>(__A_445);
  _449 = __builtin_ia32_punpcklbw128 (_448, _447);
  _450 = _449;
  _451 = VIEW_CONVERT_EXPR<__m128i>(_450);

  <bb 33> :
<L61>:
  _528 = _451;
  _77 = _528;
  crw_78 = _77;
  _444 = { 0, 0 };

  <bb 34> :
<L60>:
  _529 = _444;
  _9 = _529;
  __A_437 = _9;
  __B_438 = cb_biased_74;
  _439 = VIEW_CONVERT_EXPR<__v16qi>(__B_438);
  _440 = VIEW_CONVERT_EXPR<__v16qi>(__A_437);
  _441 = __builtin_ia32_punpcklbw128 (_440, _439);
  _442 = _441;
  _443 = VIEW_CONVERT_EXPR<__m128i>(_442);

  <bb 35> :
<L59>:
  _530 = _443;
  _79 = _530;
  cbw_80 = _79;
  __A_431 = yw_76;
  __B_432 = 4;
  _433 = VIEW_CONVERT_EXPR<__v8hi>(__A_431);
  _434 = __builtin_ia32_psrlwi128 (_433, __B_432);
  _435 = _434;
  _436 = VIEW_CONVERT_EXPR<__m128i>(_435);

  <bb 36> :
<L58>:
  _531 = _436;
  _81 = _531;
  yws_82 = _81;
  __A_424 = cr_const0_60;
  __B_425 = crw_78;
  _426 = VIEW_CONVERT_EXPR<__v8hi>(__B_425);
  _427 = VIEW_CONVERT_EXPR<__v8hi>(__A_424);
  _428 = __builtin_ia32_pmulhw128 (_427, _426);
  _429 = _428;
  _430 = VIEW_CONVERT_EXPR<__m128i>(_429);

  <bb 37> :
<L57>:
  _532 = _430;
  _83 = _532;
  cr0_84 = _83;
  __A_417 = cb_const0_62;
  __B_418 = cbw_80;
  _419 = VIEW_CONVERT_EXPR<__v8hi>(__B_418);
  _420 = VIEW_CONVERT_EXPR<__v8hi>(__A_417);
  _421 = __builtin_ia32_pmulhw128 (_420, _419);
  _422 = _421;
  _423 = VIEW_CONVERT_EXPR<__m128i>(_422);

  <bb 38> :
<L56>:
  _533 = _423;
  _85 = _533;
  cb0_86 = _85;
  __A_410 = cbw_80;
  __B_411 = cb_const1_63;
  _412 = VIEW_CONVERT_EXPR<__v8hi>(__B_411);
  _413 = VIEW_CONVERT_EXPR<__v8hi>(__A_410);
  _414 = __builtin_ia32_pmulhw128 (_413, _412);
  _415 = _414;
  _416 = VIEW_CONVERT_EXPR<__m128i>(_415);

  <bb 39> :
<L55>:
  _534 = _416;
  _87 = _534;
  cb1_88 = _87;
  __A_403 = crw_78;
  __B_404 = cr_const1_61;
  _405 = VIEW_CONVERT_EXPR<__v8hi>(__B_404);
  _406 = VIEW_CONVERT_EXPR<__v8hi>(__A_403);
  _407 = __builtin_ia32_pmulhw128 (_406, _405);
  _408 = _407;
  _409 = VIEW_CONVERT_EXPR<__m128i>(_408);

  <bb 40> :
<L54>:
  _535 = _409;
  _89 = _535;
  cr1_90 = _89;
  __A_397 = cr0_84;
  __B_398 = yws_82;
  _399 = VIEW_CONVERT_EXPR<__v8hu>(__A_397);
  _400 = VIEW_CONVERT_EXPR<__v8hu>(__B_398);
  _401 = _399 + _400;
  _402 = VIEW_CONVERT_EXPR<__m128i>(_401);

  <bb 41> :
<L53>:
  _536 = _402;
  rws_91 = _536;
  __A_391 = cb0_86;
  __B_392 = yws_82;
  _393 = VIEW_CONVERT_EXPR<__v8hu>(__A_391);
  _394 = VIEW_CONVERT_EXPR<__v8hu>(__B_392);
  _395 = _393 + _394;
  _396 = VIEW_CONVERT_EXPR<__m128i>(_395);

  <bb 42> :
<L52>:
  _537 = _396;
  gwt_92 = _537;
  __A_385 = yws_82;
  __B_386 = cb1_88;
  _387 = VIEW_CONVERT_EXPR<__v8hu>(__A_385);
  _388 = VIEW_CONVERT_EXPR<__v8hu>(__B_386);
  _389 = _387 + _388;
  _390 = VIEW_CONVERT_EXPR<__m128i>(_389);

  <bb 43> :
<L51>:
  _538 = _390;
  bws_93 = _538;
  __A_379 = gwt_92;
  __B_380 = cr1_90;
  _381 = VIEW_CONVERT_EXPR<__v8hu>(__A_379);
  _382 = VIEW_CONVERT_EXPR<__v8hu>(__B_380);
  _383 = _381 + _382;
  _384 = VIEW_CONVERT_EXPR<__m128i>(_383);

  <bb 44> :
<L50>:
  _539 = _384;
  gws_94 = _539;
  __A_373 = rws_91;
  __B_374 = 4;
  _375 = VIEW_CONVERT_EXPR<__v8hi>(__A_373);
  _376 = __builtin_ia32_psrawi128 (_375, __B_374);
  _377 = _376;
  _378 = VIEW_CONVERT_EXPR<__m128i>(_377);

  <bb 45> :
<L49>:
  _540 = _378;
  _95 = _540;
  rw_96 = _95;
  __A_367 = bws_93;
  __B_368 = 4;
  _369 = VIEW_CONVERT_EXPR<__v8hi>(__A_367);
  _370 = __builtin_ia32_psrawi128 (_369, __B_368);
  _371 = _370;
  _372 = VIEW_CONVERT_EXPR<__m128i>(_371);

  <bb 46> :
<L48>:
  _541 = _372;
  _97 = _541;
  bw_98 = _97;
  __A_361 = gws_94;
  __B_362 = 4;
  _363 = VIEW_CONVERT_EXPR<__v8hi>(__A_361);
  _364 = __builtin_ia32_psrawi128 (_363, __B_362);
  _365 = _364;
  _366 = VIEW_CONVERT_EXPR<__m128i>(_365);

  <bb 47> :
<L47>:
  _542 = _366;
  _99 = _542;
  gw_100 = _99;
  __A_354 = rw_96;
  __B_355 = bw_98;
  _356 = VIEW_CONVERT_EXPR<__v8hi>(__B_355);
  _357 = VIEW_CONVERT_EXPR<__v8hi>(__A_354);
  _358 = __builtin_ia32_packuswb128 (_357, _356);
  _359 = _358;
  _360 = VIEW_CONVERT_EXPR<__m128i>(_359);

  <bb 48> :
<L46>:
  _543 = _360;
  _101 = _543;
  brb_102 = _101;
  __A_347 = gw_100;
  __B_348 = xw_65;
  _349 = VIEW_CONVERT_EXPR<__v8hi>(__B_348);
  _350 = VIEW_CONVERT_EXPR<__v8hi>(__A_347);
  _351 = __builtin_ia32_packuswb128 (_350, _349);
  _352 = _351;
  _353 = VIEW_CONVERT_EXPR<__m128i>(_352);

  <bb 49> :
<L45>:
  _544 = _353;
  _103 = _544;
  gxb_104 = _103;
  __A_340 = brb_102;
  __B_341 = gxb_104;
  _342 = VIEW_CONVERT_EXPR<__v16qi>(__B_341);
  _343 = VIEW_CONVERT_EXPR<__v16qi>(__A_340);
  _344 = __builtin_ia32_punpcklbw128 (_343, _342);
  _345 = _344;
  _346 = VIEW_CONVERT_EXPR<__m128i>(_345);

  <bb 50> :
<L44>:
  _545 = _346;
  _105 = _545;
  t0_106 = _105;
  __A_333 = brb_102;
  __B_334 = gxb_104;
  _335 = VIEW_CONVERT_EXPR<__v16qi>(__B_334);
  _336 = VIEW_CONVERT_EXPR<__v16qi>(__A_333);
  _337 = __builtin_ia32_punpckhbw128 (_336, _335);
  _338 = _337;
  _339 = VIEW_CONVERT_EXPR<__m128i>(_338);

  <bb 51> :
<L43>:
  _546 = _339;
  _107 = _546;
  t1_108 = _107;
  __A_326 = t0_106;
  __B_327 = t1_108;
  _328 = VIEW_CONVERT_EXPR<__v8hi>(__B_327);
  _329 = VIEW_CONVERT_EXPR<__v8hi>(__A_326);
  _330 = __builtin_ia32_punpcklwd128 (_329, _328);
  _331 = _330;
  _332 = VIEW_CONVERT_EXPR<__m128i>(_331);

  <bb 52> :
<L42>:
  _547 = _332;
  _109 = _547;
  o0_110 = _109;
  __A_319 = t0_106;
  __B_320 = t1_108;
  _321 = VIEW_CONVERT_EXPR<__v8hi>(__B_320);
  _322 = VIEW_CONVERT_EXPR<__v8hi>(__A_319);
  _323 = __builtin_ia32_punpckhwd128 (_322, _321);
  _324 = _323;
  _325 = VIEW_CONVERT_EXPR<__m128i>(_324);

  <bb 53> :
<L41>:
  _548 = _325;
  _111 = _548;
  o1_112 = _111;
  __P_317 = out_43;
  __B_318 = o0_110;
  *__P_317 = __B_318;
  _10 = out_43 + 16;
  __P_315 = _10;
  __B_316 = o1_112;
  *__P_315 = __B_316;
  out_113 = out_43 + 32;
  i_114 = i_45 + 8;
  goto <bb 18>; [INV]

  <bb 54> :

  <bb 55> :
  # out_511 = PHI <out_57(D)(2), out_43(54)>
  # i_512 = PHI <i_55(2), i_45(54)>

  <bb 56> :
  # out_44 = PHI <out_511(55), out_134(72)>
  # i_46 = PHI <i_512(55), i_135(72)>
  if (i_46 >= count_66(D))
    goto <bb 73>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  _11 = (sizetype) i_46;
  _12 = y_67(D) + _11;
  _13 = *_12;
  _14 = (int) _13;
  _15 = _14 << 20;
  y_fixed_115 = _15 + 524288;
  _16 = (sizetype) i_46;
  _17 = pcr_69(D) + _16;
  _18 = *_17;
  _19 = (int) _18;
  cr_116 = _19 + -128;
  _20 = (sizetype) i_46;
  _21 = pcb_71(D) + _20;
  _22 = *_21;
  _23 = (int) _22;
  cb_117 = _23 + -128;
  _24 = cr_116 * 1470208;
  r_118 = y_fixed_115 + _24;
  _25 = cr_116 * -748800;
  _26 = y_fixed_115 + _25;
  _27 = (unsigned int) _26;
  _28 = cb_117 * -360960;
  _29 = (unsigned int) _28;
  _30 = _29 & 4294901760;
  _31 = _27 + _30;
  g_119 = (int) _31;
  _32 = cb_117 * 1858048;
  b_120 = y_fixed_115 + _32;
  r_121 = r_118 >> 20;
  g_122 = g_119 >> 20;
  b_123 = b_120 >> 20;
  r.292_33 = (unsigned int) r_121;
  if (r.292_33 > 255)
    goto <bb 58>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 58> :
  if (r_121 < 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  r_124 = 0;
  goto <bb 61>; [INV]

  <bb 60> :
  r_125 = 255;

  <bb 61> :
  # r_47 = PHI <r_124(59), r_125(60)>

  <bb 62> :
  # r_48 = PHI <r_121(57), r_47(61)>
  g.293_34 = (unsigned int) g_122;
  if (g.293_34 > 255)
    goto <bb 63>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 63> :
  if (g_122 < 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  g_126 = 0;
  goto <bb 66>; [INV]

  <bb 65> :
  g_127 = 255;

  <bb 66> :
  # g_49 = PHI <g_126(64), g_127(65)>

  <bb 67> :
  # g_50 = PHI <g_122(62), g_49(66)>
  b.294_35 = (unsigned int) b_123;
  if (b.294_35 > 255)
    goto <bb 68>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 68> :
  if (b_123 < 0)
    goto <bb 69>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 69> :
  b_128 = 0;
  goto <bb 71>; [INV]

  <bb 70> :
  b_129 = 255;

  <bb 71> :
  # b_51 = PHI <b_128(69), b_129(70)>

  <bb 72> :
  # b_52 = PHI <b_123(67), b_51(71)>
  _36 = (unsigned char) r_48;
  *out_44 = _36;
  _37 = out_44 + 1;
  _38 = (unsigned char) g_50;
  *_37 = _38;
  _39 = out_44 + 2;
  _40 = (unsigned char) b_52;
  *_39 = _40;
  _41 = out_44 + 3;
  *_41 = 255;
  _42 = (sizetype) step_56(D);
  out_134 = out_44 + _42;
  i_135 = i_46 + 1;
  goto <bb 56>; [INV]

  <bb 73> :
  return;

}



;; Function stbi__setup_jpeg (_ZL16stbi__setup_jpegP10stbi__jpeg, funcdef_no=870, decl_uid=11651, cgraph_uid=776, symbol_order=791)

stbi__setup_jpeg (struct stbi__jpeg * j)
{
  bool retval.295;
  int _1;
  bool retval.295_9;

  <bb 2> :
  j_4(D)->idct_block_kernel = stbi__idct_block;
  j_4(D)->YCbCr_to_RGB_kernel = stbi__YCbCr_to_RGB_row;
  j_4(D)->resample_row_hv_2_kernel = stbi__resample_row_hv_2;
  _1 = stbi__sse2_available ();
  retval.295_9 = _1 != 0;
  if (retval.295_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  j_4(D)->idct_block_kernel = stbi__idct_simd;
  j_4(D)->YCbCr_to_RGB_kernel = stbi__YCbCr_to_RGB_simd;
  j_4(D)->resample_row_hv_2_kernel = stbi__resample_row_hv_2_simd;

  <bb 4> :
  return;

}



;; Function stbi__cleanup_jpeg (_ZL18stbi__cleanup_jpegP10stbi__jpeg, funcdef_no=871, decl_uid=11654, cgraph_uid=777, symbol_order=792)

stbi__cleanup_jpeg (struct stbi__jpeg * j)
{
  struct stbi__context * _1;
  int _2;

  <bb 2> :
  _1 = j_4(D)->s;
  _2 = _1->img_n;
  stbi__free_jpeg_components (j_4(D), _2, 0);
  return;

}



;; Function stbi__blinn_8x8 (_ZL15stbi__blinn_8x8hh, funcdef_no=872, decl_uid=11669, cgraph_uid=778, symbol_order=793)

stbi__blinn_8x8 (stbi_uc x, stbi_uc y)
{
  unsigned int t;
  stbi_uc D.14990;
  int _1;
  int _2;
  int _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  stbi_uc _11;

  <bb 2> :
  _1 = (int) x_8(D);
  _2 = (int) y_9(D);
  _3 = _1 * _2;
  _4 = _3 + 128;
  t_10 = (unsigned int) _4;
  _5 = t_10 >> 8;
  _6 = t_10 + _5;
  _7 = _6 >> 8;
  _11 = (stbi_uc) _7;

  <bb 3> :
<L0>:
  return _11;

}



;; Function load_jpeg_image (_ZL15load_jpeg_imageP10stbi__jpegPiS1_S1_i, funcdef_no=873, decl_uid=11677, cgraph_uid=779, symbol_order=794)

load_jpeg_image (struct stbi__jpeg * z, int * out_x, int * out_y, int * comp, int req_comp)
{
  stbi_uc * D.15125;
  int D.15124;
  stbi_uc * y;
  stbi_uc b;
  stbi_uc g;
  stbi_uc r;
  stbi_uc m;
  stbi_uc m;
  stbi_uc m;
  stbi_uc * y;
  int y_bot;
  struct stbi__resample * r;
  stbi_uc * out;
  struct stbi__resample * r;
  struct stbi__resample res_comp[4];
  stbi_uc * coutput[4];
  stbi_uc * output;
  unsigned int j;
  unsigned int i;
  int k;
  int is_rgb;
  int decode_n;
  int n;
  int iftmp.308;
  bool retval.304;
  bool retval.303;
  stbi_uc * iftmp.302;
  stbi_uc * iftmp.301;
  bool iftmp.299;
  int iftmp.298;
  int iftmp.297;
  bool retval.296;
  stbi_uc * D.14995;
  struct stbi__context * _1;
  int _2;
  struct stbi__context * _3;
  int _4;
  struct stbi__context * _5;
  int _6;
  int _7;
  int _8;
  int _9;
  struct stbi__context * _10;
  int _11;
  struct stbi__context * _12;
  struct stbi__context * _13;
  unsigned int _14;
  unsigned int _15;
  long long unsigned int _16;
  void * _17;
  stbi_uc * _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  struct stbi__context * _27;
  unsigned int _28;
  int _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  int _33;
  unsigned int _34;
  unsigned int _35;
  int _36;
  stbi_uc * _37;
  stbi_uc * _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  stbi_uc * (*<Tc5a>) (stbi_uc *, stbi_uc *, stbi_uc *, int, int) _47;
  struct stbi__context * _48;
  unsigned int _49;
  int _50;
  struct stbi__context * _51;
  unsigned int _52;
  int _53;
  struct stbi__context * _54;
  unsigned int _55;
  struct stbi__context * _56;
  unsigned int _57;
  unsigned int n.300_58;
  unsigned int _59;
  unsigned int _60;
  sizetype _61;
  int _62;
  int _63;
  int _64;
  bool _65;
  stbi_uc * (*<Tc5a>) (stbi_uc *, stbi_uc *, stbi_uc *, int, int) _66;
  int _67;
  int _68;
  stbi_uc * _69;
  stbi_uc * _70;
  int _71;
  int _72;
  int _73;
  int _74;
  stbi_uc * _75;
  int _76;
  int _77;
  int _78;
  int _79;
  stbi_uc * _80;
  int _81;
  sizetype _82;
  stbi_uc * _83;
  struct stbi__context * _84;
  int _85;
  struct stbi__context * _86;
  unsigned int _87;
  sizetype _88;
  stbi_uc * _89;
  unsigned char _90;
  stbi_uc * _91;
  sizetype _92;
  stbi_uc * _93;
  stbi_uc * _94;
  unsigned char _95;
  stbi_uc * _96;
  sizetype _97;
  stbi_uc * _98;
  stbi_uc * _99;
  unsigned char _100;
  stbi_uc * _101;
  sizetype _102;
  void (*<Tc56>) (stbi_uc *, const stbi_uc *, const stbi_uc *, const stbi_uc *, int, int) _103;
  struct stbi__context * _104;
  unsigned int _105;
  int _106;
  stbi_uc * _107;
  stbi_uc * _108;
  struct stbi__context * _109;
  int _110;
  int _111;
  struct stbi__context * _112;
  unsigned int _113;
  stbi_uc * _114;
  sizetype _115;
  stbi_uc * _116;
  int _117;
  stbi_uc * _118;
  sizetype _119;
  stbi_uc * _120;
  unsigned char _121;
  int _122;
  unsigned char _123;
  int _124;
  stbi_uc * _125;
  sizetype _126;
  stbi_uc * _127;
  unsigned char _128;
  int _129;
  stbi_uc * _130;
  unsigned char _131;
  int _132;
  stbi_uc * _133;
  sizetype _134;
  stbi_uc * _135;
  unsigned char _136;
  int _137;
  stbi_uc * _138;
  unsigned char _139;
  stbi_uc * _140;
  sizetype _141;
  int _142;
  void (*<Tc56>) (stbi_uc *, const stbi_uc *, const stbi_uc *, const stbi_uc *, int, int) _143;
  struct stbi__context * _144;
  unsigned int _145;
  int _146;
  stbi_uc * _147;
  stbi_uc * _148;
  struct stbi__context * _149;
  unsigned int _150;
  stbi_uc * _151;
  sizetype _152;
  stbi_uc * _153;
  int _154;
  unsigned char _155;
  unsigned char _156;
  int _157;
  unsigned char _158;
  int _159;
  stbi_uc * _160;
  unsigned char _161;
  unsigned char _162;
  int _163;
  stbi_uc * _164;
  unsigned char _165;
  int _166;
  stbi_uc * _167;
  unsigned char _168;
  unsigned char _169;
  int _170;
  stbi_uc * _171;
  unsigned char _172;
  sizetype _173;
  void (*<Tc56>) (stbi_uc *, const stbi_uc *, const stbi_uc *, const stbi_uc *, int, int) _174;
  struct stbi__context * _175;
  unsigned int _176;
  int _177;
  stbi_uc * _178;
  stbi_uc * _179;
  struct stbi__context * _180;
  unsigned int _181;
  sizetype _182;
  stbi_uc * _183;
  stbi_uc * _184;
  unsigned char _185;
  stbi_uc * _186;
  unsigned char _187;
  unsigned char _188;
  stbi_uc * _189;
  sizetype _190;
  struct stbi__context * _191;
  unsigned int _192;
  stbi_uc * _193;
  sizetype _194;
  stbi_uc * _195;
  unsigned char _196;
  int _197;
  stbi_uc * _198;
  sizetype _199;
  stbi_uc * _200;
  unsigned char _201;
  int _202;
  stbi_uc * _203;
  sizetype _204;
  stbi_uc * _205;
  unsigned char _206;
  int _207;
  stbi_uc * out.305_208;
  unsigned char _209;
  struct stbi__context * _210;
  unsigned int _211;
  stbi_uc * _212;
  sizetype _213;
  stbi_uc * _214;
  unsigned char _215;
  int _216;
  stbi_uc * _217;
  sizetype _218;
  stbi_uc * _219;
  unsigned char _220;
  int _221;
  stbi_uc * _222;
  sizetype _223;
  stbi_uc * _224;
  unsigned char _225;
  int _226;
  unsigned char _227;
  stbi_uc * _228;
  struct stbi__context * _229;
  int _230;
  int _231;
  struct stbi__context * _232;
  unsigned int _233;
  stbi_uc * _234;
  sizetype _235;
  stbi_uc * _236;
  int _237;
  stbi_uc * _238;
  sizetype _239;
  stbi_uc * _240;
  unsigned char _241;
  int _242;
  int _243;
  stbi_uc * _244;
  sizetype _245;
  stbi_uc * _246;
  unsigned char _247;
  int _248;
  int _249;
  stbi_uc * _250;
  sizetype _251;
  stbi_uc * _252;
  unsigned char _253;
  int _254;
  int _255;
  int _256;
  int _257;
  unsigned char _258;
  stbi_uc * _259;
  sizetype _260;
  struct stbi__context * _261;
  int _262;
  int _263;
  struct stbi__context * _264;
  unsigned int _265;
  stbi_uc * _266;
  sizetype _267;
  stbi_uc * _268;
  unsigned char _269;
  int _270;
  stbi_uc * _271;
  sizetype _272;
  stbi_uc * _273;
  unsigned char _274;
  unsigned char _275;
  int _276;
  unsigned char _277;
  stbi_uc * _278;
  sizetype _279;
  struct stbi__context * _280;
  unsigned int _281;
  sizetype _282;
  stbi_uc * _283;
  sizetype _284;
  stbi_uc * _285;
  unsigned char _286;
  struct stbi__context * _287;
  unsigned int _288;
  sizetype _289;
  stbi_uc * _290;
  stbi_uc * out.306_291;
  unsigned char _292;
  stbi_uc * out.307_293;
  struct stbi__context * _294;
  unsigned int _295;
  int _296;
  struct stbi__context * _297;
  unsigned int _298;
  int _299;
  struct stbi__context * _300;
  int _301;
  stbi_uc * _325;
  stbi_uc * _326;
  int iftmp.297_327;
  int iftmp.298_328;
  bool iftmp.299_329;
  stbi_uc * iftmp.301_330;
  stbi_uc * iftmp.302_331;
  int iftmp.308_332;
  int _361;
  bool retval.296_362;
  stbi_uc * _364;
  int iftmp.298_365;
  int iftmp.298_366;
  int iftmp.297_367;
  int iftmp.297_368;
  bool iftmp.299_370;
  bool iftmp.299_371;
  stbi_uc * _385;
  stbi_uc * _403;
  stbi_uc * iftmp.301_409;
  stbi_uc * iftmp.301_410;
  stbi_uc * iftmp.302_411;
  stbi_uc * iftmp.302_412;
  stbi_uc * _414;
  bool retval.303_417;
  bool retval.304_421;
  int iftmp.308_512;
  int iftmp.308_513;
  stbi_uc * _515;
  stbi_uc * _519;

  <bb 2> :
  _1 = z_357(D)->s;
  _1->img_n = 0;
  if (req_comp_359(D) < 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (req_comp_359(D) > 4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__err ("bad req_comp");
  _519 = 0B;
  goto <bb 120>; [INV]

  <bb 5> :
  _361 = stbi__decode_jpeg_image (z_357(D));
  _2 = _361;
  retval.296_362 = _2 == 0;
  if (retval.296_362 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  stbi__cleanup_jpeg (z_357(D));
  _364 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 120>; [INV]

  <bb 7> :
  if (req_comp_359(D) == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _3 = z_357(D)->s;
  _4 = _3->img_n;
  if (_4 > 2)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  iftmp.298_365 = 3;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.298_366 = 1;

  <bb 11> :
  # iftmp.298_328 = PHI <iftmp.298_365(9), iftmp.298_366(10)>
  iftmp.297_367 = iftmp.298_328;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.297_368 = req_comp_359(D);

  <bb 13> :
  # iftmp.297_327 = PHI <iftmp.297_367(11), iftmp.297_368(12)>
  n_369 = iftmp.297_327;
  _5 = z_357(D)->s;
  _6 = _5->img_n;
  if (_6 == 3)
    goto <bb 14>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 14> :
  _7 = z_357(D)->rgb;
  if (_7 == 3)
    goto <bb 17>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _8 = z_357(D)->app14_color_transform;
  if (_8 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _9 = z_357(D)->jfif;
  if (_9 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.299_370 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.299_371 = 0;

  <bb 19> :
  # iftmp.299_329 = PHI <iftmp.299_370(17), iftmp.299_371(18)>
  is_rgb_372 = (int) iftmp.299_329;
  _10 = z_357(D)->s;
  _11 = _10->img_n;
  if (_11 == 3)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  if (n_369 <= 2)
    goto <bb 21>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 21> :
  if (is_rgb_372 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  decode_n_373 = 1;
  goto <bb 24>; [INV]

  <bb 23> :
  _12 = z_357(D)->s;
  decode_n_374 = _12->img_n;

  <bb 24> :
  # decode_n_302 = PHI <decode_n_373(22), decode_n_374(23)>
  coutput[0] = 0B;
  coutput[1] = 0B;
  coutput[2] = 0B;
  coutput[3] = 0B;
  k_379 = 0;

  <bb 25> :
  # k_303 = PHI <k_379(24), k_398(41)>
  if (k_303 >= decode_n_302)
    goto <bb 42>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  r_380 = &res_comp[k_303];
  _13 = z_357(D)->s;
  _14 = _13->img_x;
  _15 = _14 + 3;
  _16 = (long long unsigned int) _15;
  _17 = stbi__malloc (_16);
  z_357(D)->img_comp[k_303].linebuf = _17;
  _18 = z_357(D)->img_comp[k_303].linebuf;
  if (_18 == 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  stbi__cleanup_jpeg (z_357(D));
  stbi__err ("outofmem");
  _385 = 0B;
  goto <bb 119>; [INV]

  <bb 28> :
  _19 = z_357(D)->img_h_max;
  _20 = z_357(D)->img_comp[k_303].h;
  _21 = _19 / _20;
  r_380->hs = _21;
  _22 = z_357(D)->img_v_max;
  _23 = z_357(D)->img_comp[k_303].v;
  _24 = _22 / _23;
  r_380->vs = _24;
  _25 = r_380->vs;
  _26 = _25 >> 1;
  r_380->ystep = _26;
  _27 = z_357(D)->s;
  _28 = _27->img_x;
  _29 = r_380->hs;
  _30 = (unsigned int) _29;
  _31 = _28 + _30;
  _32 = _31 + 4294967295;
  _33 = r_380->hs;
  _34 = (unsigned int) _33;
  _35 = _32 / _34;
  _36 = (int) _35;
  r_380->w_lores = _36;
  r_380->ypos = 0;
  _37 = z_357(D)->img_comp[k_303].data;
  r_380->line1 = _37;
  _38 = r_380->line1;
  r_380->line0 = _38;
  _39 = r_380->hs;
  if (_39 == 1)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _40 = r_380->vs;
  if (_40 == 1)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  r_380->resample = resample_row_1;
  goto <bb 41>; [INV]

  <bb 31> :
  _41 = r_380->hs;
  if (_41 == 1)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _42 = r_380->vs;
  if (_42 == 2)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  r_380->resample = stbi__resample_row_v_2;
  goto <bb 41>; [INV]

  <bb 34> :
  _43 = r_380->hs;
  if (_43 == 2)
    goto <bb 35>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 35> :
  _44 = r_380->vs;
  if (_44 == 1)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  r_380->resample = stbi__resample_row_h_2;
  goto <bb 41>; [INV]

  <bb 37> :
  _45 = r_380->hs;
  if (_45 == 2)
    goto <bb 38>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 38> :
  _46 = r_380->vs;
  if (_46 == 2)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _47 = z_357(D)->resample_row_hv_2_kernel;
  r_380->resample = _47;
  goto <bb 41>; [INV]

  <bb 40> :
  r_380->resample = stbi__resample_row_generic;

  <bb 41> :
  k_398 = k_303 + 1;
  goto <bb 25>; [INV]

  <bb 42> :
  _48 = z_357(D)->s;
  _49 = _48->img_y;
  _50 = (int) _49;
  _51 = z_357(D)->s;
  _52 = _51->img_x;
  _53 = (int) _52;
  output_400 = stbi__malloc_mad3 (n_369, _53, _50, 1);
  if (output_400 == 0B)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  stbi__cleanup_jpeg (z_357(D));
  stbi__err ("outofmem");
  _403 = 0B;
  goto <bb 119>; [INV]

  <bb 44> :
  j_404 = 0;

  <bb 45> :
  # j_315 = PHI <j_404(44), j_503(112)>
  _54 = z_357(D)->s;
  _55 = _54->img_y;
  if (j_315 >= _55)
    goto <bb 113>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 46> :
  _56 = z_357(D)->s;
  _57 = _56->img_x;
  n.300_58 = (unsigned int) n_369;
  _59 = _57 * n.300_58;
  _60 = j_315 * _59;
  _61 = (sizetype) _60;
  out_405 = output_400 + _61;
  k_406 = 0;

  <bb 47> :
  # k_304 = PHI <k_406(46), k_423(58)>
  if (k_304 >= decode_n_302)
    goto <bb 59>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  r_407 = &res_comp[k_304];
  _62 = r_407->ystep;
  _63 = r_407->vs;
  _64 = _63 >> 1;
  _65 = _62 >= _64;
  y_bot_408 = (int) _65;
  _66 = r_407->resample;
  _67 = r_407->hs;
  _68 = r_407->w_lores;
  if (y_bot_408 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  iftmp.301_409 = r_407->line0;
  goto <bb 51>; [INV]

  <bb 50> :
  iftmp.301_410 = r_407->line1;

  <bb 51> :
  # iftmp.301_330 = PHI <iftmp.301_409(49), iftmp.301_410(50)>
  if (y_bot_408 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  iftmp.302_411 = r_407->line1;
  goto <bb 54>; [INV]

  <bb 53> :
  iftmp.302_412 = r_407->line0;

  <bb 54> :
  # iftmp.302_331 = PHI <iftmp.302_411(52), iftmp.302_412(53)>
  _69 = z_357(D)->img_comp[k_304].linebuf;
  _414 = _66 (_69, iftmp.302_331, iftmp.301_330, _68, _67);

  <bb 55> :
  _70 = _414;
  coutput[k_304] = _70;
  _71 = r_407->ystep;
  _72 = _71 + 1;
  r_407->ystep = _72;
  _73 = r_407->ystep;
  _74 = r_407->vs;
  retval.303_417 = _73 >= _74;
  if (retval.303_417 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 56> :
  r_407->ystep = 0;
  _75 = r_407->line1;
  r_407->line0 = _75;
  _76 = r_407->ypos;
  _77 = _76 + 1;
  r_407->ypos = _77;
  _78 = r_407->ypos;
  _79 = z_357(D)->img_comp[k_304].y;
  retval.304_421 = _78 < _79;
  if (retval.304_421 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  _80 = r_407->line1;
  _81 = z_357(D)->img_comp[k_304].w2;
  _82 = (sizetype) _81;
  _83 = _80 + _82;
  r_407->line1 = _83;

  <bb 58> :
  k_423 = k_304 + 1;
  goto <bb 47>; [INV]

  <bb 59> :
  if (n_369 > 2)
    goto <bb 60>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 60> :
  y_424 = coutput[0];
  _84 = z_357(D)->s;
  _85 = _84->img_n;
  if (_85 == 3)
    goto <bb 61>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 61> :
  if (is_rgb_372 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 62> :
  i_425 = 0;

  <bb 63> :
  # i_305 = PHI <i_425(62), i_431(64)>
  # out_316 = PHI <out_405(62), out_430(64)>
  _86 = z_357(D)->s;
  _87 = _86->img_x;
  if (i_305 >= _87)
    goto <bb 66>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 64> :
  _88 = (sizetype) i_305;
  _89 = y_424 + _88;
  _90 = *_89;
  *out_316 = _90;
  _91 = coutput[1];
  _92 = (sizetype) i_305;
  _93 = _91 + _92;
  _94 = out_316 + 1;
  _95 = *_93;
  *_94 = _95;
  _96 = coutput[2];
  _97 = (sizetype) i_305;
  _98 = _96 + _97;
  _99 = out_316 + 2;
  _100 = *_98;
  *_99 = _100;
  _101 = out_316 + 3;
  *_101 = 255;
  _102 = (sizetype) n_369;
  out_430 = out_316 + _102;
  i_431 = i_305 + 1;
  goto <bb 63>; [INV]

  <bb 65> :
  _103 = z_357(D)->YCbCr_to_RGB_kernel;
  _104 = z_357(D)->s;
  _105 = _104->img_x;
  _106 = (int) _105;
  _107 = coutput[2];
  _108 = coutput[1];
  _103 (out_405, y_424, _108, _107, _106, n_369);

  <bb 66> :
  goto <bb 84>; [INV]

  <bb 67> :
  _109 = z_357(D)->s;
  _110 = _109->img_n;
  if (_110 == 4)
    goto <bb 68>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 68> :
  _111 = z_357(D)->app14_color_transform;
  if (_111 == 0)
    goto <bb 69>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 69> :
  i_433 = 0;

  <bb 70> :
  # i_306 = PHI <i_433(69), i_443(71)>
  # out_317 = PHI <out_405(69), out_442(71)>
  _112 = z_357(D)->s;
  _113 = _112->img_x;
  if (i_306 >= _113)
    goto <bb 72>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 71> :
  _114 = coutput[3];
  _115 = (sizetype) i_306;
  _116 = _114 + _115;
  m_434 = *_116;
  _117 = (int) m_434;
  _118 = coutput[0];
  _119 = (sizetype) i_306;
  _120 = _118 + _119;
  _121 = *_120;
  _122 = (int) _121;
  _123 = stbi__blinn_8x8 (_122, _117);
  *out_317 = _123;
  _124 = (int) m_434;
  _125 = coutput[1];
  _126 = (sizetype) i_306;
  _127 = _125 + _126;
  _128 = *_127;
  _129 = (int) _128;
  _130 = out_317 + 1;
  _131 = stbi__blinn_8x8 (_129, _124);
  *_130 = _131;
  _132 = (int) m_434;
  _133 = coutput[2];
  _134 = (sizetype) i_306;
  _135 = _133 + _134;
  _136 = *_135;
  _137 = (int) _136;
  _138 = out_317 + 2;
  _139 = stbi__blinn_8x8 (_137, _132);
  *_138 = _139;
  _140 = out_317 + 3;
  *_140 = 255;
  _141 = (sizetype) n_369;
  out_442 = out_317 + _141;
  i_443 = i_306 + 1;
  goto <bb 70>; [INV]

  <bb 72> :
  goto <bb 80>; [INV]

  <bb 73> :
  _142 = z_357(D)->app14_color_transform;
  if (_142 == 2)
    goto <bb 74>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 74> :
  _143 = z_357(D)->YCbCr_to_RGB_kernel;
  _144 = z_357(D)->s;
  _145 = _144->img_x;
  _146 = (int) _145;
  _147 = coutput[2];
  _148 = coutput[1];
  _143 (out_405, y_424, _148, _147, _146, n_369);

  <bb 75> :
  i_445 = 0;

  <bb 76> :
  # i_307 = PHI <i_445(75), i_454(77)>
  # out_318 = PHI <out_405(75), out_453(77)>
  _149 = z_357(D)->s;
  _150 = _149->img_x;
  if (i_307 >= _150)
    goto <bb 78>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  _151 = coutput[3];
  _152 = (sizetype) i_307;
  _153 = _151 + _152;
  m_446 = *_153;
  _154 = (int) m_446;
  _155 = *out_318;
  _156 = ~_155;
  _157 = (int) _156;
  _158 = stbi__blinn_8x8 (_157, _154);
  *out_318 = _158;
  _159 = (int) m_446;
  _160 = out_318 + 1;
  _161 = *_160;
  _162 = ~_161;
  _163 = (int) _162;
  _164 = out_318 + 1;
  _165 = stbi__blinn_8x8 (_163, _159);
  *_164 = _165;
  _166 = (int) m_446;
  _167 = out_318 + 2;
  _168 = *_167;
  _169 = ~_168;
  _170 = (int) _169;
  _171 = out_318 + 2;
  _172 = stbi__blinn_8x8 (_170, _166);
  *_171 = _172;
  _173 = (sizetype) n_369;
  out_453 = out_318 + _173;
  i_454 = i_307 + 1;
  goto <bb 76>; [INV]

  <bb 78> :
  goto <bb 80>; [INV]

  <bb 79> :
  _174 = z_357(D)->YCbCr_to_RGB_kernel;
  _175 = z_357(D)->s;
  _176 = _175->img_x;
  _177 = (int) _176;
  _178 = coutput[2];
  _179 = coutput[1];
  _174 (out_405, y_424, _179, _178, _177, n_369);

  <bb 80> :
  goto <bb 84>; [INV]

  <bb 81> :
  i_456 = 0;

  <bb 82> :
  # i_308 = PHI <i_456(81), i_462(83)>
  # out_319 = PHI <out_405(81), out_461(83)>
  _180 = z_357(D)->s;
  _181 = _180->img_x;
  if (i_308 >= _181)
    goto <bb 84>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _182 = (sizetype) i_308;
  _183 = y_424 + _182;
  _184 = out_319 + 2;
  _185 = *_183;
  *_184 = _185;
  _186 = out_319 + 1;
  _187 = *_184;
  *_186 = _187;
  _188 = *_186;
  *out_319 = _188;
  _189 = out_319 + 3;
  *_189 = 255;
  _190 = (sizetype) n_369;
  out_461 = out_319 + _190;
  i_462 = i_308 + 1;
  goto <bb 82>; [INV]

  <bb 84> :
  goto <bb 112>; [INV]

  <bb 85> :
  if (is_rgb_372 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 86> :
  if (n_369 == 1)
    goto <bb 87>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 87> :
  i_463 = 0;

  <bb 88> :
  # i_309 = PHI <i_463(87), i_467(89)>
  # out_320 = PHI <out_405(87), out_464(89)>
  _191 = z_357(D)->s;
  _192 = _191->img_x;
  if (i_309 >= _192)
    goto <bb 112>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  _193 = coutput[2];
  _194 = (sizetype) i_309;
  _195 = _193 + _194;
  _196 = *_195;
  _197 = (int) _196;
  _198 = coutput[1];
  _199 = (sizetype) i_309;
  _200 = _198 + _199;
  _201 = *_200;
  _202 = (int) _201;
  _203 = coutput[0];
  _204 = (sizetype) i_309;
  _205 = _203 + _204;
  _206 = *_205;
  _207 = (int) _206;
  out.305_208 = out_320;
  out_464 = out.305_208 + 1;
  _209 = stbi__compute_y (_207, _202, _197);
  *out.305_208 = _209;
  i_467 = i_309 + 1;
  goto <bb 88>; [INV]

  <bb 90> :
  i_468 = 0;

  <bb 91> :
  # i_310 = PHI <i_468(90), i_472(92)>
  # out_321 = PHI <out_405(90), out_473(92)>
  _210 = z_357(D)->s;
  _211 = _210->img_x;
  if (i_310 >= _211)
    goto <bb 112>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 92> :
  _212 = coutput[2];
  _213 = (sizetype) i_310;
  _214 = _212 + _213;
  _215 = *_214;
  _216 = (int) _215;
  _217 = coutput[1];
  _218 = (sizetype) i_310;
  _219 = _217 + _218;
  _220 = *_219;
  _221 = (int) _220;
  _222 = coutput[0];
  _223 = (sizetype) i_310;
  _224 = _222 + _223;
  _225 = *_224;
  _226 = (int) _225;
  _227 = stbi__compute_y (_226, _221, _216);
  *out_321 = _227;
  _228 = out_321 + 1;
  *_228 = 255;
  i_472 = i_310 + 1;
  out_473 = out_321 + 2;
  goto <bb 91>; [INV]

  <bb 93> :
  _229 = z_357(D)->s;
  _230 = _229->img_n;
  if (_230 == 4)
    goto <bb 94>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 94> :
  _231 = z_357(D)->app14_color_transform;
  if (_231 == 0)
    goto <bb 95>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 95> :
  i_474 = 0;

  <bb 96> :
  # i_311 = PHI <i_474(95), i_486(97)>
  # out_322 = PHI <out_405(95), out_485(97)>
  _232 = z_357(D)->s;
  _233 = _232->img_x;
  if (i_311 >= _233)
    goto <bb 98>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 97> :
  _234 = coutput[3];
  _235 = (sizetype) i_311;
  _236 = _234 + _235;
  m_475 = *_236;
  _237 = (int) m_475;
  _238 = coutput[0];
  _239 = (sizetype) i_311;
  _240 = _238 + _239;
  _241 = *_240;
  _242 = (int) _241;
  r_477 = stbi__blinn_8x8 (_242, _237);
  _243 = (int) m_475;
  _244 = coutput[1];
  _245 = (sizetype) i_311;
  _246 = _244 + _245;
  _247 = *_246;
  _248 = (int) _247;
  g_479 = stbi__blinn_8x8 (_248, _243);
  _249 = (int) m_475;
  _250 = coutput[2];
  _251 = (sizetype) i_311;
  _252 = _250 + _251;
  _253 = *_252;
  _254 = (int) _253;
  b_481 = stbi__blinn_8x8 (_254, _249);
  _255 = (int) b_481;
  _256 = (int) g_479;
  _257 = (int) r_477;
  _258 = stbi__compute_y (_257, _256, _255);
  *out_322 = _258;
  _259 = out_322 + 1;
  *_259 = 255;
  _260 = (sizetype) n_369;
  out_485 = out_322 + _260;
  i_486 = i_311 + 1;
  goto <bb 96>; [INV]

  <bb 98> :
  goto <bb 112>; [INV]

  <bb 99> :
  _261 = z_357(D)->s;
  _262 = _261->img_n;
  if (_262 == 4)
    goto <bb 100>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 100> :
  _263 = z_357(D)->app14_color_transform;
  if (_263 == 2)
    goto <bb 101>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 101> :
  i_487 = 0;

  <bb 102> :
  # i_312 = PHI <i_487(101), i_492(103)>
  # out_323 = PHI <out_405(101), out_491(103)>
  _264 = z_357(D)->s;
  _265 = _264->img_x;
  if (i_312 >= _265)
    goto <bb 104>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 103> :
  _266 = coutput[3];
  _267 = (sizetype) i_312;
  _268 = _266 + _267;
  _269 = *_268;
  _270 = (int) _269;
  _271 = coutput[0];
  _272 = (sizetype) i_312;
  _273 = _271 + _272;
  _274 = *_273;
  _275 = ~_274;
  _276 = (int) _275;
  _277 = stbi__blinn_8x8 (_276, _270);
  *out_323 = _277;
  _278 = out_323 + 1;
  *_278 = 255;
  _279 = (sizetype) n_369;
  out_491 = out_323 + _279;
  i_492 = i_312 + 1;
  goto <bb 102>; [INV]

  <bb 104> :
  goto <bb 112>; [INV]

  <bb 105> :
  y_493 = coutput[0];
  if (n_369 == 1)
    goto <bb 106>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 106> :
  i_494 = 0;

  <bb 107> :
  # i_313 = PHI <i_494(106), i_496(108)>
  _280 = z_357(D)->s;
  _281 = _280->img_x;
  if (i_313 >= _281)
    goto <bb 112>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 108> :
  _282 = (sizetype) i_313;
  _283 = y_493 + _282;
  _284 = (sizetype) i_313;
  _285 = out_405 + _284;
  _286 = *_283;
  *_285 = _286;
  i_496 = i_313 + 1;
  goto <bb 107>; [INV]

  <bb 109> :
  i_497 = 0;

  <bb 110> :
  # i_314 = PHI <i_497(109), i_502(111)>
  # out_324 = PHI <out_405(109), out_500(111)>
  _287 = z_357(D)->s;
  _288 = _287->img_x;
  if (i_314 >= _288)
    goto <bb 112>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 111> :
  _289 = (sizetype) i_314;
  _290 = y_493 + _289;
  out.306_291 = out_324;
  out_498 = out.306_291 + 1;
  _292 = *_290;
  *out.306_291 = _292;
  out.307_293 = out_498;
  out_500 = out.307_293 + 1;
  *out.307_293 = 255;
  i_502 = i_314 + 1;
  goto <bb 110>; [INV]

  <bb 112> :
  j_503 = j_315 + 1;
  goto <bb 45>; [INV]

  <bb 113> :
  stbi__cleanup_jpeg (z_357(D));
  _294 = z_357(D)->s;
  _295 = _294->img_x;
  _296 = (int) _295;
  *out_x_507(D) = _296;
  _297 = z_357(D)->s;
  _298 = _297->img_y;
  _299 = (int) _298;
  *out_y_509(D) = _299;
  if (comp_511(D) != 0B)
    goto <bb 114>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 114> :
  _300 = z_357(D)->s;
  _301 = _300->img_n;
  if (_301 > 2)
    goto <bb 115>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 115> :
  iftmp.308_512 = 3;
  goto <bb 117>; [INV]

  <bb 116> :
  iftmp.308_513 = 1;

  <bb 117> :
  # iftmp.308_332 = PHI <iftmp.308_512(115), iftmp.308_513(116)>
  *comp_511(D) = iftmp.308_332;

  <bb 118> :
  _515 = output_400;

  <bb 119> :
  # _325 = PHI <_385(27), _403(43), _515(118)>
  coutput ={v} {CLOBBER};
  res_comp ={v} {CLOBBER};

  <bb 120> :
  # _326 = PHI <_519(4), _364(6), _325(119)>
<L135>:
  return _326;

  <bb 121> :
<L136>:
  resx 1

}



;; Function stbi__jpeg_load (_ZL15stbi__jpeg_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=874, decl_uid=10121, cgraph_uid=780, symbol_order=795)

stbi__jpeg_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  unsigned char * D.15130;
  struct stbi__jpeg * j;
  unsigned char * result;
  void * D.15128;
  unsigned char * _12;
  void * _15;

  <bb 2> :
  j_3 = stbi__malloc (18568);
  j_3->s = s_4(D);
  stbi__setup_jpeg (j_3);
  _12 = load_jpeg_image (j_3, x_7(D), y_8(D), comp_9(D), req_comp_10(D));
  result_13 = _12;
  free (j_3);
  _15 = result_13;

  <bb 3> :
<L0>:
  return _15;

}



;; Function stbi__jpeg_test (_ZL15stbi__jpeg_testP13stbi__context, funcdef_no=875, decl_uid=10114, cgraph_uid=781, symbol_order=796)

stbi__jpeg_test (struct stbi__context * s)
{
  int D.15133;
  struct stbi__jpeg * j;
  int r;
  int D.15131;
  int _8;
  int _12;

  <bb 2> :
  j_3 = stbi__malloc (18568);
  j_3->s = s_4(D);
  stbi__setup_jpeg (j_3);
  _8 = stbi__decode_jpeg_header (j_3, 1);
  r_9 = _8;
  stbi__rewind (s_4(D));
  free (j_3);
  _12 = r_9;

  <bb 3> :
<L0>:
  return _12;

}



;; Function stbi__jpeg_info_raw (_ZL19stbi__jpeg_info_rawP10stbi__jpegPiS1_S1_, funcdef_no=876, decl_uid=11778, cgraph_uid=782, symbol_order=797)

stbi__jpeg_info_raw (struct stbi__jpeg * j, int * x, int * y, int * comp)
{
  int D.15152;
  int iftmp.310;
  int D.15137;
  bool retval.309;
  int _1;
  struct stbi__context * _2;
  struct stbi__context * _3;
  unsigned int _4;
  int _5;
  struct stbi__context * _6;
  unsigned int _7;
  int _8;
  struct stbi__context * _9;
  int _10;
  int _11;
  int iftmp.310_12;
  int _20;
  bool retval.309_21;
  int _23;
  int iftmp.310_29;
  int iftmp.310_30;
  int _32;

  <bb 2> :
  _20 = stbi__decode_jpeg_header (j_18(D), 2);
  _1 = _20;
  retval.309_21 = _1 == 0;
  if (retval.309_21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = j_18(D)->s;
  stbi__rewind (_2);
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 4> :
  if (x_24(D) != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = j_18(D)->s;
  _4 = _3->img_x;
  _5 = (int) _4;
  *x_24(D) = _5;

  <bb 6> :
  if (y_26(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _6 = j_18(D)->s;
  _7 = _6->img_y;
  _8 = (int) _7;
  *y_26(D) = _8;

  <bb 8> :
  if (comp_28(D) != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  _9 = j_18(D)->s;
  _10 = _9->img_n;
  if (_10 > 2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.310_29 = 3;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.310_30 = 1;

  <bb 12> :
  # iftmp.310_12 = PHI <iftmp.310_29(10), iftmp.310_30(11)>
  *comp_28(D) = iftmp.310_12;

  <bb 13> :
  _32 = 1;

  <bb 14> :
  # _11 = PHI <_23(3), _32(13)>
<L14>:
  return _11;

}



;; Function stbi__jpeg_info (_ZL15stbi__jpeg_infoP13stbi__contextPiS1_S1_, funcdef_no=877, decl_uid=10126, cgraph_uid=783, symbol_order=798)

stbi__jpeg_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.15155;
  struct stbi__jpeg * j;
  int result;
  int D.15153;
  int _10;
  int _13;

  <bb 2> :
  j_3 = stbi__malloc (18568);
  j_3->s = s_4(D);
  _10 = stbi__jpeg_info_raw (j_3, x_6(D), y_7(D), comp_8(D));
  result_11 = _10;
  free (j_3);
  _13 = result_11;

  <bb 3> :
<L0>:
  return _13;

}



;; Function stbi__bitreverse16 (_ZL18stbi__bitreverse16i, funcdef_no=878, decl_uid=11798, cgraph_uid=784, symbol_order=799)

stbi__bitreverse16 (int n)
{
  int D.15191;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _22;

  <bb 2> :
  _1 = n_17(D) >> 1;
  _2 = _1 & 21845;
  _3 = n_17(D) << 1;
  _4 = _3 & 43690;
  n_18 = _2 | _4;
  _5 = n_18 >> 2;
  _6 = _5 & 13107;
  _7 = n_18 << 2;
  _8 = _7 & 52428;
  n_19 = _6 | _8;
  _9 = n_19 >> 4;
  _10 = _9 & 3855;
  _11 = n_19 << 4;
  _12 = _11 & 61680;
  n_20 = _10 | _12;
  _13 = n_20 >> 8;
  _14 = _13 & 255;
  _15 = n_20 << 8;
  _16 = _15 & 65535;
  n_21 = _14 | _16;
  _22 = n_21;

  <bb 3> :
<L0>:
  return _22;

}



;; Function stbi__bit_reverse (_ZL17stbi__bit_reverseii, funcdef_no=879, decl_uid=11802, cgraph_uid=785, symbol_order=800)

stbi__bit_reverse (int v, int bits)
{
  int D.15189;
  bool iftmp.311;
  int _1;
  int _2;
  bool iftmp.311_7;
  bool iftmp.311_8;
  int _11;

  <bb 2> :
  if (bits_4(D) <= 16)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _assert ("bits <= 16", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4007);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.311_8 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.311_7 = 0;

  <bb 6> :
  _1 = stbi__bitreverse16 (v_9(D));
  _2 = 16 - bits_4(D);
  _11 = _1 >> _2;

  <bb 7> :
<L4>:
  return _11;

}



;; Function stbi__zbuild_huffman (_ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi, funcdef_no=880, decl_uid=11807, cgraph_uid=786, symbol_order=801)

stbi__zbuild_huffman (struct stbi__zhuffman * z, const stbi_uc * sizelist, int num)
{
  int D.15181;
  int j;
  stbi__uint16 fastv;
  int c;
  int s;
  int sizes[17];
  int next_code[16];
  int code;
  int k;
  int i;
  int D.15162;
  stbi__uint16[512] * _1;
  sizetype _2;
  const stbi_uc * _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  sizetype _18;
  const stbi_uc * _19;
  unsigned char _20;
  int _21;
  short unsigned int _22;
  int _23;
  int _24;
  short unsigned int _25;
  int _26;
  int _27;
  signed short _28;
  signed short _29;
  signed short _30;
  unsigned char _31;
  short unsigned int _32;
  int _33;
  int _34;
  int _35;
  int _36;
  int _44;
  int _65;
  int _74;
  int _87;
  int _95;

  <bb 2> :
  k_52 = 0;
  memset (&sizes, 0, 68);
  _1 = &z_55(D)->fast;
  memset (_1, 0, 1024);
  i_57 = 0;

  <bb 3> :
  # i_37 = PHI <i_57(2), i_61(4)>
  if (i_37 >= num_58(D))
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _2 = (sizetype) i_37;
  _3 = sizelist_59(D) + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = sizes[_5];
  _7 = _6 + 1;
  sizes[_5] = _7;
  i_61 = i_37 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  sizes[0] = 0;
  i_63 = 1;

  <bb 6> :
  # i_38 = PHI <i_63(5), i_66(9)>
  if (i_38 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _8 = sizes[i_38];
  _9 = 1 << i_38;
  if (_8 > _9)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _65 = stbi__err ("bad sizes");
  goto <bb 28>; [INV]

  <bb 9> :
  i_66 = i_38 + 1;
  goto <bb 6>; [INV]

  <bb 10> :
  code_67 = 0;
  i_68 = 1;

  <bb 11> :
  # i_39 = PHI <i_68(10), i_78(15)>
  # k_41 = PHI <k_52(10), k_77(15)>
  # code_42 = PHI <code_67(10), code_76(15)>
  if (i_39 > 15)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  next_code[i_39] = code_42;
  _10 = (short unsigned int) code_42;
  z_55(D)->firstcode[i_39] = _10;
  _11 = (short unsigned int) k_41;
  z_55(D)->firstsymbol[i_39] = _11;
  _12 = sizes[i_39];
  code_72 = code_42 + _12;
  _13 = sizes[i_39];
  if (_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _14 = 1 << i_39;
  if (code_72 > _14)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _74 = stbi__err ("bad codelengths");
  goto <bb 28>; [INV]

  <bb 15> :
  _15 = 16 - i_39;
  _16 = code_72 << _15;
  z_55(D)->maxcode[i_39] = _16;
  code_76 = code_72 << 1;
  _17 = sizes[i_39];
  k_77 = k_41 + _17;
  i_78 = i_39 + 1;
  goto <bb 11>; [INV]

  <bb 16> :
  z_55(D)->maxcode[16] = 65536;
  i_80 = 0;

  <bb 17> :
  # i_40 = PHI <i_80(16), i_94(26)>
  if (i_40 >= num_58(D))
    goto <bb 27>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _18 = (sizetype) i_40;
  _19 = sizelist_59(D) + _18;
  _20 = *_19;
  s_81 = (int) _20;
  if (s_81 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 19> :
  _21 = next_code[s_81];
  _22 = z_55(D)->firstcode[s_81];
  _23 = (int) _22;
  _24 = _21 - _23;
  _25 = z_55(D)->firstsymbol[s_81];
  _26 = (int) _25;
  c_82 = _24 + _26;
  _27 = s_81 << 9;
  _28 = (signed short) _27;
  _29 = (signed short) i_40;
  _30 = _28 | _29;
  fastv_83 = (stbi__uint16) _30;
  _31 = (unsigned char) s_81;
  z_55(D)->size[c_82] = _31;
  _32 = (short unsigned int) i_40;
  z_55(D)->value[c_82] = _32;
  if (s_81 <= 9)
    goto <bb 20>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 20> :
  _33 = next_code[s_81];
  _87 = stbi__bit_reverse (_33, s_81);

  <bb 21> :
  j_88 = _87;

  <bb 22> :
  # j_43 = PHI <j_88(21), j_90(23)>
  if (j_43 > 511)
    goto <bb 24>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  z_55(D)->fast[j_43] = fastv_83;
  _34 = 1 << s_81;
  j_90 = j_43 + _34;
  goto <bb 22>; [INV]

  <bb 24> :

  <bb 25> :
  _35 = next_code[s_81];
  _36 = _35 + 1;
  next_code[s_81] = _36;

  <bb 26> :
  i_94 = i_40 + 1;
  goto <bb 17>; [INV]

  <bb 27> :
  _95 = 1;

  <bb 28> :
  # _44 = PHI <_65(8), _74(14), _95(27)>
  next_code ={v} {CLOBBER};
  sizes ={v} {CLOBBER};

  <bb 29> :
<L29>:
  return _44;

  <bb 30> :
<L30>:
  resx 1

}



;; Function stbi__zeof (_ZL10stbi__zeofP10stbi__zbuf, funcdef_no=881, decl_uid=11842, cgraph_uid=787, symbol_order=802)

stbi__zeof (struct stbi__zbuf * z)
{
  int D.15204;
  stbi_uc * _1;
  stbi_uc * _2;
  bool _3;
  int _6;

  <bb 2> :
  _1 = z_5(D)->zbuffer;
  _2 = z_5(D)->zbuffer_end;
  _3 = _1 >= _2;
  _6 = (int) _3;

  <bb 3> :
<L0>:
  return _6;

}



;; Function stbi__zget8 (_ZL11stbi__zget8P10stbi__zbuf, funcdef_no=882, decl_uid=11845, cgraph_uid=788, symbol_order=803)

stbi__zget8 (struct stbi__zbuf * z)
{
  stbi_uc iftmp.312;
  stbi_uc D.15198;
  int _1;
  stbi_uc * _2;
  stbi_uc * _3;
  stbi_uc * _4;
  stbi_uc iftmp.312_5;
  stbi_uc iftmp.312_11;
  stbi_uc iftmp.312_12;
  stbi_uc _13;

  <bb 2> :
  _1 = stbi__zeof (z_8(D));
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = z_8(D)->zbuffer;
  _3 = _2;
  _4 = _3 + 1;
  z_8(D)->zbuffer = _4;
  iftmp.312_11 = *_3;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.312_12 = 0;

  <bb 5> :
  # iftmp.312_5 = PHI <iftmp.312_11(3), iftmp.312_12(4)>
  _13 = iftmp.312_5;

  <bb 6> :
<L3>:
  return _13;

}



;; Function stbi__fill_bits (_ZL15stbi__fill_bitsP10stbi__zbuf, funcdef_no=883, decl_uid=11848, cgraph_uid=789, symbol_order=804)

stbi__fill_bits (struct stbi__zbuf * z)
{
  unsigned int D.11850;
  unsigned int _1;
  int _2;
  unsigned int _3;
  stbi_uc * _4;
  unsigned char _5;
  unsigned int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  int _11;
  int _12;
  unsigned int _19;

  <bb 2> :
  _1 = z_16(D)->code_buffer;
  _2 = z_16(D)->num_bits;
  _3 = _1 >> _2;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = z_16(D)->zbuffer_end;
  z_16(D)->zbuffer = _4;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 4> :
  _5 = stbi__zget8 (z_16(D));
  _6 = (unsigned int) _5;
  _7 = z_16(D)->num_bits;
  _19 = _6 << _7;
  _8 = z_16(D)->code_buffer;
  _9 = _19 | _8;
  z_16(D)->code_buffer = _9;
  _10 = z_16(D)->num_bits;
  _11 = _10 + 8;
  z_16(D)->num_bits = _11;
  _12 = z_16(D)->num_bits;
  if (_12 > 24)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  goto <bb 2>; [INV]

  <bb 6> :
<L5>:
  return;

}



;; Function stbi__zreceive (_ZL14stbi__zreceiveP10stbi__zbufi, funcdef_no=884, decl_uid=11855, cgraph_uid=790, symbol_order=805)

stbi__zreceive (struct stbi__zbuf * z, int n)
{
  unsigned int k;
  unsigned int D.15293;
  int _1;
  unsigned int _2;
  int _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  unsigned int _18;

  <bb 2> :
  _1 = z_12(D)->num_bits;
  if (n_13(D) > _1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__fill_bits (z_12(D));

  <bb 4> :
  _2 = z_12(D)->code_buffer;
  _3 = 1 << n_13(D);
  _4 = _3 + -1;
  _5 = (unsigned int) _4;
  k_15 = _2 & _5;
  _6 = z_12(D)->code_buffer;
  _7 = _6 >> n_13(D);
  z_12(D)->code_buffer = _7;
  _8 = z_12(D)->num_bits;
  _9 = _8 - n_13(D);
  z_12(D)->num_bits = _9;
  _18 = k_15;

  <bb 5> :
<L3>:
  return _18;

}



;; Function stbi__zhuffman_decode_slowpath (_ZL30stbi__zhuffman_decode_slowpathP10stbi__zbufP14stbi__zhuffman, funcdef_no=885, decl_uid=11860, cgraph_uid=791, symbol_order=806)

stbi__zhuffman_decode_slowpath (struct stbi__zbuf * a, struct stbi__zhuffman * z)
{
  int D.15217;
  int k;
  int s;
  int b;
  int D.15211;
  unsigned int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  short unsigned int _6;
  int _7;
  int _8;
  short unsigned int _9;
  int _10;
  long long unsigned int _11;
  unsigned char _12;
  int _13;
  unsigned int _14;
  unsigned int _15;
  int _16;
  int _17;
  short unsigned int _18;
  int _20;
  int _25;
  int _29;
  int _31;
  int _32;
  int _35;

  <bb 2> :
  _1 = a_23(D)->code_buffer;
  _2 = (int) _1;
  _25 = stbi__bit_reverse (_2, 16);
  k_26 = _25;
  s_27 = 10;

  <bb 3> :
  # s_19 = PHI <s_27(2), s_36(5)>
  _3 = z_28(D)->maxcode[s_19];
  if (k_26 < _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  goto <bb 6>; [INV]

  <bb 5> :
  s_36 = s_19 + 1;
  goto <bb 3>; [INV]

  <bb 6> :
  if (s_19 > 15)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _29 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  _4 = 16 - s_19;
  _5 = k_26 >> _4;
  _6 = z_28(D)->firstcode[s_19];
  _7 = (int) _6;
  _8 = _5 - _7;
  _9 = z_28(D)->firstsymbol[s_19];
  _10 = (int) _9;
  b_30 = _8 + _10;
  _11 = (long long unsigned int) b_30;
  if (_11 > 287)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _31 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  _12 = z_28(D)->size[b_30];
  _13 = (int) _12;
  if (s_19 != _13)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _32 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  _14 = a_23(D)->code_buffer;
  _15 = _14 >> s_19;
  a_23(D)->code_buffer = _15;
  _16 = a_23(D)->num_bits;
  _17 = _16 - s_19;
  a_23(D)->num_bits = _17;
  _18 = z_28(D)->value[b_30];
  _35 = (int) _18;

  <bb 13> :
  # _20 = PHI <_29(7), _31(9), _32(11), _35(12)>
<L10>:
  return _20;

}



;; Function stbi__zhuffman_decode (_ZL21stbi__zhuffman_decodeP10stbi__zbufP14stbi__zhuffman, funcdef_no=886, decl_uid=11869, cgraph_uid=792, symbol_order=807)

stbi__zhuffman_decode (struct stbi__zbuf * a, struct stbi__zhuffman * z)
{
  int D.15289;
  int s;
  int b;
  int D.15284;
  bool retval.327;
  int _1;
  int _2;
  unsigned int _3;
  unsigned int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  int _10;
  bool retval.327_16;
  int _17;
  int _24;
  int _26;
  int _27;

  <bb 2> :
  _1 = a_14(D)->num_bits;
  if (_1 <= 15)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = stbi__zeof (a_14(D));
  retval.327_16 = _2 != 0;
  if (retval.327_16 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _17 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 5> :
  stbi__fill_bits (a_14(D));

  <bb 6> :
  _3 = a_14(D)->code_buffer;
  _4 = _3 & 511;
  _5 = z_19(D)->fast[_4];
  b_20 = (int) _5;
  if (b_20 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  s_21 = b_20 >> 9;
  _6 = a_14(D)->code_buffer;
  _7 = _6 >> s_21;
  a_14(D)->code_buffer = _7;
  _8 = a_14(D)->num_bits;
  _9 = _8 - s_21;
  a_14(D)->num_bits = _9;
  _24 = b_20 & 511;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _26 = stbi__zhuffman_decode_slowpath (a_14(D), z_19(D));
  _27 = _26;

  <bb 9> :
  # _10 = PHI <_17(4), _24(7), _27(8)>
<L7>:
  return _10;

}



;; Function stbi__zexpand (_ZL13stbi__zexpandP10stbi__zbufPci, funcdef_no=887, decl_uid=11876, cgraph_uid=793, symbol_order=808)

stbi__zexpand (struct stbi__zbuf * z, char * zout, int n)
{
  unsigned int old_limit;
  unsigned int limit;
  unsigned int cur;
  char * q;
  int D.15220;
  int _1;
  char * _2;
  char * _3;
  long long int _4;
  char * _5;
  char * _6;
  long long int _7;
  unsigned int _8;
  unsigned int n.313_9;
  unsigned int n.314_10;
  unsigned int _11;
  signed int limit.315_12;
  long long unsigned int _13;
  char * _14;
  sizetype _15;
  char * _16;
  sizetype _17;
  char * _18;
  int _20;
  int _27;
  int _33;
  int _35;
  int _40;
  int _44;

  <bb 2> :
  z_23(D)->zout = zout_24(D);
  _1 = z_23(D)->z_expandable;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _27 = stbi__err ("output buffer limit");
  goto <bb 13>; [INV]

  <bb 4> :
  _2 = z_23(D)->zout;
  _3 = z_23(D)->zout_start;
  _4 = _2 - _3;
  cur_28 = (unsigned int) _4;
  _5 = z_23(D)->zout_end;
  _6 = z_23(D)->zout_start;
  _7 = _5 - _6;
  old_limit_29 = (unsigned int) _7;
  limit_30 = old_limit_29;
  _8 = ~cur_28;
  n.313_9 = (unsigned int) n_31(D);
  if (_8 < n.313_9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _33 = stbi__err ("outofmem");
  goto <bb 13>; [INV]

  <bb 6> :
  # limit_19 = PHI <limit_30(4), limit_36(9)>
  n.314_10 = (unsigned int) n_31(D);
  _11 = cur_28 + n.314_10;
  if (limit_19 >= _11)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  limit.315_12 = (signed int) limit_19;
  if (limit.315_12 < 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _35 = stbi__err ("outofmem");
  goto <bb 13>; [INV]

  <bb 9> :
  limit_36 = limit_19 * 2;
  goto <bb 6>; [INV]

  <bb 10> :
  _13 = (long long unsigned int) limit_19;
  _14 = z_23(D)->zout_start;
  q_38 = realloc (_14, _13);
  if (q_38 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _40 = stbi__err ("outofmem");
  goto <bb 13>; [INV]

  <bb 12> :
  z_23(D)->zout_start = q_38;
  _15 = (sizetype) cur_28;
  _16 = q_38 + _15;
  z_23(D)->zout = _16;
  _17 = (sizetype) limit_19;
  _18 = q_38 + _17;
  z_23(D)->zout_end = _18;
  _44 = 1;

  <bb 13> :
  # _20 = PHI <_27(3), _33(5), _35(8), _40(11), _44(12)>
<L11>:
  return _20;

}



;; Function stbi__parse_huffman_block (_ZL25stbi__parse_huffman_blockP10stbi__zbuf, funcdef_no=888, decl_uid=11889, cgraph_uid=794, symbol_order=813)

stbi__parse_huffman_block (struct stbi__zbuf * a)
{
  int D.15278;
  int D.15277;
  stbi_uc v;
  int dist;
  int len;
  stbi_uc * p;
  int z;
  char * zout;
  bool retval.326;
  bool retval.323;
  bool retval.320;
  unsigned int D.11897;
  unsigned int D.11896;
  bool retval.316;
  int D.15235;
  struct stbi__zhuffman * _1;
  char * _2;
  int _3;
  char * zout.317_4;
  char _5;
  int _6;
  int _7;
  unsigned int len.318_8;
  unsigned int _9;
  struct stbi__zhuffman * _10;
  int _11;
  int _12;
  unsigned int dist.319_13;
  unsigned int _14;
  char * _15;
  long long int _16;
  long long int _17;
  sizetype _18;
  char * _19;
  char * _20;
  int _21;
  sizetype _22;
  sizetype _23;
  char * zout.321_24;
  char v.322_25;
  stbi_uc * p.324_26;
  unsigned char _27;
  char * zout.325_28;
  char _29;
  int _42;
  int _57;
  int _60;
  bool retval.316_62;
  int _63;
  int _68;
  unsigned int _72;
  int _75;
  int _78;
  unsigned int _81;
  int _84;
  bool retval.320_86;
  int _87;
  bool retval.323_94;
  bool retval.326_99;

  <bb 2> :
  zout_55 = a_54(D)->zout;

  <bb 3> :
  # zout_30 = PHI <zout_55(2), zout_36(33)>
  _1 = &a_54(D)->z_length;
  _57 = stbi__zhuffman_decode (a_54(D), _1);
  z_58 = _57;
  if (z_58 <= 255)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  if (z_58 < 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _60 = stbi__err ("bad huffman code");
  goto <bb 34>; [INV]

  <bb 6> :
  _2 = a_54(D)->zout_end;
  if (zout_30 >= _2)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  _3 = stbi__zexpand (a_54(D), zout_30, 1);
  retval.316_62 = _3 == 0;
  if (retval.316_62 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _63 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]

  <bb 9> :
  zout_64 = a_54(D)->zout;

  <bb 10> :
  # zout_31 = PHI <zout_30(6), zout_64(9)>
  zout.317_4 = zout_31;
  zout_65 = zout.317_4 + 1;
  _5 = (char) z_58;
  *zout.317_4 = _5;
  goto <bb 33>; [INV]

  <bb 11> :
  if (z_58 == 256)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  a_54(D)->zout = zout_30;
  _68 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]

  <bb 13> :
  z_69 = z_58 + -257;
  len_70 = stbi__zlength_base[z_69];
  _6 = stbi__zlength_extra[z_69];
  if (_6 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _7 = stbi__zlength_extra[z_69];
  _72 = stbi__zreceive (a_54(D), _7);
  len.318_8 = (unsigned int) len_70;
  _9 = _72 + len.318_8;
  len_73 = (int) _9;

  <bb 15> :
  # len_38 = PHI <len_70(13), len_73(14)>
  _10 = &a_54(D)->z_distance;
  _75 = stbi__zhuffman_decode (a_54(D), _10);
  z_76 = _75;
  if (z_76 < 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _78 = stbi__err ("bad huffman code");
  goto <bb 34>; [INV]

  <bb 17> :
  dist_79 = stbi__zdist_base[z_76];
  _11 = stbi__zdist_extra[z_76];
  if (_11 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _12 = stbi__zdist_extra[z_76];
  _81 = stbi__zreceive (a_54(D), _12);
  dist.319_13 = (unsigned int) dist_79;
  _14 = _81 + dist.319_13;
  dist_82 = (int) _14;

  <bb 19> :
  # dist_41 = PHI <dist_79(17), dist_82(18)>
  _15 = a_54(D)->zout_start;
  _16 = zout_30 - _15;
  _17 = (long long int) dist_41;
  if (_16 < _17)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _84 = stbi__err ("bad dist");
  goto <bb 34>; [INV]

  <bb 21> :
  _18 = (sizetype) len_38;
  _19 = zout_30 + _18;
  _20 = a_54(D)->zout_end;
  if (_19 > _20)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  _21 = stbi__zexpand (a_54(D), zout_30, len_38);
  retval.320_86 = _21 == 0;
  if (retval.320_86 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _87 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]

  <bb 24> :
  zout_88 = a_54(D)->zout;

  <bb 25> :
  # zout_32 = PHI <zout_30(21), zout_88(24)>
  _22 = (sizetype) dist_41;
  _23 = -_22;
  p_89 = zout_32 + _23;
  if (dist_41 == 1)
    goto <bb 26>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 26> :
  v_90 = *p_89;
  if (len_38 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  # zout_33 = PHI <zout_32(26), zout_91(28)>
  # len_39 = PHI <len_38(26), len_93(28)>
  zout.321_24 = zout_33;
  zout_91 = zout.321_24 + 1;
  v.322_25 = (char) v_90;
  *zout.321_24 = v.322_25;
  len_93 = len_39 + -1;
  retval.323_94 = len_93 != 0;
  if (retval.323_94 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  goto <bb 27>; [INV]

  <bb 29> :
  # zout_34 = PHI <zout_32(26), zout_91(27)>
  goto <bb 33>; [INV]

  <bb 30> :
  if (len_38 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 31> :
  # zout_35 = PHI <zout_32(30), zout_96(32)>
  # p_37 = PHI <p_89(30), p_95(32)>
  # len_40 = PHI <len_38(30), len_98(32)>
  p.324_26 = p_37;
  p_95 = p.324_26 + 1;
  _27 = *p.324_26;
  zout.325_28 = zout_35;
  zout_96 = zout.325_28 + 1;
  _29 = (char) _27;
  *zout.325_28 = _29;
  len_98 = len_40 + -1;
  retval.326_99 = len_98 != 0;
  if (retval.326_99 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  goto <bb 31>; [INV]

  <bb 33> :
  # zout_36 = PHI <zout_65(10), zout_34(29), zout_32(30), zout_96(31)>
  goto <bb 3>; [INV]

  <bb 34> :
  # _42 = PHI <_60(5), _63(8), _68(12), _78(16), _84(20), _87(23)>
<L43>:
  return _42;

}



;; Function stbi__compute_huffman_codes (_ZL27stbi__compute_huffman_codesP10stbi__zbuf, funcdef_no=889, decl_uid=11906, cgraph_uid=795, symbol_order=815)

stbi__compute_huffman_codes (struct stbi__zbuf * a)
{
  int D.15334;
  int D.15333;
  int D.15332;
  int D.15331;
  stbi_uc fill;
  int c;
  int s;
  int ntot;
  int hclen;
  int hdist;
  int hlit;
  int n;
  int i;
  stbi_uc codelength_sizes[19];
  stbi_uc lencodes[455];
  struct stbi__zhuffman z_codelength;
  static const stbi_uc length_dezigzag[19] = {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};
  bool retval.331;
  bool retval.330;
  int D.15300;
  bool retval.328;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  int _9;
  unsigned char _10;
  int _11;
  int n.329_12;
  unsigned char _13;
  unsigned int _14;
  unsigned int _15;
  int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  int _21;
  long long unsigned int _22;
  int _23;
  sizetype _24;
  void * _25;
  struct stbi__zhuffman * _26;
  int _27;
  sizetype _28;
  const stbi_uc * _29;
  struct stbi__zhuffman * _30;
  int _31;
  int _37;
  int _60;
  bool retval.328_61;
  int _62;
  int _65;
  int _73;
  int _80;
  int _82;
  int _86;
  int _88;
  int _90;
  bool retval.330_91;
  int _92;
  int _94;
  bool retval.331_95;
  int _96;
  int _97;

  <bb 2> :
  _1 = stbi__zreceive (a_45(D), 5);
  _2 = _1 + 257;
  hlit_47 = (int) _2;
  _3 = stbi__zreceive (a_45(D), 5);
  _4 = _3 + 1;
  hdist_49 = (int) _4;
  _5 = stbi__zreceive (a_45(D), 4);
  _6 = _5 + 4;
  hclen_51 = (int) _6;
  ntot_52 = hlit_47 + hdist_49;
  memset (&codelength_sizes, 0, 19);
  i_54 = 0;

  <bb 3> :
  # i_32 = PHI <i_54(2), i_58(4)>
  if (i_32 >= hclen_51)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _7 = stbi__zreceive (a_45(D), 3);
  s_56 = (int) _7;
  _8 = length_dezigzag[i_32];
  _9 = (int) _8;
  _10 = (unsigned char) s_56;
  codelength_sizes[_9] = _10;
  i_58 = i_32 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  _60 = stbi__zbuild_huffman (&z_codelength, &codelength_sizes, 19);

  <bb 6> :
  _11 = _60;
  retval.328_61 = _11 == 0;
  if (retval.328_61 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _62 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 8> :
  n_63 = 0;

  <bb 9> :
  # n_33 = PHI <n_63(8), n_34(28)>
  if (n_33 >= ntot_52)
    goto <bb 29>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _65 = stbi__zhuffman_decode (a_45(D), &z_codelength);

  <bb 11> :
  c_66 = _65;
  if (c_66 < 0)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (c_66 > 18)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _86 = stbi__err ("bad codelengths");
  goto <bb 38>; [INV]

  <bb 14> :
  if (c_66 <= 15)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  n.329_12 = n_33;
  n_67 = n.329_12 + 1;
  _13 = (unsigned char) c_66;
  lencodes[n.329_12] = _13;
  goto <bb 28>; [INV]

  <bb 16> :
  fill_69 = 0;
  if (c_66 == 16)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  _14 = stbi__zreceive (a_45(D), 2);
  _15 = _14 + 3;
  c_71 = (int) _15;
  if (n_33 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _73 = stbi__err ("bad codelengths");
  goto <bb 38>; [INV]

  <bb 19> :
  _16 = n_33 + -1;
  fill_74 = lencodes[_16];
  goto <bb 25>; [INV]

  <bb 20> :
  if (c_66 == 17)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _17 = stbi__zreceive (a_45(D), 3);
  _18 = _17 + 3;
  c_76 = (int) _18;
  goto <bb 25>; [INV]

  <bb 22> :
  if (c_66 == 18)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _19 = stbi__zreceive (a_45(D), 7);
  _20 = _19 + 11;
  c_78 = (int) _20;
  goto <bb 25>; [INV]

  <bb 24> :
  _80 = stbi__err ("bad codelengths");
  goto <bb 38>; [INV]

  <bb 25> :
  # c_35 = PHI <c_71(19), c_76(21), c_78(23)>
  # fill_36 = PHI <fill_74(19), fill_69(21), fill_69(23)>
  _21 = ntot_52 - n_33;
  if (c_35 > _21)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _82 = stbi__err ("bad codelengths");
  goto <bb 38>; [INV]

  <bb 27> :
  _22 = (long long unsigned int) c_35;
  _23 = (int) fill_36;
  _24 = (sizetype) n_33;
  _25 = &lencodes + _24;
  memset (_25, _23, _22);
  n_84 = n_33 + c_35;

  <bb 28> :
  # n_34 = PHI <n_67(15), n_84(27)>
  goto <bb 9>; [INV]

  <bb 29> :
  if (n_33 != ntot_52)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _88 = stbi__err ("bad codelengths");
  goto <bb 38>; [INV]

  <bb 31> :
  _26 = &a_45(D)->z_length;
  _90 = stbi__zbuild_huffman (_26, &lencodes, hlit_47);

  <bb 32> :
  _27 = _90;
  retval.330_91 = _27 == 0;
  if (retval.330_91 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _92 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 34> :
  _28 = (sizetype) hlit_47;
  _29 = &lencodes + _28;
  _30 = &a_45(D)->z_distance;
  _94 = stbi__zbuild_huffman (_30, _29, hdist_49);

  <bb 35> :
  _31 = _94;
  retval.331_95 = _31 == 0;
  if (retval.331_95 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  _96 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 37> :
  _97 = 1;

  <bb 38> :
  # _37 = PHI <_62(7), _86(13), _73(18), _80(24), _82(26), _88(30), _92(33), _96(36), _97(37)>
  z_codelength ={v} {CLOBBER};
  lencodes ={v} {CLOBBER};
  codelength_sizes ={v} {CLOBBER};

  <bb 39> :
<L34>:
  return _37;

  <bb 40> :
<L35>:
  resx 1

}



;; Function stbi__parse_uncompressed_block (_ZL30stbi__parse_uncompressed_blockP10stbi__zbuf, funcdef_no=890, decl_uid=11959, cgraph_uid=796, symbol_order=816)

stbi__parse_uncompressed_block (struct stbi__zbuf * a)
{
  int k;
  int nlen;
  int len;
  stbi_uc header[4];
  bool retval.334;
  int D.15344;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  unsigned int _6;
  int k.332_7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  int _12;
  int _13;
  int k.333_14;
  unsigned char _15;
  unsigned char _16;
  int _17;
  int _18;
  unsigned char _19;
  int _20;
  unsigned char _21;
  int _22;
  int _23;
  unsigned char _24;
  int _25;
  int _26;
  stbi_uc * _27;
  sizetype _28;
  stbi_uc * _29;
  stbi_uc * _30;
  char * _31;
  sizetype _32;
  char * _33;
  char * _34;
  char * _35;
  int _36;
  long long unsigned int _37;
  stbi_uc * _38;
  char * _39;
  stbi_uc * _40;
  sizetype _41;
  stbi_uc * _42;
  char * _43;
  sizetype _44;
  char * _45;
  int _48;
  int _63;
  int _70;
  int _72;
  bool retval.334_74;
  int _75;
  int _79;

  <bb 2> :
  _1 = a_55(D)->num_bits;
  _2 = _1 & 7;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = a_55(D)->num_bits;
  _4 = _3 & 7;
  stbi__zreceive (a_55(D), _4);

  <bb 4> :
  k_57 = 0;

  <bb 5> :
  # k_46 = PHI <k_57(4), k_58(6)>
  _5 = a_55(D)->num_bits;
  if (_5 <= 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _6 = a_55(D)->code_buffer;
  k.332_7 = k_46;
  k_58 = k.332_7 + 1;
  _8 = (unsigned char) _6;
  header[k.332_7] = _8;
  _9 = a_55(D)->code_buffer;
  _10 = _9 >> 8;
  a_55(D)->code_buffer = _10;
  _11 = a_55(D)->num_bits;
  _12 = _11 + -8;
  a_55(D)->num_bits = _12;
  goto <bb 5>; [INV]

  <bb 7> :
  _13 = a_55(D)->num_bits;
  if (_13 < 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _63 = stbi__err ("zlib corrupt");
  goto <bb 19>; [INV]

  <bb 9> :
  # k_47 = PHI <k_46(7), k_64(10)>
  if (k_47 > 3)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  k.333_14 = k_47;
  k_64 = k.333_14 + 1;
  _15 = stbi__zget8 (a_55(D));
  header[k.333_14] = _15;
  goto <bb 9>; [INV]

  <bb 11> :
  _16 = header[1];
  _17 = (int) _16;
  _18 = _17 * 256;
  _19 = header[0];
  _20 = (int) _19;
  len_67 = _18 + _20;
  _21 = header[3];
  _22 = (int) _21;
  _23 = _22 * 256;
  _24 = header[2];
  _25 = (int) _24;
  nlen_68 = _23 + _25;
  _26 = len_67 ^ 65535;
  if (nlen_68 != _26)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _70 = stbi__err ("zlib corrupt");
  goto <bb 19>; [INV]

  <bb 13> :
  _27 = a_55(D)->zbuffer;
  _28 = (sizetype) len_67;
  _29 = _27 + _28;
  _30 = a_55(D)->zbuffer_end;
  if (_29 > _30)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _72 = stbi__err ("read past buffer");
  goto <bb 19>; [INV]

  <bb 15> :
  _31 = a_55(D)->zout;
  _32 = (sizetype) len_67;
  _33 = _31 + _32;
  _34 = a_55(D)->zout_end;
  if (_33 > _34)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _35 = a_55(D)->zout;
  _36 = stbi__zexpand (a_55(D), _35, len_67);
  retval.334_74 = _36 == 0;
  if (retval.334_74 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _75 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  _37 = (long long unsigned int) len_67;
  _38 = a_55(D)->zbuffer;
  _39 = a_55(D)->zout;
  memcpy (_39, _38, _37);
  _40 = a_55(D)->zbuffer;
  _41 = (sizetype) len_67;
  _42 = _40 + _41;
  a_55(D)->zbuffer = _42;
  _43 = a_55(D)->zout;
  _44 = (sizetype) len_67;
  _45 = _43 + _44;
  a_55(D)->zout = _45;
  _79 = 1;

  <bb 19> :
  # _48 = PHI <_63(8), _70(12), _72(14), _75(17), _79(18)>
  header ={v} {CLOBBER};

  <bb 20> :
<L21>:
  return _48;

}



;; Function stbi__parse_zlib_header (_ZL23stbi__parse_zlib_headerP10stbi__zbuf, funcdef_no=891, decl_uid=11970, cgraph_uid=797, symbol_order=817)

stbi__parse_zlib_header (struct stbi__zbuf * a)
{
  int flg;
  int cm;
  int cmf;
  int D.15362;
  bool retval.335;
  unsigned char _1;
  unsigned char _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  bool retval.335_18;
  int _20;
  int _22;
  int _24;
  int _26;
  int _27;

  <bb 2> :
  _1 = stbi__zget8 (a_11(D));
  cmf_13 = (int) _1;
  cm_14 = cmf_13 & 15;
  _2 = stbi__zget8 (a_11(D));
  flg_16 = (int) _2;
  _3 = stbi__zeof (a_11(D));
  retval.335_18 = _3 != 0;
  if (retval.335_18 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _20 = stbi__err ("bad zlib header");
  goto <bb 11>; [INV]

  <bb 4> :
  _4 = cmf_13 * 256;
  _5 = flg_16 + _4;
  _6 = _5 % 31;
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _22 = stbi__err ("bad zlib header");
  goto <bb 11>; [INV]

  <bb 6> :
  _7 = flg_16 & 32;
  if (_7 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _24 = stbi__err ("no preset dict");
  goto <bb 11>; [INV]

  <bb 8> :
  if (cm_14 != 8)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _26 = stbi__err ("bad compression");
  goto <bb 11>; [INV]

  <bb 10> :
  _27 = 1;

  <bb 11> :
  # _8 = PHI <_20(3), _22(5), _24(7), _26(9), _27(10)>
<L8>:
  return _8;

}



;; Function stbi__parse_zlib (_ZL16stbi__parse_zlibP10stbi__zbufi, funcdef_no=892, decl_uid=11979, cgraph_uid=798, symbol_order=820)

stbi__parse_zlib (struct stbi__zbuf * a, int parse_header)
{
  int D.15406;
  int D.15405;
  int D.15404;
  int D.15403;
  int type;
  int final;
  bool retval.341;
  bool retval.340;
  bool retval.339;
  bool retval.338;
  bool retval.337;
  int D.15375;
  bool retval.336;
  int _1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  struct stbi__zhuffman * _5;
  int _6;
  struct stbi__zhuffman * _7;
  int _8;
  int _9;
  int _10;
  int _11;
  bool retval.336_21;
  int _22;
  bool retval.337_30;
  int _31;
  int _32;
  int _34;
  bool retval.338_35;
  int _36;
  int _38;
  bool retval.339_39;
  int _40;
  int _42;
  bool retval.340_43;
  int _44;
  int _46;
  bool retval.341_47;
  int _48;
  int _49;

  <bb 2> :
  if (parse_header_17(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = stbi__parse_zlib_header (a_19(D));
  retval.336_21 = _1 == 0;
  if (retval.336_21 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 5> :
  a_19(D)->num_bits = 0;
  a_19(D)->code_buffer = 0;

  <bb 6> :
  _2 = stbi__zreceive (a_19(D), 1);
  final_26 = (int) _2;
  _3 = stbi__zreceive (a_19(D), 2);
  type_28 = (int) _3;
  if (type_28 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _4 = stbi__parse_uncompressed_block (a_19(D));
  retval.337_30 = _4 == 0;
  if (retval.337_30 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 8> :
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 9> :
  if (type_28 == 3)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _32 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 11> :
  if (type_28 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _5 = &a_19(D)->z_length;
  _34 = stbi__zbuild_huffman (_5, &stbi__zdefault_length, 288);
  _6 = _34;
  retval.338_35 = _6 == 0;
  if (retval.338_35 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _36 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 14> :
  _7 = &a_19(D)->z_distance;
  _38 = stbi__zbuild_huffman (_7, &stbi__zdefault_distance, 32);
  _8 = _38;
  retval.339_39 = _8 == 0;
  if (retval.339_39 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _40 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 16> :
  _42 = stbi__compute_huffman_codes (a_19(D));
  _9 = _42;
  retval.340_43 = _9 == 0;
  if (retval.340_43 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _44 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 18> :
  _46 = stbi__parse_huffman_block (a_19(D));
  _10 = _46;
  retval.341_47 = _10 == 0;
  if (retval.341_47 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _48 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 20> :
  if (final_26 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  goto <bb 6>; [INV]

  <bb 22> :
  _49 = 1;

  <bb 23> :
  # _11 = PHI <_22(4), _31(8), _32(10), _36(13), _40(15), _44(17), _48(19), _49(22)>
<L26>:
  return _11;

}



;; Function stbi__do_zlib (_ZL13stbi__do_zlibP10stbi__zbufPciii, funcdef_no=893, decl_uid=11990, cgraph_uid=799, symbol_order=821)

stbi__do_zlib (struct stbi__zbuf * a, char * obuf, int olen, int exp, int parse_header)
{
  int D.15409;
  int D.15407;
  sizetype _1;
  char * _2;
  int _14;
  int _15;

  <bb 2> :
  a_4(D)->zout_start = obuf_5(D);
  a_4(D)->zout = obuf_5(D);
  _1 = (sizetype) olen_8(D);
  _2 = obuf_5(D) + _1;
  a_4(D)->zout_end = _2;
  a_4(D)->z_expandable = exp_10(D);
  _14 = stbi__parse_zlib (a_4(D), parse_header_12(D));
  _15 = _14;

  <bb 3> :
<L0>:
  return _15;

}



;; Function stbi_zlib_decode_malloc_guesssize (stbi_zlib_decode_malloc_guesssize, funcdef_no=894, decl_uid=5119, cgraph_uid=800, symbol_order=822)

stbi_zlib_decode_malloc_guesssize (const char * buffer, int len, int initial_size, int * outlen)
{
  int D.15420;
  char * p;
  struct stbi__zbuf a;
  bool retval.342;
  char * D.15412;
  long long unsigned int _1;
  sizetype _2;
  stbi_uc * _3;
  int _4;
  char * _5;
  char * _6;
  long long int _7;
  int _8;
  char * _9;
  char * _10;
  char * _17;
  int _23;
  bool retval.342_24;
  char * _27;
  char * _29;

  <bb 2> :
  _1 = (long long unsigned int) initial_size_13(D);
  p_16 = stbi__malloc (_1);
  if (p_16 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _17 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  a.zbuffer = buffer_18(D);
  _2 = (sizetype) len_20(D);
  _3 = buffer_18(D) + _2;
  a.zbuffer_end = _3;
  _23 = stbi__do_zlib (&a, p_16, initial_size_13(D), 1, 1);

  <bb 5> :
  _4 = _23;
  retval.342_24 = _4 != 0;
  if (retval.342_24 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (outlen_25(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = a.zout;
  _6 = a.zout_start;
  _7 = _5 - _6;
  _8 = (int) _7;
  *outlen_25(D) = _8;

  <bb 8> :
  _27 = a.zout_start;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  _9 = a.zout_start;
  free (_9);
  _29 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 10> :
  # _10 = PHI <_17(3), _27(8), _29(9)>
  a ={v} {CLOBBER};

  <bb 11> :
<L8>:
  return _10;

  <bb 12> :
<L9>:
  resx 1

}



;; Function stbi_zlib_decode_malloc (stbi_zlib_decode_malloc, funcdef_no=895, decl_uid=5129, cgraph_uid=801, symbol_order=823)

stbi_zlib_decode_malloc (const char * buffer, int len, int * outlen)
{
  char * D.15425;
  char * D.15423;
  char * _6;
  char * _7;

  <bb 2> :
  _6 = stbi_zlib_decode_malloc_guesssize (buffer_2(D), len_3(D), 16384, outlen_4(D));
  _7 = _6;

  <bb 3> :
<L0>:
  return _7;

}



;; Function stbi_zlib_decode_malloc_guesssize_headerflag (stbi_zlib_decode_malloc_guesssize_headerflag, funcdef_no=896, decl_uid=5125, cgraph_uid=802, symbol_order=824)

stbi_zlib_decode_malloc_guesssize_headerflag (const char * buffer, int len, int initial_size, int * outlen, int parse_header)
{
  int D.15436;
  char * p;
  struct stbi__zbuf a;
  bool retval.343;
  char * D.15428;
  long long unsigned int _1;
  sizetype _2;
  stbi_uc * _3;
  int _4;
  char * _5;
  char * _6;
  long long int _7;
  int _8;
  char * _9;
  char * _10;
  char * _17;
  int _24;
  bool retval.343_25;
  char * _28;
  char * _30;

  <bb 2> :
  _1 = (long long unsigned int) initial_size_13(D);
  p_16 = stbi__malloc (_1);
  if (p_16 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _17 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  a.zbuffer = buffer_18(D);
  _2 = (sizetype) len_20(D);
  _3 = buffer_18(D) + _2;
  a.zbuffer_end = _3;
  _24 = stbi__do_zlib (&a, p_16, initial_size_13(D), 1, parse_header_22(D));

  <bb 5> :
  _4 = _24;
  retval.343_25 = _4 != 0;
  if (retval.343_25 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (outlen_26(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _5 = a.zout;
  _6 = a.zout_start;
  _7 = _5 - _6;
  _8 = (int) _7;
  *outlen_26(D) = _8;

  <bb 8> :
  _28 = a.zout_start;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  _9 = a.zout_start;
  free (_9);
  _30 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 10> :
  # _10 = PHI <_17(3), _28(8), _30(9)>
  a ={v} {CLOBBER};

  <bb 11> :
<L8>:
  return _10;

  <bb 12> :
<L9>:
  resx 1

}



;; Function stbi_zlib_decode_buffer (stbi_zlib_decode_buffer, funcdef_no=897, decl_uid=5134, cgraph_uid=803, symbol_order=825)

stbi_zlib_decode_buffer (char * obuffer, int olen, const char * ibuffer, int ilen)
{
  int D.15444;
  struct stbi__zbuf a;
  int D.15442;
  bool retval.344;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  char * _4;
  char * _5;
  long long int _6;
  int _7;
  int _16;
  bool retval.344_17;
  int _18;
  int _19;

  <bb 2> :
  a.zbuffer = ibuffer_9(D);
  _1 = (sizetype) ilen_11(D);
  _2 = ibuffer_9(D) + _1;
  a.zbuffer_end = _2;
  _16 = stbi__do_zlib (&a, obuffer_13(D), olen_14(D), 0, 1);

  <bb 3> :
  _3 = _16;
  retval.344_17 = _3 != 0;
  if (retval.344_17 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = a.zout;
  _5 = a.zout_start;
  _6 = _4 - _5;
  _18 = (int) _6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  _19 = -1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 6> :
  # _7 = PHI <_18(4), _19(5)>
  a ={v} {CLOBBER};

  <bb 7> :
<L3>:
  return _7;

  <bb 8> :
<L4>:
  resx 1

}



;; Function stbi_zlib_decode_noheader_malloc (stbi_zlib_decode_noheader_malloc, funcdef_no=898, decl_uid=5138, cgraph_uid=804, symbol_order=826)

stbi_zlib_decode_noheader_malloc (const char * buffer, int len, int * outlen)
{
  int D.15457;
  char * p;
  struct stbi__zbuf a;
  bool retval.345;
  char * D.15449;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  char * _4;
  char * _5;
  long long int _6;
  int _7;
  char * _8;
  char * _9;
  char * _15;
  int _21;
  bool retval.345_22;
  char * _25;
  char * _27;

  <bb 2> :
  p_14 = stbi__malloc (16384);
  if (p_14 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _15 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  a.zbuffer = buffer_16(D);
  _1 = (sizetype) len_18(D);
  _2 = buffer_16(D) + _1;
  a.zbuffer_end = _2;
  _21 = stbi__do_zlib (&a, p_14, 16384, 1, 0);

  <bb 5> :
  _3 = _21;
  retval.345_22 = _3 != 0;
  if (retval.345_22 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (outlen_23(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _4 = a.zout;
  _5 = a.zout_start;
  _6 = _4 - _5;
  _7 = (int) _6;
  *outlen_23(D) = _7;

  <bb 8> :
  _25 = a.zout_start;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  _8 = a.zout_start;
  free (_8);
  _27 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 10> :
  # _9 = PHI <_15(3), _25(8), _27(9)>
  a ={v} {CLOBBER};

  <bb 11> :
<L8>:
  return _9;

  <bb 12> :
<L9>:
  resx 1

}



;; Function stbi_zlib_decode_noheader_buffer (stbi_zlib_decode_noheader_buffer, funcdef_no=899, decl_uid=5143, cgraph_uid=805, symbol_order=827)

stbi_zlib_decode_noheader_buffer (char * obuffer, int olen, const char * ibuffer, int ilen)
{
  int D.15465;
  struct stbi__zbuf a;
  int D.15463;
  bool retval.346;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  char * _4;
  char * _5;
  long long int _6;
  int _7;
  int _16;
  bool retval.346_17;
  int _18;
  int _19;

  <bb 2> :
  a.zbuffer = ibuffer_9(D);
  _1 = (sizetype) ilen_11(D);
  _2 = ibuffer_9(D) + _1;
  a.zbuffer_end = _2;
  _16 = stbi__do_zlib (&a, obuffer_13(D), olen_14(D), 0, 0);

  <bb 3> :
  _3 = _16;
  retval.346_17 = _3 != 0;
  if (retval.346_17 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = a.zout;
  _5 = a.zout_start;
  _6 = _4 - _5;
  _18 = (int) _6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  _19 = -1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 6> :
  # _7 = PHI <_18(4), _19(5)>
  a ={v} {CLOBBER};

  <bb 7> :
<L3>:
  return _7;

  <bb 8> :
<L4>:
  resx 1

}



;; Function stbi__get_chunk_header (_ZL22stbi__get_chunk_headerP13stbi__context, funcdef_no=900, decl_uid=12074, cgraph_uid=806, symbol_order=828)

stbi__get_chunk_header (struct stbi__context * s)
{
  unsigned int D.15471;
  unsigned int D.15470;
  struct stbi__pngchunk c;
  struct stbi__pngchunk D.15468;
  unsigned int _1;
  unsigned int _2;
  unsigned int _7;
  unsigned int _10;

  <bb 2> :
  _7 = stbi__get32be (s_5(D));

  <bb 3> :
  _1 = _7;
  c.length = _1;
  _10 = stbi__get32be (s_5(D));

  <bb 4> :
  _2 = _10;
  c.type = _2;
  D.15468 = c;
  c ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return D.15468;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi__check_png_header (_ZL22stbi__check_png_headerP13stbi__context, funcdef_no=901, decl_uid=12112, cgraph_uid=807, symbol_order=830)

stbi__check_png_header (struct stbi__context * s)
{
  unsigned char D.15481;
  int i;
  static const stbi_uc png_sig[8] = {137, 80, 78, 71, 13, 10, 26, 10};
  int D.15479;
  bool retval.347;
  unsigned char _1;
  unsigned char _2;
  int _4;
  unsigned char _11;
  bool retval.347_12;
  int _14;
  int _16;

  <bb 2> :
  i_7 = 0;

  <bb 3> :
  # i_3 = PHI <i_7(2), i_15(6)>
  if (i_3 > 7)
    goto <bb 7>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _11 = stbi__get8 (s_9(D));
  _1 = _11;
  _2 = png_sig[i_3];
  retval.347_12 = _1 != _2;
  if (retval.347_12 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _14 = stbi__err ("bad png sig");
  goto <bb 8>; [INV]

  <bb 6> :
  i_15 = i_3 + 1;
  goto <bb 3>; [INV]

  <bb 7> :
  _16 = 1;

  <bb 8> :
  # _4 = PHI <_14(5), _16(7)>
<L5>:
  return _4;

}



;; Function stbi__paeth (_ZL11stbi__paethiii, funcdef_no=902, decl_uid=12138, cgraph_uid=808, symbol_order=832)

stbi__paeth (int a, int b, int c)
{
  int pc;
  int pb;
  int pa;
  int p;
  int D.15486;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _13;
  int _14;
  int _15;

  <bb 2> :
  _1 = a_6(D) + b_7(D);
  p_9 = _1 - c_8(D);
  _2 = p_9 - a_6(D);
  pa_10 = ABS_EXPR <_2>;
  _3 = p_9 - b_7(D);
  pb_11 = ABS_EXPR <_3>;
  _4 = p_9 - c_8(D);
  pc_12 = ABS_EXPR <_4>;
  if (pa_10 <= pb_11)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (pa_10 <= pc_12)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _13 = a_6(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  if (pb_11 <= pc_12)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _14 = b_7(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  _15 = c_8(D);

  <bb 8> :
  # _5 = PHI <_13(4), _14(6), _15(7)>
<L6>:
  return _5;

}



;; Function stbi__create_png_image_raw (_ZL26stbi__create_png_image_rawP9stbi__pngPhjijjii, funcdef_no=903, decl_uid=12153, cgraph_uid=809, symbol_order=834)

stbi__create_png_image_raw (struct stbi__png * a, stbi_uc * raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)
{
  stbi__uint16 * cur16;
  stbi_uc * cur;
  int q;
  stbi_uc scale;
  stbi_uc * in;
  stbi_uc * cur;
  int nk;
  int filter;
  stbi_uc * prior;
  stbi_uc * cur;
  int width;
  int filter_bytes;
  int output_bytes;
  int img_n;
  int k;
  stbi__uint32 img_width_bytes;
  stbi__uint32 img_len;
  stbi__uint32 stride;
  stbi__uint32 j;
  stbi__uint32 i;
  struct stbi__context * s;
  int bytes;
  bool iftmp.391;
  stbi_uc iftmp.362;
  bool iftmp.360;
  bool retval.354;
  int D.15502;
  bool iftmp.351;
  int iftmp.348;
  unsigned int out_n.349_1;
  unsigned int _2;
  unsigned int bytes.350_3;
  int _4;
  int _5;
  int _6;
  int y.352_7;
  int x.353_8;
  void * _9;
  stbi_uc * _10;
  int x.355_11;
  int _12;
  unsigned int img_n.356_13;
  unsigned int _14;
  unsigned int depth.357_15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  stbi_uc * _19;
  unsigned int _20;
  sizetype _21;
  stbi_uc * raw.358_22;
  unsigned char _23;
  unsigned int out_n.359_24;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  sizetype _28;
  sizetype _29;
  unsigned char _30;
  sizetype _31;
  stbi_uc * _32;
  sizetype _33;
  stbi_uc * _34;
  unsigned char _35;
  sizetype _36;
  stbi_uc * _37;
  sizetype _38;
  stbi_uc * _39;
  unsigned char _40;
  sizetype _41;
  stbi_uc * _42;
  unsigned char _43;
  sizetype _44;
  stbi_uc * _45;
  unsigned char _46;
  sizetype _47;
  stbi_uc * _48;
  unsigned char _49;
  sizetype _50;
  stbi_uc * _51;
  unsigned char _52;
  sizetype _53;
  stbi_uc * _54;
  unsigned char _55;
  int _56;
  int _57;
  unsigned char _58;
  sizetype _59;
  stbi_uc * _60;
  unsigned char _61;
  sizetype _62;
  stbi_uc * _63;
  unsigned char _64;
  sizetype _65;
  stbi_uc * _66;
  unsigned char _67;
  int _68;
  int _69;
  unsigned char _70;
  sizetype _71;
  stbi_uc * _72;
  unsigned char _73;
  sizetype _74;
  stbi_uc * _75;
  sizetype _76;
  stbi_uc * _77;
  unsigned char _78;
  sizetype _79;
  stbi_uc * _80;
  sizetype _81;
  stbi_uc * _82;
  unsigned char _83;
  sizetype _84;
  stbi_uc * _85;
  sizetype _86;
  sizetype _87;
  sizetype _88;
  sizetype _89;
  stbi_uc * _90;
  sizetype _91;
  sizetype _92;
  stbi_uc * _93;
  sizetype _94;
  sizetype _95;
  sizetype _96;
  int _97;
  long long unsigned int _98;
  sizetype _99;
  stbi_uc * _100;
  unsigned char _101;
  int _102;
  sizetype _103;
  stbi_uc * _104;
  unsigned char _105;
  sizetype _106;
  stbi_uc * _107;
  unsigned char _108;
  sizetype _109;
  stbi_uc * _110;
  unsigned char _111;
  sizetype _112;
  stbi_uc * _113;
  unsigned char _114;
  sizetype _115;
  stbi_uc * _116;
  unsigned char _117;
  sizetype _118;
  stbi_uc * _119;
  unsigned char _120;
  sizetype _121;
  stbi_uc * _122;
  unsigned char _123;
  int _124;
  int _125;
  sizetype _126;
  stbi_uc * _127;
  unsigned char _128;
  int _129;
  int _130;
  int _131;
  unsigned char _132;
  sizetype _133;
  stbi_uc * _134;
  unsigned char _135;
  sizetype _136;
  stbi_uc * _137;
  unsigned char _138;
  int _139;
  sizetype _140;
  stbi_uc * _141;
  unsigned char _142;
  int _143;
  sizetype _144;
  stbi_uc * _145;
  unsigned char _146;
  int _147;
  int _148;
  sizetype _149;
  stbi_uc * _150;
  unsigned char _151;
  int _152;
  int _153;
  unsigned char _154;
  sizetype _155;
  stbi_uc * _156;
  unsigned char _157;
  sizetype _158;
  stbi_uc * _159;
  unsigned char _160;
  int _161;
  sizetype _162;
  stbi_uc * _163;
  unsigned char _164;
  int _165;
  int _166;
  unsigned char _167;
  sizetype _168;
  stbi_uc * _169;
  unsigned char _170;
  sizetype _171;
  stbi_uc * _172;
  unsigned char _173;
  int _174;
  sizetype _175;
  stbi_uc * _176;
  unsigned char _177;
  int _178;
  int _179;
  unsigned char _180;
  sizetype _181;
  stbi_uc * _182;
  unsigned char _183;
  sizetype _184;
  int _185;
  sizetype _186;
  stbi_uc * _187;
  sizetype _188;
  stbi_uc * _189;
  unsigned char _190;
  sizetype _191;
  stbi_uc * _192;
  sizetype _193;
  sizetype _194;
  sizetype _195;
  sizetype _196;
  stbi_uc * _197;
  unsigned char _198;
  int _199;
  sizetype _200;
  stbi_uc * _201;
  unsigned char _202;
  sizetype _203;
  stbi_uc * _204;
  unsigned char _205;
  sizetype _206;
  stbi_uc * _207;
  sizetype _208;
  sizetype _209;
  sizetype _210;
  sizetype _211;
  stbi_uc * _212;
  unsigned char _213;
  sizetype _214;
  stbi_uc * _215;
  unsigned char _216;
  sizetype _217;
  stbi_uc * _218;
  unsigned char _219;
  sizetype _220;
  stbi_uc * _221;
  sizetype _222;
  sizetype _223;
  sizetype _224;
  sizetype _225;
  stbi_uc * _226;
  unsigned char _227;
  sizetype _228;
  stbi_uc * _229;
  unsigned char _230;
  int _231;
  int _232;
  sizetype _233;
  stbi_uc * _234;
  unsigned char _235;
  int _236;
  int _237;
  int _238;
  unsigned char _239;
  sizetype _240;
  stbi_uc * _241;
  unsigned char _242;
  sizetype _243;
  stbi_uc * _244;
  sizetype _245;
  sizetype _246;
  sizetype _247;
  sizetype _248;
  stbi_uc * _249;
  unsigned char _250;
  int _251;
  sizetype _252;
  stbi_uc * _253;
  unsigned char _254;
  int _255;
  sizetype _256;
  stbi_uc * _257;
  unsigned char _258;
  int _259;
  int _260;
  sizetype _261;
  stbi_uc * _262;
  unsigned char _263;
  int _264;
  int _265;
  unsigned char _266;
  sizetype _267;
  stbi_uc * _268;
  unsigned char _269;
  sizetype _270;
  stbi_uc * _271;
  sizetype _272;
  sizetype _273;
  sizetype _274;
  sizetype _275;
  stbi_uc * _276;
  unsigned char _277;
  int _278;
  sizetype _279;
  stbi_uc * _280;
  unsigned char _281;
  int _282;
  int _283;
  unsigned char _284;
  sizetype _285;
  stbi_uc * _286;
  unsigned char _287;
  sizetype _288;
  stbi_uc * _289;
  sizetype _290;
  sizetype _291;
  sizetype _292;
  sizetype _293;
  stbi_uc * _294;
  unsigned char _295;
  int _296;
  sizetype _297;
  stbi_uc * _298;
  unsigned char _299;
  int _300;
  int _301;
  unsigned char _302;
  sizetype _303;
  stbi_uc * _304;
  unsigned char _305;
  sizetype _306;
  stbi_uc * _307;
  sizetype _308;
  sizetype _309;
  sizetype _310;
  stbi_uc * _311;
  unsigned int _312;
  sizetype _313;
  sizetype _314;
  sizetype _315;
  stbi_uc * _316;
  sizetype _317;
  stbi_uc * _318;
  unsigned int _319;
  sizetype _320;
  stbi_uc * _321;
  unsigned int _322;
  sizetype _323;
  unsigned int out_n.361_324;
  unsigned int _325;
  sizetype _326;
  sizetype _327;
  sizetype _328;
  sizetype _329;
  unsigned int img_n.363_330;
  unsigned int _331;
  unsigned char _332;
  int _333;
  int _334;
  unsigned char _335;
  stbi_uc * cur.364_336;
  unsigned char _337;
  unsigned char _338;
  unsigned char _339;
  stbi_uc * cur.365_340;
  unsigned char _341;
  unsigned char _342;
  int _343;
  int _344;
  unsigned char _345;
  stbi_uc * cur.366_346;
  unsigned char _347;
  unsigned int img_n.367_348;
  unsigned int _349;
  unsigned char _350;
  int _351;
  int _352;
  unsigned char _353;
  stbi_uc * cur.368_354;
  unsigned char _355;
  unsigned char _356;
  int _357;
  int _358;
  unsigned char _359;
  unsigned char _360;
  stbi_uc * cur.369_361;
  unsigned char _362;
  unsigned char _363;
  int _364;
  int _365;
  unsigned char _366;
  unsigned char _367;
  stbi_uc * cur.370_368;
  unsigned char _369;
  unsigned char _370;
  unsigned char _371;
  stbi_uc * cur.371_372;
  unsigned char _373;
  unsigned char _374;
  int _375;
  int _376;
  unsigned char _377;
  stbi_uc * cur.372_378;
  unsigned char _379;
  unsigned char _380;
  int _381;
  int _382;
  unsigned char _383;
  unsigned char _384;
  stbi_uc * cur.373_385;
  unsigned char _386;
  unsigned char _387;
  int _388;
  int _389;
  unsigned char _390;
  unsigned char _391;
  stbi_uc * cur.374_392;
  unsigned char _393;
  unsigned int img_n.375_394;
  unsigned int _395;
  unsigned char _396;
  int _397;
  int _398;
  unsigned char _399;
  stbi_uc * cur.376_400;
  unsigned char _401;
  unsigned char _402;
  int _403;
  int _404;
  unsigned char _405;
  unsigned char _406;
  stbi_uc * cur.377_407;
  unsigned char _408;
  unsigned char _409;
  int _410;
  int _411;
  unsigned char _412;
  unsigned char _413;
  stbi_uc * cur.378_414;
  unsigned char _415;
  unsigned char _416;
  int _417;
  int _418;
  unsigned char _419;
  unsigned char _420;
  stbi_uc * cur.379_421;
  unsigned char _422;
  unsigned char _423;
  int _424;
  int _425;
  unsigned char _426;
  unsigned char _427;
  stbi_uc * cur.380_428;
  unsigned char _429;
  unsigned char _430;
  int _431;
  int _432;
  unsigned char _433;
  unsigned char _434;
  stbi_uc * cur.381_435;
  unsigned char _436;
  unsigned char _437;
  int _438;
  int _439;
  unsigned char _440;
  unsigned char _441;
  stbi_uc * cur.382_442;
  unsigned char _443;
  unsigned char _444;
  unsigned char _445;
  stbi_uc * cur.383_446;
  unsigned char _447;
  unsigned char _448;
  int _449;
  int _450;
  unsigned char _451;
  stbi_uc * cur.384_452;
  unsigned char _453;
  unsigned char _454;
  int _455;
  int _456;
  unsigned char _457;
  unsigned char _458;
  stbi_uc * cur.385_459;
  unsigned char _460;
  unsigned char _461;
  int _462;
  int _463;
  unsigned char _464;
  unsigned char _465;
  stbi_uc * cur.386_466;
  unsigned char _467;
  unsigned char _468;
  int _469;
  int _470;
  unsigned char _471;
  unsigned char _472;
  stbi_uc * cur.387_473;
  unsigned char _474;
  unsigned char _475;
  int _476;
  int _477;
  unsigned char _478;
  unsigned char _479;
  stbi_uc * cur.388_480;
  unsigned char _481;
  unsigned char _482;
  int _483;
  int _484;
  unsigned char _485;
  unsigned char _486;
  stbi_uc * cur.389_487;
  unsigned char _488;
  unsigned char _489;
  int _490;
  int _491;
  unsigned char _492;
  unsigned char _493;
  stbi_uc * cur.390_494;
  unsigned char _495;
  stbi_uc * _496;
  unsigned int _497;
  sizetype _498;
  unsigned int _499;
  int _500;
  sizetype _501;
  sizetype _502;
  stbi_uc * _503;
  sizetype _504;
  stbi_uc * _505;
  int _506;
  sizetype _507;
  stbi_uc * _508;
  unsigned char _509;
  unsigned int _510;
  int _511;
  sizetype _512;
  sizetype _513;
  stbi_uc * _514;
  int _515;
  sizetype _516;
  sizetype _517;
  stbi_uc * _518;
  int _519;
  sizetype _520;
  sizetype _521;
  stbi_uc * _522;
  unsigned char _523;
  int _524;
  sizetype _525;
  sizetype _526;
  stbi_uc * _527;
  int _528;
  sizetype _529;
  sizetype _530;
  stbi_uc * _531;
  unsigned char _532;
  int _533;
  sizetype _534;
  stbi_uc * _535;
  int _536;
  sizetype _537;
  stbi_uc * _538;
  unsigned char _539;
  unsigned int _540;
  unsigned int out_n.392_541;
  unsigned int _542;
  unsigned char _543;
  int _544;
  int _545;
  signed short _546;
  stbi_uc * _547;
  unsigned char _548;
  signed short _549;
  signed short _550;
  short unsigned int _551;
  int iftmp.348_632;
  int _633;
  stbi_uc iftmp.362_634;
  int iftmp.348_689;
  int iftmp.348_690;
  bool iftmp.351_703;
  bool iftmp.351_704;
  int _709;
  bool retval.354_711;
  int _713;
  int _718;
  int _725;
  int _727;
  bool iftmp.360_756;
  bool iftmp.360_757;
  stbi_uc iftmp.362_856;
  stbi_uc iftmp.362_857;
  bool iftmp.391_924;
  bool iftmp.391_925;
  int _940;

  <bb 2> :
  if (depth_688(D) == 16)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.348_689 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.348_690 = 1;

  <bb 5> :
  # iftmp.348_632 = PHI <iftmp.348_689(3), iftmp.348_690(4)>
  bytes_691 = iftmp.348_632;
  s_694 = a_693(D)->s;
  out_n.349_1 = (unsigned int) out_n_695(D);
  _2 = x_696(D) * out_n.349_1;
  bytes.350_3 = (unsigned int) bytes_691;
  stride_697 = _2 * bytes.350_3;
  img_n_698 = s_694->img_n;
  output_bytes_699 = out_n_695(D) * bytes_691;
  filter_bytes_700 = img_n_698 * bytes_691;
  width_701 = (int) x_696(D);
  _4 = s_694->img_n;
  if (out_n_695(D) == _4)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _5 = s_694->img_n;
  _6 = _5 + 1;
  if (out_n_695(D) == _6)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _assert ("out_n == s->img_n || out_n == s->img_n+1", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4553);
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.351_704 = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.351_703 = 0;

  <bb 10> :
  y.352_7 = (int) y_705(D);
  x.353_8 = (int) x_696(D);
  _9 = stbi__malloc_mad3 (x.353_8, y.352_7, output_bytes_699, 0);
  a_693(D)->out = _9;
  _10 = a_693(D)->out;
  if (_10 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _709 = stbi__err ("outofmem");
  goto <bb 195>; [INV]

  <bb 12> :
  x.355_11 = (int) x_696(D);
  _12 = stbi__mad3sizes_valid (img_n_698, x.355_11, depth_688(D), 7);
  retval.354_711 = _12 == 0;
  if (retval.354_711 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _713 = stbi__err ("too large");
  goto <bb 195>; [INV]

  <bb 14> :
  img_n.356_13 = (unsigned int) img_n_698;
  _14 = x_696(D) * img_n.356_13;
  depth.357_15 = (unsigned int) depth_688(D);
  _16 = _14 * depth.357_15;
  _17 = _16 + 7;
  img_width_bytes_714 = _17 >> 3;
  _18 = img_width_bytes_714 + 1;
  img_len_715 = y_705(D) * _18;
  if (raw_len_716(D) < img_len_715)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _718 = stbi__err ("not enough pixels");
  goto <bb 195>; [INV]

  <bb 16> :
  j_719 = 0;

  <bb 17> :
  # raw_552 = PHI <raw_720(D)(16), raw_562(133)>
  # j_572 = PHI <j_719(16), j_851(133)>
  # filter_bytes_591 = PHI <filter_bytes_700(16), filter_bytes_592(133)>
  # width_593 = PHI <width_701(16), width_594(133)>
  if (j_572 >= y_705(D))
    goto <bb 134>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _19 = a_693(D)->out;
  _20 = stride_697 * j_572;
  _21 = (sizetype) _20;
  cur_721 = _19 + _21;
  raw.358_22 = raw_552;
  raw_722 = raw.358_22 + 1;
  _23 = *raw.358_22;
  filter_723 = (int) _23;
  if (filter_723 > 4)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _725 = stbi__err ("invalid filter");
  goto <bb 195>; [INV]

  <bb 20> :
  if (depth_688(D) <= 7)
    goto <bb 21>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 21> :
  if (img_width_bytes_714 > x_696(D))
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _727 = stbi__err ("invalid width");
  goto <bb 195>; [INV]

  <bb 23> :
  out_n.359_24 = (unsigned int) out_n_695(D);
  _25 = x_696(D) * out_n.359_24;
  _26 = _25 - img_width_bytes_714;
  _27 = (sizetype) _26;
  cur_728 = cur_721 + _27;
  filter_bytes_729 = 1;
  width_730 = (int) img_width_bytes_714;

  <bb 24> :
  # filter_bytes_592 = PHI <filter_bytes_591(20), filter_bytes_729(23)>
  # width_594 = PHI <width_593(20), width_730(23)>
  # cur_595 = PHI <cur_721(20), cur_728(23)>
  _28 = (sizetype) stride_697;
  _29 = -_28;
  prior_731 = cur_595 + _29;
  if (j_572 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _30 = first_row_filter[filter_723];
  filter_732 = (int) _30;

  <bb 26> :
  # filter_613 = PHI <filter_723(24), filter_732(25)>
  k_733 = 0;

  <bb 27> :
  # k_574 = PHI <k_733(26), k_742(36)>
  if (k_574 >= filter_bytes_592)
    goto <bb 37>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  switch (filter_613) <default: <L35> [INV], case 0: <L28> [INV], case 1: <L29> [INV], case 2: <L30> [INV], case 3: <L31> [INV], case 4: <L32> [INV], case 5: <L33> [INV], case 6: <L34> [INV]>

  <bb 29> :
<L28>:
  _31 = (sizetype) k_574;
  _32 = raw_722 + _31;
  _33 = (sizetype) k_574;
  _34 = cur_595 + _33;
  _35 = *_32;
  *_34 = _35;
  goto <bb 36>; [INV]

  <bb 30> :
<L29>:
  _36 = (sizetype) k_574;
  _37 = raw_722 + _36;
  _38 = (sizetype) k_574;
  _39 = cur_595 + _38;
  _40 = *_37;
  *_39 = _40;
  goto <bb 36>; [INV]

  <bb 31> :
<L30>:
  _41 = (sizetype) k_574;
  _42 = raw_722 + _41;
  _43 = *_42;
  _44 = (sizetype) k_574;
  _45 = prior_731 + _44;
  _46 = *_45;
  _47 = (sizetype) k_574;
  _48 = cur_595 + _47;
  _49 = _43 + _46;
  *_48 = _49;
  goto <bb 36>; [INV]

  <bb 32> :
<L31>:
  _50 = (sizetype) k_574;
  _51 = raw_722 + _50;
  _52 = *_51;
  _53 = (sizetype) k_574;
  _54 = prior_731 + _53;
  _55 = *_54;
  _56 = (int) _55;
  _57 = _56 >> 1;
  _58 = (unsigned char) _57;
  _59 = (sizetype) k_574;
  _60 = cur_595 + _59;
  _61 = _52 + _58;
  *_60 = _61;
  goto <bb 36>; [INV]

  <bb 33> :
<L32>:
  _62 = (sizetype) k_574;
  _63 = raw_722 + _62;
  _64 = *_63;
  _65 = (sizetype) k_574;
  _66 = prior_731 + _65;
  _67 = *_66;
  _68 = (int) _67;
  _69 = stbi__paeth (0, _68, 0);
  _70 = (unsigned char) _69;
  _71 = (sizetype) k_574;
  _72 = cur_595 + _71;
  _73 = _64 + _70;
  *_72 = _73;
  goto <bb 36>; [INV]

  <bb 34> :
<L33>:
  _74 = (sizetype) k_574;
  _75 = raw_722 + _74;
  _76 = (sizetype) k_574;
  _77 = cur_595 + _76;
  _78 = *_75;
  *_77 = _78;
  goto <bb 36>; [INV]

  <bb 35> :
<L34>:
  _79 = (sizetype) k_574;
  _80 = raw_722 + _79;
  _81 = (sizetype) k_574;
  _82 = cur_595 + _81;
  _83 = *_80;
  *_82 = _83;

  <bb 36> :
<L35>:
  k_742 = k_574 + 1;
  goto <bb 27>; [INV]

  <bb 37> :
  if (depth_688(D) == 8)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  if (img_n_698 != out_n_695(D))
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _84 = (sizetype) img_n_698;
  _85 = cur_595 + _84;
  *_85 = 255;

  <bb 40> :
  _86 = (sizetype) img_n_698;
  raw_744 = raw_722 + _86;
  _87 = (sizetype) out_n_695(D);
  cur_745 = cur_595 + _87;
  _88 = (sizetype) out_n_695(D);
  prior_746 = prior_731 + _88;
  goto <bb 46>; [INV]

  <bb 41> :
  if (depth_688(D) == 16)
    goto <bb 42>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 42> :
  if (img_n_698 != out_n_695(D))
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  _89 = (sizetype) filter_bytes_592;
  _90 = cur_595 + _89;
  *_90 = 255;
  _91 = (sizetype) filter_bytes_592;
  _92 = _91 + 1;
  _93 = cur_595 + _92;
  *_93 = 255;

  <bb 44> :
  _94 = (sizetype) filter_bytes_592;
  raw_749 = raw_722 + _94;
  _95 = (sizetype) output_bytes_699;
  cur_750 = cur_595 + _95;
  _96 = (sizetype) output_bytes_699;
  prior_751 = prior_731 + _96;
  goto <bb 46>; [INV]

  <bb 45> :
  raw_752 = raw_722 + 1;
  cur_753 = cur_595 + 1;
  prior_754 = prior_731 + 1;

  <bb 46> :
  # raw_553 = PHI <raw_744(40), raw_749(44), raw_752(45)>
  # cur_596 = PHI <cur_745(40), cur_750(44), cur_753(45)>
  # prior_605 = PHI <prior_746(40), prior_751(44), prior_754(45)>
  if (depth_688(D) <= 7)
    goto <bb 48>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  if (img_n_698 == out_n_695(D))
    goto <bb 48>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 48> :
  _97 = width_594 + -1;
  nk_828 = filter_bytes_592 * _97;
  switch (filter_613) <default: <L77> [INV], case 0: <L52> [INV], case 1: <L53> [INV], case 2: <L57> [INV], case 3: <L61> [INV], case 4: <L65> [INV], case 5: <L69> [INV], case 6: <L73> [INV]>

  <bb 49> :
<L52>:
  _98 = (long long unsigned int) nk_828;
  memcpy (cur_596, raw_553, _98);
  goto <bb 74>; [INV]

  <bb 50> :
<L53>:
  k_830 = 0;

  <bb 51> :
  # k_575 = PHI <k_830(50), k_832(52)>
  if (k_575 >= nk_828)
    goto <bb 53>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _99 = (sizetype) k_575;
  _100 = raw_553 + _99;
  _101 = *_100;
  _102 = k_575 - filter_bytes_592;
  _103 = (sizetype) _102;
  _104 = cur_596 + _103;
  _105 = *_104;
  _106 = (sizetype) k_575;
  _107 = cur_596 + _106;
  _108 = _101 + _105;
  *_107 = _108;
  k_832 = k_575 + 1;
  goto <bb 51>; [INV]

  <bb 53> :
  goto <bb 74>; [INV]

  <bb 54> :
<L57>:
  k_833 = 0;

  <bb 55> :
  # k_576 = PHI <k_833(54), k_835(56)>
  if (k_576 >= nk_828)
    goto <bb 57>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _109 = (sizetype) k_576;
  _110 = raw_553 + _109;
  _111 = *_110;
  _112 = (sizetype) k_576;
  _113 = prior_605 + _112;
  _114 = *_113;
  _115 = (sizetype) k_576;
  _116 = cur_596 + _115;
  _117 = _111 + _114;
  *_116 = _117;
  k_835 = k_576 + 1;
  goto <bb 55>; [INV]

  <bb 57> :
  goto <bb 74>; [INV]

  <bb 58> :
<L61>:
  k_836 = 0;

  <bb 59> :
  # k_577 = PHI <k_836(58), k_838(60)>
  if (k_577 >= nk_828)
    goto <bb 61>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  _118 = (sizetype) k_577;
  _119 = raw_553 + _118;
  _120 = *_119;
  _121 = (sizetype) k_577;
  _122 = prior_605 + _121;
  _123 = *_122;
  _124 = (int) _123;
  _125 = k_577 - filter_bytes_592;
  _126 = (sizetype) _125;
  _127 = cur_596 + _126;
  _128 = *_127;
  _129 = (int) _128;
  _130 = _124 + _129;
  _131 = _130 >> 1;
  _132 = (unsigned char) _131;
  _133 = (sizetype) k_577;
  _134 = cur_596 + _133;
  _135 = _120 + _132;
  *_134 = _135;
  k_838 = k_577 + 1;
  goto <bb 59>; [INV]

  <bb 61> :
  goto <bb 74>; [INV]

  <bb 62> :
<L65>:
  k_839 = 0;

  <bb 63> :
  # k_578 = PHI <k_839(62), k_842(64)>
  if (k_578 >= nk_828)
    goto <bb 65>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 64> :
  _136 = (sizetype) k_578;
  _137 = raw_553 + _136;
  _138 = *_137;
  _139 = k_578 - filter_bytes_592;
  _140 = (sizetype) _139;
  _141 = prior_605 + _140;
  _142 = *_141;
  _143 = (int) _142;
  _144 = (sizetype) k_578;
  _145 = prior_605 + _144;
  _146 = *_145;
  _147 = (int) _146;
  _148 = k_578 - filter_bytes_592;
  _149 = (sizetype) _148;
  _150 = cur_596 + _149;
  _151 = *_150;
  _152 = (int) _151;
  _153 = stbi__paeth (_152, _147, _143);
  _154 = (unsigned char) _153;
  _155 = (sizetype) k_578;
  _156 = cur_596 + _155;
  _157 = _138 + _154;
  *_156 = _157;
  k_842 = k_578 + 1;
  goto <bb 63>; [INV]

  <bb 65> :
  goto <bb 74>; [INV]

  <bb 66> :
<L69>:
  k_843 = 0;

  <bb 67> :
  # k_579 = PHI <k_843(66), k_845(68)>
  if (k_579 >= nk_828)
    goto <bb 69>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 68> :
  _158 = (sizetype) k_579;
  _159 = raw_553 + _158;
  _160 = *_159;
  _161 = k_579 - filter_bytes_592;
  _162 = (sizetype) _161;
  _163 = cur_596 + _162;
  _164 = *_163;
  _165 = (int) _164;
  _166 = _165 >> 1;
  _167 = (unsigned char) _166;
  _168 = (sizetype) k_579;
  _169 = cur_596 + _168;
  _170 = _160 + _167;
  *_169 = _170;
  k_845 = k_579 + 1;
  goto <bb 67>; [INV]

  <bb 69> :
  goto <bb 74>; [INV]

  <bb 70> :
<L73>:
  k_846 = 0;

  <bb 71> :
  # k_580 = PHI <k_846(70), k_849(72)>
  if (k_580 >= nk_828)
    goto <bb 73>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  _171 = (sizetype) k_580;
  _172 = raw_553 + _171;
  _173 = *_172;
  _174 = k_580 - filter_bytes_592;
  _175 = (sizetype) _174;
  _176 = cur_596 + _175;
  _177 = *_176;
  _178 = (int) _177;
  _179 = stbi__paeth (_178, 0, 0);
  _180 = (unsigned char) _179;
  _181 = (sizetype) k_580;
  _182 = cur_596 + _181;
  _183 = _173 + _180;
  *_182 = _183;
  k_849 = k_580 + 1;
  goto <bb 71>; [INV]

  <bb 73> :

  <bb 74> :
<L77>:
  _184 = (sizetype) nk_828;
  raw_850 = raw_553 + _184;
  goto <bb 133>; [INV]

  <bb 75> :
  _185 = img_n_698 + 1;
  if (out_n_695(D) == _185)
    goto <bb 77>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 76> :
  _assert ("img_n+1 == out_n", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4637);
  goto <bb 78>; [INV]

  <bb 77> :
  iftmp.360_757 = 1;
  goto <bb 79>; [INV]

  <bb 78> :
  iftmp.360_756 = 0;

  <bb 79> :
  switch (filter_613) <default: <L133> [INV], case 0: <L84> [INV], case 1: <L91> [INV], case 2: <L98> [INV], case 3: <L105> [INV], case 4: <L112> [INV], case 5: <L119> [INV], case 6: <L126> [INV]>

  <bb 80> :
<L84>:
  i_758 = x_696(D) + 4294967295;

  <bb 81> :
  # raw_554 = PHI <raw_553(80), raw_764(85)>
  # i_563 = PHI <i_758(80), i_762(85)>
  # cur_597 = PHI <cur_596(80), cur_765(85)>
  # prior_606 = PHI <prior_605(80), prior_766(85)>
  if (i_563 == 0)
    goto <bb 86>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  k_759 = 0;

  <bb 83> :
  # k_581 = PHI <k_759(82), k_761(84)>
  if (k_581 >= filter_bytes_592)
    goto <bb 85>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 84> :
  _186 = (sizetype) k_581;
  _187 = raw_554 + _186;
  _188 = (sizetype) k_581;
  _189 = cur_597 + _188;
  _190 = *_187;
  *_189 = _190;
  k_761 = k_581 + 1;
  goto <bb 83>; [INV]

  <bb 85> :
  i_762 = i_563 + 4294967295;
  _191 = (sizetype) filter_bytes_592;
  _192 = cur_597 + _191;
  *_192 = 255;
  _193 = (sizetype) filter_bytes_592;
  raw_764 = raw_554 + _193;
  _194 = (sizetype) output_bytes_699;
  cur_765 = cur_597 + _194;
  _195 = (sizetype) output_bytes_699;
  prior_766 = prior_606 + _195;
  goto <bb 81>; [INV]

  <bb 86> :
  goto <bb 129>; [INV]

  <bb 87> :
<L91>:
  i_767 = x_696(D) + 4294967295;

  <bb 88> :
  # raw_555 = PHI <raw_553(87), raw_773(92)>
  # i_564 = PHI <i_767(87), i_771(92)>
  # cur_598 = PHI <cur_596(87), cur_774(92)>
  # prior_607 = PHI <prior_605(87), prior_775(92)>
  if (i_564 == 0)
    goto <bb 93>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  k_768 = 0;

  <bb 90> :
  # k_582 = PHI <k_768(89), k_770(91)>
  if (k_582 >= filter_bytes_592)
    goto <bb 92>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 91> :
  _196 = (sizetype) k_582;
  _197 = raw_555 + _196;
  _198 = *_197;
  _199 = k_582 - output_bytes_699;
  _200 = (sizetype) _199;
  _201 = cur_598 + _200;
  _202 = *_201;
  _203 = (sizetype) k_582;
  _204 = cur_598 + _203;
  _205 = _198 + _202;
  *_204 = _205;
  k_770 = k_582 + 1;
  goto <bb 90>; [INV]

  <bb 92> :
  i_771 = i_564 + 4294967295;
  _206 = (sizetype) filter_bytes_592;
  _207 = cur_598 + _206;
  *_207 = 255;
  _208 = (sizetype) filter_bytes_592;
  raw_773 = raw_555 + _208;
  _209 = (sizetype) output_bytes_699;
  cur_774 = cur_598 + _209;
  _210 = (sizetype) output_bytes_699;
  prior_775 = prior_607 + _210;
  goto <bb 88>; [INV]

  <bb 93> :
  goto <bb 129>; [INV]

  <bb 94> :
<L98>:
  i_776 = x_696(D) + 4294967295;

  <bb 95> :
  # raw_556 = PHI <raw_553(94), raw_782(99)>
  # i_565 = PHI <i_776(94), i_780(99)>
  # cur_599 = PHI <cur_596(94), cur_783(99)>
  # prior_608 = PHI <prior_605(94), prior_784(99)>
  if (i_565 == 0)
    goto <bb 100>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  k_777 = 0;

  <bb 97> :
  # k_583 = PHI <k_777(96), k_779(98)>
  if (k_583 >= filter_bytes_592)
    goto <bb 99>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 98> :
  _211 = (sizetype) k_583;
  _212 = raw_556 + _211;
  _213 = *_212;
  _214 = (sizetype) k_583;
  _215 = prior_608 + _214;
  _216 = *_215;
  _217 = (sizetype) k_583;
  _218 = cur_599 + _217;
  _219 = _213 + _216;
  *_218 = _219;
  k_779 = k_583 + 1;
  goto <bb 97>; [INV]

  <bb 99> :
  i_780 = i_565 + 4294967295;
  _220 = (sizetype) filter_bytes_592;
  _221 = cur_599 + _220;
  *_221 = 255;
  _222 = (sizetype) filter_bytes_592;
  raw_782 = raw_556 + _222;
  _223 = (sizetype) output_bytes_699;
  cur_783 = cur_599 + _223;
  _224 = (sizetype) output_bytes_699;
  prior_784 = prior_608 + _224;
  goto <bb 95>; [INV]

  <bb 100> :
  goto <bb 129>; [INV]

  <bb 101> :
<L105>:
  i_785 = x_696(D) + 4294967295;

  <bb 102> :
  # raw_557 = PHI <raw_553(101), raw_791(106)>
  # i_566 = PHI <i_785(101), i_789(106)>
  # cur_600 = PHI <cur_596(101), cur_792(106)>
  # prior_609 = PHI <prior_605(101), prior_793(106)>
  if (i_566 == 0)
    goto <bb 107>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 103> :
  k_786 = 0;

  <bb 104> :
  # k_584 = PHI <k_786(103), k_788(105)>
  if (k_584 >= filter_bytes_592)
    goto <bb 106>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 105> :
  _225 = (sizetype) k_584;
  _226 = raw_557 + _225;
  _227 = *_226;
  _228 = (sizetype) k_584;
  _229 = prior_609 + _228;
  _230 = *_229;
  _231 = (int) _230;
  _232 = k_584 - output_bytes_699;
  _233 = (sizetype) _232;
  _234 = cur_600 + _233;
  _235 = *_234;
  _236 = (int) _235;
  _237 = _231 + _236;
  _238 = _237 >> 1;
  _239 = (unsigned char) _238;
  _240 = (sizetype) k_584;
  _241 = cur_600 + _240;
  _242 = _227 + _239;
  *_241 = _242;
  k_788 = k_584 + 1;
  goto <bb 104>; [INV]

  <bb 106> :
  i_789 = i_566 + 4294967295;
  _243 = (sizetype) filter_bytes_592;
  _244 = cur_600 + _243;
  *_244 = 255;
  _245 = (sizetype) filter_bytes_592;
  raw_791 = raw_557 + _245;
  _246 = (sizetype) output_bytes_699;
  cur_792 = cur_600 + _246;
  _247 = (sizetype) output_bytes_699;
  prior_793 = prior_609 + _247;
  goto <bb 102>; [INV]

  <bb 107> :
  goto <bb 129>; [INV]

  <bb 108> :
<L112>:
  i_794 = x_696(D) + 4294967295;

  <bb 109> :
  # raw_558 = PHI <raw_553(108), raw_801(113)>
  # i_567 = PHI <i_794(108), i_799(113)>
  # cur_601 = PHI <cur_596(108), cur_802(113)>
  # prior_610 = PHI <prior_605(108), prior_803(113)>
  if (i_567 == 0)
    goto <bb 114>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 110> :
  k_795 = 0;

  <bb 111> :
  # k_585 = PHI <k_795(110), k_798(112)>
  if (k_585 >= filter_bytes_592)
    goto <bb 113>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 112> :
  _248 = (sizetype) k_585;
  _249 = raw_558 + _248;
  _250 = *_249;
  _251 = k_585 - output_bytes_699;
  _252 = (sizetype) _251;
  _253 = prior_610 + _252;
  _254 = *_253;
  _255 = (int) _254;
  _256 = (sizetype) k_585;
  _257 = prior_610 + _256;
  _258 = *_257;
  _259 = (int) _258;
  _260 = k_585 - output_bytes_699;
  _261 = (sizetype) _260;
  _262 = cur_601 + _261;
  _263 = *_262;
  _264 = (int) _263;
  _265 = stbi__paeth (_264, _259, _255);
  _266 = (unsigned char) _265;
  _267 = (sizetype) k_585;
  _268 = cur_601 + _267;
  _269 = _250 + _266;
  *_268 = _269;
  k_798 = k_585 + 1;
  goto <bb 111>; [INV]

  <bb 113> :
  i_799 = i_567 + 4294967295;
  _270 = (sizetype) filter_bytes_592;
  _271 = cur_601 + _270;
  *_271 = 255;
  _272 = (sizetype) filter_bytes_592;
  raw_801 = raw_558 + _272;
  _273 = (sizetype) output_bytes_699;
  cur_802 = cur_601 + _273;
  _274 = (sizetype) output_bytes_699;
  prior_803 = prior_610 + _274;
  goto <bb 109>; [INV]

  <bb 114> :
  goto <bb 129>; [INV]

  <bb 115> :
<L119>:
  i_804 = x_696(D) + 4294967295;

  <bb 116> :
  # raw_559 = PHI <raw_553(115), raw_810(120)>
  # i_568 = PHI <i_804(115), i_808(120)>
  # cur_602 = PHI <cur_596(115), cur_811(120)>
  # prior_611 = PHI <prior_605(115), prior_812(120)>
  if (i_568 == 0)
    goto <bb 121>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 117> :
  k_805 = 0;

  <bb 118> :
  # k_586 = PHI <k_805(117), k_807(119)>
  if (k_586 >= filter_bytes_592)
    goto <bb 120>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 119> :
  _275 = (sizetype) k_586;
  _276 = raw_559 + _275;
  _277 = *_276;
  _278 = k_586 - output_bytes_699;
  _279 = (sizetype) _278;
  _280 = cur_602 + _279;
  _281 = *_280;
  _282 = (int) _281;
  _283 = _282 >> 1;
  _284 = (unsigned char) _283;
  _285 = (sizetype) k_586;
  _286 = cur_602 + _285;
  _287 = _277 + _284;
  *_286 = _287;
  k_807 = k_586 + 1;
  goto <bb 118>; [INV]

  <bb 120> :
  i_808 = i_568 + 4294967295;
  _288 = (sizetype) filter_bytes_592;
  _289 = cur_602 + _288;
  *_289 = 255;
  _290 = (sizetype) filter_bytes_592;
  raw_810 = raw_559 + _290;
  _291 = (sizetype) output_bytes_699;
  cur_811 = cur_602 + _291;
  _292 = (sizetype) output_bytes_699;
  prior_812 = prior_611 + _292;
  goto <bb 116>; [INV]

  <bb 121> :
  goto <bb 129>; [INV]

  <bb 122> :
<L126>:
  i_813 = x_696(D) + 4294967295;

  <bb 123> :
  # raw_560 = PHI <raw_553(122), raw_820(127)>
  # i_569 = PHI <i_813(122), i_818(127)>
  # cur_603 = PHI <cur_596(122), cur_821(127)>
  # prior_612 = PHI <prior_605(122), prior_822(127)>
  if (i_569 == 0)
    goto <bb 128>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  k_814 = 0;

  <bb 125> :
  # k_587 = PHI <k_814(124), k_817(126)>
  if (k_587 >= filter_bytes_592)
    goto <bb 127>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 126> :
  _293 = (sizetype) k_587;
  _294 = raw_560 + _293;
  _295 = *_294;
  _296 = k_587 - output_bytes_699;
  _297 = (sizetype) _296;
  _298 = cur_603 + _297;
  _299 = *_298;
  _300 = (int) _299;
  _301 = stbi__paeth (_300, 0, 0);
  _302 = (unsigned char) _301;
  _303 = (sizetype) k_587;
  _304 = cur_603 + _303;
  _305 = _295 + _302;
  *_304 = _305;
  k_817 = k_587 + 1;
  goto <bb 125>; [INV]

  <bb 127> :
  i_818 = i_569 + 4294967295;
  _306 = (sizetype) filter_bytes_592;
  _307 = cur_603 + _306;
  *_307 = 255;
  _308 = (sizetype) filter_bytes_592;
  raw_820 = raw_560 + _308;
  _309 = (sizetype) output_bytes_699;
  cur_821 = cur_603 + _309;
  _310 = (sizetype) output_bytes_699;
  prior_822 = prior_612 + _310;
  goto <bb 123>; [INV]

  <bb 128> :

  <bb 129> :
  # raw_561 = PHI <raw_553(79), raw_554(86), raw_555(93), raw_556(100), raw_557(107), raw_558(114), raw_559(121), raw_560(128)>
<L133>:
  if (depth_688(D) == 16)
    goto <bb 130>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 130> :
  _311 = a_693(D)->out;
  _312 = stride_697 * j_572;
  _313 = (sizetype) _312;
  cur_823 = _311 + _313;
  i_824 = 0;

  <bb 131> :
  # i_570 = PHI <i_824(130), i_826(132)>
  # cur_604 = PHI <cur_823(130), cur_827(132)>
  if (i_570 >= x_696(D))
    goto <bb 133>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 132> :
  _314 = (sizetype) filter_bytes_592;
  _315 = _314 + 1;
  _316 = cur_604 + _315;
  *_316 = 255;
  i_826 = i_570 + 1;
  _317 = (sizetype) output_bytes_699;
  cur_827 = cur_604 + _317;
  goto <bb 131>; [INV]

  <bb 133> :
  # raw_562 = PHI <raw_850(74), raw_561(129), raw_561(131)>
  j_851 = j_572 + 1;
  goto <bb 17>; [INV]

  <bb 134> :
  if (depth_688(D) <= 7)
    goto <bb 135>; [INV]
  else
    goto <bb 189>; [INV]

  <bb 135> :
  j_852 = 0;

  <bb 136> :
  # j_573 = PHI <j_852(135), j_932(187)>
  if (j_573 >= y_705(D))
    goto <bb 188>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  _318 = a_693(D)->out;
  _319 = stride_697 * j_573;
  _320 = (sizetype) _319;
  cur_853 = _318 + _320;
  _321 = a_693(D)->out;
  _322 = stride_697 * j_573;
  _323 = (sizetype) _322;
  out_n.361_324 = (unsigned int) out_n_695(D);
  _325 = x_696(D) * out_n.361_324;
  _326 = (sizetype) _325;
  _327 = _323 + _326;
  _328 = (sizetype) img_width_bytes_714;
  _329 = _327 - _328;
  in_854 = _321 + _329;
  if (color_855(D) == 0)
    goto <bb 138>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 138> :
  iftmp.362_856 = stbi__depth_scale_table[depth_688(D)];
  goto <bb 140>; [INV]

  <bb 139> :
  iftmp.362_857 = 1;

  <bb 140> :
  # iftmp.362_634 = PHI <iftmp.362_856(138), iftmp.362_857(139)>
  scale_858 = iftmp.362_634;
  if (depth_688(D) == 4)
    goto <bb 141>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 141> :
  img_n.363_330 = (unsigned int) img_n_698;
  _331 = x_696(D) * img_n.363_330;
  k_859 = (int) _331;

  <bb 142> :
  # k_588 = PHI <k_859(141), k_864(143)>
  # cur_614 = PHI <cur_853(141), cur_862(143)>
  # in_625 = PHI <in_854(141), in_865(143)>
  if (k_588 <= 1)
    goto <bb 144>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 143> :
  _332 = *in_625;
  _333 = (int) _332;
  _334 = _333 >> 4;
  _335 = (unsigned char) _334;
  cur.364_336 = cur_614;
  cur_860 = cur.364_336 + 1;
  _337 = scale_858 * _335;
  *cur.364_336 = _337;
  _338 = *in_625;
  _339 = _338 & 15;
  cur.365_340 = cur_860;
  cur_862 = cur.365_340 + 1;
  _341 = scale_858 * _339;
  *cur.365_340 = _341;
  k_864 = k_588 + -2;
  in_865 = in_625 + 1;
  goto <bb 142>; [INV]

  <bb 144> :
  if (k_588 > 0)
    goto <bb 145>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 145> :
  _342 = *in_625;
  _343 = (int) _342;
  _344 = _343 >> 4;
  _345 = (unsigned char) _344;
  cur.366_346 = cur_614;
  cur_866 = cur.366_346 + 1;
  _347 = scale_858 * _345;
  *cur.366_346 = _347;
  goto <bb 174>; [INV]

  <bb 146> :
  if (depth_688(D) == 2)
    goto <bb 147>; [INV]
  else
    goto <bb 156>; [INV]

  <bb 147> :
  img_n.367_348 = (unsigned int) img_n_698;
  _349 = x_696(D) * img_n.367_348;
  k_868 = (int) _349;

  <bb 148> :
  # k_589 = PHI <k_868(147), k_877(149)>
  # cur_615 = PHI <cur_853(147), cur_875(149)>
  # in_626 = PHI <in_854(147), in_878(149)>
  if (k_589 <= 3)
    goto <bb 150>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 149> :
  _350 = *in_626;
  _351 = (int) _350;
  _352 = _351 >> 6;
  _353 = (unsigned char) _352;
  cur.368_354 = cur_615;
  cur_869 = cur.368_354 + 1;
  _355 = scale_858 * _353;
  *cur.368_354 = _355;
  _356 = *in_626;
  _357 = (int) _356;
  _358 = _357 >> 4;
  _359 = (unsigned char) _358;
  _360 = _359 & 3;
  cur.369_361 = cur_869;
  cur_871 = cur.369_361 + 1;
  _362 = scale_858 * _360;
  *cur.369_361 = _362;
  _363 = *in_626;
  _364 = (int) _363;
  _365 = _364 >> 2;
  _366 = (unsigned char) _365;
  _367 = _366 & 3;
  cur.370_368 = cur_871;
  cur_873 = cur.370_368 + 1;
  _369 = scale_858 * _367;
  *cur.370_368 = _369;
  _370 = *in_626;
  _371 = _370 & 3;
  cur.371_372 = cur_873;
  cur_875 = cur.371_372 + 1;
  _373 = scale_858 * _371;
  *cur.371_372 = _373;
  k_877 = k_589 + -4;
  in_878 = in_626 + 1;
  goto <bb 148>; [INV]

  <bb 150> :
  if (k_589 > 0)
    goto <bb 151>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 151> :
  _374 = *in_626;
  _375 = (int) _374;
  _376 = _375 >> 6;
  _377 = (unsigned char) _376;
  cur.372_378 = cur_615;
  cur_879 = cur.372_378 + 1;
  _379 = scale_858 * _377;
  *cur.372_378 = _379;

  <bb 152> :
  # cur_616 = PHI <cur_615(150), cur_879(151)>
  if (k_589 > 1)
    goto <bb 153>; [INV]
  else
    goto <bb 154>; [INV]

  <bb 153> :
  _380 = *in_626;
  _381 = (int) _380;
  _382 = _381 >> 4;
  _383 = (unsigned char) _382;
  _384 = _383 & 3;
  cur.373_385 = cur_616;
  cur_881 = cur.373_385 + 1;
  _386 = scale_858 * _384;
  *cur.373_385 = _386;

  <bb 154> :
  # cur_617 = PHI <cur_616(152), cur_881(153)>
  if (k_589 > 2)
    goto <bb 155>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 155> :
  _387 = *in_626;
  _388 = (int) _387;
  _389 = _388 >> 2;
  _390 = (unsigned char) _389;
  _391 = _390 & 3;
  cur.374_392 = cur_617;
  cur_883 = cur.374_392 + 1;
  _393 = scale_858 * _391;
  *cur.374_392 = _393;
  goto <bb 174>; [INV]

  <bb 156> :
  if (depth_688(D) == 1)
    goto <bb 157>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 157> :
  img_n.375_394 = (unsigned int) img_n_698;
  _395 = x_696(D) * img_n.375_394;
  k_885 = (int) _395;

  <bb 158> :
  # k_590 = PHI <k_885(157), k_902(159)>
  # cur_618 = PHI <cur_853(157), cur_900(159)>
  # in_627 = PHI <in_854(157), in_903(159)>
  if (k_590 <= 7)
    goto <bb 160>; [INV]
  else
    goto <bb 159>; [INV]

  <bb 159> :
  _396 = *in_627;
  _397 = (int) _396;
  _398 = _397 >> 7;
  _399 = (unsigned char) _398;
  cur.376_400 = cur_618;
  cur_886 = cur.376_400 + 1;
  _401 = scale_858 * _399;
  *cur.376_400 = _401;
  _402 = *in_627;
  _403 = (int) _402;
  _404 = _403 >> 6;
  _405 = (unsigned char) _404;
  _406 = _405 & 1;
  cur.377_407 = cur_886;
  cur_888 = cur.377_407 + 1;
  _408 = scale_858 * _406;
  *cur.377_407 = _408;
  _409 = *in_627;
  _410 = (int) _409;
  _411 = _410 >> 5;
  _412 = (unsigned char) _411;
  _413 = _412 & 1;
  cur.378_414 = cur_888;
  cur_890 = cur.378_414 + 1;
  _415 = scale_858 * _413;
  *cur.378_414 = _415;
  _416 = *in_627;
  _417 = (int) _416;
  _418 = _417 >> 4;
  _419 = (unsigned char) _418;
  _420 = _419 & 1;
  cur.379_421 = cur_890;
  cur_892 = cur.379_421 + 1;
  _422 = scale_858 * _420;
  *cur.379_421 = _422;
  _423 = *in_627;
  _424 = (int) _423;
  _425 = _424 >> 3;
  _426 = (unsigned char) _425;
  _427 = _426 & 1;
  cur.380_428 = cur_892;
  cur_894 = cur.380_428 + 1;
  _429 = scale_858 * _427;
  *cur.380_428 = _429;
  _430 = *in_627;
  _431 = (int) _430;
  _432 = _431 >> 2;
  _433 = (unsigned char) _432;
  _434 = _433 & 1;
  cur.381_435 = cur_894;
  cur_896 = cur.381_435 + 1;
  _436 = scale_858 * _434;
  *cur.381_435 = _436;
  _437 = *in_627;
  _438 = (int) _437;
  _439 = _438 >> 1;
  _440 = (unsigned char) _439;
  _441 = _440 & 1;
  cur.382_442 = cur_896;
  cur_898 = cur.382_442 + 1;
  _443 = scale_858 * _441;
  *cur.382_442 = _443;
  _444 = *in_627;
  _445 = _444 & 1;
  cur.383_446 = cur_898;
  cur_900 = cur.383_446 + 1;
  _447 = scale_858 * _445;
  *cur.383_446 = _447;
  k_902 = k_590 + -8;
  in_903 = in_627 + 1;
  goto <bb 158>; [INV]

  <bb 160> :
  if (k_590 > 0)
    goto <bb 161>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 161> :
  _448 = *in_627;
  _449 = (int) _448;
  _450 = _449 >> 7;
  _451 = (unsigned char) _450;
  cur.384_452 = cur_618;
  cur_904 = cur.384_452 + 1;
  _453 = scale_858 * _451;
  *cur.384_452 = _453;

  <bb 162> :
  # cur_619 = PHI <cur_618(160), cur_904(161)>
  if (k_590 > 1)
    goto <bb 163>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 163> :
  _454 = *in_627;
  _455 = (int) _454;
  _456 = _455 >> 6;
  _457 = (unsigned char) _456;
  _458 = _457 & 1;
  cur.385_459 = cur_619;
  cur_906 = cur.385_459 + 1;
  _460 = scale_858 * _458;
  *cur.385_459 = _460;

  <bb 164> :
  # cur_620 = PHI <cur_619(162), cur_906(163)>
  if (k_590 > 2)
    goto <bb 165>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 165> :
  _461 = *in_627;
  _462 = (int) _461;
  _463 = _462 >> 5;
  _464 = (unsigned char) _463;
  _465 = _464 & 1;
  cur.386_466 = cur_620;
  cur_908 = cur.386_466 + 1;
  _467 = scale_858 * _465;
  *cur.386_466 = _467;

  <bb 166> :
  # cur_621 = PHI <cur_620(164), cur_908(165)>
  if (k_590 > 3)
    goto <bb 167>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 167> :
  _468 = *in_627;
  _469 = (int) _468;
  _470 = _469 >> 4;
  _471 = (unsigned char) _470;
  _472 = _471 & 1;
  cur.387_473 = cur_621;
  cur_910 = cur.387_473 + 1;
  _474 = scale_858 * _472;
  *cur.387_473 = _474;

  <bb 168> :
  # cur_622 = PHI <cur_621(166), cur_910(167)>
  if (k_590 > 4)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  _475 = *in_627;
  _476 = (int) _475;
  _477 = _476 >> 3;
  _478 = (unsigned char) _477;
  _479 = _478 & 1;
  cur.388_480 = cur_622;
  cur_912 = cur.388_480 + 1;
  _481 = scale_858 * _479;
  *cur.388_480 = _481;

  <bb 170> :
  # cur_623 = PHI <cur_622(168), cur_912(169)>
  if (k_590 > 5)
    goto <bb 171>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 171> :
  _482 = *in_627;
  _483 = (int) _482;
  _484 = _483 >> 2;
  _485 = (unsigned char) _484;
  _486 = _485 & 1;
  cur.389_487 = cur_623;
  cur_914 = cur.389_487 + 1;
  _488 = scale_858 * _486;
  *cur.389_487 = _488;

  <bb 172> :
  # cur_624 = PHI <cur_623(170), cur_914(171)>
  if (k_590 > 6)
    goto <bb 173>; [INV]
  else
    goto <bb 174>; [INV]

  <bb 173> :
  _489 = *in_627;
  _490 = (int) _489;
  _491 = _490 >> 1;
  _492 = (unsigned char) _491;
  _493 = _492 & 1;
  cur.390_494 = cur_624;
  cur_916 = cur.390_494 + 1;
  _495 = scale_858 * _493;
  *cur.390_494 = _495;

  <bb 174> :
  if (img_n_698 != out_n_695(D))
    goto <bb 175>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 175> :
  _496 = a_693(D)->out;
  _497 = stride_697 * j_573;
  _498 = (sizetype) _497;
  cur_918 = _496 + _498;
  if (img_n_698 == 1)
    goto <bb 176>; [INV]
  else
    goto <bb 179>; [INV]

  <bb 176> :
  _499 = x_696(D) + 4294967295;
  q_919 = (int) _499;

  <bb 177> :
  # q_628 = PHI <q_919(176), q_922(178)>
  if (q_628 < 0)
    goto <bb 186>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 178> :
  _500 = q_628 * 2;
  _501 = (sizetype) _500;
  _502 = _501 + 1;
  _503 = cur_918 + _502;
  *_503 = 255;
  _504 = (sizetype) q_628;
  _505 = cur_918 + _504;
  _506 = q_628 * 2;
  _507 = (sizetype) _506;
  _508 = cur_918 + _507;
  _509 = *_505;
  *_508 = _509;
  q_922 = q_628 + -1;
  goto <bb 177>; [INV]

  <bb 179> :
  if (img_n_698 == 3)
    goto <bb 181>; [INV]
  else
    goto <bb 180>; [INV]

  <bb 180> :
  _assert ("img_n == 3", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4726);
  goto <bb 182>; [INV]

  <bb 181> :
  iftmp.391_925 = 1;
  goto <bb 183>; [INV]

  <bb 182> :
  iftmp.391_924 = 0;

  <bb 183> :
  _510 = x_696(D) + 4294967295;
  q_926 = (int) _510;

  <bb 184> :
  # q_629 = PHI <q_926(183), q_931(185)>
  if (q_629 < 0)
    goto <bb 186>; [INV]
  else
    goto <bb 185>; [INV]

  <bb 185> :
  _511 = q_629 * 4;
  _512 = (sizetype) _511;
  _513 = _512 + 3;
  _514 = cur_918 + _513;
  *_514 = 255;
  _515 = q_629 * 3;
  _516 = (sizetype) _515;
  _517 = _516 + 2;
  _518 = cur_918 + _517;
  _519 = q_629 * 4;
  _520 = (sizetype) _519;
  _521 = _520 + 2;
  _522 = cur_918 + _521;
  _523 = *_518;
  *_522 = _523;
  _524 = q_629 * 3;
  _525 = (sizetype) _524;
  _526 = _525 + 1;
  _527 = cur_918 + _526;
  _528 = q_629 * 4;
  _529 = (sizetype) _528;
  _530 = _529 + 1;
  _531 = cur_918 + _530;
  _532 = *_527;
  *_531 = _532;
  _533 = q_629 * 3;
  _534 = (sizetype) _533;
  _535 = cur_918 + _534;
  _536 = q_629 * 4;
  _537 = (sizetype) _536;
  _538 = cur_918 + _537;
  _539 = *_535;
  *_538 = _539;
  q_931 = q_629 + -1;
  goto <bb 184>; [INV]

  <bb 186> :

  <bb 187> :
  j_932 = j_573 + 1;
  goto <bb 136>; [INV]

  <bb 188> :
  goto <bb 194>; [INV]

  <bb 189> :
  if (depth_688(D) == 16)
    goto <bb 190>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 190> :
  cur_933 = a_693(D)->out;
  cur16_934 = cur_933;
  i_935 = 0;

  <bb 191> :
  # i_571 = PHI <i_935(190), i_937(192)>
  # cur_630 = PHI <cur_933(190), cur_939(192)>
  # cur16_631 = PHI <cur16_934(190), cur16_938(192)>
  _540 = x_696(D) * y_705(D);
  out_n.392_541 = (unsigned int) out_n_695(D);
  _542 = _540 * out_n.392_541;
  if (i_571 >= _542)
    goto <bb 193>; [INV]
  else
    goto <bb 192>; [INV]

  <bb 192> :
  _543 = *cur_630;
  _544 = (int) _543;
  _545 = _544 << 8;
  _546 = (signed short) _545;
  _547 = cur_630 + 1;
  _548 = *_547;
  _549 = (signed short) _548;
  _550 = _546 | _549;
  _551 = (short unsigned int) _550;
  *cur16_631 = _551;
  i_937 = i_571 + 1;
  cur16_938 = cur16_631 + 2;
  cur_939 = cur_630 + 2;
  goto <bb 191>; [INV]

  <bb 193> :

  <bb 194> :
  _940 = 1;

  <bb 195> :
  # _633 = PHI <_709(11), _713(13), _718(15), _725(19), _727(22), _940(194)>
<L225>:
  return _633;

}



;; Function stbi__create_png_image (_ZL22stbi__create_png_imageP9stbi__pngPhjiiii, funcdef_no=904, decl_uid=12268, cgraph_uid=810, symbol_order=835)

stbi__create_png_image (struct stbi__png * a, stbi_uc * image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)
{
  int D.15692;
  int D.15691;
  int out_x;
  int out_y;
  stbi__uint32 img_len;
  int y;
  int x;
  int j;
  int i;
  int yspc[7];
  int xspc[7];
  int yorig[7];
  int xorig[7];
  int p;
  stbi_uc * final;
  int out_bytes;
  int bytes;
  bool retval.394;
  int D.15675;
  int iftmp.393;
  struct stbi__context * _1;
  unsigned int _2;
  struct stbi__context * _3;
  unsigned int _4;
  struct stbi__context * _5;
  unsigned int _6;
  int _7;
  struct stbi__context * _8;
  unsigned int _9;
  int _10;
  struct stbi__context * _11;
  unsigned int _12;
  int _13;
  unsigned int _14;
  unsigned int _15;
  int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  int _20;
  unsigned int _21;
  unsigned int _22;
  struct stbi__context * _23;
  unsigned int _24;
  int _25;
  unsigned int _26;
  unsigned int _27;
  int _28;
  unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  int _32;
  unsigned int _33;
  unsigned int _34;
  struct stbi__context * _35;
  int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  unsigned int y.395_43;
  unsigned int x.396_44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int _51;
  long long unsigned int _52;
  stbi_uc * _53;
  int _54;
  int _55;
  int _56;
  sizetype _57;
  stbi_uc * _58;
  struct stbi__context * _59;
  unsigned int _60;
  unsigned int out_y.397_61;
  unsigned int _62;
  unsigned int out_bytes.398_63;
  unsigned int _64;
  sizetype _65;
  int _66;
  sizetype _67;
  sizetype _68;
  stbi_uc * _69;
  stbi_uc * _70;
  sizetype _71;
  int iftmp.393_79;
  int _80;
  int iftmp.393_87;
  int iftmp.393_88;
  int _99;
  int _100;
  int _136;
  bool retval.394_137;
  int _139;
  int _164;

  <bb 2> :
  if (depth_86(D) == 16)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.393_87 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.393_88 = 1;

  <bb 5> :
  # iftmp.393_79 = PHI <iftmp.393_87(3), iftmp.393_88(4)>
  bytes_89 = iftmp.393_79;
  out_bytes_91 = out_n_90(D) * bytes_89;
  if (interlaced_92(D) == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _1 = a_94(D)->s;
  _2 = _1->img_y;
  _3 = a_94(D)->s;
  _4 = _3->img_x;
  _99 = stbi__create_png_image_raw (a_94(D), image_data_95(D), image_data_len_96(D), out_n_90(D), _4, _2, depth_86(D), color_97(D));
  _100 = _99;
  goto <bb 23>; [INV]

  <bb 7> :
  _5 = a_94(D)->s;
  _6 = _5->img_y;
  _7 = (int) _6;
  _8 = a_94(D)->s;
  _9 = _8->img_x;
  _10 = (int) _9;
  final_102 = stbi__malloc_mad3 (_10, _7, out_bytes_91, 0);
  p_103 = 0;

  <bb 8> :
  # image_data_72 = PHI <image_data_95(D)(7), image_data_73(21)>
  # image_data_len_74 = PHI <image_data_len_96(D)(7), image_data_len_75(21)>
  # p_76 = PHI <p_103(7), p_162(21)>
  if (p_76 > 6)
    goto <bb 22>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  xorig[0] = 0;
  xorig[1] = 4;
  xorig[2] = 0;
  xorig[3] = 2;
  xorig[4] = 0;
  xorig[5] = 1;
  xorig[6] = 0;
  yorig[0] = 0;
  yorig[1] = 0;
  yorig[2] = 4;
  yorig[3] = 0;
  yorig[4] = 2;
  yorig[5] = 0;
  yorig[6] = 1;
  xspc[0] = 8;
  xspc[1] = 8;
  xspc[2] = 4;
  xspc[3] = 4;
  xspc[4] = 2;
  xspc[5] = 2;
  xspc[6] = 1;
  yspc[0] = 8;
  yspc[1] = 8;
  yspc[2] = 8;
  yspc[3] = 4;
  yspc[4] = 4;
  yspc[5] = 2;
  yspc[6] = 2;
  _11 = a_94(D)->s;
  _12 = _11->img_x;
  _13 = xorig[p_76];
  _14 = (unsigned int) _13;
  _15 = _12 - _14;
  _16 = xspc[p_76];
  _17 = (unsigned int) _16;
  _18 = _15 + _17;
  _19 = _18 + 4294967295;
  _20 = xspc[p_76];
  _21 = (unsigned int) _20;
  _22 = _19 / _21;
  x_132 = (int) _22;
  _23 = a_94(D)->s;
  _24 = _23->img_y;
  _25 = yorig[p_76];
  _26 = (unsigned int) _25;
  _27 = _24 - _26;
  _28 = yspc[p_76];
  _29 = (unsigned int) _28;
  _30 = _27 + _29;
  _31 = _30 + 4294967295;
  _32 = yspc[p_76];
  _33 = (unsigned int) _32;
  _34 = _31 / _33;
  y_133 = (int) _34;
  if (x_132 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 10> :
  if (y_133 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 11> :
  _35 = a_94(D)->s;
  _36 = _35->img_n;
  _37 = x_132 * _36;
  _38 = depth_86(D) * _37;
  _39 = _38 + 7;
  _40 = _39 >> 3;
  _41 = _40 + 1;
  _42 = y_133 * _41;
  img_len_134 = (stbi__uint32) _42;
  y.395_43 = (unsigned int) y_133;
  x.396_44 = (unsigned int) x_132;
  _136 = stbi__create_png_image_raw (a_94(D), image_data_72, image_data_len_74, out_n_90(D), x.396_44, y.395_43, depth_86(D), color_97(D));

  <bb 12> :
  _45 = _136;
  retval.394_137 = _45 == 0;
  if (retval.394_137 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  free (final_102);
  _139 = 0;
  // predicted unlikely by early return (on trees) predictor.
  xorig ={v} {CLOBBER};
  yorig ={v} {CLOBBER};
  xspc ={v} {CLOBBER};
  yspc ={v} {CLOBBER};
  goto <bb 23>; [INV]

  <bb 14> :
  j_144 = 0;

  <bb 15> :
  # j_78 = PHI <j_144(14), j_150(19)>
  if (j_78 >= y_133)
    goto <bb 20>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  i_145 = 0;

  <bb 17> :
  # i_77 = PHI <i_145(16), i_149(18)>
  if (i_77 >= x_132)
    goto <bb 19>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _46 = yspc[p_76];
  _47 = j_78 * _46;
  _48 = yorig[p_76];
  out_y_146 = _47 + _48;
  _49 = xspc[p_76];
  _50 = i_77 * _49;
  _51 = xorig[p_76];
  out_x_147 = _50 + _51;
  _52 = (long long unsigned int) out_bytes_91;
  _53 = a_94(D)->out;
  _54 = j_78 * x_132;
  _55 = i_77 + _54;
  _56 = out_bytes_91 * _55;
  _57 = (sizetype) _56;
  _58 = _53 + _57;
  _59 = a_94(D)->s;
  _60 = _59->img_x;
  out_y.397_61 = (unsigned int) out_y_146;
  _62 = _60 * out_y.397_61;
  out_bytes.398_63 = (unsigned int) out_bytes_91;
  _64 = _62 * out_bytes.398_63;
  _65 = (sizetype) _64;
  _66 = out_x_147 * out_bytes_91;
  _67 = (sizetype) _66;
  _68 = _65 + _67;
  _69 = final_102 + _68;
  memcpy (_69, _58, _52);
  i_149 = i_77 + 1;
  goto <bb 17>; [INV]

  <bb 19> :
  j_150 = j_78 + 1;
  goto <bb 15>; [INV]

  <bb 20> :
  _70 = a_94(D)->out;
  free (_70);
  _71 = (sizetype) img_len_134;
  image_data_152 = image_data_72 + _71;
  image_data_len_153 = image_data_len_74 - img_len_134;

  <bb 21> :
  # image_data_73 = PHI <image_data_72(9), image_data_72(10), image_data_152(20)>
  # image_data_len_75 = PHI <image_data_len_74(9), image_data_len_74(10), image_data_len_153(20)>
  xorig ={v} {CLOBBER};
  yorig ={v} {CLOBBER};
  xspc ={v} {CLOBBER};
  yspc ={v} {CLOBBER};
  p_162 = p_76 + 1;
  goto <bb 8>; [INV]

  <bb 22> :
  a_94(D)->out = final_102;
  _164 = 1;

  <bb 23> :
  # _80 = PHI <_100(6), _139(13), _164(22)>
<L23>:
  return _80;

  <bb 24> :
<L24>:
  resx 1

}



;; Function stbi__compute_transparency (_ZL26stbi__compute_transparencyP9stbi__pngPhi, funcdef_no=905, decl_uid=12294, cgraph_uid=811, symbol_order=836)

stbi__compute_transparency (struct stbi__png * z, stbi_uc * tc, int out_n)
{
  stbi_uc * p;
  stbi__uint32 pixel_count;
  stbi__uint32 i;
  struct stbi__context * s;
  int D.15720;
  stbi_uc iftmp.400;
  bool iftmp.399;
  unsigned int _1;
  unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  stbi_uc * _5;
  unsigned char _6;
  unsigned char _7;
  stbi_uc * _8;
  unsigned char _9;
  stbi_uc * _10;
  unsigned char _11;
  stbi_uc * _12;
  unsigned char _13;
  stbi_uc * _14;
  unsigned char _15;
  stbi_uc * _16;
  stbi_uc iftmp.400_21;
  bool iftmp.399_34;
  bool iftmp.399_35;
  stbi_uc iftmp.400_38;
  stbi_uc iftmp.400_39;
  int _47;

  <bb 2> :
  s_29 = z_28(D)->s;
  _1 = s_29->img_x;
  _2 = s_29->img_y;
  pixel_count_30 = _1 * _2;
  p_31 = z_28(D)->out;
  if (out_n_32(D) == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (out_n_32(D) == 4)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _assert ("out_n == 2 || out_n == 4", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4804);
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.399_35 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.399_34 = 0;

  <bb 7> :
  if (out_n_32(D) == 2)
    goto <bb 8>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 8> :
  i_36 = 0;

  <bb 9> :
  # i_17 = PHI <i_36(8), i_42(13)>
  # p_19 = PHI <p_31(8), p_41(13)>
  if (i_17 >= pixel_count_30)
    goto <bb 21>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _3 = *p_19;
  _4 = *tc_37(D);
  if (_3 == _4)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.400_38 = 0;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.400_39 = 255;

  <bb 13> :
  # iftmp.400_21 = PHI <iftmp.400_38(11), iftmp.400_39(12)>
  _5 = p_19 + 1;
  *_5 = iftmp.400_21;
  p_41 = p_19 + 2;
  i_42 = i_17 + 1;
  goto <bb 9>; [INV]

  <bb 14> :
  i_43 = 0;

  <bb 15> :
  # i_18 = PHI <i_43(14), i_46(20)>
  # p_20 = PHI <p_31(14), p_45(20)>
  if (i_18 >= pixel_count_30)
    goto <bb 21>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _6 = *p_20;
  _7 = *tc_37(D);
  if (_6 == _7)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  _8 = p_20 + 1;
  _9 = *_8;
  _10 = tc_37(D) + 1;
  _11 = *_10;
  if (_9 == _11)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  _12 = p_20 + 2;
  _13 = *_12;
  _14 = tc_37(D) + 2;
  _15 = *_14;
  if (_13 == _15)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _16 = p_20 + 3;
  *_16 = 0;

  <bb 20> :
  p_45 = p_20 + 4;
  i_46 = i_18 + 1;
  goto <bb 15>; [INV]

  <bb 21> :
  _47 = 1;

  <bb 22> :
<L24>:
  return _47;

}



;; Function stbi__compute_transparency16 (_ZL28stbi__compute_transparency16P9stbi__pngPti, funcdef_no=906, decl_uid=12307, cgraph_uid=812, symbol_order=837)

stbi__compute_transparency16 (struct stbi__png * z, stbi__uint16 * tc, int out_n)
{
  stbi__uint16 * p;
  stbi__uint32 pixel_count;
  stbi__uint32 i;
  struct stbi__context * s;
  int D.15746;
  stbi__uint16 iftmp.402;
  bool iftmp.401;
  unsigned int _1;
  unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  stbi__uint16 * _5;
  short unsigned int _6;
  short unsigned int _7;
  stbi__uint16 * _8;
  short unsigned int _9;
  stbi__uint16 * _10;
  short unsigned int _11;
  stbi__uint16 * _12;
  short unsigned int _13;
  stbi__uint16 * _14;
  short unsigned int _15;
  stbi__uint16 * _16;
  stbi__uint16 iftmp.402_21;
  bool iftmp.401_34;
  bool iftmp.401_35;
  stbi__uint16 iftmp.402_38;
  stbi__uint16 iftmp.402_39;
  int _47;

  <bb 2> :
  s_29 = z_28(D)->s;
  _1 = s_29->img_x;
  _2 = s_29->img_y;
  pixel_count_30 = _1 * _2;
  p_31 = z_28(D)->out;
  if (out_n_32(D) == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (out_n_32(D) == 4)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _assert ("out_n == 2 || out_n == 4", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4829);
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.401_35 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.401_34 = 0;

  <bb 7> :
  if (out_n_32(D) == 2)
    goto <bb 8>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 8> :
  i_36 = 0;

  <bb 9> :
  # i_17 = PHI <i_36(8), i_42(13)>
  # p_19 = PHI <p_31(8), p_41(13)>
  if (i_17 >= pixel_count_30)
    goto <bb 21>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _3 = *p_19;
  _4 = *tc_37(D);
  if (_3 == _4)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.402_38 = 0;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.402_39 = 65535;

  <bb 13> :
  # iftmp.402_21 = PHI <iftmp.402_38(11), iftmp.402_39(12)>
  _5 = p_19 + 2;
  *_5 = iftmp.402_21;
  p_41 = p_19 + 4;
  i_42 = i_17 + 1;
  goto <bb 9>; [INV]

  <bb 14> :
  i_43 = 0;

  <bb 15> :
  # i_18 = PHI <i_43(14), i_46(20)>
  # p_20 = PHI <p_31(14), p_45(20)>
  if (i_18 >= pixel_count_30)
    goto <bb 21>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _6 = *p_20;
  _7 = *tc_37(D);
  if (_6 == _7)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  _8 = p_20 + 2;
  _9 = *_8;
  _10 = tc_37(D) + 2;
  _11 = *_10;
  if (_9 == _11)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  _12 = p_20 + 4;
  _13 = *_12;
  _14 = tc_37(D) + 4;
  _15 = *_14;
  if (_13 == _15)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _16 = p_20 + 6;
  *_16 = 0;

  <bb 20> :
  p_45 = p_20 + 8;
  i_46 = i_18 + 1;
  goto <bb 15>; [INV]

  <bb 21> :
  _47 = 1;

  <bb 22> :
<L24>:
  return _47;

}



;; Function stbi__expand_png_palette (_ZL24stbi__expand_png_paletteP9stbi__pngPhii, funcdef_no=907, decl_uid=12321, cgraph_uid=813, symbol_order=838)

stbi__expand_png_palette (struct stbi__png * a, stbi_uc * palette, int len, int pal_img_n)
{
  int n;
  int n;
  stbi_uc * orig;
  stbi_uc * temp_out;
  stbi_uc * p;
  stbi__uint32 pixel_count;
  stbi__uint32 i;
  int D.15750;
  struct stbi__context * _1;
  unsigned int _2;
  struct stbi__context * _3;
  unsigned int _4;
  int pixel_count.403_5;
  sizetype _6;
  stbi_uc * _7;
  unsigned char _8;
  int _9;
  sizetype _10;
  stbi_uc * _11;
  unsigned char _12;
  sizetype _13;
  sizetype _14;
  stbi_uc * _15;
  stbi_uc * _16;
  unsigned char _17;
  sizetype _18;
  sizetype _19;
  stbi_uc * _20;
  stbi_uc * _21;
  unsigned char _22;
  sizetype _23;
  stbi_uc * _24;
  unsigned char _25;
  int _26;
  sizetype _27;
  stbi_uc * _28;
  unsigned char _29;
  sizetype _30;
  sizetype _31;
  stbi_uc * _32;
  stbi_uc * _33;
  unsigned char _34;
  sizetype _35;
  sizetype _36;
  stbi_uc * _37;
  stbi_uc * _38;
  unsigned char _39;
  sizetype _40;
  sizetype _41;
  stbi_uc * _42;
  stbi_uc * _43;
  unsigned char _44;
  stbi_uc * _45;
  int _50;
  int _63;
  int _83;

  <bb 2> :
  _1 = a_56(D)->s;
  _2 = _1->img_x;
  _3 = a_56(D)->s;
  _4 = _3->img_y;
  pixel_count_57 = _2 * _4;
  orig_58 = a_56(D)->out;
  pixel_count.403_5 = (int) pixel_count_57;
  p_61 = stbi__malloc_mad2 (pixel_count.403_5, pal_img_n_59(D), 0);
  if (p_61 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _63 = stbi__err ("outofmem");
  goto <bb 13>; [INV]

  <bb 4> :
  temp_out_64 = p_61;
  if (pal_img_n_59(D) == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 5> :
  i_65 = 0;

  <bb 6> :
  # i_46 = PHI <i_65(5), i_72(7)>
  # p_48 = PHI <p_61(5), p_71(7)>
  if (i_46 >= pixel_count_57)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _6 = (sizetype) i_46;
  _7 = orig_58 + _6;
  _8 = *_7;
  _9 = (int) _8;
  n_66 = _9 * 4;
  _10 = (sizetype) n_66;
  _11 = palette_67(D) + _10;
  _12 = *_11;
  *p_48 = _12;
  _13 = (sizetype) n_66;
  _14 = _13 + 1;
  _15 = palette_67(D) + _14;
  _16 = p_48 + 1;
  _17 = *_15;
  *_16 = _17;
  _18 = (sizetype) n_66;
  _19 = _18 + 2;
  _20 = palette_67(D) + _19;
  _21 = p_48 + 2;
  _22 = *_20;
  *_21 = _22;
  p_71 = p_48 + 3;
  i_72 = i_46 + 1;
  goto <bb 6>; [INV]

  <bb 8> :
  goto <bb 12>; [INV]

  <bb 9> :
  i_73 = 0;

  <bb 10> :
  # i_47 = PHI <i_73(9), i_80(11)>
  # p_49 = PHI <p_61(9), p_79(11)>
  if (i_47 >= pixel_count_57)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _23 = (sizetype) i_47;
  _24 = orig_58 + _23;
  _25 = *_24;
  _26 = (int) _25;
  n_74 = _26 * 4;
  _27 = (sizetype) n_74;
  _28 = palette_67(D) + _27;
  _29 = *_28;
  *p_49 = _29;
  _30 = (sizetype) n_74;
  _31 = _30 + 1;
  _32 = palette_67(D) + _31;
  _33 = p_49 + 1;
  _34 = *_32;
  *_33 = _34;
  _35 = (sizetype) n_74;
  _36 = _35 + 2;
  _37 = palette_67(D) + _36;
  _38 = p_49 + 2;
  _39 = *_37;
  *_38 = _39;
  _40 = (sizetype) n_74;
  _41 = _40 + 3;
  _42 = palette_67(D) + _41;
  _43 = p_49 + 3;
  _44 = *_42;
  *_43 = _44;
  p_79 = p_49 + 4;
  i_80 = i_47 + 1;
  goto <bb 10>; [INV]

  <bb 12> :
  _45 = a_56(D)->out;
  free (_45);
  a_56(D)->out = temp_out_64;
  _83 = 1;

  <bb 13> :
  # _50 = PHI <_63(3), _83(12)>
<L11>:
  return _50;

}



;; Function stbi_set_unpremultiply_on_load (stbi_set_unpremultiply_on_load, funcdef_no=908, decl_uid=5108, cgraph_uid=814, symbol_order=841)

stbi_set_unpremultiply_on_load (int flag_true_if_should_unpremultiply)
{
  <bb 2> :
  stbi__unpremultiply_on_load = flag_true_if_should_unpremultiply_2(D);
  return;

}



;; Function stbi_convert_iphone_png_to_rgb (stbi_convert_iphone_png_to_rgb, funcdef_no=909, decl_uid=5110, cgraph_uid=815, symbol_order=842)

stbi_convert_iphone_png_to_rgb (int flag_true_if_should_convert)
{
  <bb 2> :
  stbi__de_iphone_flag = flag_true_if_should_convert_2(D);
  return;

}



;; Function stbi__de_iphone (_ZL15stbi__de_iphoneP9stbi__png, funcdef_no=910, decl_uid=12343, cgraph_uid=816, symbol_order=843)

stbi__de_iphone (struct stbi__png * z)
{
  stbi_uc t;
  stbi_uc half;
  stbi_uc t;
  stbi_uc a;
  stbi_uc t;
  stbi_uc * p;
  stbi__uint32 pixel_count;
  stbi__uint32 i;
  struct stbi__context * s;
  bool iftmp.404;
  unsigned int _1;
  unsigned int _2;
  int _3;
  unsigned char _4;
  stbi_uc * _5;
  int _6;
  int stbi__unpremultiply_on_load.405_7;
  stbi_uc * _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  unsigned char _16;
  stbi_uc * _17;
  unsigned char _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  int _24;
  stbi_uc * _25;
  unsigned char _26;
  int _27;
  int _28;
  int _29;
  int _30;
  int _31;
  int _32;
  stbi_uc * _33;
  unsigned char _34;
  unsigned char _35;
  stbi_uc * _36;
  unsigned char _37;
  stbi_uc * _38;
  bool iftmp.404_63;
  bool iftmp.404_64;

  <bb 2> :
  s_53 = z_52(D)->s;
  _1 = s_53->img_x;
  _2 = s_53->img_y;
  pixel_count_54 = _1 * _2;
  p_55 = z_52(D)->out;
  _3 = s_53->img_out_n;
  if (_3 == 3)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  i_56 = 0;

  <bb 4> :
  # i_39 = PHI <i_56(3), i_61(5)>
  # p_42 = PHI <p_55(3), p_60(5)>
  if (i_39 >= pixel_count_54)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  t_57 = *p_42;
  _4 = MEM[(stbi_uc *)p_42 + 2B];
  *p_42 = _4;
  _5 = p_42 + 2;
  *_5 = t_57;
  p_60 = p_42 + 3;
  i_61 = i_39 + 1;
  goto <bb 4>; [INV]

  <bb 6> :
  goto <bb 22>; [INV]

  <bb 7> :
  _6 = s_53->img_out_n;
  if (_6 == 4)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _assert ("s->img_out_n == 4", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 4910);
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.404_64 = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.404_63 = 0;

  <bb 11> :
  stbi__unpremultiply_on_load.405_7 = stbi__unpremultiply_on_load;
  if (stbi__unpremultiply_on_load.405_7 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 12> :
  i_65 = 0;

  <bb 13> :
  # i_40 = PHI <i_65(12), i_75(17)>
  # p_43 = PHI <p_55(12), p_74(17)>
  if (i_40 >= pixel_count_54)
    goto <bb 18>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  a_66 = MEM[(stbi_uc *)p_43 + 3B];
  t_67 = *p_43;
  if (a_66 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  half_68 = a_66 / 2;
  _8 = p_43 + 2;
  _9 = *_8;
  _10 = (int) _9;
  _11 = _10 * 255;
  _12 = (int) half_68;
  _13 = _11 + _12;
  _14 = (int) a_66;
  _15 = _13 / _14;
  _16 = (unsigned char) _15;
  *p_43 = _16;
  _17 = p_43 + 1;
  _18 = *_17;
  _19 = (int) _18;
  _20 = _19 * 255;
  _21 = (int) half_68;
  _22 = _20 + _21;
  _23 = (int) a_66;
  _24 = _22 / _23;
  _25 = p_43 + 1;
  _26 = (unsigned char) _24;
  *_25 = _26;
  _27 = (int) t_67;
  _28 = _27 * 255;
  _29 = (int) half_68;
  _30 = _28 + _29;
  _31 = (int) a_66;
  _32 = _30 / _31;
  _33 = p_43 + 2;
  _34 = (unsigned char) _32;
  *_33 = _34;
  goto <bb 17>; [INV]

  <bb 16> :
  _35 = MEM[(stbi_uc *)p_43 + 2B];
  *p_43 = _35;
  _36 = p_43 + 2;
  *_36 = t_67;

  <bb 17> :
  p_74 = p_43 + 4;
  i_75 = i_40 + 1;
  goto <bb 13>; [INV]

  <bb 18> :
  goto <bb 22>; [INV]

  <bb 19> :
  i_76 = 0;

  <bb 20> :
  # i_41 = PHI <i_76(19), i_81(21)>
  # p_44 = PHI <p_55(19), p_80(21)>
  if (i_41 >= pixel_count_54)
    goto <bb 22>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  t_77 = *p_44;
  _37 = MEM[(stbi_uc *)p_44 + 2B];
  *p_44 = _37;
  _38 = p_44 + 2;
  *_38 = t_77;
  p_80 = p_44 + 4;
  i_81 = i_41 + 1;
  goto <bb 20>; [INV]

  <bb 22> :
  return;

}



;; Function stbi__parse_png_file (_ZL20stbi__parse_png_fileP9stbi__pngii, funcdef_no=911, decl_uid=12363, cgraph_uid=817, symbol_order=845)

stbi__parse_png_file (struct stbi__png * z, int scan, int req_comp)
{
  int D.15965;
  int D.15964;
  int D.15963;
  char * D.15962;
  int D.15961;
  int D.15960;
  int D.15959;
  unsigned char D.15958;
  unsigned char D.15957;
  unsigned char D.15956;
  unsigned char D.15955;
  unsigned char D.15954;
  unsigned char D.15953;
  unsigned char D.15952;
  unsigned char D.15951;
  unsigned char D.15950;
  unsigned int D.15949;
  unsigned int D.15948;
  int D.15947;
  static char invalid_chunk[25] = "XXXX PNG chunk not known";
  stbi__uint32 bpl;
  stbi__uint32 raw_len;
  stbi_uc * p;
  stbi__uint32 idata_limit_old;
  int filter;
  int comp;
  struct stbi__pngchunk c;
  struct stbi__context * s;
  int is_iphone;
  int color;
  int interlace;
  int k;
  int first;
  stbi__uint32 pal_len;
  stbi__uint32 i;
  stbi__uint32 idata_limit;
  stbi__uint32 ioff;
  stbi__uint16 tc16[3];
  stbi_uc tc[3];
  stbi_uc has_trans;
  stbi_uc pal_img_n;
  stbi_uc palette[1024];
  bool retval.418;
  bool retval.416;
  bool retval.415;
  bool retval.413;
  bool retval.409;
  int iftmp.407;
  int D.15782;
  bool retval.406;
  int _1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  unsigned char _17;
  int _18;
  int _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int _23;
  unsigned int _24;
  int _25;
  int _26;
  int _27;
  int _28;
  unsigned int _29;
  unsigned int _30;
  int _31;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  unsigned char _43;
  unsigned int _44;
  unsigned int _45;
  unsigned char _46;
  unsigned int _47;
  unsigned int _48;
  unsigned char _49;
  unsigned int _50;
  unsigned int _51;
  stbi_uc * _52;
  unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  unsigned char _57;
  int _58;
  int _59;
  unsigned int _60;
  int _61;
  unsigned int _62;
  unsigned int _63;
  int _64;
  int _65;
  int _66;
  short unsigned int _67;
  int _68;
  int _69;
  unsigned char _70;
  int _71;
  unsigned char _72;
  unsigned char _73;
  int _74;
  unsigned int _75;
  unsigned int _76;
  int _77;
  int ioff.408_78;
  unsigned int _79;
  unsigned int _80;
  unsigned int _81;
  unsigned int _82;
  unsigned int _83;
  long long unsigned int _84;
  stbi_uc * _85;
  unsigned int _86;
  int _87;
  stbi_uc * _88;
  sizetype _89;
  stbi_uc * _90;
  int _91;
  unsigned int _92;
  stbi_uc * _93;
  unsigned int _94;
  int _95;
  unsigned int _96;
  unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  unsigned int _100;
  int _101;
  unsigned int _102;
  unsigned int _103;
  unsigned int _104;
  unsigned int _105;
  bool _106;
  int _107;
  unsigned int raw_len.410_108;
  int raw_len.411_109;
  int ioff.412_110;
  stbi_uc * _111;
  char * _112;
  stbi_uc * _113;
  stbi_uc * _114;
  int _115;
  int _116;
  int _117;
  int _118;
  int _119;
  int _120;
  int _121;
  unsigned int raw_len.414_122;
  stbi_uc * _123;
  int _124;
  int _125;
  int _126;
  int _127;
  int _128;
  int _129;
  int stbi__de_iphone_flag.417_130;
  int _131;
  int _132;
  int _133;
  int _134;
  int pal_len.419_135;
  int _136;
  int _137;
  int _138;
  stbi_uc * _139;
  unsigned int _140;
  unsigned int _141;
  unsigned int _142;
  unsigned int _143;
  char _144;
  unsigned int _145;
  unsigned int _146;
  char _147;
  unsigned int _148;
  unsigned int _149;
  char _150;
  unsigned int _151;
  char _152;
  unsigned int _153;
  int _154;
  int _182;
  int _183;
  int _184;
  int iftmp.407_185;
  int _223;
  bool retval.406_224;
  int _225;
  int _227;
  int _232;
  int _235;
  unsigned int _237;
  unsigned int _240;
  int _243;
  int _245;
  unsigned char _247;
  int _250;
  unsigned char _252;
  int _255;
  int _257;
  int _260;
  unsigned char _262;
  int _265;
  unsigned char _267;
  int _270;
  unsigned char _272;
  int _275;
  int iftmp.407_276;
  int iftmp.407_277;
  int _280;
  int _281;
  int _284;
  int _286;
  int _288;
  int _290;
  int _293;
  unsigned char _296;
  unsigned char _299;
  unsigned char _302;
  int _307;
  int _309;
  int _311;
  int _313;
  int _315;
  unsigned char _319;
  int _323;
  int _325;
  int _329;
  int _334;
  int _338;
  int _340;
  int _342;
  int _343;
  int _350;
  int _353;
  bool retval.409_354;
  int _356;
  int _359;
  int _360;
  int _362;
  char * _366;
  int _368;
  int _375;
  bool retval.413_376;
  int _377;
  int _379;
  bool retval.415_380;
  int _381;
  int _383;
  bool retval.416_384;
  int _385;
  bool retval.418_391;
  int _392;
  int _397;
  int _401;
  int _407;

  <bb 2> :
  pal_img_n_206 = 0;
  has_trans_207 = 0;
  tc = {};
  ioff_210 = 0;
  idata_limit_211 = 0;
  pal_len_212 = 0;
  first_213 = 1;
  interlace_214 = 0;
  color_215 = 0;
  is_iphone_216 = 0;
  s_218 = z_217(D)->s;
  z_217(D)->expanded = 0B;
  z_217(D)->idata = 0B;
  z_217(D)->out = 0B;
  _223 = stbi__check_png_header (s_218);

  <bb 3> :
  _1 = _223;
  retval.406_224 = _1 == 0;
  if (retval.406_224 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _225 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 174>; [INV]

  <bb 5> :
  if (scan_226(D) == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _227 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 174>; [INV]

  <bb 7> :
  # pal_img_n_155 = PHI <pal_img_n_206(5), pal_img_n_158(172)>
  # has_trans_159 = PHI <has_trans_207(5), has_trans_161(172)>
  # ioff_162 = PHI <ioff_210(5), ioff_163(172)>
  # idata_limit_164 = PHI <idata_limit_211(5), idata_limit_167(172)>
  # pal_len_170 = PHI <pal_len_212(5), pal_len_171(172)>
  # first_172 = PHI <first_213(5), first_173(172)>
  # interlace_176 = PHI <interlace_214(5), interlace_177(172)>
  # color_178 = PHI <color_215(5), color_179(172)>
  # is_iphone_180 = PHI <is_iphone_216(5), is_iphone_181(172)>
  c = stbi__get_chunk_header (s_218);

  <bb 8> :
  _2 = c.type;
  switch (_2) <default: <L167> [INV], case 1130840649: <L5> [INV], case 1229209940: <L97> [INV], case 1229278788: <L121> [INV], case 1229472850: <L6> [INV], case 1347179589: <L57> [INV], case 1951551059: <L67> [INV]>

  <bb 9> :
<L5>:
  is_iphone_229 = 1;
  _3 = c.length;
  _4 = (int) _3;
  stbi__skip (s_218, _4);

  <bb 10> :
  goto <bb 171>; [INV]

  <bb 11> :
<L6>:
  if (first_172 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _232 = stbi__err ("multiple IHDR");
  goto <bb 173>; [INV]

  <bb 13> :
  first_233 = 0;
  _5 = c.length;
  if (_5 != 13)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _235 = stbi__err ("bad IHDR len");
  goto <bb 173>; [INV]

  <bb 15> :
  _237 = stbi__get32be (s_218);

  <bb 16> :
  _6 = _237;
  s_218->img_x = _6;
  _240 = stbi__get32be (s_218);

  <bb 17> :
  _7 = _240;
  s_218->img_y = _7;
  _8 = s_218->img_y;
  if (_8 > 16777216)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _243 = stbi__err ("too large");
  goto <bb 173>; [INV]

  <bb 19> :
  _9 = s_218->img_x;
  if (_9 > 16777216)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _245 = stbi__err ("too large");
  goto <bb 173>; [INV]

  <bb 21> :
  _247 = stbi__get8 (s_218);

  <bb 22> :
  _10 = _247;
  _11 = (int) _10;
  z_217(D)->depth = _11;
  _12 = z_217(D)->depth;
  if (_12 != 1)
    goto <bb 23>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 23> :
  _13 = z_217(D)->depth;
  if (_13 != 2)
    goto <bb 24>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 24> :
  _14 = z_217(D)->depth;
  if (_14 != 4)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  _15 = z_217(D)->depth;
  if (_15 != 8)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _16 = z_217(D)->depth;
  if (_16 != 16)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  _250 = stbi__err ("1/2/4/8/16-bit only");
  goto <bb 173>; [INV]

  <bb 28> :
  _252 = stbi__get8 (s_218);

  <bb 29> :
  _17 = _252;
  color_253 = (int) _17;
  if (color_253 > 6)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _255 = stbi__err ("bad ctype");
  goto <bb 173>; [INV]

  <bb 31> :
  if (color_253 == 3)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _18 = z_217(D)->depth;
  if (_18 == 16)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _257 = stbi__err ("bad ctype");
  goto <bb 173>; [INV]

  <bb 34> :
  if (color_253 == 3)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  pal_img_n_258 = 3;
  goto <bb 38>; [INV]

  <bb 36> :
  _19 = color_253 & 1;
  if (_19 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  _260 = stbi__err ("bad ctype");
  goto <bb 173>; [INV]

  <bb 38> :
  # pal_img_n_156 = PHI <pal_img_n_258(35), pal_img_n_155(36)>
  _262 = stbi__get8 (s_218);

  <bb 39> :
  _20 = _262;
  comp_263 = (int) _20;
  if (comp_263 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  _265 = stbi__err ("bad comp method");
  goto <bb 173>; [INV]

  <bb 41> :
  _267 = stbi__get8 (s_218);

  <bb 42> :
  _21 = _267;
  filter_268 = (int) _21;
  if (filter_268 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  _270 = stbi__err ("bad filter method");
  goto <bb 173>; [INV]

  <bb 44> :
  _272 = stbi__get8 (s_218);

  <bb 45> :
  _22 = _272;
  interlace_273 = (int) _22;
  if (interlace_273 > 1)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  _275 = stbi__err ("bad interlace method");
  goto <bb 173>; [INV]

  <bb 47> :
  _23 = s_218->img_x;
  if (_23 == 0)
    goto <bb 49>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  _24 = s_218->img_y;
  if (_24 == 0)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  _286 = stbi__err ("0-pixel image");
  goto <bb 173>; [INV]

  <bb 50> :
  if (pal_img_n_156 == 0)
    goto <bb 51>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 51> :
  _25 = color_253 & 2;
  if (_25 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  iftmp.407_276 = 3;
  goto <bb 54>; [INV]

  <bb 53> :
  iftmp.407_277 = 1;

  <bb 54> :
  # iftmp.407_185 = PHI <iftmp.407_276(52), iftmp.407_277(53)>
  _26 = color_253 >> 2;
  _27 = _26 & 1;
  _28 = iftmp.407_185 + _27;
  s_218->img_n = _28;
  _29 = s_218->img_x;
  _30 = 1073741824 / _29;
  _31 = s_218->img_n;
  _32 = (unsigned int) _31;
  _33 = _30 / _32;
  _34 = s_218->img_y;
  if (_33 < _34)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  _280 = stbi__err ("too large");
  goto <bb 173>; [INV]

  <bb 56> :
  if (scan_226(D) == 2)
    goto <bb 57>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 57> :
  _281 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 173>; [INV]

  <bb 58> :
  s_218->img_n = 1;
  _35 = s_218->img_x;
  _36 = 268435456 / _35;
  _37 = s_218->img_y;
  if (_36 < _37)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  _284 = stbi__err ("too large");
  goto <bb 173>; [INV]

  <bb 60> :
  goto <bb 171>; [INV]

  <bb 61> :
<L57>:
  if (first_172 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  _288 = stbi__err ("first not IHDR");
  goto <bb 173>; [INV]

  <bb 63> :
  _38 = c.length;
  if (_38 > 768)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  _290 = stbi__err ("invalid PLTE");
  goto <bb 173>; [INV]

  <bb 65> :
  _39 = c.length;
  pal_len_291 = _39 / 3;
  _40 = pal_len_291 * 3;
  _41 = c.length;
  if (_40 != _41)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  _293 = stbi__err ("invalid PLTE");
  goto <bb 173>; [INV]

  <bb 67> :
  i_294 = 0;

  <bb 68> :
  # i_168 = PHI <i_294(67), i_305(72)>
  if (i_168 >= pal_len_291)
    goto <bb 73>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 69> :
  _42 = i_168 * 4;
  _296 = stbi__get8 (s_218);

  <bb 70> :
  _43 = _296;
  palette[_42] = _43;
  _44 = i_168 * 4;
  _45 = _44 + 1;
  _299 = stbi__get8 (s_218);

  <bb 71> :
  _46 = _299;
  palette[_45] = _46;
  _47 = i_168 * 4;
  _48 = _47 + 2;
  _302 = stbi__get8 (s_218);

  <bb 72> :
  _49 = _302;
  palette[_48] = _49;
  _50 = i_168 * 4;
  _51 = _50 + 3;
  palette[_51] = 255;
  i_305 = i_168 + 1;
  goto <bb 68>; [INV]

  <bb 73> :
  goto <bb 171>; [INV]

  <bb 74> :
<L67>:
  if (first_172 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  _307 = stbi__err ("first not IHDR");
  goto <bb 173>; [INV]

  <bb 76> :
  _52 = z_217(D)->idata;
  if (_52 != 0B)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  _309 = stbi__err ("tRNS after IDAT");
  goto <bb 173>; [INV]

  <bb 78> :
  if (pal_img_n_155 != 0)
    goto <bb 79>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 79> :
  if (scan_226(D) == 2)
    goto <bb 80>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 80> :
  s_218->img_n = 4;
  _311 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 173>; [INV]

  <bb 81> :
  if (pal_len_170 == 0)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  _313 = stbi__err ("tRNS before PLTE");
  goto <bb 173>; [INV]

  <bb 83> :
  _53 = c.length;
  if (pal_len_170 < _53)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  _315 = stbi__err ("bad tRNS len");
  goto <bb 173>; [INV]

  <bb 85> :
  pal_img_n_316 = 4;
  i_317 = 0;

  <bb 86> :
  # i_169 = PHI <i_317(85), i_321(88)>
  _54 = c.length;
  if (i_169 >= _54)
    goto <bb 102>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 87> :
  _55 = i_169 * 4;
  _56 = _55 + 3;
  _319 = stbi__get8 (s_218);

  <bb 88> :
  _57 = _319;
  palette[_56] = _57;
  i_321 = i_169 + 1;
  goto <bb 86>; [INV]

  <bb 89> :
  _58 = s_218->img_n;
  _59 = _58 & 1;
  if (_59 == 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  _323 = stbi__err ("tRNS with alpha");
  goto <bb 173>; [INV]

  <bb 91> :
  _60 = c.length;
  _61 = s_218->img_n;
  _62 = (unsigned int) _61;
  _63 = _62 * 2;
  if (_60 != _63)
    goto <bb 92>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 92> :
  _325 = stbi__err ("bad tRNS len");
  goto <bb 173>; [INV]

  <bb 93> :
  has_trans_326 = 1;
  _64 = z_217(D)->depth;
  if (_64 == 16)
    goto <bb 94>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 94> :
  k_327 = 0;

  <bb 95> :
  # k_174 = PHI <k_327(94), k_331(97)>
  _65 = s_218->img_n;
  if (k_174 >= _65)
    goto <bb 102>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 96> :
  _329 = stbi__get16be (s_218);

  <bb 97> :
  _66 = _329;
  _67 = (short unsigned int) _66;
  tc16[k_174] = _67;
  k_331 = k_174 + 1;
  goto <bb 95>; [INV]

  <bb 98> :
  k_332 = 0;

  <bb 99> :
  # k_175 = PHI <k_332(98), k_336(101)>
  _68 = s_218->img_n;
  if (k_175 >= _68)
    goto <bb 102>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 100> :
  _334 = stbi__get16be (s_218);

  <bb 101> :
  _69 = _334;
  _70 = (unsigned char) _69;
  _71 = z_217(D)->depth;
  _72 = stbi__depth_scale_table[_71];
  _73 = _70 * _72;
  tc[k_175] = _73;
  k_336 = k_175 + 1;
  goto <bb 99>; [INV]

  <bb 102> :
  # pal_img_n_157 = PHI <pal_img_n_316(86), pal_img_n_155(95), pal_img_n_155(99)>
  # has_trans_160 = PHI <has_trans_159(86), has_trans_326(95), has_trans_326(99)>
  goto <bb 171>; [INV]

  <bb 103> :
<L97>:
  if (first_172 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  _338 = stbi__err ("first not IHDR");
  goto <bb 173>; [INV]

  <bb 105> :
  if (pal_img_n_155 != 0)
    goto <bb 106>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 106> :
  if (pal_len_170 == 0)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  _340 = stbi__err ("no PLTE");
  goto <bb 173>; [INV]

  <bb 108> :
  if (scan_226(D) == 2)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  _74 = (int) pal_img_n_155;
  s_218->img_n = _74;
  _342 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 173>; [INV]

  <bb 110> :
  _75 = c.length;
  _76 = ioff_162 + _75;
  _77 = (int) _76;
  ioff.408_78 = (int) ioff_162;
  if (_77 < ioff.408_78)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  _343 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 173>; [INV]

  <bb 112> :
  _79 = c.length;
  _80 = ioff_162 + _79;
  if (idata_limit_164 < _80)
    goto <bb 113>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 113> :
  idata_limit_old_344 = idata_limit_164;
  if (idata_limit_164 == 0)
    goto <bb 114>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 114> :
  _81 = c.length;
  idata_limit_345 = MAX_EXPR <_81, 4096>;

  <bb 115> :
  # idata_limit_165 = PHI <idata_limit_164(113), idata_limit_345(114), idata_limit_346(116)>
  _82 = c.length;
  _83 = ioff_162 + _82;
  if (idata_limit_165 >= _83)
    goto <bb 117>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 116> :
  idata_limit_346 = idata_limit_165 * 2;
  goto <bb 115>; [INV]

  <bb 117> :
  _84 = (long long unsigned int) idata_limit_165;
  _85 = z_217(D)->idata;
  p_348 = realloc (_85, _84);
  if (p_348 == 0B)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  _350 = stbi__err ("outofmem");
  goto <bb 173>; [INV]

  <bb 119> :
  z_217(D)->idata = p_348;

  <bb 120> :
  # idata_limit_166 = PHI <idata_limit_164(112), idata_limit_165(119)>
  _86 = c.length;
  _87 = (int) _86;
  _88 = z_217(D)->idata;
  _89 = (sizetype) ioff_162;
  _90 = _88 + _89;
  _353 = stbi__getn (s_218, _90, _87);

  <bb 121> :
  _91 = _353;
  retval.409_354 = _91 == 0;
  if (retval.409_354 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  _356 = stbi__err ("outofdata");
  goto <bb 173>; [INV]

  <bb 123> :
  _92 = c.length;
  ioff_357 = ioff_162 + _92;
  goto <bb 171>; [INV]

  <bb 124> :
<L121>:
  if (first_172 != 0)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  _359 = stbi__err ("first not IHDR");
  goto <bb 164>; [INV]

  <bb 126> :
  if (scan_226(D) != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  _360 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 164>; [INV]

  <bb 128> :
  _93 = z_217(D)->idata;
  if (_93 == 0B)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  _362 = stbi__err ("no IDAT");
  goto <bb 164>; [INV]

  <bb 130> :
  _94 = s_218->img_x;
  _95 = z_217(D)->depth;
  _96 = (unsigned int) _95;
  _97 = _94 * _96;
  _98 = _97 + 7;
  bpl_363 = _98 / 8;
  _99 = s_218->img_y;
  _100 = bpl_363 * _99;
  _101 = s_218->img_n;
  _102 = (unsigned int) _101;
  _103 = _100 * _102;
  _104 = s_218->img_y;
  _105 = _103 + _104;
  raw_len = _105;
  _106 = is_iphone_180 == 0;
  _107 = (int) _106;
  raw_len.410_108 = raw_len;
  raw_len.411_109 = (int) raw_len.410_108;
  ioff.412_110 = (int) ioff_162;
  _111 = z_217(D)->idata;
  _366 = stbi_zlib_decode_malloc_guesssize_headerflag (_111, ioff.412_110, raw_len.411_109, &raw_len, _107);

  <bb 131> :
  _112 = _366;
  z_217(D)->expanded = _112;
  _113 = z_217(D)->expanded;
  if (_113 == 0B)
    goto <bb 132>; [INV]
  else
    goto <bb 133>; [INV]

  <bb 132> :
  _368 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 164>; [INV]

  <bb 133> :
  _114 = z_217(D)->idata;
  free (_114);
  z_217(D)->idata = 0B;
  _115 = s_218->img_n;
  _116 = _115 + 1;
  if (req_comp_371(D) == _116)
    goto <bb 134>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 134> :
  if (req_comp_371(D) != 3)
    goto <bb 135>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 135> :
  if (pal_img_n_155 == 0)
    goto <bb 137>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 136> :
  if (has_trans_159 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 138>; [INV]

  <bb 137> :
  _117 = s_218->img_n;
  _118 = _117 + 1;
  s_218->img_out_n = _118;
  goto <bb 139>; [INV]

  <bb 138> :
  _119 = s_218->img_n;
  s_218->img_out_n = _119;

  <bb 139> :
  _120 = z_217(D)->depth;
  _121 = s_218->img_out_n;
  raw_len.414_122 = raw_len;
  _123 = z_217(D)->expanded;
  _375 = stbi__create_png_image (z_217(D), _123, raw_len.414_122, _121, _120, color_178, interlace_176);

  <bb 140> :
  _124 = _375;
  retval.413_376 = _124 == 0;
  if (retval.413_376 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  _377 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 164>; [INV]

  <bb 142> :
  if (has_trans_159 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 143> :
  _125 = z_217(D)->depth;
  if (_125 == 16)
    goto <bb 144>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 144> :
  _126 = s_218->img_out_n;
  _379 = stbi__compute_transparency16 (z_217(D), &tc16, _126);

  <bb 145> :
  _127 = _379;
  retval.415_380 = _127 == 0;
  if (retval.415_380 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 146> :
  _381 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 164>; [INV]

  <bb 147> :
  _128 = s_218->img_out_n;
  _383 = stbi__compute_transparency (z_217(D), &tc, _128);

  <bb 148> :
  _129 = _383;
  retval.416_384 = _129 == 0;
  if (retval.416_384 != 0)
    goto <bb 149>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 149> :
  _385 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 164>; [INV]

  <bb 150> :
  if (is_iphone_180 != 0)
    goto <bb 151>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 151> :
  stbi__de_iphone_flag.417_130 = stbi__de_iphone_flag;
  if (stbi__de_iphone_flag.417_130 != 0)
    goto <bb 152>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 152> :
  _131 = s_218->img_out_n;
  if (_131 > 2)
    goto <bb 153>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 153> :
  stbi__de_iphone (z_217(D));

  <bb 154> :

  <bb 155> :
  if (pal_img_n_155 != 0)
    goto <bb 156>; [INV]
  else
    goto <bb 160>; [INV]

  <bb 156> :
  _132 = (int) pal_img_n_155;
  s_218->img_n = _132;
  _133 = (int) pal_img_n_155;
  s_218->img_out_n = _133;
  if (req_comp_371(D) > 2)
    goto <bb 157>; [INV]
  else
    goto <bb 158>; [INV]

  <bb 157> :
  s_218->img_out_n = req_comp_371(D);

  <bb 158> :
  _134 = s_218->img_out_n;
  pal_len.419_135 = (int) pal_len_170;
  _136 = stbi__expand_png_palette (z_217(D), &palette, pal_len.419_135, _134);
  retval.418_391 = _136 == 0;
  if (retval.418_391 != 0)
    goto <bb 159>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 159> :
  _392 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 164>; [INV]

  <bb 160> :
  if (has_trans_159 != 0)
    goto <bb 161>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 161> :
  _137 = s_218->img_n;
  _138 = _137 + 1;
  s_218->img_n = _138;

  <bb 162> :
  _139 = z_217(D)->expanded;
  free (_139);
  z_217(D)->expanded = 0B;
  stbi__get32be (s_218);

  <bb 163> :
  _397 = 1;

  <bb 164> :
  # _182 = PHI <_359(125), _360(127), _362(129), _368(132), _377(141), _381(146), _385(149), _392(159), _397(163)>
  raw_len ={v} {CLOBBER};
  goto <bb 173>; [INV]

  <bb 165> :
<L167>:
  if (first_172 != 0)
    goto <bb 166>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 166> :
  _401 = stbi__err ("first not IHDR");
  goto <bb 173>; [INV]

  <bb 167> :
  _140 = c.type;
  _141 = _140 & 536870912;
  if (_141 == 0)
    goto <bb 168>; [INV]
  else
    goto <bb 169>; [INV]

  <bb 168> :
  _142 = c.type;
  _143 = _142 >> 24;
  _144 = (char) _143;
  invalid_chunk[0] = _144;
  _145 = c.type;
  _146 = _145 >> 16;
  _147 = (char) _146;
  invalid_chunk[1] = _147;
  _148 = c.type;
  _149 = _148 >> 8;
  _150 = (char) _149;
  invalid_chunk[2] = _150;
  _151 = c.type;
  _152 = (char) _151;
  invalid_chunk[3] = _152;
  _407 = stbi__err (&invalid_chunk);
  goto <bb 173>; [INV]

  <bb 169> :
  _153 = c.length;
  _154 = (int) _153;
  stbi__skip (s_218, _154);

  <bb 170> :

  <bb 171> :
  # pal_img_n_158 = PHI <pal_img_n_155(10), pal_img_n_156(60), pal_img_n_155(73), pal_img_n_157(102), pal_img_n_155(123), pal_img_n_155(170)>
  # has_trans_161 = PHI <has_trans_159(10), has_trans_159(60), has_trans_159(73), has_trans_160(102), has_trans_159(123), has_trans_159(170)>
  # ioff_163 = PHI <ioff_162(10), ioff_162(60), ioff_162(73), ioff_162(102), ioff_357(123), ioff_162(170)>
  # idata_limit_167 = PHI <idata_limit_164(10), idata_limit_164(60), idata_limit_164(73), idata_limit_164(102), idata_limit_166(123), idata_limit_164(170)>
  # pal_len_171 = PHI <pal_len_170(10), pal_len_170(60), pal_len_291(73), pal_len_170(102), pal_len_170(123), pal_len_170(170)>
  # first_173 = PHI <first_172(10), first_233(60), first_172(73), first_172(102), first_172(123), first_172(170)>
  # interlace_177 = PHI <interlace_176(10), interlace_273(60), interlace_176(73), interlace_176(102), interlace_176(123), interlace_176(170)>
  # color_179 = PHI <color_178(10), color_253(60), color_178(73), color_178(102), color_178(123), color_178(170)>
  # is_iphone_181 = PHI <is_iphone_229(10), is_iphone_180(60), is_iphone_180(73), is_iphone_180(102), is_iphone_180(123), is_iphone_180(170)>
  stbi__get32be (s_218);

  <bb 172> :
  c ={v} {CLOBBER};
  goto <bb 7>; [INV]

  <bb 173> :
  # _183 = PHI <_232(12), _235(14), _243(18), _245(20), _250(27), _255(30), _257(33), _260(37), _265(40), _270(43), _275(46), _286(49), _280(55), _281(57), _284(59), _288(62), _290(64), _293(66), _307(75), _309(77), _311(80), _313(82), _315(84), _323(90), _325(92), _338(104), _340(107), _342(109), _343(111), _350(118), _356(122), _182(164), _401(166), _407(168)>
  c ={v} {CLOBBER};

  <bb 174> :
  # _184 = PHI <_225(4), _227(6), _183(173)>
  palette ={v} {CLOBBER};
  tc ={v} {CLOBBER};
  tc16 ={v} {CLOBBER};

  <bb 175> :
<L176>:
  return _184;

  <bb 176> :
<L177>:
  resx 3

  <bb 177> :
<L178>:
  resx 2

  <bb 178> :
<L179>:
  resx 1

}



;; Function stbi__do_png (_ZL12stbi__do_pngP9stbi__pngPiS1_S1_iP17stbi__result_info, funcdef_no=912, decl_uid=12415, cgraph_uid=818, symbol_order=846)

stbi__do_png (struct stbi__png * p, int * x, int * y, int * n, int req_comp, struct stbi__result_info * ri)
{
  void * D.16003;
  void * D.16002;
  int D.16001;
  void * result;
  bool retval.420;
  void * D.15976;
  int _1;
  int _2;
  int _3;
  struct stbi__context * _4;
  int _5;
  int _6;
  struct stbi__context * _7;
  unsigned int _8;
  struct stbi__context * _9;
  unsigned int _10;
  struct stbi__context * _11;
  int _12;
  struct stbi__context * _13;
  unsigned int _14;
  struct stbi__context * _15;
  unsigned int _16;
  struct stbi__context * _17;
  int _18;
  struct stbi__context * _19;
  struct stbi__context * _20;
  unsigned int _21;
  int _22;
  struct stbi__context * _23;
  unsigned int _24;
  int _25;
  struct stbi__context * _26;
  int _27;
  stbi_uc * _28;
  stbi_uc * _29;
  stbi_uc * _30;
  void * _34;
  int _45;
  bool retval.420_46;
  void * _51;
  void * _55;
  void * _58;
  void * _61;
  void * _74;
  void * _76;

  <bb 2> :
  result_40 = 0B;
  if (req_comp_41(D) < 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (req_comp_41(D) > 4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__err ("bad req_comp");
  _76 = 0B;
  goto <bb 21>; [INV]

  <bb 5> :
  _45 = stbi__parse_png_file (p_43(D), 0, req_comp_41(D));
  _1 = _45;
  retval.420_46 = _1 != 0;
  if (retval.420_46 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 6> :
  _2 = p_43(D)->depth;
  if (_2 <= 8)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  ri_47(D)->bits_per_channel = 8;
  goto <bb 11>; [INV]

  <bb 8> :
  _3 = p_43(D)->depth;
  if (_3 == 16)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  ri_47(D)->bits_per_channel = 16;
  goto <bb 11>; [INV]

  <bb 10> :
  stbi__err ("bad bits_per_channel");
  _51 = 0B;
  goto <bb 21>; [INV]

  <bb 11> :
  result_52 = p_43(D)->out;
  p_43(D)->out = 0B;
  if (req_comp_41(D) != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  _4 = p_43(D)->s;
  _5 = _4->img_out_n;
  if (req_comp_41(D) != _5)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  _6 = ri_47(D)->bits_per_channel;
  if (_6 == 8)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _7 = p_43(D)->s;
  _8 = _7->img_y;
  _9 = p_43(D)->s;
  _10 = _9->img_x;
  _11 = p_43(D)->s;
  _12 = _11->img_out_n;
  _55 = stbi__convert_format (result_52, _12, req_comp_41(D), _10, _8);
  result_56 = _55;
  goto <bb 16>; [INV]

  <bb 15> :
  _13 = p_43(D)->s;
  _14 = _13->img_y;
  _15 = p_43(D)->s;
  _16 = _15->img_x;
  _17 = p_43(D)->s;
  _18 = _17->img_out_n;
  _58 = stbi__convert_format16 (result_52, _18, req_comp_41(D), _16, _14);
  result_59 = _58;

  <bb 16> :
  # result_31 = PHI <result_56(14), result_59(15)>
  _19 = p_43(D)->s;
  _19->img_out_n = req_comp_41(D);
  if (result_31 == 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _61 = result_31;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  # result_32 = PHI <result_52(11), result_52(12), result_31(16)>
  _20 = p_43(D)->s;
  _21 = _20->img_x;
  _22 = (int) _21;
  *x_62(D) = _22;
  _23 = p_43(D)->s;
  _24 = _23->img_y;
  _25 = (int) _24;
  *y_64(D) = _25;
  if (n_66(D) != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _26 = p_43(D)->s;
  _27 = _26->img_n;
  *n_66(D) = _27;

  <bb 20> :
  # result_33 = PHI <result_40(5), result_32(19), result_32(18)>
  _28 = p_43(D)->out;
  free (_28);
  p_43(D)->out = 0B;
  _29 = p_43(D)->expanded;
  free (_29);
  p_43(D)->expanded = 0B;
  _30 = p_43(D)->idata;
  free (_30);
  p_43(D)->idata = 0B;
  _74 = result_33;

  <bb 21> :
  # _34 = PHI <_76(4), _51(10), _61(17), _74(20)>
<L25>:
  return _34;

}



;; Function stbi__png_load (_ZL14stbi__png_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=913, decl_uid=10135, cgraph_uid=819, symbol_order=847)

stbi__png_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  void * D.16006;
  struct stbi__png p;
  void * D.16004;
  void * _10;
  void * _11;

  <bb 2> :
  p.s = s_2(D);
  _10 = stbi__do_png (&p, x_4(D), y_5(D), comp_6(D), req_comp_7(D), ri_8(D));

  <bb 3> :
  _11 = _10;

  <bb 4> :
  p ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _11;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi__png_test (_ZL14stbi__png_testP13stbi__context, funcdef_no=914, decl_uid=10128, cgraph_uid=820, symbol_order=848)

stbi__png_test (struct stbi__context * s)
{
  int D.16011;
  int r;
  int D.16009;
  int _4;
  int _7;

  <bb 2> :
  _4 = stbi__check_png_header (s_2(D));
  r_5 = _4;
  stbi__rewind (s_2(D));
  _7 = r_5;

  <bb 3> :
<L0>:
  return _7;

}



;; Function stbi__png_info_raw (_ZL18stbi__png_info_rawP9stbi__pngPiS1_S1_, funcdef_no=915, decl_uid=12468, cgraph_uid=821, symbol_order=849)

stbi__png_info_raw (struct stbi__png * p, int * x, int * y, int * comp)
{
  int D.16026;
  int D.16015;
  bool retval.421;
  int _1;
  struct stbi__context * _2;
  struct stbi__context * _3;
  unsigned int _4;
  int _5;
  struct stbi__context * _6;
  unsigned int _7;
  int _8;
  struct stbi__context * _9;
  int _10;
  int _11;
  int _19;
  bool retval.421_20;
  int _22;
  int _29;

  <bb 2> :
  _19 = stbi__parse_png_file (p_17(D), 2, 0);
  _1 = _19;
  retval.421_20 = _1 == 0;
  if (retval.421_20 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = p_17(D)->s;
  stbi__rewind (_2);
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  if (x_23(D) != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = p_17(D)->s;
  _4 = _3->img_x;
  _5 = (int) _4;
  *x_23(D) = _5;

  <bb 6> :
  if (y_25(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _6 = p_17(D)->s;
  _7 = _6->img_y;
  _8 = (int) _7;
  *y_25(D) = _8;

  <bb 8> :
  if (comp_27(D) != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _9 = p_17(D)->s;
  _10 = _9->img_n;
  *comp_27(D) = _10;

  <bb 10> :
  _29 = 1;

  <bb 11> :
  # _11 = PHI <_22(3), _29(10)>
<L11>:
  return _11;

}



;; Function stbi__png_info (_ZL14stbi__png_infoP13stbi__contextPiS1_S1_, funcdef_no=916, decl_uid=10140, cgraph_uid=822, symbol_order=850)

stbi__png_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.16029;
  struct stbi__png p;
  int D.16027;
  int _8;
  int _9;

  <bb 2> :
  p.s = s_2(D);
  _8 = stbi__png_info_raw (&p, x_4(D), y_5(D), comp_6(D));

  <bb 3> :
  _9 = _8;

  <bb 4> :
  p ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _9;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi__png_is16 (_ZL14stbi__png_is16P13stbi__context, funcdef_no=917, decl_uid=10142, cgraph_uid=823, symbol_order=851)

stbi__png_is16 (struct stbi__context * s)
{
  int D.16039;
  struct stbi__png p;
  int D.16035;
  bool retval.422;
  int _1;
  int _2;
  struct stbi__context * _3;
  int _4;
  int _10;
  bool retval.422_11;
  int _12;
  int _14;
  int _15;

  <bb 2> :
  p.s = s_7(D);
  _10 = stbi__png_info_raw (&p, 0B, 0B, 0B);

  <bb 3> :
  _1 = _10;
  retval.422_11 = _1 == 0;
  if (retval.422_11 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _12 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = p.depth;
  if (_2 != 16)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _3 = p.s;
  stbi__rewind (_3);
  _14 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  _15 = 1;

  <bb 8> :
  # _4 = PHI <_12(4), _14(6), _15(7)>
  p ={v} {CLOBBER};

  <bb 9> :
<L5>:
  return _4;

  <bb 10> :
<L6>:
  resx 1

}



;; Function stbi__bmp_test_raw (_ZL18stbi__bmp_test_rawP13stbi__context, funcdef_no=918, decl_uid=12482, cgraph_uid=824, symbol_order=852)

stbi__bmp_test_raw (struct stbi__context * s)
{
  unsigned int D.16060;
  unsigned char D.16059;
  unsigned char D.16058;
  int sz;
  int r;
  bool iftmp.425;
  bool retval.424;
  int D.16045;
  bool retval.423;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  int _4;
  bool iftmp.425_5;
  unsigned char _10;
  bool retval.423_11;
  int _12;
  unsigned char _14;
  bool retval.424_15;
  int _16;
  unsigned int _22;
  bool iftmp.425_24;
  bool iftmp.425_25;
  int _27;

  <bb 2> :
  _10 = stbi__get8 (s_8(D));
  _1 = _10;
  retval.423_11 = _1 != 66;
  if (retval.423_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 4> :
  _14 = stbi__get8 (s_8(D));
  _2 = _14;
  retval.424_15 = _2 != 77;
  if (retval.424_15 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _16 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 6> :
  stbi__get32le (s_8(D));
  stbi__get16le (s_8(D));
  stbi__get16le (s_8(D));
  stbi__get32le (s_8(D));
  _22 = stbi__get32le (s_8(D));
  _3 = _22;
  sz_23 = (int) _3;
  if (sz_23 == 12)
    goto <bb 11>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (sz_23 == 40)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (sz_23 == 56)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (sz_23 == 108)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (sz_23 == 124)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.425_25 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.425_24 = 0;

  <bb 13> :
  # iftmp.425_5 = PHI <iftmp.425_25(11), iftmp.425_24(12)>
  r_26 = (int) iftmp.425_5;
  _27 = r_26;

  <bb 14> :
  # _4 = PHI <_12(3), _16(5), _27(13)>
<L11>:
  return _4;

}



;; Function stbi__bmp_test (_ZL14stbi__bmp_testP13stbi__context, funcdef_no=919, decl_uid=10144, cgraph_uid=825, symbol_order=853)

stbi__bmp_test (struct stbi__context * s)
{
  int D.16063;
  int r;
  int D.16061;
  int _4;
  int _7;

  <bb 2> :
  _4 = stbi__bmp_test_raw (s_2(D));
  r_5 = _4;
  stbi__rewind (s_2(D));
  _7 = r_5;

  <bb 3> :
<L0>:
  return _7;

}



;; Function stbi__high_bit (_ZL14stbi__high_bitj, funcdef_no=920, decl_uid=12491, cgraph_uid=826, symbol_order=854)

stbi__high_bit (unsigned int z)
{
  int n;
  int D.16066;
  int _10;
  int _13;
  int _23;

  <bb 2> :
  n_11 = 0;
  if (z_12(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _13 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 4> :
  if (z_12(D) > 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  n_14 = n_11 + 16;
  z_15 = z_12(D) >> 16;

  <bb 6> :
  # z_1 = PHI <z_12(D)(4), z_15(5)>
  # n_5 = PHI <n_11(4), n_14(5)>
  if (z_1 > 255)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  n_16 = n_5 + 8;
  z_17 = z_1 >> 8;

  <bb 8> :
  # z_2 = PHI <z_1(6), z_17(7)>
  # n_6 = PHI <n_5(6), n_16(7)>
  if (z_2 > 15)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  n_18 = n_6 + 4;
  z_19 = z_2 >> 4;

  <bb 10> :
  # z_3 = PHI <z_2(8), z_19(9)>
  # n_7 = PHI <n_6(8), n_18(9)>
  if (z_3 > 3)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  n_20 = n_7 + 2;
  z_21 = z_3 >> 2;

  <bb 12> :
  # z_4 = PHI <z_3(10), z_21(11)>
  # n_8 = PHI <n_7(10), n_20(11)>
  if (z_4 > 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  n_22 = n_8 + 1;

  <bb 14> :
  # n_9 = PHI <n_8(12), n_22(13)>
  _23 = n_9;

  <bb 15> :
  # _10 = PHI <_13(3), _23(14)>
<L17>:
  return _10;

}



;; Function stbi__bitcount (_ZL14stbi__bitcountj, funcdef_no=921, decl_uid=12495, cgraph_uid=827, symbol_order=855)

stbi__bitcount (unsigned int a)
{
  int D.16083;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int a.426_11;
  int _18;

  <bb 2> :
  _1 = a_12(D) & 1431655765;
  _2 = a_12(D) >> 1;
  _3 = _2 & 1431655765;
  a_13 = _1 + _3;
  _4 = a_13 & 858993459;
  _5 = a_13 >> 2;
  _6 = _5 & 858993459;
  a_14 = _4 + _6;
  _7 = a_14 >> 4;
  _8 = a_14 + _7;
  a_15 = _8 & 252645135;
  _9 = a_15 >> 8;
  a_16 = a_15 + _9;
  _10 = a_16 >> 16;
  a_17 = a_16 + _10;
  a.426_11 = (int) a_17;
  _18 = a.426_11 & 255;

  <bb 3> :
<L0>:
  return _18;

}



;; Function stbi__shiftsigned (_ZL17stbi__shiftsignedjii, funcdef_no=922, decl_uid=12500, cgraph_uid=828, symbol_order=858)

stbi__shiftsigned (unsigned int v, int shift, int bits)
{
  static unsigned int shift_table[9] = {0, 0, 0, 1, 0, 2, 4, 6, 0};
  static unsigned int mul_table[9] = {0, 255, 85, 73, 17, 33, 65, 129, 1};
  int D.16099;
  bool iftmp.428;
  bool iftmp.427;
  int _1;
  int _2;
  unsigned int _3;
  unsigned int _4;
  int _5;
  unsigned int _6;
  bool iftmp.427_16;
  bool iftmp.427_17;
  bool iftmp.428_20;
  bool iftmp.428_22;
  int _23;

  <bb 2> :
  if (shift_10(D) < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = -shift_10(D);
  v_12 = v_11(D) << _1;
  goto <bb 5>; [INV]

  <bb 4> :
  v_13 = v_11(D) >> shift_10(D);

  <bb 5> :
  # v_7 = PHI <v_12(3), v_13(4)>
  if (v_7 <= 255)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _assert ("v < 256", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5263);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.427_17 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.427_16 = 0;

  <bb 9> :
  _2 = 8 - bits_18(D);
  v_19 = v_7 >> _2;
  if (bits_18(D) >= 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  if (bits_18(D) <= 8)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _assert ("bits >= 0 && bits <= 8", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5265);
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.428_20 = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.428_22 = 0;

  <bb 14> :
  _3 = mul_table[bits_18(D)];
  _4 = v_19 * _3;
  _5 = (int) _4;
  _6 = shift_table[bits_18(D)];
  _23 = _5 >> _6;

  <bb 15> :
<L12>:
  return _23;

}



;; Function stbi__bmp_parse_header (_ZL22stbi__bmp_parse_headerP13stbi__contextP14stbi__bmp_data, funcdef_no=923, decl_uid=12518, cgraph_uid=829, symbol_order=859)

stbi__bmp_parse_header (struct stbi__context * s, struct stbi__bmp_data * info)
{
  unsigned int D.16184;
  unsigned int D.16183;
  unsigned int D.16182;
  unsigned int D.16181;
  unsigned int D.16180;
  unsigned int D.16179;
  unsigned int D.16178;
  unsigned int D.16177;
  int D.16176;
  int D.16175;
  unsigned int D.16174;
  unsigned int D.16173;
  int D.16172;
  int D.16171;
  unsigned int D.16170;
  unsigned int D.16169;
  unsigned char D.16168;
  unsigned char D.16167;
  int i;
  int compress;
  int hsz;
  bool retval.431;
  void * D.16109;
  bool iftmp.430;
  bool retval.429;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  unsigned int _11;
  int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  int _16;
  int _17;
  unsigned int _18;
  int _19;
  int _20;
  int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  int _25;
  int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  bool iftmp.430_36;
  void * _37;
  unsigned char _51;
  unsigned char _53;
  bool iftmp.430_54;
  bool iftmp.430_55;
  bool retval.429_56;
  void * _58;
  unsigned int _63;
  unsigned int _67;
  void * _76;
  void * _78;
  int _80;
  int _83;
  unsigned int _86;
  unsigned int _89;
  int _92;
  bool retval.431_93;
  void * _95;
  int _97;
  unsigned int _100;
  void * _108;
  unsigned int _110;
  unsigned int _113;
  unsigned int _116;
  unsigned int _119;
  unsigned int _142;
  unsigned int _145;
  unsigned int _148;
  void * _152;
  void * _154;
  void * _156;
  void * _157;

  <bb 2> :
  _51 = stbi__get8 (s_49(D));
  _1 = _51;
  if (_1 != 66)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _53 = stbi__get8 (s_49(D));
  _2 = _53;
  if (_2 != 77)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.430_55 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.430_54 = 0;

  <bb 6> :
  # iftmp.430_36 = PHI <iftmp.430_55(4), iftmp.430_54(5)>
  retval.429_56 = iftmp.430_36;
  if (retval.429_56 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  stbi__err ("not BMP");
  _58 = 0B;
  goto <bb 52>; [INV]

  <bb 8> :
  stbi__get32le (s_49(D));
  stbi__get16le (s_49(D));
  stbi__get16le (s_49(D));
  _63 = stbi__get32le (s_49(D));
  _3 = _63;
  _4 = (int) _3;
  info_64(D)->offset = _4;
  _67 = stbi__get32le (s_49(D));
  _5 = _67;
  hsz_68 = (int) _5;
  info_64(D)->hsz = hsz_68;
  info_64(D)->ma = 0;
  _6 = info_64(D)->ma;
  info_64(D)->mb = _6;
  _7 = info_64(D)->mb;
  info_64(D)->mg = _7;
  _8 = info_64(D)->mg;
  info_64(D)->mr = _8;
  info_64(D)->extra_read = 14;
  _9 = info_64(D)->offset;
  if (_9 < 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  stbi__err ("bad BMP");
  _76 = 0B;
  goto <bb 52>; [INV]

  <bb 10> :
  if (hsz_68 != 12)
    goto <bb 11>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 11> :
  if (hsz_68 != 40)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  if (hsz_68 != 56)
    goto <bb 13>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 13> :
  if (hsz_68 != 108)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  if (hsz_68 != 124)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stbi__err ("unknown BMP");
  _78 = 0B;
  goto <bb 52>; [INV]

  <bb 16> :
  if (hsz_68 == 12)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _80 = stbi__get16le (s_49(D));
  _10 = _80;
  _11 = (unsigned int) _10;
  s_49(D)->img_x = _11;
  _83 = stbi__get16le (s_49(D));
  _12 = _83;
  _13 = (unsigned int) _12;
  s_49(D)->img_y = _13;
  goto <bb 19>; [INV]

  <bb 18> :
  _86 = stbi__get32le (s_49(D));
  _14 = _86;
  s_49(D)->img_x = _14;
  _89 = stbi__get32le (s_49(D));
  _15 = _89;
  s_49(D)->img_y = _15;

  <bb 19> :
  _92 = stbi__get16le (s_49(D));
  _16 = _92;
  retval.431_93 = _16 != 1;
  if (retval.431_93 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  stbi__err ("bad BMP");
  _95 = 0B;
  goto <bb 52>; [INV]

  <bb 21> :
  _97 = stbi__get16le (s_49(D));
  _17 = _97;
  info_64(D)->bpp = _17;
  if (hsz_68 != 12)
    goto <bb 22>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 22> :
  _100 = stbi__get32le (s_49(D));
  _18 = _100;
  compress_101 = (int) _18;
  if (compress_101 == 1)
    goto <bb 24>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  if (compress_101 == 2)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  stbi__err ("BMP RLE");
  _156 = 0B;
  goto <bb 52>; [INV]

  <bb 25> :
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  if (hsz_68 == 40)
    goto <bb 27>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  if (hsz_68 == 56)
    goto <bb 27>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 27> :
  if (hsz_68 == 56)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));

  <bb 29> :
  _19 = info_64(D)->bpp;
  if (_19 == 16)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _20 = info_64(D)->bpp;
  if (_20 == 32)
    goto <bb 31>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 31> :
  if (compress_101 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 32> :
  _21 = info_64(D)->bpp;
  if (_21 == 32)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  info_64(D)->mr = 16711680;
  info_64(D)->mg = 65280;
  info_64(D)->mb = 255;
  info_64(D)->ma = 4278190080;
  info_64(D)->all_a = 0;
  goto <bb 35>; [INV]

  <bb 34> :
  info_64(D)->mr = 31744;
  info_64(D)->mg = 992;
  info_64(D)->mb = 31;

  <bb 35> :
  goto <bb 41>; [INV]

  <bb 36> :
  if (compress_101 == 3)
    goto <bb 37>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 37> :
  _142 = stbi__get32le (s_49(D));
  _22 = _142;
  info_64(D)->mr = _22;
  _145 = stbi__get32le (s_49(D));
  _23 = _145;
  info_64(D)->mg = _23;
  _148 = stbi__get32le (s_49(D));
  _24 = _148;
  info_64(D)->mb = _24;
  _25 = info_64(D)->extra_read;
  _26 = _25 + 12;
  info_64(D)->extra_read = _26;
  _27 = info_64(D)->mr;
  _28 = info_64(D)->mg;
  if (_27 == _28)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  _29 = info_64(D)->mg;
  _30 = info_64(D)->mb;
  if (_29 == _30)
    goto <bb 39>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 39> :
  stbi__err ("bad BMP");
  _152 = 0B;
  goto <bb 52>; [INV]

  <bb 40> :
  stbi__err ("bad BMP");
  _154 = 0B;
  goto <bb 52>; [INV]

  <bb 41> :
  goto <bb 50>; [INV]

  <bb 42> :
  if (hsz_68 != 108)
    goto <bb 43>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 43> :
  if (hsz_68 != 124)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  stbi__err ("bad BMP");
  _108 = 0B;
  goto <bb 52>; [INV]

  <bb 45> :
  _110 = stbi__get32le (s_49(D));
  _31 = _110;
  info_64(D)->mr = _31;
  _113 = stbi__get32le (s_49(D));
  _32 = _113;
  info_64(D)->mg = _32;
  _116 = stbi__get32le (s_49(D));
  _33 = _116;
  info_64(D)->mb = _33;
  _119 = stbi__get32le (s_49(D));
  _34 = _119;
  info_64(D)->ma = _34;
  stbi__get32le (s_49(D));
  i_122 = 0;

  <bb 46> :
  # i_35 = PHI <i_122(45), i_124(47)>
  if (i_35 > 11)
    goto <bb 48>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  stbi__get32le (s_49(D));
  i_124 = i_35 + 1;
  goto <bb 46>; [INV]

  <bb 48> :
  if (hsz_68 == 124)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));
  stbi__get32le (s_49(D));

  <bb 50> :

  <bb 51> :
  _157 = 1B;

  <bb 52> :
  # _37 = PHI <_58(7), _76(9), _78(15), _95(20), _156(24), _152(39), _154(40), _108(44), _157(51)>
<L62>:
  return _37;

}



;; Function stbi__bmp_load (_ZL14stbi__bmp_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=924, decl_uid=10151, cgraph_uid=830, symbol_order=860)

stbi__bmp_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.16392;
  int D.16390;
  int D.16389;
  int D.16388;
  int D.16387;
  stbi__uint32 D.16386;
  int D.16385;
  unsigned char D.16384;
  unsigned char D.16383;
  unsigned char D.16382;
  unsigned char D.16381;
  unsigned char D.16380;
  unsigned char D.16379;
  unsigned char D.16378;
  unsigned char D.16377;
  unsigned char D.16376;
  unsigned char D.16375;
  unsigned char D.16374;
  void * D.16373;
  stbi_uc * p2;
  stbi_uc * p1;
  stbi_uc t;
  unsigned int a;
  stbi__uint32 v;
  int bpp;
  unsigned char a;
  int easy;
  int z;
  int acount;
  int bcount;
  int gcount;
  int rcount;
  int ashift;
  int bshift;
  int gshift;
  int rshift;
  int v2;
  int v;
  int color;
  int v;
  int bit_offset;
  int z;
  struct stbi__bmp_data info;
  int target;
  int pad;
  int flip_vertically;
  int width;
  int j;
  int i;
  int psize;
  stbi_uc pal[256][4];
  unsigned int all_a;
  unsigned int ma;
  unsigned int mb;
  unsigned int mg;
  unsigned int mr;
  stbi_uc * out;
  unsigned int iftmp.457;
  stbi__uint32 iftmp.453;
  unsigned char iftmp.451;
  int iftmp.446;
  bool retval.441;
  int iftmp.436;
  bool retval.435;
  int iftmp.434;
  bool iftmp.433;
  void * D.16188;
  bool retval.432;
  void * _1;
  unsigned int _2;
  int _3;
  bool _4;
  unsigned int _5;
  int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  int _24;
  stbi_uc * _25;
  stbi_uc * _26;
  long long int _27;
  int _28;
  int _29;
  int _30;
  long long int _31;
  int _32;
  long long int _33;
  stbi_uc * _34;
  stbi_uc[128] * _35;
  long long int _36;
  long long int _37;
  int _38;
  unsigned int _39;
  int _40;
  unsigned int _41;
  int _42;
  int _43;
  unsigned int _44;
  int _45;
  unsigned int _46;
  int _47;
  int _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  int _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int _58;
  int _59;
  int _60;
  int _61;
  unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  int _65;
  unsigned int _66;
  unsigned int _67;
  unsigned int _68;
  int _69;
  unsigned int _70;
  int _71;
  int _72;
  unsigned int _73;
  int _74;
  unsigned char _75;
  unsigned int _76;
  int _77;
  int _78;
  int z.437_79;
  sizetype _80;
  stbi_uc * _81;
  unsigned char _82;
  int z.438_83;
  sizetype _84;
  stbi_uc * _85;
  unsigned char _86;
  int z.439_87;
  sizetype _88;
  stbi_uc * _89;
  unsigned char _90;
  int z.440_91;
  sizetype _92;
  stbi_uc * _93;
  int _94;
  unsigned int _95;
  int _96;
  unsigned char _97;
  unsigned int _98;
  int _99;
  unsigned int _100;
  int _101;
  unsigned char _102;
  int _103;
  int z.442_104;
  sizetype _105;
  stbi_uc * _106;
  unsigned char _107;
  int z.443_108;
  sizetype _109;
  stbi_uc * _110;
  unsigned char _111;
  int z.444_112;
  sizetype _113;
  stbi_uc * _114;
  unsigned char _115;
  int z.445_116;
  sizetype _117;
  stbi_uc * _118;
  int _119;
  unsigned int _120;
  int _121;
  int _122;
  unsigned char _123;
  int z.447_124;
  sizetype _125;
  stbi_uc * _126;
  unsigned char _127;
  int z.448_128;
  sizetype _129;
  stbi_uc * _130;
  unsigned char _131;
  int z.449_132;
  sizetype _133;
  stbi_uc * _134;
  unsigned char _135;
  int z.450_136;
  sizetype _137;
  stbi_uc * _138;
  int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  unsigned int _145;
  unsigned int _146;
  int _147;
  unsigned int _148;
  unsigned int _149;
  int _150;
  int _151;
  int _152;
  int _153;
  int _154;
  int _155;
  int _156;
  unsigned int _157;
  int _158;
  unsigned int _159;
  int _160;
  sizetype _161;
  sizetype _162;
  stbi_uc * _163;
  unsigned char _164;
  sizetype _165;
  sizetype _166;
  stbi_uc * _167;
  unsigned char _168;
  sizetype _169;
  stbi_uc * _170;
  unsigned char _171;
  unsigned int _172;
  int z.452_173;
  sizetype _174;
  stbi_uc * _175;
  unsigned int _176;
  int _177;
  int _178;
  unsigned int _179;
  int _180;
  int z.454_181;
  sizetype _182;
  stbi_uc * _183;
  unsigned char _184;
  unsigned int _185;
  int _186;
  int z.455_187;
  sizetype _188;
  stbi_uc * _189;
  unsigned char _190;
  unsigned int _191;
  int _192;
  int z.456_193;
  sizetype _194;
  stbi_uc * _195;
  unsigned char _196;
  unsigned int _197;
  int _198;
  unsigned int a.458_199;
  unsigned int a.459_200;
  int z.460_201;
  sizetype _202;
  stbi_uc * _203;
  unsigned char _204;
  unsigned int _205;
  unsigned int _206;
  unsigned int _207;
  unsigned int _208;
  unsigned int _209;
  sizetype _210;
  stbi_uc * _211;
  unsigned int _212;
  int _213;
  int _214;
  unsigned int _215;
  unsigned int j.461_216;
  unsigned int _217;
  unsigned int target.462_218;
  unsigned int _219;
  sizetype _220;
  unsigned int _221;
  unsigned int j.463_222;
  unsigned int _223;
  unsigned int _224;
  unsigned int _225;
  unsigned int _226;
  unsigned int target.464_227;
  unsigned int _228;
  sizetype _229;
  unsigned int _230;
  int _231;
  int _232;
  sizetype _233;
  stbi_uc * _234;
  sizetype _235;
  stbi_uc * _236;
  sizetype _237;
  stbi_uc * _238;
  unsigned char _239;
  sizetype _240;
  stbi_uc * _241;
  unsigned int _242;
  unsigned int _243;
  unsigned int _244;
  int _245;
  unsigned int _246;
  int _247;
  int _248;
  void * _300;
  int iftmp.434_301;
  int iftmp.436_302;
  int iftmp.446_303;
  unsigned char iftmp.451_304;
  stbi__uint32 iftmp.453_305;
  unsigned int iftmp.457_306;
  void * _354;
  bool retval.432_355;
  void * _356;
  void * _360;
  void * _362;
  bool iftmp.433_371;
  bool iftmp.433_372;
  void * _374;
  int iftmp.434_376;
  int iftmp.434_377;
  bool retval.435_383;
  void * _385;
  void * _389;
  unsigned char _393;
  unsigned char _396;
  unsigned char _399;
  int iftmp.436_404;
  int iftmp.436_405;
  void * _412;
  unsigned char _417;
  bool retval.441_430;
  unsigned char _433;
  unsigned char _441;
  unsigned char _455;
  int iftmp.446_456;
  int iftmp.446_457;
  void * _472;
  void * _508;
  void * _511;
  unsigned char _515;
  unsigned char _518;
  unsigned char _521;
  unsigned char _525;
  unsigned char iftmp.451_526;
  unsigned char iftmp.451_527;
  int _536;
  stbi__uint32 iftmp.453_537;
  stbi__uint32 _539;
  stbi__uint32 iftmp.453_540;
  int _543;
  int _547;
  int _551;
  int _555;
  unsigned int iftmp.457_556;
  unsigned int iftmp.457_557;
  stbi_uc * _580;
  void * _582;
  void * _589;

  <bb 2> :
  mr_345 = 0;
  mg_346 = 0;
  mb_347 = 0;
  ma_348 = 0;
  psize_349 = 0;
  info.all_a = 255;
  _354 = stbi__bmp_parse_header (s_352(D), &info);

  <bb 3> :
  _1 = _354;
  retval.432_355 = _1 == 0B;
  if (retval.432_355 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _356 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 179>; [INV]

  <bb 5> :
  _2 = s_352(D)->img_y;
  _3 = (int) _2;
  _4 = _3 > 0;
  flip_vertically_357 = (int) _4;
  _5 = s_352(D)->img_y;
  _6 = (int) _5;
  _7 = ABS_EXPR <_6>;
  _8 = (unsigned int) _7;
  s_352(D)->img_y = _8;
  _9 = s_352(D)->img_y;
  if (_9 > 16777216)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  stbi__err ("too large");
  _360 = 0B;
  goto <bb 179>; [INV]

  <bb 7> :
  _10 = s_352(D)->img_x;
  if (_10 > 16777216)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  stbi__err ("too large");
  _362 = 0B;
  goto <bb 179>; [INV]

  <bb 9> :
  mr_363 = info.mr;
  mg_364 = info.mg;
  mb_365 = info.mb;
  ma_366 = info.ma;
  all_a_367 = info.all_a;
  _11 = info.hsz;
  if (_11 == 12)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _12 = info.bpp;
  if (_12 <= 23)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _13 = info.offset;
  _14 = info.extra_read;
  _15 = _13 - _14;
  _16 = _15 + -24;
  psize_368 = _16 / 3;
  goto <bb 14>; [INV]

  <bb 12> :
  _17 = info.bpp;
  if (_17 <= 15)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _18 = info.offset;
  _19 = info.extra_read;
  _20 = _18 - _19;
  _21 = info.hsz;
  _22 = _20 - _21;
  psize_369 = _22 >> 2;

  <bb 14> :
  # psize_255 = PHI <psize_368(11), psize_349(12), psize_369(13), psize_349(10)>
  if (psize_255 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 15> :
  _23 = info.offset;
  _24 = s_352(D)->callback_already_read;
  _25 = s_352(D)->img_buffer;
  _26 = s_352(D)->img_buffer_original;
  _27 = _25 - _26;
  _28 = (int) _27;
  _29 = _24 + _28;
  if (_23 == _29)
    goto <bb 18>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _assert ("info.offset == s->callback_already_read + (int) (s->img_buffer - s->img_buffer_original)", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5398);

  <bb 17> :
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.433_372 = 1;
  goto <bb 20>; [INV]

  <bb 19> :
  iftmp.433_371 = 0;

  <bb 20> :
  _30 = info.offset;
  _31 = (long long int) _30;
  _32 = s_352(D)->callback_already_read;
  _33 = (long long int) _32;
  _34 = s_352(D)->img_buffer;
  _35 = &s_352(D)->buffer_start;
  _36 = _34 - _35;
  _37 = _33 + _36;
  if (_31 != _37)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  stbi__err ("bad offset");
  _374 = 0B;
  goto <bb 179>; [INV]

  <bb 22> :
  _38 = info.bpp;
  if (_38 == 24)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 23> :
  if (ma_366 == 4278190080)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  s_352(D)->img_n = 3;
  goto <bb 29>; [INV]

  <bb 25> :
  if (ma_366 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  iftmp.434_376 = 4;
  goto <bb 28>; [INV]

  <bb 27> :
  iftmp.434_377 = 3;

  <bb 28> :
  # iftmp.434_301 = PHI <iftmp.434_376(26), iftmp.434_377(27)>
  s_352(D)->img_n = iftmp.434_301;

  <bb 29> :
  if (req_comp_379(D) != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 30> :
  if (req_comp_379(D) > 2)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  target_380 = req_comp_379(D);
  goto <bb 33>; [INV]

  <bb 32> :
  target_381 = s_352(D)->img_n;

  <bb 33> :
  # target_269 = PHI <target_380(31), target_381(32)>
  _39 = s_352(D)->img_y;
  _40 = (int) _39;
  _41 = s_352(D)->img_x;
  _42 = (int) _41;
  _43 = stbi__mad3sizes_valid (target_269, _42, _40, 0);
  retval.435_383 = _43 == 0;
  if (retval.435_383 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  stbi__err ("too large");
  _385 = 0B;
  goto <bb 179>; [INV]

  <bb 35> :
  _44 = s_352(D)->img_y;
  _45 = (int) _44;
  _46 = s_352(D)->img_x;
  _47 = (int) _46;
  out_387 = stbi__malloc_mad3 (target_269, _47, _45, 0);
  if (out_387 == 0B)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  stbi__err ("outofmem");
  _389 = 0B;
  goto <bb 179>; [INV]

  <bb 37> :
  _48 = info.bpp;
  if (_48 <= 15)
    goto <bb 38>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 38> :
  z_390 = 0;
  if (psize_255 == 0)
    goto <bb 40>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 39> :
  if (psize_255 > 256)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  free (out_387);
  stbi__err ("invalid");
  _472 = 0B;
  goto <bb 179>; [INV]

  <bb 41> :
  i_391 = 0;

  <bb 42> :
  # i_256 = PHI <i_391(41), i_403(49)>
  if (i_256 >= psize_255)
    goto <bb 50>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _393 = stbi__get8 (s_352(D));

  <bb 44> :
  _49 = _393;
  pal[i_256][2] = _49;
  _396 = stbi__get8 (s_352(D));

  <bb 45> :
  _50 = _396;
  pal[i_256][1] = _50;
  _399 = stbi__get8 (s_352(D));

  <bb 46> :
  _51 = _399;
  pal[i_256][0] = _51;
  _52 = info.hsz;
  if (_52 != 12)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  stbi__get8 (s_352(D));

  <bb 48> :

  <bb 49> :
  pal[i_256][3] = 255;
  i_403 = i_256 + 1;
  goto <bb 42>; [INV]

  <bb 50> :
  _53 = info.offset;
  _54 = info.extra_read;
  _55 = _53 - _54;
  _56 = info.hsz;
  _57 = _55 - _56;
  _58 = info.hsz;
  if (_58 == 12)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  iftmp.436_404 = 3;
  goto <bb 53>; [INV]

  <bb 52> :
  iftmp.436_405 = 4;

  <bb 53> :
  # iftmp.436_302 = PHI <iftmp.436_404(51), iftmp.436_405(52)>
  _59 = iftmp.436_302 * psize_255;
  _60 = _57 - _59;
  stbi__skip (s_352(D), _60);

  <bb 54> :
  _61 = info.bpp;
  if (_61 == 1)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  _62 = s_352(D)->img_x;
  _63 = _62 + 7;
  _64 = _63 >> 3;
  width_407 = (int) _64;
  goto <bb 61>; [INV]

  <bb 56> :
  _65 = info.bpp;
  if (_65 == 4)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  _66 = s_352(D)->img_x;
  _67 = _66 + 1;
  _68 = _67 >> 1;
  width_408 = (int) _68;
  goto <bb 61>; [INV]

  <bb 58> :
  _69 = info.bpp;
  if (_69 == 8)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  _70 = s_352(D)->img_x;
  width_409 = (int) _70;
  goto <bb 61>; [INV]

  <bb 60> :
  free (out_387);
  stbi__err ("bad bpp");
  _412 = 0B;
  goto <bb 179>; [INV]

  <bb 61> :
  # width_267 = PHI <width_407(55), width_408(57), width_409(59)>
  _71 = -width_267;
  pad_413 = _71 & 3;
  _72 = info.bpp;
  if (_72 == 1)
    goto <bb 62>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 62> :
  j_414 = 0;

  <bb 63> :
  # j_263 = PHI <j_414(62), j_437(76)>
  # z_270 = PHI <z_390(62), z_273(76)>
  _73 = s_352(D)->img_y;
  _74 = (int) _73;
  if (j_263 >= _74)
    goto <bb 77>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 64> :
  bit_offset_415 = 7;
  _417 = stbi__get8 (s_352(D));

  <bb 65> :
  _75 = _417;
  v_418 = (int) _75;
  i_419 = 0;

  <bb 66> :
  # i_257 = PHI <i_419(65), i_435(74)>
  # z_271 = PHI <z_270(65), z_272(74)>
  # bit_offset_279 = PHI <bit_offset_415(65), bit_offset_280(74)>
  # v_281 = PHI <v_418(65), v_282(74)>
  _76 = s_352(D)->img_x;
  _77 = (int) _76;
  if (i_257 >= _77)
    goto <bb 75>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 67> :
  _78 = v_281 >> bit_offset_279;
  color_420 = _78 & 1;
  z.437_79 = z_271;
  z_421 = z.437_79 + 1;
  _80 = (sizetype) z.437_79;
  _81 = out_387 + _80;
  _82 = pal[color_420][0];
  *_81 = _82;
  z.438_83 = z_421;
  z_423 = z.438_83 + 1;
  _84 = (sizetype) z.438_83;
  _85 = out_387 + _84;
  _86 = pal[color_420][1];
  *_85 = _86;
  z.439_87 = z_423;
  z_425 = z.439_87 + 1;
  _88 = (sizetype) z.439_87;
  _89 = out_387 + _88;
  _90 = pal[color_420][2];
  *_89 = _90;
  if (target_269 == 4)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  z.440_91 = z_425;
  z_427 = z.440_91 + 1;
  _92 = (sizetype) z.440_91;
  _93 = out_387 + _92;
  *_93 = 255;

  <bb 69> :
  # z_272 = PHI <z_425(67), z_427(68)>
  _94 = i_257 + 1;
  _95 = s_352(D)->img_x;
  _96 = (int) _95;
  if (_94 == _96)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  goto <bb 75>; [INV]

  <bb 71> :
  bit_offset_429 = bit_offset_279 + -1;
  retval.441_430 = bit_offset_429 < 0;
  if (retval.441_430 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 72> :
  bit_offset_431 = 7;
  _433 = stbi__get8 (s_352(D));

  <bb 73> :
  _97 = _433;
  v_434 = (int) _97;

  <bb 74> :
  # bit_offset_280 = PHI <bit_offset_429(71), bit_offset_431(73)>
  # v_282 = PHI <v_281(71), v_434(73)>
  i_435 = i_257 + 1;
  goto <bb 66>; [INV]

  <bb 75> :
  # z_273 = PHI <z_271(66), z_272(70)>
  stbi__skip (s_352(D), pad_413);

  <bb 76> :
  j_437 = j_263 + 1;
  goto <bb 63>; [INV]

  <bb 77> :
  goto <bb 98>; [INV]

  <bb 78> :
  j_438 = 0;

  <bb 79> :
  # j_264 = PHI <j_438(78), j_469(97)>
  # z_274 = PHI <z_390(78), z_278(97)>
  _98 = s_352(D)->img_y;
  _99 = (int) _98;
  if (j_264 >= _99)
    goto <bb 98>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  i_439 = 0;

  <bb 81> :
  # i_258 = PHI <i_439(80), i_467(95)>
  # z_275 = PHI <z_274(80), z_277(95)>
  _100 = s_352(D)->img_x;
  _101 = (int) _100;
  if (i_258 >= _101)
    goto <bb 96>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 82> :
  _441 = stbi__get8 (s_352(D));

  <bb 83> :
  _102 = _441;
  v_442 = (int) _102;
  v2_443 = 0;
  _103 = info.bpp;
  if (_103 == 4)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  v2_444 = v_442 & 15;
  v_445 = v_442 >> 4;

  <bb 85> :
  # v_283 = PHI <v_442(83), v_445(84)>
  # v2_284 = PHI <v2_443(83), v2_444(84)>
  z.442_104 = z_275;
  z_446 = z.442_104 + 1;
  _105 = (sizetype) z.442_104;
  _106 = out_387 + _105;
  _107 = pal[v_283][0];
  *_106 = _107;
  z.443_108 = z_446;
  z_448 = z.443_108 + 1;
  _109 = (sizetype) z.443_108;
  _110 = out_387 + _109;
  _111 = pal[v_283][1];
  *_110 = _111;
  z.444_112 = z_448;
  z_450 = z.444_112 + 1;
  _113 = (sizetype) z.444_112;
  _114 = out_387 + _113;
  _115 = pal[v_283][2];
  *_114 = _115;
  if (target_269 == 4)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  z.445_116 = z_450;
  z_452 = z.445_116 + 1;
  _117 = (sizetype) z.445_116;
  _118 = out_387 + _117;
  *_118 = 255;

  <bb 87> :
  # z_276 = PHI <z_450(85), z_452(86)>
  _119 = i_258 + 1;
  _120 = s_352(D)->img_x;
  _121 = (int) _120;
  if (_119 == _121)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  goto <bb 96>; [INV]

  <bb 89> :
  _122 = info.bpp;
  if (_122 == 8)
    goto <bb 90>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 90> :
  _455 = stbi__get8 (s_352(D));

  <bb 91> :
  _123 = _455;
  iftmp.446_456 = (int) _123;
  goto <bb 93>; [INV]

  <bb 92> :
  iftmp.446_457 = v2_284;

  <bb 93> :
  # iftmp.446_303 = PHI <iftmp.446_456(91), iftmp.446_457(92)>
  v_458 = iftmp.446_303;
  z.447_124 = z_276;
  z_459 = z.447_124 + 1;
  _125 = (sizetype) z.447_124;
  _126 = out_387 + _125;
  _127 = pal[v_458][0];
  *_126 = _127;
  z.448_128 = z_459;
  z_461 = z.448_128 + 1;
  _129 = (sizetype) z.448_128;
  _130 = out_387 + _129;
  _131 = pal[v_458][1];
  *_130 = _131;
  z.449_132 = z_461;
  z_463 = z.449_132 + 1;
  _133 = (sizetype) z.449_132;
  _134 = out_387 + _133;
  _135 = pal[v_458][2];
  *_134 = _135;
  if (target_269 == 4)
    goto <bb 94>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 94> :
  z.450_136 = z_463;
  z_465 = z.450_136 + 1;
  _137 = (sizetype) z.450_136;
  _138 = out_387 + _137;
  *_138 = 255;

  <bb 95> :
  # z_277 = PHI <z_463(93), z_465(94)>
  i_467 = i_258 + 2;
  goto <bb 81>; [INV]

  <bb 96> :
  # z_278 = PHI <z_275(81), z_276(88)>
  stbi__skip (s_352(D), pad_413);

  <bb 97> :
  j_469 = j_264 + 1;
  goto <bb 79>; [INV]

  <bb 98> :
  goto <bb 158>; [INV]

  <bb 99> :
  rshift_473 = 0;
  gshift_474 = 0;
  bshift_475 = 0;
  ashift_476 = 0;
  rcount_477 = 0;
  gcount_478 = 0;
  bcount_479 = 0;
  acount_480 = 0;
  z_481 = 0;
  easy_482 = 0;
  _139 = info.offset;
  _140 = info.extra_read;
  _141 = _139 - _140;
  _142 = info.hsz;
  _143 = _141 - _142;
  stbi__skip (s_352(D), _143);

  <bb 100> :
  _144 = info.bpp;
  if (_144 == 24)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  _145 = s_352(D)->img_x;
  _146 = _145 * 3;
  width_484 = (int) _146;
  goto <bb 105>; [INV]

  <bb 102> :
  _147 = info.bpp;
  if (_147 == 16)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  _148 = s_352(D)->img_x;
  _149 = _148 * 2;
  width_485 = (int) _149;
  goto <bb 105>; [INV]

  <bb 104> :
  width_486 = 0;

  <bb 105> :
  # width_268 = PHI <width_484(101), width_485(103), width_486(104)>
  _150 = -width_268;
  pad_487 = _150 & 3;
  _151 = info.bpp;
  if (_151 == 24)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  easy_488 = 1;
  goto <bb 113>; [INV]

  <bb 107> :
  _152 = info.bpp;
  if (_152 == 32)
    goto <bb 108>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 108> :
  if (mb_365 == 255)
    goto <bb 109>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 109> :
  if (mg_364 == 65280)
    goto <bb 110>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 110> :
  if (mr_363 == 16711680)
    goto <bb 111>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 111> :
  if (ma_366 == 4278190080)
    goto <bb 112>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 112> :
  easy_489 = 2;

  <bb 113> :
  # easy_299 = PHI <easy_488(106), easy_482(107), easy_482(109), easy_482(108), easy_489(112), easy_482(111), easy_482(110)>
  if (easy_299 == 0)
    goto <bb 114>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 114> :
  if (mr_363 == 0)
    goto <bb 117>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 115> :
  if (mg_364 == 0)
    goto <bb 117>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 116> :
  if (mb_365 == 0)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  free (out_387);
  stbi__err ("bad masks");
  _511 = 0B;
  goto <bb 179>; [INV]

  <bb 118> :
  _153 = stbi__high_bit (mr_363);
  rshift_491 = _153 + -7;
  rcount_493 = stbi__bitcount (mr_363);
  _154 = stbi__high_bit (mg_364);
  gshift_495 = _154 + -7;
  gcount_497 = stbi__bitcount (mg_364);
  _155 = stbi__high_bit (mb_365);
  bshift_499 = _155 + -7;
  bcount_501 = stbi__bitcount (mb_365);
  _156 = stbi__high_bit (ma_366);
  ashift_503 = _156 + -7;
  acount_505 = stbi__bitcount (ma_366);
  if (rcount_493 > 8)
    goto <bb 122>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 119> :
  if (gcount_497 > 8)
    goto <bb 122>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 120> :
  if (bcount_501 > 8)
    goto <bb 122>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 121> :
  if (acount_505 > 8)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  free (out_387);
  stbi__err ("bad masks");
  _508 = 0B;
  goto <bb 179>; [INV]

  <bb 123> :
  # rshift_285 = PHI <rshift_473(113), rshift_491(121)>
  # gshift_286 = PHI <gshift_474(113), gshift_495(121)>
  # bshift_287 = PHI <bshift_475(113), bshift_499(121)>
  # ashift_288 = PHI <ashift_476(113), ashift_503(121)>
  # rcount_289 = PHI <rcount_477(113), rcount_493(121)>
  # gcount_290 = PHI <gcount_478(113), gcount_497(121)>
  # bcount_291 = PHI <bcount_479(113), bcount_501(121)>
  # acount_292 = PHI <acount_480(113), acount_505(121)>
  j_512 = 0;

  <bb 124> :
  # all_a_250 = PHI <all_a_367(123), all_a_253(157)>
  # j_265 = PHI <j_512(123), j_566(157)>
  # z_293 = PHI <z_481(123), z_298(157)>
  _157 = s_352(D)->img_y;
  _158 = (int) _157;
  if (j_265 >= _158)
    goto <bb 158>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 125> :
  if (easy_299 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 126> :
  i_513 = 0;

  <bb 127> :
  # all_a_251 = PHI <all_a_250(126), all_a_529(137)>
  # i_259 = PHI <i_513(126), i_532(137)>
  # z_294 = PHI <z_293(126), z_295(137)>
  _159 = s_352(D)->img_x;
  _160 = (int) _159;
  if (i_259 >= _160)
    goto <bb 138>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 128> :
  _161 = (sizetype) z_294;
  _162 = _161 + 2;
  _163 = out_387 + _162;
  _515 = stbi__get8 (s_352(D));

  <bb 129> :
  _164 = _515;
  *_163 = _164;
  _165 = (sizetype) z_294;
  _166 = _165 + 1;
  _167 = out_387 + _166;
  _518 = stbi__get8 (s_352(D));

  <bb 130> :
  _168 = _518;
  *_167 = _168;
  _169 = (sizetype) z_294;
  _170 = out_387 + _169;
  _521 = stbi__get8 (s_352(D));

  <bb 131> :
  _171 = _521;
  *_170 = _171;
  z_523 = z_294 + 3;
  if (easy_299 == 2)
    goto <bb 132>; [INV]
  else
    goto <bb 134>; [INV]

  <bb 132> :
  _525 = stbi__get8 (s_352(D));

  <bb 133> :
  iftmp.451_526 = _525;
  goto <bb 135>; [INV]

  <bb 134> :
  iftmp.451_527 = 255;

  <bb 135> :
  # iftmp.451_304 = PHI <iftmp.451_526(133), iftmp.451_527(134)>
  a_528 = iftmp.451_304;
  _172 = (unsigned int) a_528;
  all_a_529 = all_a_251 | _172;
  if (target_269 == 4)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  z.452_173 = z_523;
  z_530 = z.452_173 + 1;
  _174 = (sizetype) z.452_173;
  _175 = out_387 + _174;
  *_175 = a_528;

  <bb 137> :
  # z_295 = PHI <z_523(135), z_530(136)>
  i_532 = i_259 + 1;
  goto <bb 127>; [INV]

  <bb 138> :
  goto <bb 156>; [INV]

  <bb 139> :
  bpp_533 = info.bpp;
  i_534 = 0;

  <bb 140> :
  # all_a_252 = PHI <all_a_250(139), all_a_559(155)>
  # i_260 = PHI <i_534(139), i_563(155)>
  # z_296 = PHI <z_293(139), z_297(155)>
  _176 = s_352(D)->img_x;
  _177 = (int) _176;
  if (i_260 >= _177)
    goto <bb 156>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 141> :
  if (bpp_533 == 16)
    goto <bb 142>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 142> :
  _536 = stbi__get16le (s_352(D));

  <bb 143> :
  _178 = _536;
  iftmp.453_537 = (stbi__uint32) _178;
  goto <bb 146>; [INV]

  <bb 144> :
  _539 = stbi__get32le (s_352(D));

  <bb 145> :
  iftmp.453_540 = _539;

  <bb 146> :
  # iftmp.453_305 = PHI <iftmp.453_537(143), iftmp.453_540(145)>
  v_541 = iftmp.453_305;
  _179 = v_541 & mr_363;
  _543 = stbi__shiftsigned (_179, rshift_285, rcount_289);

  <bb 147> :
  _180 = _543;
  z.454_181 = z_296;
  z_544 = z.454_181 + 1;
  _182 = (sizetype) z.454_181;
  _183 = out_387 + _182;
  _184 = (unsigned char) _180;
  *_183 = _184;
  _185 = v_541 & mg_364;
  _547 = stbi__shiftsigned (_185, gshift_286, gcount_290);

  <bb 148> :
  _186 = _547;
  z.455_187 = z_544;
  z_548 = z.455_187 + 1;
  _188 = (sizetype) z.455_187;
  _189 = out_387 + _188;
  _190 = (unsigned char) _186;
  *_189 = _190;
  _191 = v_541 & mb_365;
  _551 = stbi__shiftsigned (_191, bshift_287, bcount_291);

  <bb 149> :
  _192 = _551;
  z.456_193 = z_548;
  z_552 = z.456_193 + 1;
  _194 = (sizetype) z.456_193;
  _195 = out_387 + _194;
  _196 = (unsigned char) _192;
  *_195 = _196;
  if (ma_366 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 150> :
  _197 = v_541 & ma_366;
  _555 = stbi__shiftsigned (_197, ashift_288, acount_292);

  <bb 151> :
  _198 = _555;
  iftmp.457_556 = (unsigned int) _198;
  goto <bb 153>; [INV]

  <bb 152> :
  iftmp.457_557 = 255;

  <bb 153> :
  # iftmp.457_306 = PHI <iftmp.457_556(151), iftmp.457_557(152)>
  a = iftmp.457_306;
  a.458_199 = a;
  all_a_559 = all_a_252 | a.458_199;
  if (target_269 == 4)
    goto <bb 154>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 154> :
  a.459_200 = a;
  z.460_201 = z_552;
  z_560 = z.460_201 + 1;
  _202 = (sizetype) z.460_201;
  _203 = out_387 + _202;
  _204 = (unsigned char) a.459_200;
  *_203 = _204;

  <bb 155> :
  # z_297 = PHI <z_552(153), z_560(154)>
  a ={v} {CLOBBER};
  i_563 = i_260 + 1;
  goto <bb 140>; [INV]

  <bb 156> :
  # all_a_253 = PHI <all_a_251(138), all_a_252(140)>
  # z_298 = PHI <z_294(138), z_296(140)>
  stbi__skip (s_352(D), pad_487);

  <bb 157> :
  j_566 = j_265 + 1;
  goto <bb 124>; [INV]

  <bb 158> :
  # all_a_254 = PHI <all_a_367(98), all_a_250(124)>
  if (target_269 == 4)
    goto <bb 159>; [INV]
  else
    goto <bb 163>; [INV]

  <bb 159> :
  if (all_a_254 == 0)
    goto <bb 160>; [INV]
  else
    goto <bb 163>; [INV]

  <bb 160> :
  _205 = s_352(D)->img_x;
  _206 = s_352(D)->img_y;
  _207 = _205 * _206;
  _208 = _207 * 4;
  _209 = _208 + 4294967295;
  i_567 = (int) _209;

  <bb 161> :
  # i_261 = PHI <i_567(160), i_569(162)>
  if (i_261 < 0)
    goto <bb 163>; [INV]
  else
    goto <bb 162>; [INV]

  <bb 162> :
  _210 = (sizetype) i_261;
  _211 = out_387 + _210;
  *_211 = 255;
  i_569 = i_261 + -4;
  goto <bb 161>; [INV]

  <bb 163> :
  if (flip_vertically_357 != 0)
    goto <bb 164>; [INV]
  else
    goto <bb 171>; [INV]

  <bb 164> :
  j_570 = 0;

  <bb 165> :
  # j_266 = PHI <j_570(164), j_578(169)>
  _212 = s_352(D)->img_y;
  _213 = (int) _212;
  _214 = _213 >> 1;
  if (j_266 >= _214)
    goto <bb 170>; [INV]
  else
    goto <bb 166>; [INV]

  <bb 166> :
  _215 = s_352(D)->img_x;
  j.461_216 = (unsigned int) j_266;
  _217 = _215 * j.461_216;
  target.462_218 = (unsigned int) target_269;
  _219 = _217 * target.462_218;
  _220 = (sizetype) _219;
  p1_571 = out_387 + _220;
  _221 = s_352(D)->img_y;
  j.463_222 = (unsigned int) j_266;
  _223 = _221 - j.463_222;
  _224 = _223 + 4294967295;
  _225 = s_352(D)->img_x;
  _226 = _224 * _225;
  target.464_227 = (unsigned int) target_269;
  _228 = _226 * target.464_227;
  _229 = (sizetype) _228;
  p2_572 = out_387 + _229;
  i_573 = 0;

  <bb 167> :
  # i_262 = PHI <i_573(166), i_577(168)>
  _230 = s_352(D)->img_x;
  _231 = (int) _230;
  _232 = target_269 * _231;
  if (i_262 >= _232)
    goto <bb 169>; [INV]
  else
    goto <bb 168>; [INV]

  <bb 168> :
  _233 = (sizetype) i_262;
  _234 = p1_571 + _233;
  t_574 = *_234;
  _235 = (sizetype) i_262;
  _236 = p2_572 + _235;
  _237 = (sizetype) i_262;
  _238 = p1_571 + _237;
  _239 = *_236;
  *_238 = _239;
  _240 = (sizetype) i_262;
  _241 = p2_572 + _240;
  *_241 = t_574;
  i_577 = i_262 + 1;
  goto <bb 167>; [INV]

  <bb 169> :
  j_578 = j_266 + 1;
  goto <bb 165>; [INV]

  <bb 170> :

  <bb 171> :
  if (req_comp_379(D) != 0)
    goto <bb 172>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 172> :
  if (req_comp_379(D) != target_269)
    goto <bb 173>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 173> :
  _242 = s_352(D)->img_y;
  _243 = s_352(D)->img_x;
  _580 = stbi__convert_format (out_387, target_269, req_comp_379(D), _243, _242);

  <bb 174> :
  out_581 = _580;
  if (out_581 == 0B)
    goto <bb 175>; [INV]
  else
    goto <bb 176>; [INV]

  <bb 175> :
  _582 = out_581;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 179>; [INV]

  <bb 176> :
  # out_249 = PHI <out_387(171), out_387(172), out_581(174)>
  _244 = s_352(D)->img_x;
  _245 = (int) _244;
  *x_583(D) = _245;
  _246 = s_352(D)->img_y;
  _247 = (int) _246;
  *y_585(D) = _247;
  if (comp_587(D) != 0B)
    goto <bb 177>; [INV]
  else
    goto <bb 178>; [INV]

  <bb 177> :
  _248 = s_352(D)->img_n;
  *comp_587(D) = _248;

  <bb 178> :
  _589 = out_249;

  <bb 179> :
  # _300 = PHI <_356(4), _360(6), _362(8), _374(21), _385(34), _389(36), _472(40), _412(60), _511(117), _508(122), _582(175), _589(178)>
  pal ={v} {CLOBBER};
  info ={v} {CLOBBER};

  <bb 180> :
<L188>:
  return _300;

  <bb 181> :
<L189>:
  resx 2

  <bb 182> :
<L190>:
  resx 1

}



;; Function stbi__tga_get_comp (_ZL18stbi__tga_get_compiiPi, funcdef_no=925, decl_uid=12629, cgraph_uid=831, symbol_order=861)

stbi__tga_get_comp (int bits_per_pixel, int is_grey, int * is_rgb16)
{
  int D.16398;
  int _1;
  int _9;
  int _11;
  int _13;
  int _14;
  int _15;

  <bb 2> :
  if (is_rgb16_5(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  *is_rgb16_5(D) = 0;

  <bb 4> :
  switch (bits_per_pixel_8(D)) <default: <L13> [INV], case 8: <L3> [INV], case 15: <L6> [INV], case 16: <L4> [INV], case 24: <L11> [INV], case 32: <L11> [INV]>

  <bb 5> :
<L3>:
  _9 = 1;
  goto <bb 13>; [INV]

  <bb 6> :
<L4>:
  if (is_grey_10(D) != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _11 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
<L6>:
  if (is_rgb16_5(D) != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  *is_rgb16_5(D) = 1;

  <bb 10> :
  _13 = 3;
  goto <bb 13>; [INV]

  <bb 11> :
<L11>:
  _14 = bits_per_pixel_8(D) / 8;
  goto <bb 13>; [INV]

  <bb 12> :
<L13>:
  _15 = 0;

  <bb 13> :
  # _1 = PHI <_9(5), _11(7), _13(10), _14(11), _15(12)>
<L14>:
  return _1;

}



;; Function stbi__tga_info (_ZL14stbi__tga_infoP13stbi__contextPiS1_S1_, funcdef_no=926, decl_uid=10170, cgraph_uid=832, symbol_order=862)

stbi__tga_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  unsigned char D.16466;
  int D.16465;
  int D.16464;
  unsigned char D.16463;
  unsigned char D.16462;
  unsigned char D.16461;
  int tga_colormap_type;
  int sz;
  int tga_colormap_bpp;
  int tga_bits_per_pixel;
  int tga_image_type;
  int tga_comp;
  int tga_h;
  int tga_w;
  bool iftmp.465;
  int D.16407;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  int _5;
  int _8;
  bool iftmp.465_9;
  unsigned char _20;
  int _23;
  unsigned char _25;
  int _28;
  unsigned char _31;
  int _34;
  int _38;
  int _42;
  int _45;
  int _47;
  int _50;
  unsigned char _52;
  int _56;
  bool iftmp.465_59;
  bool iftmp.465_60;
  int _64;
  int _71;

  <bb 2> :
  stbi__get8 (s_17(D));
  _20 = stbi__get8 (s_17(D));
  _1 = _20;
  tga_colormap_type_21 = (int) _1;
  if (tga_colormap_type_21 > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__rewind (s_17(D));
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 4> :
  _25 = stbi__get8 (s_17(D));
  _2 = _25;
  tga_image_type_26 = (int) _2;
  if (tga_colormap_type_21 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 5> :
  if (tga_image_type_26 != 1)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  if (tga_image_type_26 != 9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  stbi__rewind (s_17(D));
  _28 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 8> :
  stbi__skip (s_17(D), 4);
  _31 = stbi__get8 (s_17(D));
  _3 = _31;
  sz_32 = (int) _3;
  if (sz_32 != 8)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  if (sz_32 != 15)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  if (sz_32 != 16)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  if (sz_32 != 24)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  if (sz_32 != 32)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  stbi__rewind (s_17(D));
  _34 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 14> :
  stbi__skip (s_17(D), 4);
  tga_colormap_bpp_36 = sz_32;
  goto <bb 21>; [INV]

  <bb 15> :
  if (tga_image_type_26 != 2)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  if (tga_image_type_26 != 3)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  if (tga_image_type_26 != 10)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  if (tga_image_type_26 != 11)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__rewind (s_17(D));
  _38 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 20> :
  stbi__skip (s_17(D), 9);
  tga_colormap_bpp_40 = 0;

  <bb 21> :
  # tga_colormap_bpp_7 = PHI <tga_colormap_bpp_36(14), tga_colormap_bpp_40(20)>
  _42 = stbi__get16le (s_17(D));
  tga_w_43 = _42;
  if (tga_w_43 <= 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  stbi__rewind (s_17(D));
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 23> :
  _47 = stbi__get16le (s_17(D));
  tga_h_48 = _47;
  if (tga_h_48 <= 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  stbi__rewind (s_17(D));
  _50 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 25> :
  _52 = stbi__get8 (s_17(D));
  _4 = _52;
  tga_bits_per_pixel_53 = (int) _4;
  stbi__get8 (s_17(D));
  if (tga_colormap_bpp_7 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 26> :
  if (tga_bits_per_pixel_53 != 8)
    goto <bb 27>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  if (tga_bits_per_pixel_53 != 16)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stbi__rewind (s_17(D));
  _56 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 29> :
  tga_comp_58 = stbi__tga_get_comp (tga_colormap_bpp_7, 0, 0B);
  goto <bb 35>; [INV]

  <bb 30> :
  if (tga_image_type_26 == 3)
    goto <bb 32>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  if (tga_image_type_26 == 11)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  iftmp.465_60 = 1;
  goto <bb 34>; [INV]

  <bb 33> :
  iftmp.465_59 = 0;

  <bb 34> :
  # iftmp.465_9 = PHI <iftmp.465_60(32), iftmp.465_59(33)>
  _5 = (int) iftmp.465_9;
  tga_comp_62 = stbi__tga_get_comp (tga_bits_per_pixel_53, _5, 0B);

  <bb 35> :
  # tga_comp_6 = PHI <tga_comp_58(29), tga_comp_62(34)>
  if (tga_comp_6 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  stbi__rewind (s_17(D));
  _64 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 44>; [INV]

  <bb 37> :
  if (x_65(D) != 0B)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  *x_65(D) = tga_w_43;

  <bb 39> :
  if (y_67(D) != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  *y_67(D) = tga_h_48;

  <bb 41> :
  if (comp_69(D) != 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  *comp_69(D) = tga_comp_6;

  <bb 43> :
  _71 = 1;

  <bb 44> :
  # _8 = PHI <_23(3), _28(7), _34(13), _38(19), _45(22), _50(24), _56(28), _64(36), _71(43)>
<L53>:
  return _8;

}



;; Function stbi__tga_test (_ZL14stbi__tga_testP13stbi__context, funcdef_no=927, decl_uid=10158, cgraph_uid=833, symbol_order=863)

stbi__tga_test (struct stbi__context * s)
{
  unsigned char D.16523;
  int D.16522;
  int D.16521;
  unsigned char D.16520;
  unsigned char D.16519;
  unsigned char D.16518;
  int tga_color_type;
  int sz;
  int res;
  int D.16516;
  bool retval.467;
  bool retval.466;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  int _5;
  unsigned char _6;
  unsigned char _15;
  unsigned char _18;
  unsigned char _22;
  int _27;
  bool retval.466_28;
  int _30;
  bool retval.467_31;
  unsigned char _33;
  int _37;

  <bb 2> :
  res_10 = 0;
  stbi__get8 (s_12(D));
  _15 = stbi__get8 (s_12(D));
  _1 = _15;
  tga_color_type_16 = (int) _1;
  if (tga_color_type_16 > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 4> :
  _18 = stbi__get8 (s_12(D));
  _2 = _18;
  sz_19 = (int) _2;
  if (tga_color_type_16 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 5> :
  if (sz_19 != 1)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  if (sz_19 != 9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 8> :
  stbi__skip (s_12(D), 4);
  _22 = stbi__get8 (s_12(D));
  _3 = _22;
  sz_23 = (int) _3;
  if (sz_23 != 8)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  if (sz_23 != 15)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  if (sz_23 != 16)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  if (sz_23 != 24)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  if (sz_23 != 32)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 14> :
  stbi__skip (s_12(D), 4);
  goto <bb 21>; [INV]

  <bb 15> :
  if (sz_19 != 2)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  if (sz_19 != 3)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  if (sz_19 != 10)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  if (sz_19 != 11)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 20> :
  stbi__skip (s_12(D), 9);

  <bb 21> :
  _27 = stbi__get16le (s_12(D));
  _4 = _27;
  retval.466_28 = _4 <= 0;
  if (retval.466_28 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 23> :
  _30 = stbi__get16le (s_12(D));
  _5 = _30;
  retval.467_31 = _5 <= 0;
  if (retval.467_31 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 25> :
  _33 = stbi__get8 (s_12(D));
  _6 = _33;
  sz_34 = (int) _6;
  if (tga_color_type_16 == 1)
    goto <bb 26>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 26> :
  if (sz_34 != 8)
    goto <bb 27>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  if (sz_34 != 16)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 29> :
  if (sz_34 != 8)
    goto <bb 30>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 30> :
  if (sz_34 != 15)
    goto <bb 31>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 31> :
  if (sz_34 != 16)
    goto <bb 32>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 32> :
  if (sz_34 != 24)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  if (sz_34 != 32)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  // predicted unlikely by goto predictor.
  goto <bb 36>; [INV]

  <bb 35> :
  res_35 = 1;

  <bb 36> :
  # res_7 = PHI <res_10(3), res_10(7), res_10(13), res_10(19), res_10(22), res_10(24), res_10(28), res_10(34), res_35(35)>
errorEnd:
  stbi__rewind (s_12(D));
  _37 = res_7;

  <bb 37> :
<L48>:
  return _37;

}



;; Function stbi__tga_read_rgb16 (_ZL20stbi__tga_read_rgb16P13stbi__contextPh, funcdef_no=928, decl_uid=12661, cgraph_uid=834, symbol_order=864)

stbi__tga_read_rgb16 (struct stbi__context * s, stbi_uc * out)
{
  int D.16524;
  int b;
  int g;
  int r;
  stbi__uint16 fiveBitMask;
  stbi__uint16 px;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  short unsigned int _8;
  int _9;
  int _10;
  unsigned char _11;
  int _12;
  int _13;
  stbi_uc * _14;
  unsigned char _15;
  int _16;
  int _17;
  stbi_uc * _18;
  unsigned char _19;
  int _23;

  <bb 2> :
  _23 = stbi__get16le (s_21(D));
  _1 = _23;
  px_24 = (stbi__uint16) _1;
  fiveBitMask_25 = 31;
  _2 = (int) px_24;
  _3 = _2 >> 10;
  _4 = (int) fiveBitMask_25;
  r_26 = _3 & _4;
  _5 = (int) px_24;
  _6 = _5 >> 5;
  _7 = (int) fiveBitMask_25;
  g_27 = _6 & _7;
  _8 = px_24 & fiveBitMask_25;
  b_28 = (int) _8;
  _9 = r_26 * 255;
  _10 = _9 / 31;
  _11 = (unsigned char) _10;
  *out_29(D) = _11;
  _12 = g_27 * 255;
  _13 = _12 / 31;
  _14 = out_29(D) + 1;
  _15 = (unsigned char) _13;
  *_14 = _15;
  _16 = b_28 * 255;
  _17 = _16 / 31;
  _18 = out_29(D) + 2;
  _19 = (unsigned char) _17;
  *_18 = _19;
  return;

}



;; Function stbi__tga_load (_ZL14stbi__tga_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=929, decl_uid=10165, cgraph_uid=835, symbol_order=865)

stbi__tga_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  unsigned char * D.16655;
  unsigned char D.16654;
  int D.16653;
  unsigned char D.16652;
  unsigned char D.16651;
  int D.16650;
  unsigned char D.16649;
  unsigned char D.16648;
  int D.16647;
  int D.16646;
  int D.16645;
  int D.16644;
  unsigned char D.16643;
  int D.16642;
  int D.16641;
  unsigned char D.16640;
  unsigned char D.16639;
  unsigned char D.16638;
  unsigned char temp;
  unsigned char * tga_pixel;
  unsigned char temp;
  int index2;
  int index1;
  int pal_idx;
  int RLE_cmd;
  stbi_uc * pal_entry;
  stbi_uc * tga_row;
  int row;
  int read_next_pixel;
  int RLE_repeating;
  int RLE_count;
  unsigned char raw_data[4];
  int j;
  int i;
  unsigned char * tga_palette;
  unsigned char * tga_data;
  int tga_inverted;
  int tga_rgb16;
  int tga_comp;
  int tga_bits_per_pixel;
  int tga_height;
  int tga_width;
  int tga_y_origin;
  int tga_x_origin;
  int tga_palette_bits;
  int tga_palette_len;
  int tga_palette_start;
  int tga_is_RLE;
  int tga_image_type;
  int tga_indexed;
  int tga_offset;
  bool iftmp.476;
  int iftmp.474;
  bool retval.473;
  bool iftmp.472;
  int iftmp.470;
  bool retval.468;
  void * D.16527;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  int _7;
  bool _8;
  bool _9;
  int _10;
  int _11;
  int tga_rgb16.469_12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  int _17;
  int tga_rgb16.471_18;
  sizetype _19;
  int _20;
  int _21;
  int _22;
  unsigned char _23;
  int _24;
  unsigned char _25;
  int _26;
  sizetype _27;
  unsigned char * _28;
  unsigned char _29;
  int tga_rgb16.475_30;
  unsigned char _31;
  int _32;
  int _33;
  sizetype _34;
  unsigned char * _35;
  unsigned char _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  sizetype _42;
  unsigned char * _43;
  sizetype _44;
  unsigned char * _45;
  sizetype _46;
  unsigned char * _47;
  unsigned char _48;
  sizetype _49;
  unsigned char * _50;
  int tga_rgb16.477_51;
  int _52;
  unsigned char _53;
  unsigned char * _54;
  sizetype _55;
  unsigned int tga_height.478_56;
  unsigned int tga_width.479_57;
  void * _87;
  int iftmp.470_88;
  int iftmp.474_89;
  unsigned char _119;
  unsigned char _122;
  unsigned char _125;
  int _129;
  int _132;
  unsigned char _135;
  int _138;
  int _141;
  int _144;
  int _147;
  unsigned char _150;
  unsigned char _154;
  void * _162;
  void * _164;
  void * _173;
  bool retval.468_181;
  void * _183;
  void * _187;
  int iftmp.470_190;
  int iftmp.470_191;
  void * _198;
  void * _204;
  bool iftmp.472_207;
  bool iftmp.472_208;
  int _214;
  bool retval.473_215;
  void * _219;
  unsigned char _222;
  unsigned char _230;
  int iftmp.474_231;
  int _233;
  int iftmp.474_234;
  bool iftmp.476_242;
  bool iftmp.476_243;
  unsigned char _247;
  unsigned char * _277;
  void * _284;

  <bb 2> :
  _119 = stbi__get8 (s_117(D));

  <bb 3> :
  _1 = _119;
  tga_offset_120 = (int) _1;
  _122 = stbi__get8 (s_117(D));

  <bb 4> :
  _2 = _122;
  tga_indexed_123 = (int) _2;
  _125 = stbi__get8 (s_117(D));

  <bb 5> :
  _3 = _125;
  tga_image_type_126 = (int) _3;
  tga_is_RLE_127 = 0;
  _129 = stbi__get16le (s_117(D));

  <bb 6> :
  tga_palette_start_130 = _129;
  _132 = stbi__get16le (s_117(D));

  <bb 7> :
  tga_palette_len_133 = _132;
  _135 = stbi__get8 (s_117(D));

  <bb 8> :
  _4 = _135;
  tga_palette_bits_136 = (int) _4;
  _138 = stbi__get16le (s_117(D));

  <bb 9> :
  tga_x_origin_139 = _138;
  _141 = stbi__get16le (s_117(D));

  <bb 10> :
  tga_y_origin_142 = _141;
  _144 = stbi__get16le (s_117(D));

  <bb 11> :
  tga_width_145 = _144;
  _147 = stbi__get16le (s_117(D));

  <bb 12> :
  tga_height_148 = _147;
  _150 = stbi__get8 (s_117(D));

  <bb 13> :
  _5 = _150;
  tga_bits_per_pixel_151 = (int) _5;
  tga_rgb16 = 0;
  _154 = stbi__get8 (s_117(D));

  <bb 14> :
  _6 = _154;
  tga_inverted_155 = (int) _6;
  tga_palette_156 = 0B;
  raw_data = {};
  RLE_count_158 = 0;
  RLE_repeating_159 = 0;
  read_next_pixel_160 = 1;
  if (tga_height_148 > 16777216)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stbi__err ("too large");
  _162 = 0B;
  goto <bb 125>; [INV]

  <bb 16> :
  if (tga_width_145 > 16777216)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stbi__err ("too large");
  _164 = 0B;
  goto <bb 125>; [INV]

  <bb 18> :
  if (tga_image_type_126 > 7)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  tga_image_type_165 = tga_image_type_126 + -8;
  tga_is_RLE_166 = 1;

  <bb 20> :
  # tga_image_type_58 = PHI <tga_image_type_126(18), tga_image_type_165(19)>
  # tga_is_RLE_59 = PHI <tga_is_RLE_127(18), tga_is_RLE_166(19)>
  _7 = tga_inverted_155 & 32;
  _8 = _7 == 0;
  tga_inverted_167 = (int) _8;
  if (tga_indexed_123 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  tga_comp_169 = stbi__tga_get_comp (tga_palette_bits_136, 0, &tga_rgb16);
  goto <bb 23>; [INV]

  <bb 22> :
  _9 = tga_image_type_58 == 3;
  _10 = (int) _9;
  tga_comp_171 = stbi__tga_get_comp (tga_bits_per_pixel_151, _10, &tga_rgb16);

  <bb 23> :
  # tga_comp_60 = PHI <tga_comp_169(21), tga_comp_171(22)>
  if (tga_comp_60 == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  stbi__err ("bad format");
  _173 = 0B;
  goto <bb 125>; [INV]

  <bb 25> :
  *x_174(D) = tga_width_145;
  *y_176(D) = tga_height_148;
  if (comp_178(D) != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  *comp_178(D) = tga_comp_60;

  <bb 27> :
  _11 = stbi__mad3sizes_valid (tga_width_145, tga_height_148, tga_comp_60, 0);
  retval.468_181 = _11 == 0;
  if (retval.468_181 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stbi__err ("too large");
  _183 = 0B;
  goto <bb 125>; [INV]

  <bb 29> :
  tga_data_185 = stbi__malloc_mad3 (tga_width_145, tga_height_148, tga_comp_60, 0);
  if (tga_data_185 == 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  stbi__err ("outofmem");
  _187 = 0B;
  goto <bb 125>; [INV]

  <bb 31> :
  stbi__skip (s_117(D), tga_offset_120);

  <bb 32> :
  if (tga_indexed_123 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 33> :
  if (tga_is_RLE_59 == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 34> :
  tga_rgb16.469_12 = tga_rgb16;
  if (tga_rgb16.469_12 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 35> :
  i_189 = 0;

  <bb 36> :
  # i_63 = PHI <i_189(35), i_195(41)>
  if (i_63 >= tga_height_148)
    goto <bb 42>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 37> :
  if (tga_inverted_167 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  _13 = tga_height_148 - i_63;
  iftmp.470_190 = _13 + -1;
  goto <bb 40>; [INV]

  <bb 39> :
  iftmp.470_191 = i_63;

  <bb 40> :
  # iftmp.470_88 = PHI <iftmp.470_190(38), iftmp.470_191(39)>
  row_192 = iftmp.470_88;
  _14 = row_192 * tga_width_145;
  _15 = tga_comp_60 * _14;
  _16 = (sizetype) _15;
  tga_row_193 = tga_data_185 + _16;
  _17 = tga_width_145 * tga_comp_60;
  stbi__getn (s_117(D), tga_row_193, _17);

  <bb 41> :
  i_195 = i_63 + 1;
  goto <bb 36>; [INV]

  <bb 42> :
  goto <bb 114>; [INV]

  <bb 43> :
  if (tga_indexed_123 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 44> :
  if (tga_palette_len_133 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  free (tga_data_185);
  stbi__err ("bad palette");
  _198 = 0B;
  goto <bb 125>; [INV]

  <bb 46> :
  stbi__skip (s_117(D), tga_palette_start_130);

  <bb 47> :
  tga_palette_201 = stbi__malloc_mad2 (tga_palette_len_133, tga_comp_60, 0);
  if (tga_palette_201 == 0B)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  free (tga_data_185);
  stbi__err ("outofmem");
  _204 = 0B;
  goto <bb 125>; [INV]

  <bb 49> :
  tga_rgb16.471_18 = tga_rgb16;
  if (tga_rgb16.471_18 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 50> :
  pal_entry_205 = tga_palette_201;
  if (tga_comp_60 == 3)
    goto <bb 53>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  _assert ("tga_comp == STBI_rgb", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5778);

  <bb 52> :
  goto <bb 54>; [INV]

  <bb 53> :
  iftmp.472_208 = 1;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.472_207 = 0;

  <bb 55> :
  i_209 = 0;

  <bb 56> :
  # i_64 = PHI <i_209(55), i_212(58)>
  # pal_entry_82 = PHI <pal_entry_205(55), pal_entry_211(58)>
  if (i_64 >= tga_palette_len_133)
    goto <bb 59>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  stbi__tga_read_rgb16 (s_117(D), pal_entry_82);

  <bb 58> :
  _19 = (sizetype) tga_comp_60;
  pal_entry_211 = pal_entry_82 + _19;
  i_212 = i_64 + 1;
  goto <bb 56>; [INV]

  <bb 59> :
  goto <bb 63>; [INV]

  <bb 60> :
  _20 = tga_palette_len_133 * tga_comp_60;
  _214 = stbi__getn (s_117(D), tga_palette_201, _20);

  <bb 61> :
  _21 = _214;
  retval.473_215 = _21 == 0;
  if (retval.473_215 != 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  free (tga_data_185);
  free (tga_palette_201);
  stbi__err ("bad palette");
  _219 = 0B;
  goto <bb 125>; [INV]

  <bb 63> :

  <bb 64> :
  # tga_palette_62 = PHI <tga_palette_156(43), tga_palette_201(63)>
  i_220 = 0;

  <bb 65> :
  # i_65 = PHI <i_220(64), i_255(103)>
  # RLE_count_72 = PHI <RLE_count_158(64), RLE_count_254(103)>
  # RLE_repeating_75 = PHI <RLE_repeating_159(64), RLE_repeating_77(103)>
  # read_next_pixel_78 = PHI <read_next_pixel_160(64), read_next_pixel_81(103)>
  _22 = tga_width_145 * tga_height_148;
  if (i_65 >= _22)
    goto <bb 104>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 66> :
  if (tga_is_RLE_59 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 67> :
  if (RLE_count_72 == 0)
    goto <bb 68>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 68> :
  _222 = stbi__get8 (s_117(D));

  <bb 69> :
  _23 = _222;
  RLE_cmd_223 = (int) _23;
  _24 = RLE_cmd_223 & 127;
  RLE_count_224 = _24 + 1;
  RLE_repeating_225 = RLE_cmd_223 >> 7;
  read_next_pixel_226 = 1;
  goto <bb 72>; [INV]

  <bb 70> :
  if (RLE_repeating_75 == 0)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  read_next_pixel_227 = 1;

  <bb 72> :
  # RLE_count_73 = PHI <RLE_count_224(69), RLE_count_72(70), RLE_count_72(71)>
  # RLE_repeating_76 = PHI <RLE_repeating_225(69), RLE_repeating_75(70), RLE_repeating_75(71)>
  # read_next_pixel_79 = PHI <read_next_pixel_226(69), read_next_pixel_78(70), read_next_pixel_227(71)>
  goto <bb 74>; [INV]

  <bb 73> :
  read_next_pixel_228 = 1;

  <bb 74> :
  # RLE_count_74 = PHI <RLE_count_73(72), RLE_count_72(73)>
  # RLE_repeating_77 = PHI <RLE_repeating_76(72), RLE_repeating_75(73)>
  # read_next_pixel_80 = PHI <read_next_pixel_79(72), read_next_pixel_228(73)>
  if (read_next_pixel_80 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 75> :
  if (tga_indexed_123 != 0)
    goto <bb 76>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 76> :
  if (tga_bits_per_pixel_151 == 8)
    goto <bb 77>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 77> :
  _230 = stbi__get8 (s_117(D));

  <bb 78> :
  _25 = _230;
  iftmp.474_231 = (int) _25;
  goto <bb 81>; [INV]

  <bb 79> :
  _233 = stbi__get16le (s_117(D));

  <bb 80> :
  iftmp.474_234 = _233;

  <bb 81> :
  # iftmp.474_89 = PHI <iftmp.474_231(78), iftmp.474_234(80)>
  pal_idx_235 = iftmp.474_89;
  if (pal_idx_235 >= tga_palette_len_133)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  pal_idx_236 = 0;

  <bb 83> :
  # pal_idx_83 = PHI <pal_idx_235(81), pal_idx_236(82)>
  pal_idx_237 = pal_idx_83 * tga_comp_60;
  j_238 = 0;

  <bb 84> :
  # j_68 = PHI <j_238(83), j_240(85)>
  if (j_68 >= tga_comp_60)
    goto <bb 86>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _26 = pal_idx_237 + j_68;
  _27 = (sizetype) _26;
  _28 = tga_palette_62 + _27;
  _29 = *_28;
  raw_data[j_68] = _29;
  j_240 = j_68 + 1;
  goto <bb 84>; [INV]

  <bb 86> :
  goto <bb 99>; [INV]

  <bb 87> :
  tga_rgb16.475_30 = tga_rgb16;
  if (tga_rgb16.475_30 != 0)
    goto <bb 88>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 88> :
  if (tga_comp_60 == 3)
    goto <bb 91>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 89> :
  _assert ("tga_comp == STBI_rgb", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5827);

  <bb 90> :
  goto <bb 92>; [INV]

  <bb 91> :
  iftmp.476_243 = 1;
  goto <bb 93>; [INV]

  <bb 92> :
  iftmp.476_242 = 0;

  <bb 93> :
  stbi__tga_read_rgb16 (s_117(D), &raw_data);

  <bb 94> :
  goto <bb 99>; [INV]

  <bb 95> :
  j_245 = 0;

  <bb 96> :
  # j_69 = PHI <j_245(95), j_249(98)>
  if (j_69 >= tga_comp_60)
    goto <bb 99>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 97> :
  _247 = stbi__get8 (s_117(D));

  <bb 98> :
  _31 = _247;
  raw_data[j_69] = _31;
  j_249 = j_69 + 1;
  goto <bb 96>; [INV]

  <bb 99> :
  read_next_pixel_250 = 0;

  <bb 100> :
  # read_next_pixel_81 = PHI <read_next_pixel_80(74), read_next_pixel_250(99)>
  j_251 = 0;

  <bb 101> :
  # j_70 = PHI <j_251(100), j_253(102)>
  if (j_70 >= tga_comp_60)
    goto <bb 103>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 102> :
  _32 = i_65 * tga_comp_60;
  _33 = j_70 + _32;
  _34 = (sizetype) _33;
  _35 = tga_data_185 + _34;
  _36 = raw_data[j_70];
  *_35 = _36;
  j_253 = j_70 + 1;
  goto <bb 101>; [INV]

  <bb 103> :
  RLE_count_254 = RLE_count_74 + -1;
  i_255 = i_65 + 1;
  goto <bb 65>; [INV]

  <bb 104> :
  if (tga_inverted_167 != 0)
    goto <bb 105>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 105> :
  j_256 = 0;

  <bb 106> :
  # j_71 = PHI <j_256(105), j_266(110)>
  _37 = j_71 * 2;
  if (tga_height_148 <= _37)
    goto <bb 111>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 107> :
  _38 = j_71 * tga_width_145;
  index1_257 = tga_comp_60 * _38;
  _39 = tga_height_148 + -1;
  _40 = _39 - j_71;
  _41 = tga_width_145 * _40;
  index2_258 = tga_comp_60 * _41;
  i_259 = tga_width_145 * tga_comp_60;

  <bb 108> :
  # i_66 = PHI <i_259(107), i_265(109)>
  # index1_84 = PHI <index1_257(107), index1_263(109)>
  # index2_85 = PHI <index2_258(107), index2_264(109)>
  if (i_66 <= 0)
    goto <bb 110>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 109> :
  _42 = (sizetype) index1_84;
  _43 = tga_data_185 + _42;
  temp_260 = *_43;
  _44 = (sizetype) index2_85;
  _45 = tga_data_185 + _44;
  _46 = (sizetype) index1_84;
  _47 = tga_data_185 + _46;
  _48 = *_45;
  *_47 = _48;
  _49 = (sizetype) index2_85;
  _50 = tga_data_185 + _49;
  *_50 = temp_260;
  index1_263 = index1_84 + 1;
  index2_264 = index2_85 + 1;
  i_265 = i_66 + -1;
  goto <bb 108>; [INV]

  <bb 110> :
  j_266 = j_71 + 1;
  goto <bb 106>; [INV]

  <bb 111> :

  <bb 112> :
  if (tga_palette_62 != 0B)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  free (tga_palette_62);

  <bb 114> :
  if (tga_comp_60 > 2)
    goto <bb 115>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 115> :
  tga_rgb16.477_51 = tga_rgb16;
  if (tga_rgb16.477_51 == 0)
    goto <bb 116>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 116> :
  tga_pixel_268 = tga_data_185;
  i_269 = 0;

  <bb 117> :
  # i_67 = PHI <i_269(116), i_274(118)>
  # tga_pixel_86 = PHI <tga_pixel_268(116), tga_pixel_273(118)>
  _52 = tga_width_145 * tga_height_148;
  if (i_67 >= _52)
    goto <bb 119>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 118> :
  temp_270 = *tga_pixel_86;
  _53 = MEM[(unsigned char *)tga_pixel_86 + 2B];
  *tga_pixel_86 = _53;
  _54 = tga_pixel_86 + 2;
  *_54 = temp_270;
  _55 = (sizetype) tga_comp_60;
  tga_pixel_273 = tga_pixel_86 + _55;
  i_274 = i_67 + 1;
  goto <bb 117>; [INV]

  <bb 119> :

  <bb 120> :
  if (req_comp_275(D) != 0)
    goto <bb 121>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 121> :
  if (req_comp_275(D) != tga_comp_60)
    goto <bb 122>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 122> :
  tga_height.478_56 = (unsigned int) tga_height_148;
  tga_width.479_57 = (unsigned int) tga_width_145;
  _277 = stbi__convert_format (tga_data_185, tga_comp_60, req_comp_275(D), tga_width.479_57, tga_height.478_56);

  <bb 123> :
  tga_data_278 = _277;

  <bb 124> :
  # tga_data_61 = PHI <tga_data_185(120), tga_data_185(121), tga_data_278(123)>
  tga_y_origin_279 = 0;
  tga_x_origin_280 = tga_y_origin_279;
  tga_palette_bits_281 = tga_x_origin_280;
  tga_palette_len_282 = tga_palette_bits_281;
  tga_palette_start_283 = tga_palette_len_282;
  _284 = tga_data_61;

  <bb 125> :
  # _87 = PHI <_162(15), _164(17), _173(24), _183(28), _187(30), _198(45), _204(48), _219(62), _284(124)>
  tga_rgb16 ={v} {CLOBBER};
  raw_data ={v} {CLOBBER};

  <bb 126> :
<L115>:
  return _87;

  <bb 127> :
<L116>:
  resx 1

}



;; Function stbi__psd_test (_ZL14stbi__psd_testP13stbi__context, funcdef_no=930, decl_uid=10172, cgraph_uid=836, symbol_order=866)

stbi__psd_test (struct stbi__context * s)
{
  unsigned int D.16660;
  int r;
  int D.16658;
  unsigned int _1;
  bool _2;
  unsigned int _6;
  int _9;

  <bb 2> :
  _6 = stbi__get32be (s_4(D));
  _1 = _6;
  _2 = _1 == 943870035;
  r_7 = (int) _2;
  stbi__rewind (s_4(D));
  _9 = r_7;

  <bb 3> :
<L0>:
  return _9;

}



;; Function stbi__psd_decode_rle (_ZL20stbi__psd_decode_rleP13stbi__contextPhi, funcdef_no=931, decl_uid=12734, cgraph_uid=837, symbol_order=867)

stbi__psd_decode_rle (struct stbi__context * s, stbi_uc * p, int pixelCount)
{
  stbi_uc D.16685;
  unsigned char D.16684;
  unsigned char D.16683;
  stbi_uc val;
  int len;
  int nleft;
  int count;
  int D.16671;
  bool retval.480;
  unsigned char _1;
  unsigned char _2;
  int _11;
  bool retval.480_22;
  unsigned char _25;
  int _28;
  unsigned char _31;
  int _36;
  stbi_uc _38;
  int _44;

  <bb 2> :
  count_17 = 0;

  <bb 3> :
  # p_3 = PHI <p_18(D)(2), p_6(18)>
  # count_7 = PHI <count_17(2), count_8(18)>
  nleft_21 = pixelCount_20(D) - count_7;
  retval.480_22 = nleft_21 > 0;
  if (retval.480_22 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 4> :
  _25 = stbi__get8 (s_23(D));
  _1 = _25;
  len_26 = (int) _1;
  if (len_26 == 128)
    goto <bb 18>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (len_26 <= 127)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  len_27 = len_26 + 1;
  if (len_27 > nleft_21)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _28 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 8> :
  count_29 = count_7 + len_27;

  <bb 9> :
  # p_4 = PHI <p_3(8), p_33(10)>
  # len_9 = PHI <len_27(8), len_34(10)>
  if (len_9 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _31 = stbi__get8 (s_23(D));
  _2 = _31;
  *p_4 = _2;
  p_33 = p_4 + 4;
  len_34 = len_9 + -1;
  goto <bb 9>; [INV]

  <bb 11> :
  if (len_26 > 128)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  len_35 = 257 - len_26;
  if (len_35 > nleft_21)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _36 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 14> :
  _38 = stbi__get8 (s_23(D));
  val_39 = _38;
  count_40 = count_7 + len_35;

  <bb 15> :
  # p_5 = PHI <p_3(14), p_42(16)>
  # len_10 = PHI <len_35(14), len_43(16)>
  if (len_10 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  *p_5 = val_39;
  p_42 = p_5 + 4;
  len_43 = len_10 + -1;
  goto <bb 15>; [INV]

  <bb 17> :

  <bb 18> :
  # p_6 = PHI <p_3(4), p_4(9), p_3(11), p_5(17)>
  # count_8 = PHI <count_7(4), count_29(9), count_7(11), count_40(17)>
  goto <bb 3>; [INV]

  <bb 19> :
  _44 = 1;

  <bb 20> :
  # _11 = PHI <_28(7), _36(13), _44(19)>
<L22>:
  return _11;

}



;; Function stbi__psd_load (_ZL14stbi__psd_loadP13stbi__contextPiS1_S1_iP17stbi__result_infoi, funcdef_no=932, decl_uid=10180, cgraph_uid=838, symbol_order=868)

stbi__psd_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri, int bpc)
{
  stbi_uc * D.16819;
  stbi_uc * D.16818;
  unsigned char D.16817;
  int D.16816;
  int D.16815;
  int D.16814;
  int D.16813;
  unsigned int D.16812;
  unsigned int D.16811;
  unsigned int D.16810;
  int D.16809;
  int D.16808;
  unsigned int D.16807;
  unsigned int D.16806;
  int D.16805;
  int D.16804;
  unsigned int D.16803;
  float inv_a;
  float ra;
  float a;
  unsigned char * pixel;
  float inv_a;
  float ra;
  float a;
  stbi__uint16 * pixel;
  stbi_uc * p;
  stbi__uint16 * q;
  stbi_uc val;
  stbi_uc * p;
  stbi__uint16 val;
  stbi__uint16 * q;
  stbi_uc * p;
  stbi_uc * out;
  int h;
  int w;
  int bitdepth;
  int i;
  int channel;
  int compression;
  int channelCount;
  int pixelCount;
  stbi_uc iftmp.488;
  stbi__uint16 iftmp.487;
  bool retval.486;
  stbi_uc iftmp.485;
  bool retval.484;
  bool retval.483;
  bool retval.482;
  void * D.16689;
  bool retval.481;
  unsigned int _1;
  int _2;
  unsigned int _3;
  unsigned int _4;
  int _5;
  unsigned int _6;
  int _7;
  unsigned int _8;
  int _9;
  unsigned int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  long long unsigned int _15;
  int _16;
  int _17;
  sizetype _18;
  int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  sizetype _22;
  int _23;
  long long unsigned int _24;
  long long unsigned int _25;
  int _26;
  short unsigned int _27;
  sizetype _28;
  int _29;
  int _30;
  unsigned char _31;
  unsigned char _32;
  int _33;
  int _34;
  int _35;
  long long unsigned int _36;
  long long unsigned int _37;
  stbi__uint16 * _38;
  short unsigned int _39;
  stbi__uint16 * _40;
  short unsigned int _41;
  stbi__uint16 * _42;
  short unsigned int _43;
  int _44;
  float _45;
  float _46;
  short unsigned int _47;
  int _48;
  float _49;
  float _50;
  float _51;
  short unsigned int _52;
  stbi__uint16 * _53;
  short unsigned int _54;
  int _55;
  float _56;
  float _57;
  float _58;
  stbi__uint16 * _59;
  short unsigned int _60;
  stbi__uint16 * _61;
  short unsigned int _62;
  int _63;
  float _64;
  float _65;
  float _66;
  stbi__uint16 * _67;
  short unsigned int _68;
  int _69;
  int _70;
  sizetype _71;
  unsigned char * _72;
  unsigned char _73;
  unsigned char * _74;
  unsigned char _75;
  unsigned char * _76;
  unsigned char _77;
  int _78;
  float _79;
  float _80;
  unsigned char _81;
  int _82;
  float _83;
  float _84;
  float _85;
  unsigned char _86;
  unsigned char * _87;
  unsigned char _88;
  int _89;
  float _90;
  float _91;
  float _92;
  unsigned char * _93;
  unsigned char _94;
  unsigned char * _95;
  unsigned char _96;
  int _97;
  float _98;
  float _99;
  float _100;
  unsigned char * _101;
  unsigned char _102;
  int _103;
  unsigned int h.489_104;
  unsigned int w.490_105;
  unsigned int h.491_106;
  unsigned int w.492_107;
  void * _127;
  stbi_uc iftmp.485_128;
  stbi__uint16 iftmp.487_129;
  stbi_uc iftmp.488_130;
  unsigned int _157;
  bool retval.481_158;
  void * _160;
  int _162;
  bool retval.482_163;
  void * _165;
  int _168;
  unsigned int _171;
  unsigned int _174;
  void * _177;
  void * _179;
  int _181;
  void * _184;
  int _186;
  bool retval.483_187;
  void * _189;
  unsigned int _191;
  unsigned int _194;
  unsigned int _197;
  int _200;
  void * _203;
  bool retval.484_205;
  void * _207;
  void * _216;
  stbi_uc iftmp.485_222;
  stbi_uc iftmp.485_223;
  int _228;
  bool retval.486_229;
  void * _232;
  stbi__uint16 iftmp.487_236;
  stbi__uint16 iftmp.487_237;
  stbi_uc iftmp.488_244;
  stbi_uc iftmp.488_245;
  int _254;
  int _261;
  unsigned char _267;
  stbi_uc * _292;
  stbi_uc * _295;
  void * _297;
  void * _304;
  void * _306;

  <bb 2> :
  _157 = stbi__get32be (s_155(D));
  _1 = _157;
  retval.481_158 = _1 != 943870035;
  if (retval.481_158 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("not PSD");
  _160 = 0B;
  goto <bb 101>; [INV]

  <bb 4> :
  _162 = stbi__get16be (s_155(D));
  _2 = _162;
  retval.482_163 = _2 != 1;
  if (retval.482_163 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__err ("wrong version");
  _165 = 0B;
  goto <bb 101>; [INV]

  <bb 6> :
  stbi__skip (s_155(D), 6);
  _168 = stbi__get16be (s_155(D));
  channelCount_169 = _168;
  if (channelCount_169 < 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (channelCount_169 > 16)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  stbi__err ("wrong channel count");
  _306 = 0B;
  goto <bb 101>; [INV]

  <bb 9> :
  _171 = stbi__get32be (s_155(D));
  _3 = _171;
  h_172 = (int) _3;
  _174 = stbi__get32be (s_155(D));
  _4 = _174;
  w_175 = (int) _4;
  if (h_172 > 16777216)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__err ("too large");
  _177 = 0B;
  goto <bb 101>; [INV]

  <bb 11> :
  if (w_175 > 16777216)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  stbi__err ("too large");
  _179 = 0B;
  goto <bb 101>; [INV]

  <bb 13> :
  _181 = stbi__get16be (s_155(D));
  bitdepth_182 = _181;
  if (bitdepth_182 != 8)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  if (bitdepth_182 != 16)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  stbi__err ("unsupported bit depth");
  _184 = 0B;
  goto <bb 101>; [INV]

  <bb 16> :
  _186 = stbi__get16be (s_155(D));
  _5 = _186;
  retval.483_187 = _5 != 3;
  if (retval.483_187 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stbi__err ("wrong color format");
  _189 = 0B;
  goto <bb 101>; [INV]

  <bb 18> :
  _191 = stbi__get32be (s_155(D));
  _6 = _191;
  _7 = (int) _6;
  stbi__skip (s_155(D), _7);
  _194 = stbi__get32be (s_155(D));
  _8 = _194;
  _9 = (int) _8;
  stbi__skip (s_155(D), _9);
  _197 = stbi__get32be (s_155(D));
  _10 = _197;
  _11 = (int) _10;
  stbi__skip (s_155(D), _11);
  _200 = stbi__get16be (s_155(D));
  compression_201 = _200;
  if (compression_201 > 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__err ("bad compression");
  _203 = 0B;
  goto <bb 101>; [INV]

  <bb 20> :
  _12 = stbi__mad3sizes_valid (4, w_175, h_172, 0);
  retval.484_205 = _12 == 0;
  if (retval.484_205 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  stbi__err ("too large");
  _207 = 0B;
  goto <bb 101>; [INV]

  <bb 22> :
  if (compression_201 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  if (bitdepth_182 == 16)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  if (bpc_208(D) == 16)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  out_210 = stbi__malloc_mad3 (8, w_175, h_172, 0);
  ri_211(D)->bits_per_channel = 16;
  goto <bb 27>; [INV]

  <bb 26> :
  _13 = w_175 * h_172;
  _14 = _13 * 4;
  _15 = (long long unsigned int) _14;
  out_214 = stbi__malloc (_15);

  <bb 27> :
  # out_118 = PHI <out_210(25), out_214(26)>
  if (out_118 == 0B)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  stbi__err ("outofmem");
  _216 = 0B;
  goto <bb 101>; [INV]

  <bb 29> :
  pixelCount_217 = w_175 * h_172;
  if (compression_201 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 30> :
  _16 = h_172 * channelCount_169;
  _17 = _16 * 2;
  stbi__skip (s_155(D), _17);
  channel_219 = 0;

  <bb 31> :
  # channel_108 = PHI <channel_219(30), channel_233(41)>
  if (channel_108 > 3)
    goto <bb 42>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _18 = (sizetype) channel_108;
  p_220 = out_118 + _18;
  if (channel_108 >= channelCount_169)
    goto <bb 33>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 33> :
  i_221 = 0;

  <bb 34> :
  # i_110 = PHI <i_221(33), i_225(38)>
  # p_121 = PHI <p_220(33), p_226(38)>
  if (i_110 >= pixelCount_217)
    goto <bb 41>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  if (channel_108 == 3)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  iftmp.485_222 = 255;
  goto <bb 38>; [INV]

  <bb 37> :
  iftmp.485_223 = 0;

  <bb 38> :
  # iftmp.485_128 = PHI <iftmp.485_222(36), iftmp.485_223(37)>
  *p_121 = iftmp.485_128;
  i_225 = i_110 + 1;
  p_226 = p_121 + 4;
  goto <bb 34>; [INV]

  <bb 39> :
  _228 = stbi__psd_decode_rle (s_155(D), p_220, pixelCount_217);
  _19 = _228;
  retval.486_229 = _19 == 0;
  if (retval.486_229 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  free (out_118);
  stbi__err ("corrupt");
  _232 = 0B;
  goto <bb 101>; [INV]

  <bb 41> :
  channel_233 = channel_108 + 1;
  goto <bb 31>; [INV]

  <bb 42> :
  goto <bb 75>; [INV]

  <bb 43> :
  channel_234 = 0;

  <bb 44> :
  # channel_109 = PHI <channel_234(43), channel_271(74)>
  if (channel_109 > 3)
    goto <bb 75>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  if (channel_109 >= channelCount_169)
    goto <bb 46>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 46> :
  if (bitdepth_182 == 16)
    goto <bb 47>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 47> :
  if (bpc_208(D) == 16)
    goto <bb 48>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 48> :
  _20 = (long long unsigned int) channel_109;
  _21 = _20 * 2;
  q_235 = out_118 + _21;
  if (channel_109 == 3)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  iftmp.487_236 = 65535;
  goto <bb 51>; [INV]

  <bb 50> :
  iftmp.487_237 = 0;

  <bb 51> :
  # iftmp.487_129 = PHI <iftmp.487_236(49), iftmp.487_237(50)>
  val_238 = iftmp.487_129;
  i_239 = 0;

  <bb 52> :
  # i_111 = PHI <i_239(51), i_241(53)>
  # q_122 = PHI <q_235(51), q_242(53)>
  if (i_111 >= pixelCount_217)
    goto <bb 54>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 53> :
  *q_122 = val_238;
  i_241 = i_111 + 1;
  q_242 = q_122 + 8;
  goto <bb 52>; [INV]

  <bb 54> :
  goto <bb 61>; [INV]

  <bb 55> :
  _22 = (sizetype) channel_109;
  p_243 = out_118 + _22;
  if (channel_109 == 3)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  iftmp.488_244 = 255;
  goto <bb 58>; [INV]

  <bb 57> :
  iftmp.488_245 = 0;

  <bb 58> :
  # iftmp.488_130 = PHI <iftmp.488_244(56), iftmp.488_245(57)>
  val_246 = iftmp.488_130;
  i_247 = 0;

  <bb 59> :
  # i_112 = PHI <i_247(58), i_249(60)>
  # p_123 = PHI <p_243(58), p_250(60)>
  if (i_112 >= pixelCount_217)
    goto <bb 61>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  *p_123 = val_246;
  i_249 = i_112 + 1;
  p_250 = p_123 + 4;
  goto <bb 59>; [INV]

  <bb 61> :
  goto <bb 74>; [INV]

  <bb 62> :
  _23 = ri_211(D)->bits_per_channel;
  if (_23 == 16)
    goto <bb 63>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 63> :
  _24 = (long long unsigned int) channel_109;
  _25 = _24 * 2;
  q_251 = out_118 + _25;
  i_252 = 0;

  <bb 64> :
  # i_113 = PHI <i_252(63), i_256(65)>
  # q_124 = PHI <q_251(63), q_257(65)>
  if (i_113 >= pixelCount_217)
    goto <bb 66>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 65> :
  _254 = stbi__get16be (s_155(D));
  _26 = _254;
  _27 = (short unsigned int) _26;
  *q_124 = _27;
  i_256 = i_113 + 1;
  q_257 = q_124 + 8;
  goto <bb 64>; [INV]

  <bb 66> :
  goto <bb 74>; [INV]

  <bb 67> :
  _28 = (sizetype) channel_109;
  p_258 = out_118 + _28;
  if (bitdepth_182 == 16)
    goto <bb 68>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 68> :
  i_259 = 0;

  <bb 69> :
  # i_114 = PHI <i_259(68), i_263(70)>
  # p_125 = PHI <p_258(68), p_264(70)>
  if (i_114 >= pixelCount_217)
    goto <bb 74>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  _261 = stbi__get16be (s_155(D));
  _29 = _261;
  _30 = _29 >> 8;
  _31 = (unsigned char) _30;
  *p_125 = _31;
  i_263 = i_114 + 1;
  p_264 = p_125 + 4;
  goto <bb 69>; [INV]

  <bb 71> :
  i_265 = 0;

  <bb 72> :
  # i_115 = PHI <i_265(71), i_269(73)>
  # p_126 = PHI <p_258(71), p_270(73)>
  if (i_115 >= pixelCount_217)
    goto <bb 74>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 73> :
  _267 = stbi__get8 (s_155(D));
  _32 = _267;
  *p_126 = _32;
  i_269 = i_115 + 1;
  p_270 = p_126 + 4;
  goto <bb 72>; [INV]

  <bb 74> :
  channel_271 = channel_109 + 1;
  goto <bb 44>; [INV]

  <bb 75> :
  if (channelCount_169 > 3)
    goto <bb 76>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 76> :
  _33 = ri_211(D)->bits_per_channel;
  if (_33 == 16)
    goto <bb 77>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 77> :
  i_272 = 0;

  <bb 78> :
  # i_116 = PHI <i_272(77), i_280(82)>
  _34 = w_175 * h_172;
  if (i_116 >= _34)
    goto <bb 83>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 79> :
  _35 = i_116 * 4;
  _36 = (long long unsigned int) _35;
  _37 = _36 * 2;
  pixel_273 = out_118 + _37;
  _38 = pixel_273 + 6;
  _39 = *_38;
  if (_39 != 0)
    goto <bb 80>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 80> :
  _40 = pixel_273 + 6;
  _41 = *_40;
  if (_41 != 65535)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  _42 = pixel_273 + 6;
  _43 = *_42;
  _44 = (int) _43;
  _45 = (float) _44;
  a_274 = _45 / 6.5535e+4;
  ra_275 = 1.0e+0 / a_274;
  _46 = 1.0e+0 - ra_275;
  inv_a_276 = _46 * 6.5535e+4;
  _47 = *pixel_273;
  _48 = (int) _47;
  _49 = (float) _48;
  _50 = ra_275 * _49;
  _51 = inv_a_276 + _50;
  _52 = (short unsigned int) _51;
  *pixel_273 = _52;
  _53 = pixel_273 + 2;
  _54 = *_53;
  _55 = (int) _54;
  _56 = (float) _55;
  _57 = ra_275 * _56;
  _58 = inv_a_276 + _57;
  _59 = pixel_273 + 2;
  _60 = (short unsigned int) _58;
  *_59 = _60;
  _61 = pixel_273 + 4;
  _62 = *_61;
  _63 = (int) _62;
  _64 = (float) _63;
  _65 = ra_275 * _64;
  _66 = inv_a_276 + _65;
  _67 = pixel_273 + 4;
  _68 = (short unsigned int) _66;
  *_67 = _68;

  <bb 82> :
  i_280 = i_116 + 1;
  goto <bb 78>; [INV]

  <bb 83> :
  goto <bb 90>; [INV]

  <bb 84> :
  i_281 = 0;

  <bb 85> :
  # i_117 = PHI <i_281(84), i_289(89)>
  _69 = w_175 * h_172;
  if (i_117 >= _69)
    goto <bb 90>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _70 = i_117 * 4;
  _71 = (sizetype) _70;
  pixel_282 = out_118 + _71;
  _72 = pixel_282 + 3;
  _73 = *_72;
  if (_73 != 0)
    goto <bb 87>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 87> :
  _74 = pixel_282 + 3;
  _75 = *_74;
  if (_75 != 255)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  _76 = pixel_282 + 3;
  _77 = *_76;
  _78 = (int) _77;
  _79 = (float) _78;
  a_283 = _79 / 2.55e+2;
  ra_284 = 1.0e+0 / a_283;
  _80 = 1.0e+0 - ra_284;
  inv_a_285 = _80 * 2.55e+2;
  _81 = *pixel_282;
  _82 = (int) _81;
  _83 = (float) _82;
  _84 = ra_284 * _83;
  _85 = inv_a_285 + _84;
  _86 = (unsigned char) _85;
  *pixel_282 = _86;
  _87 = pixel_282 + 1;
  _88 = *_87;
  _89 = (int) _88;
  _90 = (float) _89;
  _91 = ra_284 * _90;
  _92 = inv_a_285 + _91;
  _93 = pixel_282 + 1;
  _94 = (unsigned char) _92;
  *_93 = _94;
  _95 = pixel_282 + 2;
  _96 = *_95;
  _97 = (int) _96;
  _98 = (float) _97;
  _99 = ra_284 * _98;
  _100 = inv_a_285 + _99;
  _101 = pixel_282 + 2;
  _102 = (unsigned char) _100;
  *_101 = _102;

  <bb 89> :
  i_289 = i_117 + 1;
  goto <bb 85>; [INV]

  <bb 90> :

  <bb 91> :
  if (req_comp_290(D) != 0)
    goto <bb 92>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 92> :
  if (req_comp_290(D) != 4)
    goto <bb 93>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 93> :
  _103 = ri_211(D)->bits_per_channel;
  if (_103 == 16)
    goto <bb 94>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 94> :
  h.489_104 = (unsigned int) h_172;
  w.490_105 = (unsigned int) w_175;
  _292 = stbi__convert_format16 (out_118, 4, req_comp_290(D), w.490_105, h.489_104);
  out_293 = _292;
  goto <bb 96>; [INV]

  <bb 95> :
  h.491_106 = (unsigned int) h_172;
  w.492_107 = (unsigned int) w_175;
  _295 = stbi__convert_format (out_118, 4, req_comp_290(D), w.492_107, h.491_106);
  out_296 = _295;

  <bb 96> :
  # out_119 = PHI <out_293(94), out_296(95)>
  if (out_119 == 0B)
    goto <bb 97>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 97> :
  _297 = out_119;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 101>; [INV]

  <bb 98> :
  # out_120 = PHI <out_118(91), out_118(92), out_119(96)>
  if (comp_298(D) != 0B)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  *comp_298(D) = 4;

  <bb 100> :
  *y_300(D) = h_172;
  *x_302(D) = w_175;
  _304 = out_120;

  <bb 101> :
  # _127 = PHI <_160(3), _165(5), _306(8), _177(10), _179(12), _184(15), _189(17), _203(19), _207(21), _216(28), _232(40), _297(97), _304(100)>
<L117>:
  return _127;

}



;; Function stbi__pic_is4 (_ZL13stbi__pic_is4P13stbi__contextPKc, funcdef_no=933, decl_uid=12801, cgraph_uid=839, symbol_order=869)

stbi__pic_is4 (struct stbi__context * s, const char * str)
{
  unsigned char D.16827;
  int i;
  int D.16825;
  bool retval.493;
  unsigned char _1;
  sizetype _2;
  const char * _3;
  char _4;
  unsigned char _5;
  int _7;
  unsigned char _14;
  bool retval.493_16;
  int _17;
  int _19;

  <bb 2> :
  i_10 = 0;

  <bb 3> :
  # i_6 = PHI <i_10(2), i_18(6)>
  if (i_6 > 3)
    goto <bb 7>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _14 = stbi__get8 (s_12(D));
  _1 = _14;
  _2 = (sizetype) i_6;
  _3 = str_15(D) + _2;
  _4 = *_3;
  _5 = (unsigned char) _4;
  retval.493_16 = _1 != _5;
  if (retval.493_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _17 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 6> :
  i_18 = i_6 + 1;
  goto <bb 3>; [INV]

  <bb 7> :
  _19 = 1;

  <bb 8> :
  # _7 = PHI <_17(5), _19(7)>
<L5>:
  return _7;

}



;; Function stbi__pic_test_core (_ZL19stbi__pic_test_coreP13stbi__context, funcdef_no=934, decl_uid=12807, cgraph_uid=840, symbol_order=870)

stbi__pic_test_core (struct stbi__context * s)
{
  int D.16839;
  int D.16838;
  int i;
  bool retval.495;
  int D.16831;
  bool retval.494;
  int _1;
  int _2;
  int _4;
  int _10;
  bool retval.494_11;
  int _12;
  int _17;
  bool retval.495_18;
  int _19;
  int _20;

  <bb 2> :
  _10 = stbi__pic_is4 (s_8(D), "S\x80\xf64");
  _1 = _10;
  retval.494_11 = _1 == 0;
  if (retval.494_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  i_13 = 0;

  <bb 5> :
  # i_3 = PHI <i_13(4), i_15(6)>
  if (i_3 > 83)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  stbi__get8 (s_8(D));
  i_15 = i_3 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  _17 = stbi__pic_is4 (s_8(D), "PICT");
  _2 = _17;
  retval.495_18 = _2 == 0;
  if (retval.495_18 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  _20 = 1;

  <bb 10> :
  # _4 = PHI <_12(3), _19(8), _20(9)>
<L7>:
  return _4;

}



;; Function stbi__readval (_ZL13stbi__readvalP13stbi__contextiPh, funcdef_no=935, decl_uid=12821, cgraph_uid=841, symbol_order=871)

stbi__readval (struct stbi__context * s, int channel, stbi_uc * dest)
{
  unsigned char D.16851;
  int D.16850;
  int i;
  int mask;
  stbi_uc * D.16847;
  bool retval.496;
  int _1;
  int _2;
  sizetype _3;
  stbi_uc * _4;
  unsigned char _5;
  stbi_uc * _8;
  int _18;
  bool retval.496_19;
  stbi_uc * _21;
  unsigned char _24;
  stbi_uc * _28;

  <bb 2> :
  mask_12 = 128;
  i_13 = 0;

  <bb 3> :
  # mask_6 = PHI <mask_12(2), mask_27(8)>
  # i_7 = PHI <i_13(2), i_26(8)>
  if (i_7 > 3)
    goto <bb 9>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = channel_15(D) & mask_6;
  if (_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _18 = stbi__at_eof (s_16(D));
  _2 = _18;
  retval.496_19 = _2 != 0;
  if (retval.496_19 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  stbi__err ("bad file");
  _21 = 0B;
  goto <bb 10>; [INV]

  <bb 7> :
  _3 = (sizetype) i_7;
  _4 = dest_22(D) + _3;
  _24 = stbi__get8 (s_16(D));
  _5 = _24;
  *_4 = _5;

  <bb 8> :
  i_26 = i_7 + 1;
  mask_27 = mask_6 >> 1;
  goto <bb 3>; [INV]

  <bb 9> :
  _28 = dest_22(D);

  <bb 10> :
  # _8 = PHI <_21(6), _28(9)>
<L8>:
  return _8;

}



;; Function stbi__copyval (_ZL13stbi__copyvaliPhPKh, funcdef_no=936, decl_uid=12830, cgraph_uid=842, symbol_order=872)

stbi__copyval (int channel, stbi_uc * dest, const stbi_uc * src)
{
  int i;
  int mask;
  int _1;
  sizetype _2;
  const stbi_uc * _3;
  sizetype _4;
  stbi_uc * _5;
  unsigned char _6;

  <bb 2> :
  mask_11 = 128;
  i_12 = 0;

  <bb 3> :
  # mask_7 = PHI <mask_11(2), mask_19(6)>
  # i_8 = PHI <i_12(2), i_18(6)>
  if (i_8 > 3)
    goto <bb 7>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = channel_14(D) & mask_7;
  if (_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = (sizetype) i_8;
  _3 = src_15(D) + _2;
  _4 = (sizetype) i_8;
  _5 = dest_16(D) + _4;
  _6 = *_3;
  *_5 = _6;

  <bb 6> :
  i_18 = i_8 + 1;
  mask_19 = mask_7 >> 1;
  goto <bb 3>; [INV]

  <bb 7> :
  return;

}



;; Function stbi__pic_load_core (_ZL19stbi__pic_load_coreP13stbi__contextiiPiPh, funcdef_no=937, decl_uid=12841, cgraph_uid=843, symbol_order=873)

stbi__pic_load_core (struct stbi__context * s, int width, int height, int * comp, stbi_uc * result)
{
  stbi_uc * D.16938;
  stbi_uc * D.16934;
  int D.16933;
  int D.16932;
  unsigned char D.16931;
  stbi_uc * D.16927;
  int D.16926;
  stbi_uc D.16925;
  stbi_uc * D.16924;
  int D.16923;
  unsigned char D.16922;
  unsigned char D.16921;
  unsigned char D.16920;
  unsigned char D.16919;
  stbi_uc value[4];
  int i;
  int count;
  int left;
  stbi_uc value[4];
  stbi_uc count;
  int i;
  int left;
  int x;
  stbi_uc * dest;
  struct stbi__pic_packet * packet;
  int packet_idx;
  struct stbi__pic_packet * packet;
  struct stbi__pic_packet packets[10];
  int chained;
  int y;
  int num_packets;
  int act_comp;
  bool retval.505;
  bool retval.504;
  bool retval.503;
  bool retval.502;
  bool retval.501;
  bool retval.500;
  int iftmp.499;
  bool retval.498;
  stbi_uc * D.16860;
  int num_packets.497_1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  int _17;
  stbi_uc * _18;
  int _19;
  int _20;
  unsigned char _21;
  int _22;
  stbi_uc * _23;
  int _24;
  unsigned char _25;
  int _26;
  int _27;
  unsigned char _28;
  int _29;
  unsigned char _30;
  int _31;
  stbi_uc * _32;
  unsigned char _33;
  int _34;
  unsigned char _35;
  int _36;
  stbi_uc * _37;
  stbi_uc * _58;
  stbi_uc * _59;
  stbi_uc * _60;
  int iftmp.499_61;
  stbi_uc * _84;
  unsigned char _89;
  unsigned char _92;
  unsigned char _95;
  unsigned char _98;
  int _102;
  bool retval.498_103;
  stbi_uc * _105;
  stbi_uc * _107;
  int iftmp.499_108;
  int iftmp.499_109;
  stbi_uc * _120;
  stbi_uc * _123;
  bool retval.500_124;
  stbi_uc * _125;
  stbi_uc _130;
  int _133;
  bool retval.501_134;
  stbi_uc * _136;
  stbi_uc * _139;
  bool retval.502_140;
  stbi_uc * _141;
  unsigned char _152;
  int _155;
  bool retval.503_156;
  stbi_uc * _158;
  int _160;
  stbi_uc * _164;
  stbi_uc * _166;
  bool retval.504_167;
  stbi_uc * _168;
  stbi_uc * _178;
  stbi_uc * _181;
  bool retval.505_182;
  stbi_uc * _183;
  stbi_uc * _189;

  <bb 2> :
  act_comp_80 = 0;
  num_packets_81 = 0;

  <bb 3> :
  # act_comp_38 = PHI <act_comp_80(2), act_comp_100(15)>
  # num_packets_39 = PHI <num_packets_81(2), num_packets_85(15)>
  if (num_packets_39 == 10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__err ("bad format");
  _84 = 0B;
  goto <bb 83>; [INV]

  <bb 5> :
  num_packets.497_1 = num_packets_39;
  num_packets_85 = num_packets.497_1 + 1;
  packet_86 = &packets[num_packets.497_1];
  _89 = stbi__get8 (s_87(D));

  <bb 6> :
  _2 = _89;
  chained_90 = (int) _2;
  _92 = stbi__get8 (s_87(D));

  <bb 7> :
  _3 = _92;
  packet_86->size = _3;
  _95 = stbi__get8 (s_87(D));

  <bb 8> :
  _4 = _95;
  packet_86->type = _4;
  _98 = stbi__get8 (s_87(D));

  <bb 9> :
  _5 = _98;
  packet_86->channel = _5;
  _6 = packet_86->channel;
  _7 = (int) _6;
  act_comp_100 = act_comp_38 | _7;
  _102 = stbi__at_eof (s_87(D));

  <bb 10> :
  _8 = _102;
  retval.498_103 = _8 != 0;
  if (retval.498_103 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__err ("bad file");
  _105 = 0B;
  goto <bb 83>; [INV]

  <bb 12> :
  _9 = packet_86->size;
  if (_9 != 8)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  stbi__err ("bad format");
  _107 = 0B;
  goto <bb 83>; [INV]

  <bb 14> :
  if (chained_90 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  goto <bb 3>; [INV]

  <bb 16> :
  _10 = act_comp_100 & 16;
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.499_108 = 4;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.499_109 = 3;

  <bb 19> :
  # iftmp.499_61 = PHI <iftmp.499_108(17), iftmp.499_109(18)>
  *comp_110(D) = iftmp.499_61;
  y_112 = 0;

  <bb 20> :
  # y_40 = PHI <y_112(19), y_188(81)>
  if (y_40 >= height_113(D))
    goto <bb 82>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  packet_idx_114 = 0;

  <bb 22> :
  # packet_idx_41 = PHI <packet_idx_114(21), packet_idx_187(80)>
  if (packet_idx_41 >= num_packets_85)
    goto <bb 81>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  packet_115 = &packets[packet_idx_41];
  _11 = y_40 * width_116(D);
  _12 = _11 * 4;
  _13 = (sizetype) _12;
  dest_118 = result_117(D) + _13;
  _14 = packet_115->type;
  _15 = (int) _14;
  switch (_15) <default: <L16> [INV], case 0: <L17> [INV], case 1: <L23> [INV], case 2: <L39> [INV]>

  <bb 24> :
<L16>:
  stbi__err ("bad format");
  _120 = 0B;
  goto <bb 83>; [INV]

  <bb 25> :
<L17>:
  x_121 = 0;

  <bb 26> :
  # dest_42 = PHI <dest_118(25), dest_127(30)>
  # x_49 = PHI <x_121(25), x_126(30)>
  if (x_49 >= width_116(D))
    goto <bb 31>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _16 = packet_115->channel;
  _17 = (int) _16;
  _123 = stbi__readval (s_87(D), _17, dest_42);

  <bb 28> :
  _18 = _123;
  retval.500_124 = _18 == 0B;
  if (retval.500_124 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _125 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 83>; [INV]

  <bb 30> :
  x_126 = x_49 + 1;
  dest_127 = dest_42 + 4;
  goto <bb 26>; [INV]

  <bb 31> :
  goto <bb 80>; [INV]

  <bb 32> :
<L23>:
  left_128 = width_116(D);

  <bb 33> :
  # dest_43 = PHI <dest_118(32), dest_44(46)>
  # left_50 = PHI <left_128(32), left_146(46)>
  if (left_50 <= 0)
    goto <bb 48>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _130 = stbi__get8 (s_87(D));

  <bb 35> :
  count_131 = _130;
  _133 = stbi__at_eof (s_87(D));

  <bb 36> :
  _19 = _133;
  retval.501_134 = _19 != 0;
  if (retval.501_134 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  stbi__err ("bad file");
  _136 = 0B;
  goto <bb 47>; [INV]

  <bb 38> :
  _20 = (int) count_131;
  if (left_50 < _20)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  count_137 = (stbi_uc) left_50;

  <bb 40> :
  # count_52 = PHI <count_131(38), count_137(39)>
  _21 = packet_115->channel;
  _22 = (int) _21;
  _139 = stbi__readval (s_87(D), _22, &value);

  <bb 41> :
  _23 = _139;
  retval.502_140 = _23 == 0B;
  if (retval.502_140 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  _141 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 43> :
  i_142 = 0;

  <bb 44> :
  # dest_44 = PHI <dest_43(43), dest_145(45)>
  # i_51 = PHI <i_142(43), i_144(45)>
  _24 = (int) count_52;
  if (i_51 >= _24)
    goto <bb 46>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  _25 = packet_115->channel;
  _26 = (int) _25;
  stbi__copyval (_26, dest_44, &value);
  i_144 = i_51 + 1;
  dest_145 = dest_44 + 4;
  goto <bb 44>; [INV]

  <bb 46> :
  _27 = (int) count_52;
  left_146 = left_50 - _27;
  value ={v} {CLOBBER};
  goto <bb 33>; [INV]

  <bb 47> :
  # _58 = PHI <_136(37), _141(42)>
  value ={v} {CLOBBER};
  goto <bb 83>; [INV]

  <bb 48> :
  goto <bb 80>; [INV]

  <bb 49> :
<L39>:
  left_150 = width_116(D);

  <bb 50> :
  # dest_45 = PHI <dest_118(49), dest_48(78)>
  # left_53 = PHI <left_150(49), left_186(78)>
  if (left_53 <= 0)
    goto <bb 79>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  _152 = stbi__get8 (s_87(D));

  <bb 52> :
  _28 = _152;
  count_153 = (int) _28;
  _155 = stbi__at_eof (s_87(D));

  <bb 53> :
  _29 = _155;
  retval.503_156 = _29 != 0;
  if (retval.503_156 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 54> :
  stbi__err ("bad file");
  _158 = 0B;
  goto <bb 83>; [INV]

  <bb 55> :
  if (count_153 > 127)
    goto <bb 56>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 56> :
  if (count_153 == 128)
    goto <bb 57>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 57> :
  _160 = stbi__get16be (s_87(D));

  <bb 58> :
  count_161 = _160;
  goto <bb 60>; [INV]

  <bb 59> :
  count_162 = count_153 + -127;

  <bb 60> :
  # count_54 = PHI <count_161(58), count_162(59)>
  if (count_54 > left_53)
    goto <bb 61>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 61> :
  stbi__err ("bad file");
  _164 = 0B;
  goto <bb 69>; [INV]

  <bb 62> :
  _30 = packet_115->channel;
  _31 = (int) _30;
  _166 = stbi__readval (s_87(D), _31, &value);

  <bb 63> :
  _32 = _166;
  retval.504_167 = _32 == 0B;
  if (retval.504_167 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  _168 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 65> :
  i_169 = 0;

  <bb 66> :
  # dest_46 = PHI <dest_45(65), dest_172(67)>
  # i_56 = PHI <i_169(65), i_171(67)>
  if (i_56 >= count_54)
    goto <bb 68>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 67> :
  _33 = packet_115->channel;
  _34 = (int) _33;
  stbi__copyval (_34, dest_46, &value);
  i_171 = i_56 + 1;
  dest_172 = dest_46 + 4;
  goto <bb 66>; [INV]

  <bb 68> :
  value ={v} {CLOBBER};
  goto <bb 78>; [INV]

  <bb 69> :
  # _59 = PHI <_164(61), _168(64)>
  value ={v} {CLOBBER};
  goto <bb 83>; [INV]

  <bb 70> :
  count_176 = count_153 + 1;
  if (count_176 > left_53)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  stbi__err ("bad file");
  _178 = 0B;
  goto <bb 83>; [INV]

  <bb 72> :
  i_179 = 0;

  <bb 73> :
  # dest_47 = PHI <dest_45(72), dest_185(77)>
  # i_57 = PHI <i_179(72), i_184(77)>
  if (i_57 >= count_176)
    goto <bb 78>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  _35 = packet_115->channel;
  _36 = (int) _35;
  _181 = stbi__readval (s_87(D), _36, dest_47);

  <bb 75> :
  _37 = _181;
  retval.505_182 = _37 == 0B;
  if (retval.505_182 != 0)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  _183 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 83>; [INV]

  <bb 77> :
  i_184 = i_57 + 1;
  dest_185 = dest_47 + 4;
  goto <bb 73>; [INV]

  <bb 78> :
  # dest_48 = PHI <dest_46(68), dest_47(73)>
  # count_55 = PHI <count_54(68), count_176(73)>
  left_186 = left_53 - count_55;
  goto <bb 50>; [INV]

  <bb 79> :

  <bb 80> :
  packet_idx_187 = packet_idx_41 + 1;
  goto <bb 22>; [INV]

  <bb 81> :
  y_188 = y_40 + 1;
  goto <bb 20>; [INV]

  <bb 82> :
  _189 = result_117(D);

  <bb 83> :
  # _60 = PHI <_84(4), _105(11), _107(13), _120(24), _125(29), _58(47), _158(54), _59(69), _178(71), _183(76), _189(82)>
  packets ={v} {CLOBBER};

  <bb 84> :
<L71>:
  return _60;

  <bb 85> :
<L72>:
  resx 2

  <bb 86> :
<L73>:
  resx 4

  <bb 87> :
<L74>:
  resx 1

}



;; Function stbi__pic_load (_ZL14stbi__pic_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=938, decl_uid=10210, cgraph_uid=844, symbol_order=874)

stbi__pic_load (struct stbi__context * s, int * px, int * py, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.16969;
  stbi_uc * D.16968;
  int D.16967;
  int D.16966;
  int D.16965;
  int internal_comp;
  int y;
  int x;
  int i;
  stbi_uc * result;
  bool retval.508;
  bool retval.507;
  bool retval.506;
  void * D.16948;
  int _1;
  int _2;
  int _3;
  int _4;
  long long unsigned int _5;
  stbi_uc * _6;
  unsigned int y.509_7;
  unsigned int x.510_8;
  void * _13;
  int _26;
  int _29;
  void * _32;
  void * _34;
  int _36;
  bool retval.506_37;
  void * _39;
  bool retval.507_41;
  void * _43;
  stbi_uc * _51;
  bool retval.508_52;
  stbi_uc * _62;
  void * _64;

  <bb 2> :
  if (comp_18(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  comp_19 = &internal_comp;

  <bb 4> :
  # comp_9 = PHI <comp_18(D)(2), comp_19(3)>
  i_20 = 0;

  <bb 5> :
  # i_12 = PHI <i_20(4), i_24(7)>
  if (i_12 > 91)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  stbi__get8 (s_22(D));

  <bb 7> :
  i_24 = i_12 + 1;
  goto <bb 5>; [INV]

  <bb 8> :
  _26 = stbi__get16be (s_22(D));

  <bb 9> :
  x_27 = _26;
  _29 = stbi__get16be (s_22(D));

  <bb 10> :
  y_30 = _29;
  if (y_30 > 16777216)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__err ("too large");
  _32 = 0B;
  goto <bb 29>; [INV]

  <bb 12> :
  if (x_27 > 16777216)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  stbi__err ("too large");
  _34 = 0B;
  goto <bb 29>; [INV]

  <bb 14> :
  _36 = stbi__at_eof (s_22(D));

  <bb 15> :
  _1 = _36;
  retval.506_37 = _1 != 0;
  if (retval.506_37 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  stbi__err ("bad file");
  _39 = 0B;
  goto <bb 29>; [INV]

  <bb 17> :
  _2 = stbi__mad3sizes_valid (x_27, y_30, 4, 0);
  retval.507_41 = _2 == 0;
  if (retval.507_41 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  stbi__err ("too large");
  _43 = 0B;
  goto <bb 29>; [INV]

  <bb 19> :
  stbi__get32be (s_22(D));

  <bb 20> :
  stbi__get16be (s_22(D));

  <bb 21> :
  stbi__get16be (s_22(D));

  <bb 22> :
  result_48 = stbi__malloc_mad3 (x_27, y_30, 4, 0);
  _3 = x_27 * y_30;
  _4 = _3 * 4;
  _5 = (long long unsigned int) _4;
  memset (result_48, 255, _5);
  _51 = stbi__pic_load_core (s_22(D), x_27, y_30, comp_9, result_48);

  <bb 23> :
  _6 = _51;
  retval.508_52 = _6 == 0B;
  if (retval.508_52 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  free (result_48);
  result_54 = 0B;

  <bb 25> :
  # result_11 = PHI <result_48(23), result_54(24)>
  *px_55(D) = x_27;
  *py_57(D) = y_30;
  if (req_comp_59(D) == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  req_comp_60 = *comp_9;

  <bb 27> :
  # req_comp_10 = PHI <req_comp_59(D)(25), req_comp_60(26)>
  y.509_7 = (unsigned int) y_30;
  x.510_8 = (unsigned int) x_27;
  _62 = stbi__convert_format (result_11, 4, req_comp_10, x.510_8, y.509_7);

  <bb 28> :
  result_63 = _62;
  _64 = result_63;

  <bb 29> :
  # _13 = PHI <_32(11), _34(13), _39(16), _43(18), _64(28)>
  internal_comp ={v} {CLOBBER};

  <bb 30> :
<L21>:
  return _13;

  <bb 31> :
<L22>:
  resx 1

}



;; Function stbi__pic_test (_ZL14stbi__pic_testP13stbi__context, funcdef_no=939, decl_uid=10203, cgraph_uid=845, symbol_order=875)

stbi__pic_test (struct stbi__context * s)
{
  int D.16974;
  int r;
  int D.16972;
  int _4;
  int _7;

  <bb 2> :
  _4 = stbi__pic_test_core (s_2(D));
  r_5 = _4;
  stbi__rewind (s_2(D));
  _7 = r_5;

  <bb 3> :
<L0>:
  return _7;

}



;; Function stbi__gif_test_raw (_ZL18stbi__gif_test_rawP13stbi__context, funcdef_no=940, decl_uid=12971, cgraph_uid=846, symbol_order=876)

stbi__gif_test_raw (struct stbi__context * s)
{
  unsigned char D.16999;
  unsigned char D.16998;
  unsigned char D.16997;
  unsigned char D.16996;
  unsigned char D.16995;
  unsigned char D.16994;
  int sz;
  bool retval.513;
  int D.16985;
  bool iftmp.512;
  bool retval.511;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  bool iftmp.512_7;
  int _8;
  unsigned char _15;
  unsigned char _17;
  unsigned char _19;
  unsigned char _21;
  bool iftmp.512_22;
  bool iftmp.512_23;
  bool retval.511_24;
  int _25;
  unsigned char _27;
  int _29;
  unsigned char _31;
  bool retval.513_32;
  int _33;
  int _34;

  <bb 2> :
  _15 = stbi__get8 (s_13(D));
  _1 = _15;
  if (_1 != 71)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _17 = stbi__get8 (s_13(D));
  _2 = _17;
  if (_2 != 73)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _19 = stbi__get8 (s_13(D));
  _3 = _19;
  if (_3 != 70)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _21 = stbi__get8 (s_13(D));
  _4 = _21;
  if (_4 != 56)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.512_23 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.512_22 = 0;

  <bb 8> :
  # iftmp.512_7 = PHI <iftmp.512_23(6), iftmp.512_22(7)>
  retval.511_24 = iftmp.512_7;
  if (retval.511_24 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 10> :
  _27 = stbi__get8 (s_13(D));
  _5 = _27;
  sz_28 = (int) _5;
  if (sz_28 != 57)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  if (sz_28 != 55)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _29 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 13> :
  _31 = stbi__get8 (s_13(D));
  _6 = _31;
  retval.513_32 = _6 != 97;
  if (retval.513_32 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _33 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 15> :
  _34 = 1;

  <bb 16> :
  # _8 = PHI <_25(9), _29(12), _33(14), _34(15)>
<L14>:
  return _8;

}



;; Function stbi__gif_test (_ZL14stbi__gif_testP13stbi__context, funcdef_no=941, decl_uid=10217, cgraph_uid=847, symbol_order=877)

stbi__gif_test (struct stbi__context * s)
{
  int D.17002;
  int r;
  int D.17000;
  int _4;
  int _7;

  <bb 2> :
  _4 = stbi__gif_test_raw (s_2(D));
  r_5 = _4;
  stbi__rewind (s_2(D));
  _7 = r_5;

  <bb 3> :
<L0>:
  return _7;

}



;; Function stbi__gif_parse_colortable (_ZL26stbi__gif_parse_colortableP13stbi__contextPA4_hii, funcdef_no=942, decl_uid=12982, cgraph_uid=848, symbol_order=878)

stbi__gif_parse_colortable (struct stbi__context * s, stbi_uc[4] * pal, int num_entries, int transp)
{
  unsigned char D.17011;
  unsigned char D.17010;
  unsigned char D.17009;
  int i;
  stbi_uc iftmp.514;
  long long unsigned int _1;
  long long unsigned int _2;
  stbi_uc[4] * _3;
  unsigned char _4;
  long long unsigned int _5;
  long long unsigned int _6;
  stbi_uc[4] * _7;
  unsigned char _8;
  long long unsigned int _9;
  long long unsigned int _10;
  stbi_uc[4] * _11;
  unsigned char _12;
  long long unsigned int _13;
  long long unsigned int _14;
  stbi_uc[4] * _15;
  stbi_uc iftmp.514_17;
  unsigned char _25;
  unsigned char _28;
  unsigned char _31;
  stbi_uc iftmp.514_34;
  stbi_uc iftmp.514_35;

  <bb 2> :
  i_19 = 0;

  <bb 3> :
  # i_16 = PHI <i_19(2), i_37(7)>
  if (i_16 >= num_entries_21(D))
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = (long long unsigned int) i_16;
  _2 = _1 * 4;
  _3 = pal_22(D) + _2;
  _25 = stbi__get8 (s_23(D));
  _4 = _25;
  *_3[2] = _4;
  _5 = (long long unsigned int) i_16;
  _6 = _5 * 4;
  _7 = pal_22(D) + _6;
  _28 = stbi__get8 (s_23(D));
  _8 = _28;
  *_7[1] = _8;
  _9 = (long long unsigned int) i_16;
  _10 = _9 * 4;
  _11 = pal_22(D) + _10;
  _31 = stbi__get8 (s_23(D));
  _12 = _31;
  *_11[0] = _12;
  if (transp_33(D) == i_16)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.514_34 = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.514_35 = 255;

  <bb 7> :
  # iftmp.514_17 = PHI <iftmp.514_34(5), iftmp.514_35(6)>
  _13 = (long long unsigned int) i_16;
  _14 = _13 * 4;
  _15 = pal_22(D) + _14;
  *_15[3] = iftmp.514_17;
  i_37 = i_16 + 1;
  goto <bb 3>; [INV]

  <bb 8> :
  return;

}



;; Function stbi__gif_header (_ZL16stbi__gif_headerP13stbi__contextP9stbi__gifPii, funcdef_no=943, decl_uid=12991, cgraph_uid=849, symbol_order=879)

stbi__gif_header (struct stbi__context * s, struct stbi__gif * g, int * comp, int is_info)
{
  const char * * D.20193;
  unsigned char D.17053;
  unsigned char D.17052;
  unsigned char D.17051;
  int D.17050;
  int D.17049;
  unsigned char D.17048;
  stbi_uc D.17047;
  unsigned char D.17046;
  unsigned char D.17045;
  unsigned char D.17044;
  unsigned char D.17043;
  stbi_uc version;
  bool retval.517;
  int D.17022;
  bool iftmp.516;
  bool retval.515;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  unsigned char _10;
  int _11;
  unsigned char _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  int _18;
  int _19;
  int _20;
  stbi_uc[256][4] * _21;
  bool iftmp.516_22;
  int _23;
  unsigned char _32;
  unsigned char _34;
  unsigned char _36;
  unsigned char _38;
  bool iftmp.516_39;
  bool iftmp.516_40;
  bool retval.515_41;
  int _43;
  stbi_uc _45;
  int _48;
  unsigned char _50;
  bool retval.517_51;
  int _53;
  int _56;
  int _60;
  unsigned char _63;
  unsigned char _66;
  unsigned char _69;
  int _73;
  int _75;
  int _79;
  int _81;

  <bb 2> :
  _32 = stbi__get8 (s_30(D));
  _1 = _32;
  if (_1 != 71)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _34 = stbi__get8 (s_30(D));
  _2 = _34;
  if (_2 != 73)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _36 = stbi__get8 (s_30(D));
  _3 = _36;
  if (_3 != 70)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _38 = stbi__get8 (s_30(D));
  _4 = _38;
  if (_4 != 56)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.516_40 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.516_39 = 0;

  <bb 8> :
  # iftmp.516_22 = PHI <iftmp.516_40(6), iftmp.516_39(7)>
  retval.515_41 = iftmp.516_22;
  if (retval.515_41 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _43 = stbi__err ("not GIF");
  goto <bb 26>; [INV]

  <bb 10> :
  _45 = stbi__get8 (s_30(D));
  version_46 = _45;
  if (version_46 != 55)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  if (version_46 != 57)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _48 = stbi__err ("not GIF");
  goto <bb 26>; [INV]

  <bb 13> :
  _50 = stbi__get8 (s_30(D));
  _5 = _50;
  retval.517_51 = _5 != 97;
  if (retval.517_51 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _53 = stbi__err ("not GIF");
  goto <bb 26>; [INV]

  <bb 15> :
  _82 = __builtin___emutls_get_address (&__emutls_v._ZL22stbi__g_failure_reason);
  *_82 = "";
  _56 = stbi__get16le (s_30(D));
  _6 = _56;
  g_57(D)->w = _6;
  _60 = stbi__get16le (s_30(D));
  _7 = _60;
  g_57(D)->h = _7;
  _63 = stbi__get8 (s_30(D));
  _8 = _63;
  _9 = (int) _8;
  g_57(D)->flags = _9;
  _66 = stbi__get8 (s_30(D));
  _10 = _66;
  _11 = (int) _10;
  g_57(D)->bgindex = _11;
  _69 = stbi__get8 (s_30(D));
  _12 = _69;
  _13 = (int) _12;
  g_57(D)->ratio = _13;
  g_57(D)->transparent = -1;
  _14 = g_57(D)->w;
  if (_14 > 16777216)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _73 = stbi__err ("too large");
  goto <bb 26>; [INV]

  <bb 17> :
  _15 = g_57(D)->h;
  if (_15 > 16777216)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _75 = stbi__err ("too large");
  goto <bb 26>; [INV]

  <bb 19> :
  if (comp_76(D) != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  *comp_76(D) = 4;

  <bb 21> :
  if (is_info_78(D) != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _79 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 26>; [INV]

  <bb 23> :
  _16 = g_57(D)->flags;
  _17 = _16 & 128;
  if (_17 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  _18 = g_57(D)->flags;
  _19 = _18 & 7;
  _20 = 2 << _19;
  _21 = &g_57(D)->pal;
  stbi__gif_parse_colortable (s_30(D), _21, _20, -1);

  <bb 25> :
  _81 = 1;

  <bb 26> :
  # _23 = PHI <_43(9), _48(12), _53(14), _73(16), _75(18), _79(22), _81(25)>
<L26>:
  return _23;

}



;; Function stbi__gif_info_raw (_ZL18stbi__gif_info_rawP13stbi__contextPiS1_S1_, funcdef_no=944, decl_uid=12998, cgraph_uid=850, symbol_order=880)

stbi__gif_info_raw (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17065;
  struct stbi__gif * g;
  int D.17057;
  bool retval.518;
  int _1;
  int _2;
  int _3;
  int _4;
  int _14;
  bool retval.518_15;
  int _18;
  int _24;

  <bb 2> :
  g_10 = stbi__malloc (34928);
  _14 = stbi__gif_header (s_11(D), g_10, comp_12(D), 1);
  _1 = _14;
  retval.518_15 = _1 == 0;
  if (retval.518_15 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  free (g_10);
  stbi__rewind (s_11(D));
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 4> :
  if (x_19(D) != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = g_10->w;
  *x_19(D) = _2;

  <bb 6> :
  if (y_21(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _3 = g_10->h;
  *y_21(D) = _3;

  <bb 8> :
  free (g_10);
  _24 = 1;

  <bb 9> :
  # _4 = PHI <_18(3), _24(8)>
<L8>:
  return _4;

}



;; Function stbi__out_gif_code (_ZL18stbi__out_gif_codeP9stbi__gift, funcdef_no=945, decl_uid=13003, cgraph_uid=851, symbol_order=881)

stbi__out_gif_code (struct stbi__gif * g, stbi__uint16 code)
{
  int idx;
  stbi_uc * c;
  stbi_uc * p;
  int _1;
  short int _2;
  int _3;
  short int _4;
  short unsigned int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  stbi_uc * _11;
  sizetype _12;
  stbi_uc * _13;
  int _14;
  sizetype _15;
  stbi_uc * _16;
  stbi_uc * _17;
  int _18;
  unsigned char _19;
  int _20;
  int _21;
  sizetype _22;
  stbi_uc * _23;
  unsigned char _24;
  unsigned char _25;
  stbi_uc * _26;
  unsigned char _27;
  stbi_uc * _28;
  unsigned char _29;
  stbi_uc * _30;
  unsigned char _31;
  int _32;
  int _33;
  int _34;
  int _35;
  int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int _51;

  <bb 2> :
  _1 = (int) code_56(D);
  _2 = g_58(D)->codes[_1].prefix;
  if (_2 >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = (int) code_56(D);
  _4 = g_58(D)->codes[_3].prefix;
  _5 = (short unsigned int) _4;
  _6 = (int) _5;
  stbi__out_gif_code (g_58(D), _6);

  <bb 4> :
  _7 = g_58(D)->cur_y;
  _8 = g_58(D)->max_y;
  if (_7 >= _8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 6> :
  _9 = g_58(D)->cur_x;
  _10 = g_58(D)->cur_y;
  idx_60 = _9 + _10;
  _11 = g_58(D)->out;
  _12 = (sizetype) idx_60;
  p_61 = _11 + _12;
  _13 = g_58(D)->history;
  _14 = idx_60 / 4;
  _15 = (sizetype) _14;
  _16 = _13 + _15;
  *_16 = 1;
  _17 = g_58(D)->color_table;
  _18 = (int) code_56(D);
  _19 = g_58(D)->codes[_18].suffix;
  _20 = (int) _19;
  _21 = _20 * 4;
  _22 = (sizetype) _21;
  c_63 = _17 + _22;
  _23 = c_63 + 3;
  _24 = *_23;
  if (_24 > 128)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _25 = MEM[(stbi_uc *)c_63 + 2B];
  *p_61 = _25;
  _26 = p_61 + 1;
  _27 = MEM[(stbi_uc *)c_63 + 1B];
  *_26 = _27;
  _28 = p_61 + 2;
  _29 = *c_63;
  *_28 = _29;
  _30 = p_61 + 3;
  _31 = MEM[(stbi_uc *)c_63 + 3B];
  *_30 = _31;

  <bb 8> :
  _32 = g_58(D)->cur_x;
  _33 = _32 + 4;
  g_58(D)->cur_x = _33;
  _34 = g_58(D)->cur_x;
  _35 = g_58(D)->max_x;
  if (_34 >= _35)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  _36 = g_58(D)->start_x;
  g_58(D)->cur_x = _36;
  _37 = g_58(D)->cur_y;
  _38 = g_58(D)->step;
  _39 = _37 + _38;
  g_58(D)->cur_y = _39;

  <bb 10> :
  _40 = g_58(D)->cur_y;
  _41 = g_58(D)->max_y;
  if (_40 < _41)
    goto <bb 13>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _42 = g_58(D)->parse;
  if (_42 <= 0)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _43 = g_58(D)->line_size;
  _44 = g_58(D)->parse;
  _45 = _43 << _44;
  g_58(D)->step = _45;
  _46 = g_58(D)->start_y;
  _47 = g_58(D)->step;
  _48 = _47 >> 1;
  _49 = _46 + _48;
  g_58(D)->cur_y = _49;
  _50 = g_58(D)->parse;
  _51 = _50 + -1;
  g_58(D)->parse = _51;
  goto <bb 10>; [INV]

  <bb 13> :
<L15>:
  return;

}



;; Function stbi__process_gif_raster (_ZL24stbi__process_gif_rasterP13stbi__contextP9stbi__gif, funcdef_no=946, decl_uid=13012, cgraph_uid=852, symbol_order=882)

stbi__process_gif_raster (struct stbi__context * s, struct stbi__gif * g)
{
  unsigned char D.17128;
  unsigned char D.17127;
  unsigned char D.17126;
  stbi_uc D.17125;
  stbi__int32 code;
  struct stbi__gif_lzw * p;
  stbi__int32 clear;
  stbi__int32 valid_bits;
  stbi__int32 bits;
  stbi__int32 oldcode;
  stbi__int32 avail;
  stbi__int32 codemask;
  stbi__int32 codesize;
  stbi__uint32 first;
  stbi__int32 init_code;
  stbi__int32 len;
  stbi_uc lzw_cs;
  stbi_uc iftmp.521;
  bool retval.519;
  stbi__int32 D.13026;
  stbi_uc * D.17083;
  int _1;
  int _2;
  int _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  int _8;
  int _9;
  int _10;
  int _11;
  unsigned char _12;
  int avail.520_13;
  short int _14;
  unsigned char _15;
  short unsigned int _16;
  int _17;
  int _18;
  int _19;
  stbi_uc * _41;
  stbi_uc iftmp.521_42;
  stbi_uc _53;
  stbi_uc * _55;
  unsigned char _72;
  stbi_uc * _74;
  unsigned char _77;
  stbi__int32 _78;
  unsigned char _91;
  bool retval.519_93;
  stbi_uc * _95;
  stbi_uc * _97;
  stbi_uc * _101;
  stbi_uc iftmp.521_104;
  stbi_uc iftmp.521_105;
  stbi_uc * _108;
  stbi_uc * _114;

  <bb 2> :
  _53 = stbi__get8 (s_51(D));
  lzw_cs_54 = _53;
  if (lzw_cs_54 > 12)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _55 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 4> :
  _1 = (int) lzw_cs_54;
  clear_56 = 1 << _1;
  first_57 = 1;
  _2 = (int) lzw_cs_54;
  codesize_58 = _2 + 1;
  _3 = 1 << codesize_58;
  codemask_59 = _3 + -1;
  bits_60 = 0;
  valid_bits_61 = 0;
  init_code_62 = 0;

  <bb 5> :
  # init_code_23 = PHI <init_code_62(4), init_code_67(6)>
  if (init_code_23 >= clear_56)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  g_63(D)->codes[init_code_23].prefix = -1;
  _4 = (unsigned char) init_code_23;
  g_63(D)->codes[init_code_23].first = _4;
  _5 = (unsigned char) init_code_23;
  g_63(D)->codes[init_code_23].suffix = _5;
  init_code_67 = init_code_23 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  avail_68 = clear_56 + 2;
  oldcode_69 = -1;
  len_70 = 0;

  <bb 8> :
  # len_20 = PHI <len_70(7), len_22(37)>
  # first_24 = PHI <first_57(7), first_25(37)>
  # codesize_26 = PHI <codesize_58(7), codesize_28(37)>
  # codemask_29 = PHI <codemask_59(7), codemask_31(37)>
  # avail_32 = PHI <avail_68(7), avail_34(37)>
  # oldcode_35 = PHI <oldcode_69(7), oldcode_36(37)>
  # bits_37 = PHI <bits_60(7), bits_38(37)>
  # valid_bits_39 = PHI <valid_bits_61(7), valid_bits_40(37)>
  if (valid_bits_39 < codesize_26)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  if (len_20 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _72 = stbi__get8 (s_51(D));
  _6 = _72;
  len_73 = (stbi__int32) _6;
  if (len_73 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _74 = g_63(D)->out;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 12> :
  # len_21 = PHI <len_20(9), len_73(10)>
  len_75 = len_21 + -1;
  _77 = stbi__get8 (s_51(D));
  _7 = _77;
  _8 = (int) _7;
  _78 = _8 << valid_bits_39;
  bits_79 = bits_37 | _78;
  valid_bits_80 = valid_bits_39 + 8;
  goto <bb 37>; [INV]

  <bb 13> :
  code_81 = bits_37 & codemask_29;
  bits_82 = bits_37 >> codesize_26;
  valid_bits_83 = valid_bits_39 - codesize_26;
  if (code_81 == clear_56)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _9 = (int) lzw_cs_54;
  codesize_84 = _9 + 1;
  _10 = 1 << codesize_84;
  codemask_85 = _10 + -1;
  avail_86 = clear_56 + 2;
  oldcode_87 = -1;
  first_88 = 0;
  goto <bb 37>; [INV]

  <bb 15> :
  _11 = clear_56 + 1;
  if (code_81 == _11)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  stbi__skip (s_51(D), len_20);

  <bb 17> :
  _91 = stbi__get8 (s_51(D));
  _12 = _91;
  len_92 = (stbi__int32) _12;
  retval.519_93 = len_92 > 0;
  if (retval.519_93 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  stbi__skip (s_51(D), len_92);
  goto <bb 17>; [INV]

  <bb 19> :
  _95 = g_63(D)->out;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 20> :
  if (code_81 <= avail_32)
    goto <bb 21>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 21> :
  if (first_24 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  stbi__err ("no clear code");
  _97 = 0B;
  goto <bb 38>; [INV]

  <bb 23> :
  if (oldcode_35 >= 0)
    goto <bb 24>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 24> :
  avail.520_13 = avail_32;
  avail_98 = avail.520_13 + 1;
  p_99 = &g_63(D)->codes[avail.520_13];
  if (avail_98 > 8192)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  stbi__err ("too many codes");
  _101 = 0B;
  goto <bb 38>; [INV]

  <bb 26> :
  _14 = (short int) oldcode_35;
  p_99->prefix = _14;
  _15 = g_63(D)->codes[oldcode_35].first;
  p_99->first = _15;
  if (code_81 == avail_98)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  iftmp.521_104 = p_99->first;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.521_105 = g_63(D)->codes[code_81].first;

  <bb 29> :
  # iftmp.521_42 = PHI <iftmp.521_104(27), iftmp.521_105(28)>
  p_99->suffix = iftmp.521_42;
  goto <bb 32>; [INV]

  <bb 30> :
  if (code_81 == avail_32)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  stbi__err ("illegal code in raster");
  _108 = 0B;
  goto <bb 38>; [INV]

  <bb 32> :
  # avail_33 = PHI <avail_98(29), avail_32(30)>
  _16 = (short unsigned int) code_81;
  _17 = (int) _16;
  stbi__out_gif_code (g_63(D), _17);
  _18 = avail_33 & codemask_29;
  if (_18 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  if (avail_33 <= 4095)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  codesize_110 = codesize_26 + 1;
  _19 = 1 << codesize_110;
  codemask_111 = _19 + -1;

  <bb 35> :
  # codesize_27 = PHI <codesize_26(32), codesize_26(33), codesize_110(34)>
  # codemask_30 = PHI <codemask_29(32), codemask_29(33), codemask_111(34)>
  oldcode_112 = code_81;
  goto <bb 37>; [INV]

  <bb 36> :
  stbi__err ("illegal code in raster");
  _114 = 0B;
  goto <bb 38>; [INV]

  <bb 37> :
  # len_22 = PHI <len_75(12), len_20(14), len_20(35)>
  # first_25 = PHI <first_24(12), first_88(14), first_24(35)>
  # codesize_28 = PHI <codesize_26(12), codesize_84(14), codesize_27(35)>
  # codemask_31 = PHI <codemask_29(12), codemask_85(14), codemask_30(35)>
  # avail_34 = PHI <avail_32(12), avail_86(14), avail_33(35)>
  # oldcode_36 = PHI <oldcode_35(12), oldcode_87(14), oldcode_112(35)>
  # bits_38 = PHI <bits_79(12), bits_82(14), bits_82(35)>
  # valid_bits_40 = PHI <valid_bits_80(12), valid_bits_83(14), valid_bits_83(35)>
  goto <bb 8>; [INV]

  <bb 38> :
  # _41 = PHI <_55(3), _74(11), _95(19), _97(22), _101(25), _108(31), _114(36)>
<L42>:
  return _41;

}



;; Function stbi__gif_load_next (_ZL19stbi__gif_load_nextP13stbi__contextP9stbi__gifPiiPh, funcdef_no=947, decl_uid=13039, cgraph_uid=853, symbol_order=883)

stbi__gif_load_next (struct stbi__context * s, struct stbi__gif * g, int * comp, int req_comp, stbi_uc * two_back)
{
  unsigned char D.17231;
  unsigned char D.17230;
  int D.17229;
  unsigned char D.17228;
  unsigned char D.17227;
  unsigned char D.17226;
  stbi_uc * D.17225;
  unsigned char D.17224;
  stbi__int32 D.17223;
  stbi__int32 D.17222;
  stbi__int32 D.17221;
  stbi__int32 D.17220;
  unsigned char D.17219;
  int D.17218;
  int ext;
  int len;
  stbi_uc * o;
  stbi__int32 h;
  stbi__int32 w;
  stbi__int32 y;
  stbi__int32 x;
  int tag;
  int pcount;
  int pi;
  int first_frame;
  int dispose;
  bool retval.525;
  unsigned int D.17196;
  int iftmp.524;
  unsigned int D.17163;
  unsigned int D.17154;
  bool retval.523;
  stbi_uc * D.17134;
  bool retval.522;
  stbi_uc * _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  long long unsigned int _9;
  void * _10;
  int _11;
  long long unsigned int _12;
  void * _13;
  long long unsigned int _14;
  void * _15;
  stbi_uc * _16;
  stbi_uc * _17;
  stbi_uc * _18;
  int _19;
  long long unsigned int _20;
  stbi_uc * _21;
  int _22;
  long long unsigned int _23;
  stbi_uc * _24;
  long long unsigned int _25;
  stbi_uc * _26;
  int _27;
  int _28;
  int _29;
  int _30;
  stbi_uc * _31;
  sizetype _32;
  stbi_uc * _33;
  unsigned char _34;
  int _35;
  sizetype _36;
  stbi_uc * _37;
  stbi_uc * _38;
  int _39;
  sizetype _40;
  stbi_uc * _41;
  stbi_uc * _42;
  sizetype _43;
  stbi_uc * _44;
  unsigned char _45;
  stbi_uc * _46;
  int _47;
  sizetype _48;
  stbi_uc * _49;
  stbi_uc * _50;
  int _51;
  sizetype _52;
  stbi_uc * _53;
  int _54;
  int _55;
  int _56;
  int _57;
  long long unsigned int _58;
  stbi_uc * _59;
  stbi_uc * _60;
  int _61;
  int _62;
  int _63;
  long long unsigned int _64;
  stbi_uc * _65;
  unsigned char _66;
  int _67;
  int _68;
  int _69;
  int _70;
  int _71;
  int _72;
  int _73;
  int _74;
  int _75;
  int _76;
  int _77;
  int _78;
  int _79;
  int _80;
  int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  unsigned char _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;
  int _94;
  int _95;
  int _96;
  int _97;
  int _98;
  int _99;
  stbi_uc[256][4] * _100;
  stbi_uc[256][4] * _101;
  int _102;
  int _103;
  stbi_uc[256][4] * _104;
  int _105;
  int _106;
  int _107;
  stbi_uc * _108;
  sizetype _109;
  stbi_uc * _110;
  unsigned char _111;
  int _112;
  int _113;
  stbi_uc[4] * _114;
  stbi_uc * _115;
  int _116;
  sizetype _117;
  stbi_uc * _118;
  unsigned char _119;
  unsigned char _120;
  unsigned char _121;
  int _122;
  int _123;
  int _124;
  int _125;
  int _126;
  int _127;
  int _128;
  unsigned char _129;
  int _130;
  int _131;
  int _132;
  unsigned char _133;
  stbi_uc * _139;
  int iftmp.524_140;
  int _165;
  bool retval.522_166;
  stbi_uc * _167;
  bool retval.523_169;
  stbi_uc * _171;
  stbi_uc * _184;
  unsigned int _190;
  unsigned int _194;
  unsigned char _200;
  stbi__int32 _203;
  stbi__int32 _206;
  stbi__int32 _209;
  stbi__int32 _212;
  unsigned char _223;
  int iftmp.524_229;
  int iftmp.524_230;
  stbi_uc * _235;
  stbi_uc * _237;
  stbi_uc * _239;
  unsigned int _243;
  stbi_uc * _246;
  stbi_uc * _248;
  unsigned char _250;
  unsigned char _253;
  unsigned char _256;
  int _259;
  unsigned char _263;
  unsigned char _270;
  bool retval.525_272;
  stbi_uc * _274;
  stbi_uc * _276;

  <bb 2> :
  first_frame_159 = 0;
  _1 = g_161(D)->out;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  _165 = stbi__gif_header (s_162(D), g_161(D), comp_163(D), 0);
  _2 = _165;
  retval.522_166 = _2 == 0;
  if (retval.522_166 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _167 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 72>; [INV]

  <bb 5> :
  _3 = g_161(D)->h;
  _4 = g_161(D)->w;
  _5 = stbi__mad3sizes_valid (4, _4, _3, 0);
  retval.523_169 = _5 == 0;
  if (retval.523_169 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  stbi__err ("too large");
  _171 = 0B;
  goto <bb 72>; [INV]

  <bb 7> :
  _6 = g_161(D)->w;
  _7 = g_161(D)->h;
  pcount_172 = _6 * _7;
  _8 = pcount_172 * 4;
  _9 = (long long unsigned int) _8;
  _10 = stbi__malloc (_9);
  g_161(D)->out = _10;
  _11 = pcount_172 * 4;
  _12 = (long long unsigned int) _11;
  _13 = stbi__malloc (_12);
  g_161(D)->background = _13;
  _14 = (long long unsigned int) pcount_172;
  _15 = stbi__malloc (_14);
  g_161(D)->history = _15;
  _16 = g_161(D)->out;
  if (_16 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _17 = g_161(D)->background;
  if (_17 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _18 = g_161(D)->history;
  if (_18 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__err ("outofmem");
  _184 = 0B;
  goto <bb 72>; [INV]

  <bb 11> :
  _19 = pcount_172 * 4;
  _20 = (long long unsigned int) _19;
  _21 = g_161(D)->out;
  memset (_21, 0, _20);
  _22 = pcount_172 * 4;
  _23 = (long long unsigned int) _22;
  _24 = g_161(D)->background;
  memset (_24, 0, _23);
  _25 = (long long unsigned int) pcount_172;
  _26 = g_161(D)->history;
  memset (_26, 0, _25);
  first_frame_182 = 1;
  goto <bb 28>; [INV]

  <bb 12> :
  _27 = g_161(D)->eflags;
  _28 = _27 >> 2;
  dispose_185 = _28 & 7;
  _29 = g_161(D)->w;
  _30 = g_161(D)->h;
  pcount_186 = _29 * _30;
  if (dispose_185 == 3)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  if (two_back_187(D) == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  dispose_188 = 2;

  <bb 15> :
  # dispose_134 = PHI <dispose_185(12), dispose_185(13), dispose_188(14)>
  if (dispose_134 == 3)
    goto <bb 16>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 16> :
  pi_189 = 0;

  <bb 17> :
  # pi_136 = PHI <pi_189(16), pi_192(20)>
  if (pi_136 >= pcount_186)
    goto <bb 27>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _31 = g_161(D)->history;
  _32 = (sizetype) pi_136;
  _33 = _31 + _32;
  _34 = *_33;
  if (_34 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _35 = pi_136 * 4;
  _36 = (sizetype) _35;
  _37 = two_back_187(D) + _36;
  _38 = g_161(D)->out;
  _39 = pi_136 * 4;
  _40 = (sizetype) _39;
  _41 = _38 + _40;
  _190 = MEM[(char * {ref-all})_37];
  MEM[(char * {ref-all})_41] = _190;

  <bb 20> :
  pi_192 = pi_136 + 1;
  goto <bb 17>; [INV]

  <bb 21> :
  if (dispose_134 == 2)
    goto <bb 22>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 22> :
  pi_193 = 0;

  <bb 23> :
  # pi_137 = PHI <pi_193(22), pi_196(26)>
  if (pi_137 >= pcount_186)
    goto <bb 27>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _42 = g_161(D)->history;
  _43 = (sizetype) pi_137;
  _44 = _42 + _43;
  _45 = *_44;
  if (_45 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _46 = g_161(D)->background;
  _47 = pi_137 * 4;
  _48 = (sizetype) _47;
  _49 = _46 + _48;
  _50 = g_161(D)->out;
  _51 = pi_137 * 4;
  _52 = (sizetype) _51;
  _53 = _50 + _52;
  _194 = MEM[(char * {ref-all})_49];
  MEM[(char * {ref-all})_53] = _194;

  <bb 26> :
  pi_196 = pi_137 + 1;
  goto <bb 23>; [INV]

  <bb 27> :
  _54 = g_161(D)->w;
  _55 = g_161(D)->h;
  _56 = _54 * _55;
  _57 = _56 * 4;
  _58 = (long long unsigned int) _57;
  _59 = g_161(D)->out;
  _60 = g_161(D)->background;
  memcpy (_60, _59, _58);

  <bb 28> :
  # first_frame_135 = PHI <first_frame_182(11), first_frame_159(27)>
  _61 = g_161(D)->w;
  _62 = g_161(D)->h;
  _63 = _61 * _62;
  _64 = (long long unsigned int) _63;
  _65 = g_161(D)->history;
  memset (_65, 0, _64);

  <bb 29> :
  _200 = stbi__get8 (s_162(D));
  _66 = _200;
  tag_201 = (int) _66;
  switch (tag_201) <default: <L87> [INV], case 33: <L67> [INV], case 44: <L35> [INV], case 59: <L86> [INV]>

  <bb 30> :
<L35>:
  _203 = stbi__get16le (s_162(D));
  x_204 = _203;
  _206 = stbi__get16le (s_162(D));
  y_207 = _206;
  _209 = stbi__get16le (s_162(D));
  w_210 = _209;
  _212 = stbi__get16le (s_162(D));
  h_213 = _212;
  _67 = x_204 + w_210;
  _68 = g_161(D)->w;
  if (_67 > _68)
    goto <bb 32>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  _69 = y_207 + h_213;
  _70 = g_161(D)->h;
  if (_69 > _70)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  stbi__err ("bad Image Descriptor");
  _248 = 0B;
  goto <bb 72>; [INV]

  <bb 33> :
  _71 = g_161(D)->w;
  _72 = _71 * 4;
  g_161(D)->line_size = _72;
  _73 = x_204 * 4;
  g_161(D)->start_x = _73;
  _74 = g_161(D)->line_size;
  _75 = y_207 * _74;
  g_161(D)->start_y = _75;
  _76 = g_161(D)->start_x;
  _77 = w_210 * 4;
  _78 = _76 + _77;
  g_161(D)->max_x = _78;
  _79 = g_161(D)->start_y;
  _80 = g_161(D)->line_size;
  _81 = h_213 * _80;
  _82 = _79 + _81;
  g_161(D)->max_y = _82;
  _83 = g_161(D)->start_x;
  g_161(D)->cur_x = _83;
  _84 = g_161(D)->start_y;
  g_161(D)->cur_y = _84;
  if (w_210 == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  _85 = g_161(D)->max_y;
  g_161(D)->cur_y = _85;

  <bb 35> :
  _223 = stbi__get8 (s_162(D));
  _86 = _223;
  _87 = (int) _86;
  g_161(D)->lflags = _87;
  _88 = g_161(D)->lflags;
  _89 = _88 & 64;
  if (_89 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  _90 = g_161(D)->line_size;
  _91 = _90 * 8;
  g_161(D)->step = _91;
  g_161(D)->parse = 3;
  goto <bb 38>; [INV]

  <bb 37> :
  _92 = g_161(D)->line_size;
  g_161(D)->step = _92;
  g_161(D)->parse = 0;

  <bb 38> :
  _93 = g_161(D)->lflags;
  _94 = _93 & 128;
  if (_94 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 39> :
  _95 = g_161(D)->eflags;
  _96 = _95 & 1;
  if (_96 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  iftmp.524_229 = g_161(D)->transparent;
  goto <bb 42>; [INV]

  <bb 41> :
  iftmp.524_230 = -1;

  <bb 42> :
  # iftmp.524_140 = PHI <iftmp.524_229(40), iftmp.524_230(41)>
  _97 = g_161(D)->lflags;
  _98 = _97 & 7;
  _99 = 2 << _98;
  _100 = &g_161(D)->lpal;
  stbi__gif_parse_colortable (s_162(D), _100, _99, iftmp.524_140);
  _101 = &g_161(D)->lpal;
  g_161(D)->color_table = _101;
  goto <bb 46>; [INV]

  <bb 43> :
  _102 = g_161(D)->flags;
  _103 = _102 & 128;
  if (_103 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  _104 = &g_161(D)->pal;
  g_161(D)->color_table = _104;
  goto <bb 46>; [INV]

  <bb 45> :
  stbi__err ("missing color table");
  _235 = 0B;
  goto <bb 72>; [INV]

  <bb 46> :
  _237 = stbi__process_gif_raster (s_162(D), g_161(D));
  o_238 = _237;
  if (o_238 == 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  _239 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 72>; [INV]

  <bb 48> :
  _105 = g_161(D)->w;
  _106 = g_161(D)->h;
  pcount_240 = _105 * _106;
  if (first_frame_135 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 49> :
  _107 = g_161(D)->bgindex;
  if (_107 > 0)
    goto <bb 50>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 50> :
  pi_241 = 0;

  <bb 51> :
  # pi_138 = PHI <pi_241(50), pi_245(54)>
  if (pi_138 >= pcount_240)
    goto <bb 55>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _108 = g_161(D)->history;
  _109 = (sizetype) pi_138;
  _110 = _108 + _109;
  _111 = *_110;
  if (_111 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  _112 = g_161(D)->bgindex;
  g_161(D)->pal[_112][3] = 255;
  _113 = g_161(D)->bgindex;
  _114 = &g_161(D)->pal[_113];
  _115 = g_161(D)->out;
  _116 = pi_138 * 4;
  _117 = (sizetype) _116;
  _118 = _115 + _117;
  _243 = MEM[(char * {ref-all})_114];
  MEM[(char * {ref-all})_118] = _243;

  <bb 54> :
  pi_245 = pi_138 + 1;
  goto <bb 51>; [INV]

  <bb 55> :
  _246 = o_238;
  goto <bb 72>; [INV]

  <bb 56> :
<L67>:
  _250 = stbi__get8 (s_162(D));
  _119 = _250;
  ext_251 = (int) _119;
  if (ext_251 == 249)
    goto <bb 57>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 57> :
  _253 = stbi__get8 (s_162(D));
  _120 = _253;
  len_254 = (int) _120;
  if (len_254 == 4)
    goto <bb 58>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 58> :
  _256 = stbi__get8 (s_162(D));
  _121 = _256;
  _122 = (int) _121;
  g_161(D)->eflags = _122;
  _259 = stbi__get16le (s_162(D));
  _123 = _259;
  _124 = _123 * 10;
  g_161(D)->delay = _124;
  _125 = g_161(D)->transparent;
  if (_125 >= 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  _126 = g_161(D)->transparent;
  g_161(D)->pal[_126][3] = 255;

  <bb 60> :
  _127 = g_161(D)->eflags;
  _128 = _127 & 1;
  if (_128 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 61> :
  _263 = stbi__get8 (s_162(D));
  _129 = _263;
  _130 = (int) _129;
  g_161(D)->transparent = _130;
  _131 = g_161(D)->transparent;
  if (_131 >= 0)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  _132 = g_161(D)->transparent;
  g_161(D)->pal[_132][3] = 0;
  goto <bb 64>; [INV]

  <bb 63> :
  stbi__skip (s_162(D), 1);
  g_161(D)->transparent = -1;

  <bb 64> :
  goto <bb 66>; [INV]

  <bb 65> :
  stbi__skip (s_162(D), len_254);
  goto <bb 71>; [INV]

  <bb 66> :
  _270 = stbi__get8 (s_162(D));
  _133 = _270;
  len_271 = (int) _133;
  retval.525_272 = len_271 != 0;
  if (retval.525_272 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  stbi__skip (s_162(D), len_271);
  goto <bb 66>; [INV]

  <bb 68> :
  goto <bb 71>; [INV]

  <bb 69> :
<L86>:
  _274 = s_162(D);
  goto <bb 72>; [INV]

  <bb 70> :
<L87>:
  stbi__err ("unknown code");
  _276 = 0B;
  goto <bb 72>; [INV]

  <bb 71> :
  goto <bb 29>; [INV]

  <bb 72> :
  # _139 = PHI <_167(4), _171(6), _184(10), _248(32), _235(45), _239(47), _246(55), _274(69), _276(70)>
<L89>:
  return _139;

}



;; Function stbi__load_gif_main (_ZL19stbi__load_gif_mainP13stbi__contextPPiS1_S1_S1_S1_i, funcdef_no=948, decl_uid=10232, cgraph_uid=854, symbol_order=884)

stbi__load_gif_main (struct stbi__context * s, int * * delays, int * x, int * y, int * z, int * comp, int req_comp)
{
  stbi_uc * D.17272;
  stbi_uc * D.17271;
  int D.17270;
  void * tmp;
  int delays_size;
  int out_size;
  int stride;
  struct stbi__gif g;
  stbi_uc * two_back;
  stbi_uc * out;
  stbi_uc * u;
  int layers;
  void * D.17248;
  bool retval.526;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  long long unsigned int _8;
  stbi_uc * _9;
  stbi_uc * _10;
  stbi_uc * _11;
  long long unsigned int _12;
  long long unsigned int _13;
  int * _14;
  void * _15;
  long long unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long long unsigned int _22;
  void * _23;
  long long unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  long long unsigned int _27;
  int _28;
  int _29;
  sizetype _30;
  stbi_uc * _31;
  int _32;
  sizetype _33;
  sizetype _34;
  int * _35;
  unsigned int layers.527_36;
  unsigned int _37;
  long long unsigned int _38;
  long long unsigned int _39;
  int * _40;
  int _41;
  stbi_uc * _42;
  stbi_uc * _43;
  stbi_uc * _44;
  int _45;
  unsigned int _46;
  int _47;
  int _48;
  unsigned int _49;
  void * _60;
  void * _61;
  int _74;
  bool retval.526_75;
  stbi_uc * _88;
  void * _103;
  stbi_uc * _122;
  void * _126;
  void * _130;

  <bb 2> :
  _74 = stbi__gif_test (s_72(D));
  _1 = _74;
  retval.526_75 = _1 != 0;
  if (retval.526_75 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 3> :
  layers_76 = 0;
  u_77 = 0B;
  out_78 = 0B;
  two_back_79 = 0B;
  out_size_80 = 0;
  delays_size_81 = 0;
  memset (&g, 0, 34928);
  if (delays_83(D) != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *delays_83(D) = 0B;

  <bb 5> :
  # layers_50 = PHI <layers_76(3), layers_76(4), layers_51(23)>
  # out_53 = PHI <out_78(3), out_78(4), out_55(23)>
  # two_back_57 = PHI <two_back_79(3), two_back_79(4), two_back_59(23)>
  _88 = stbi__gif_load_next (s_72(D), &g, comp_85(D), req_comp_86(D), two_back_57);

  <bb 6> :
  u_89 = _88;
  if (u_89 == s_72(D))
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  u_90 = 0B;

  <bb 8> :
  # u_52 = PHI <u_89(6), u_90(7)>
  if (u_52 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 9> :
  _2 = g.w;
  *x_91(D) = _2;
  _3 = g.h;
  *y_93(D) = _3;
  layers_95 = layers_50 + 1;
  _4 = g.w;
  _5 = g.h;
  _6 = _4 * _5;
  stride_96 = _6 * 4;
  if (out_53 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 10> :
  _7 = layers_95 * stride_96;
  _8 = (long long unsigned int) _7;
  tmp_98 = realloc (out_53, _8);
  if (tmp_98 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _9 = g.out;
  free (_9);
  _10 = g.history;
  free (_10);
  _11 = g.background;
  free (_11);
  stbi__err ("outofmem");
  _103 = 0B;
  goto <bb 29>; [INV]

  <bb 12> :
  out_104 = tmp_98;
  out_size_105 = layers_95 * stride_96;
  if (delays_83(D) != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _12 = (long long unsigned int) layers_95;
  _13 = _12 * 4;
  _14 = *delays_83(D);
  _15 = realloc (_14, _13);
  *delays_83(D) = _15;
  _16 = (long long unsigned int) layers_95;
  _17 = (unsigned int) _16;
  _18 = _17 * 4;
  delays_size_108 = (int) _18;

  <bb 14> :
  goto <bb 17>; [INV]

  <bb 15> :
  _19 = layers_95 * stride_96;
  _20 = (long long unsigned int) _19;
  out_110 = stbi__malloc (_20);
  out_size_111 = layers_95 * stride_96;
  if (delays_83(D) != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _21 = (long long unsigned int) layers_95;
  _22 = _21 * 4;
  _23 = stbi__malloc (_22);
  *delays_83(D) = _23;
  _24 = (long long unsigned int) layers_95;
  _25 = (unsigned int) _24;
  _26 = _25 * 4;
  delays_size_114 = (int) _26;

  <bb 17> :
  # out_54 = PHI <out_104(14), out_110(15), out_110(16)>
  _27 = (long long unsigned int) stride_96;
  _28 = layers_95 + -1;
  _29 = stride_96 * _28;
  _30 = (sizetype) _29;
  _31 = out_54 + _30;
  memcpy (_31, u_52, _27);
  if (layers_95 > 1)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _32 = stride_96 * 2;
  _33 = (sizetype) _32;
  _34 = -_33;
  two_back_116 = out_54 + _34;

  <bb 19> :
  # two_back_58 = PHI <two_back_57(17), two_back_116(18)>
  if (delays_83(D) != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _35 = *delays_83(D);
  layers.527_36 = (unsigned int) layers_95;
  _37 = layers.527_36 + 4294967295;
  _38 = (long long unsigned int) _37;
  _39 = _38 * 4;
  _40 = _35 + _39;
  _41 = g.delay;
  *_40 = _41;

  <bb 21> :

  <bb 22> :
  # layers_51 = PHI <layers_50(8), layers_95(21)>
  # out_55 = PHI <out_53(8), out_54(21)>
  # two_back_59 = PHI <two_back_57(8), two_back_58(21)>
  if (u_52 == 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  goto <bb 5>; [INV]

  <bb 24> :
  _42 = g.out;
  free (_42);
  _43 = g.history;
  free (_43);
  _44 = g.background;
  free (_44);
  if (req_comp_86(D) != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  if (req_comp_86(D) != 4)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _45 = g.h;
  _46 = (unsigned int) _45;
  _47 = g.w;
  _48 = layers_51 * _47;
  _49 = (unsigned int) _48;
  _122 = stbi__convert_format (out_55, 4, req_comp_86(D), _49, _46);

  <bb 27> :
  out_123 = _122;

  <bb 28> :
  # out_56 = PHI <out_55(24), out_55(25), out_123(27)>
  *z_124(D) = layers_51;
  _126 = out_56;
  // predicted unlikely by early return (on trees) predictor.

  <bb 29> :
  # _60 = PHI <_103(11), _126(28)>
  g ={v} {CLOBBER};
  goto <bb 31>; [INV]

  <bb 30> :
  stbi__err ("not GIF");
  _130 = 0B;

  <bb 31> :
  # _61 = PHI <_60(29), _130(30)>
<L37>:
  return _61;

  <bb 32> :
<L38>:
  resx 1

}



;; Function stbi__gif_load (_ZL14stbi__gif_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=949, decl_uid=10224, cgraph_uid=855, symbol_order=885)

stbi__gif_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.17292;
  stbi_uc * D.17291;
  struct stbi__gif g;
  stbi_uc * u;
  void * D.17289;
  int _1;
  int _2;
  int _3;
  unsigned int _4;
  int _5;
  unsigned int _6;
  stbi_uc * _7;
  stbi_uc * _8;
  stbi_uc * _9;
  stbi_uc * _10;
  stbi_uc * _22;
  stbi_uc * _30;
  void * _35;

  <bb 2> :
  u_15 = 0B;
  memset (&g, 0, 34928);
  _22 = stbi__gif_load_next (s_18(D), &g, comp_19(D), req_comp_20(D), 0B);

  <bb 3> :
  u_23 = _22;
  if (u_23 == s_18(D))
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  u_24 = 0B;

  <bb 5> :
  # u_11 = PHI <u_23(3), u_24(4)>
  if (u_11 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  _1 = g.w;
  *x_25(D) = _1;
  _2 = g.h;
  *y_27(D) = _2;
  if (req_comp_20(D) != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  if (req_comp_20(D) != 4)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _3 = g.h;
  _4 = (unsigned int) _3;
  _5 = g.w;
  _6 = (unsigned int) _5;
  _30 = stbi__convert_format (u_11, 4, req_comp_20(D), _6, _4);

  <bb 9> :
  u_31 = _30;
  goto <bb 12>; [INV]

  <bb 10> :
  _7 = g.out;
  if (_7 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _8 = g.out;
  free (_8);

  <bb 12> :
  # u_12 = PHI <u_11(7), u_11(10), u_11(11), u_11(6), u_31(9)>
  _9 = g.history;
  free (_9);
  _10 = g.background;
  free (_10);
  _35 = u_12;
  g ={v} {CLOBBER};

  <bb 13> :
<L15>:
  return _35;

  <bb 14> :
<L16>:
  resx 1

}



;; Function stbi__gif_info (_ZL14stbi__gif_infoP13stbi__contextPiS1_S1_, funcdef_no=950, decl_uid=10237, cgraph_uid=856, symbol_order=886)

stbi__gif_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17297;
  int D.17295;
  int _7;
  int _8;

  <bb 2> :
  _7 = stbi__gif_info_raw (s_2(D), x_3(D), y_4(D), comp_5(D));
  _8 = _7;

  <bb 3> :
<L0>:
  return _8;

}



;; Function stbi__hdr_test_core (_ZL19stbi__hdr_test_coreP13stbi__contextPKc, funcdef_no=951, decl_uid=13184, cgraph_uid=857, symbol_order=887)

stbi__hdr_test_core (struct stbi__context * s, const char * signature)
{
  unsigned char D.17305;
  int i;
  int D.17303;
  bool retval.528;
  sizetype _1;
  const char * _2;
  char _3;
  unsigned char _4;
  int _5;
  sizetype _6;
  const char * _7;
  char _8;
  int _9;
  int _11;
  unsigned char _19;
  bool retval.528_20;
  int _21;
  int _24;

  <bb 2> :
  i_14 = 0;

  <bb 3> :
  # i_10 = PHI <i_14(2), i_22(6)>
  _1 = (sizetype) i_10;
  _2 = signature_16(D) + _1;
  _3 = *_2;
  if (_3 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _19 = stbi__get8 (s_17(D));
  _4 = _19;
  _5 = (int) _4;
  _6 = (sizetype) i_10;
  _7 = signature_16(D) + _6;
  _8 = *_7;
  _9 = (int) _8;
  retval.528_20 = _5 != _9;
  if (retval.528_20 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 6> :
  i_22 = i_10 + 1;
  goto <bb 3>; [INV]

  <bb 7> :
  stbi__rewind (s_17(D));
  _24 = 1;

  <bb 8> :
  # _11 = PHI <_21(5), _24(7)>
<L5>:
  return _11;

}



;; Function stbi__hdr_test (_ZL14stbi__hdr_testP13stbi__context, funcdef_no=952, decl_uid=10189, cgraph_uid=858, symbol_order=888)

stbi__hdr_test (struct stbi__context * s)
{
  int D.17312;
  int D.17311;
  int r;
  int D.17309;
  int _6;
  int _10;
  int _13;

  <bb 2> :
  _6 = stbi__hdr_test_core (s_4(D), "#?RADIANCE\n");
  r_7 = _6;
  stbi__rewind (s_4(D));
  if (r_7 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _10 = stbi__hdr_test_core (s_4(D), "#?RGBE\n");
  r_11 = _10;
  stbi__rewind (s_4(D));

  <bb 4> :
  # r_1 = PHI <r_7(2), r_11(3)>
  _13 = r_1;

  <bb 5> :
<L3>:
  return _13;

}



;; Function stbi__hdr_gettoken (_ZL18stbi__hdr_gettokenP13stbi__contextPc, funcdef_no=953, decl_uid=13195, cgraph_uid=859, symbol_order=889)

stbi__hdr_gettoken (struct stbi__context * z, char * buffer)
{
  unsigned char D.17337;
  unsigned char D.17336;
  int D.17335;
  int D.17334;
  unsigned char D.17333;
  char c;
  int len;
  char * D.17331;
  bool iftmp.533;
  bool retval.532;
  bool iftmp.530;
  bool retval.529;
  unsigned char _1;
  int _2;
  int len.531_3;
  sizetype _4;
  char * _5;
  int _6;
  unsigned char _7;
  unsigned char _8;
  sizetype _9;
  char * _10;
  bool iftmp.530_14;
  bool iftmp.533_15;
  unsigned char _26;
  int _29;
  bool iftmp.530_30;
  bool iftmp.530_31;
  bool retval.529_32;
  int _37;
  unsigned char _39;
  bool iftmp.533_40;
  bool iftmp.533_41;
  bool retval.532_42;
  unsigned char _44;
  char * _47;

  <bb 2> :
  len_21 = 0;
  c_22 = 0;
  _26 = stbi__get8 (z_24(D));
  _1 = _26;
  c_27 = (char) _1;

  <bb 3> :
  # len_11 = PHI <len_21(2), len_33(16)>
  # c_13 = PHI <c_27(2), c_45(16)>
  _29 = stbi__at_eof (z_24(D));
  _2 = _29;
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (c_13 != 10)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.530_30 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.530_31 = 0;

  <bb 7> :
  # iftmp.530_14 = PHI <iftmp.530_30(5), iftmp.530_31(6)>
  retval.529_32 = iftmp.530_14;
  if (retval.529_32 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  len.531_3 = len_11;
  len_33 = len.531_3 + 1;
  _4 = (sizetype) len.531_3;
  _5 = buffer_34(D) + _4;
  *_5 = c_13;
  if (len_33 == 1023)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  _37 = stbi__at_eof (z_24(D));
  _6 = _37;
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _39 = stbi__get8 (z_24(D));
  _7 = _39;
  if (_7 != 10)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.533_40 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.533_41 = 0;

  <bb 13> :
  # iftmp.533_15 = PHI <iftmp.533_40(11), iftmp.533_41(12)>
  retval.532_42 = iftmp.533_15;
  if (retval.532_42 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  goto <bb 9>; [INV]

  <bb 15> :
  goto <bb 17>; [INV]

  <bb 16> :
  _44 = stbi__get8 (z_24(D));
  _8 = _44;
  c_45 = (char) _8;
  goto <bb 3>; [INV]

  <bb 17> :
  # len_12 = PHI <len_11(7), len_33(15)>
  _9 = (sizetype) len_12;
  _10 = buffer_34(D) + _9;
  *_10 = 0;
  _47 = buffer_34(D);

  <bb 18> :
<L16>:
  return _47;

}



;; Function stbi__hdr_convert (_ZL17stbi__hdr_convertPfPhi, funcdef_no=954, decl_uid=13206, cgraph_uid=860, symbol_order=890)

stbi__hdr_convert (float * output, stbi_uc * input, int req_comp)
{
  float f1;
  stbi_uc * _1;
  unsigned char _2;
  stbi_uc * _3;
  unsigned char _4;
  int _5;
  int _6;
  unsigned char _7;
  int _8;
  stbi_uc * _9;
  unsigned char _10;
  int _11;
  int _12;
  stbi_uc * _13;
  unsigned char _14;
  int _15;
  int _16;
  float _17;
  float _18;
  float _19;
  unsigned char _20;
  int _21;
  float _22;
  float _23;
  stbi_uc * _24;
  unsigned char _25;
  int _26;
  float _27;
  float * _28;
  float _29;
  stbi_uc * _30;
  unsigned char _31;
  int _32;
  float _33;
  float * _34;
  float _35;
  float * _36;
  float * _37;
  float * _38;
  float * _39;
  float * _40;
  float _41;
  float _42;
  float * _43;

  <bb 2> :
  _1 = input_50(D) + 3;
  _2 = *_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  _3 = input_50(D) + 3;
  _4 = *_3;
  _5 = (int) _4;
  _6 = _5 + -136;
  f1_53 = std::ldexp (1.0e+0, _6);
  if (req_comp_54(D) <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _7 = *input_50(D);
  _8 = (int) _7;
  _9 = input_50(D) + 1;
  _10 = *_9;
  _11 = (int) _10;
  _12 = _8 + _11;
  _13 = input_50(D) + 2;
  _14 = *_13;
  _15 = (int) _14;
  _16 = _12 + _15;
  _17 = (float) _16;
  _18 = f1_53 * _17;
  _19 = _18 / 3.0e+0;
  *output_55(D) = _19;
  goto <bb 6>; [INV]

  <bb 5> :
  _20 = *input_50(D);
  _21 = (int) _20;
  _22 = (float) _21;
  _23 = f1_53 * _22;
  *output_55(D) = _23;
  _24 = input_50(D) + 1;
  _25 = *_24;
  _26 = (int) _25;
  _27 = (float) _26;
  _28 = output_55(D) + 4;
  _29 = f1_53 * _27;
  *_28 = _29;
  _30 = input_50(D) + 2;
  _31 = *_30;
  _32 = (int) _31;
  _33 = (float) _32;
  _34 = output_55(D) + 8;
  _35 = f1_53 * _33;
  *_34 = _35;

  <bb 6> :
  if (req_comp_54(D) == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _36 = output_55(D) + 4;
  *_36 = 1.0e+0;

  <bb 8> :
  if (req_comp_54(D) == 4)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _37 = output_55(D) + 12;
  *_37 = 1.0e+0;

  <bb 10> :
  goto <bb 16>; [INV]

  <bb 11> :
  switch (req_comp_54(D)) <default: <L15> [INV], case 1: <L14> [INV], case 2: <L13> [INV], case 3: <L12> [INV], case 4: <L11> [INV]>

  <bb 12> :
<L11>:
  _38 = output_55(D) + 12;
  *_38 = 1.0e+0;

  <bb 13> :
<L12>:
  _39 = output_55(D) + 8;
  *_39 = 0.0;
  _40 = output_55(D) + 4;
  _41 = *_39;
  *_40 = _41;
  _42 = *_40;
  *output_55(D) = _42;
  goto <bb 16>; [INV]

  <bb 14> :
<L13>:
  _43 = output_55(D) + 4;
  *_43 = 1.0e+0;

  <bb 15> :
<L14>:
  *output_55(D) = 0.0;

  <bb 16> :
<L15>:
  return;

}



;; Function stbi__hdr_load (_ZL14stbi__hdr_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=955, decl_uid=10196, cgraph_uid=861, symbol_order=891)

stbi__hdr_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  unsigned char D.17443;
  unsigned char D.17442;
  unsigned char D.17441;
  stbi_uc D.17440;
  unsigned char D.17437;
  unsigned char D.17436;
  unsigned char D.17435;
  unsigned char D.17434;
  char * D.17432;
  char * D.17431;
  const char * D.17430;
  int nleft;
  stbi_uc rgbe[4];
  stbi_uc rgbe[4];
  const char * headerToken;
  int z;
  int c2;
  int c1;
  int k;
  int j;
  int i;
  unsigned char value;
  unsigned char count;
  int len;
  float * hdr_data;
  stbi_uc * scanline;
  int height;
  int width;
  int valid;
  char * token;
  char buffer[1024];
  bool retval.545;
  stbi_uc D.13245;
  bool retval.544;
  float * D.17357;
  int _1;
  int _2;
  char * _3;
  char * token.534_4;
  char _5;
  char * token.535_6;
  int _7;
  char * _8;
  char * token.536_9;
  int _10;
  char * token.537_11;
  char * _12;
  char * token.538_13;
  char * token.539_14;
  char _15;
  char * token.540_16;
  char * _17;
  char * token.541_18;
  int _19;
  char * token.542_20;
  char * _21;
  char * token.543_22;
  int _23;
  int _24;
  int _25;
  sizetype _26;
  int _27;
  sizetype _28;
  sizetype _29;
  sizetype _30;
  float * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  int _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  int _40;
  int _41;
  int _42;
  int i.546_43;
  int _44;
  int _45;
  sizetype _46;
  stbi_uc * _47;
  int _48;
  int _49;
  int i.547_50;
  int _51;
  int _52;
  sizetype _53;
  stbi_uc * _54;
  unsigned char _55;
  int _56;
  sizetype _57;
  stbi_uc * _58;
  int _59;
  int _60;
  int _61;
  long long unsigned int _62;
  long long unsigned int _63;
  float * _64;
  float * _84;
  const char * _106;
  float * _109;
  char * _111;
  float * _114;
  char * _116;
  float * _119;
  float * _125;
  float * _130;
  float * _132;
  bool retval.544_142;
  float * _144;
  float * _148;
  unsigned char _152;
  unsigned char _155;
  unsigned char _158;
  stbi_uc _162;
  stbi_uc _163;
  float * _168;
  float * _173;
  bool retval.545_177;
  unsigned char _179;
  unsigned char _182;
  float * _188;
  float * _196;
  unsigned char _200;
  unsigned char _212;
  float * _229;

  <bb 2> :
  valid_102 = 0;
  _106 = stbi__hdr_gettoken (s_104(D), &buffer);

  <bb 3> :
  headerToken_107 = _106;
  _1 = strcmp (headerToken_107, "#?RADIANCE");
  if (_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _2 = strcmp (headerToken_107, "#?RGBE");
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__err ("not HDR");
  _109 = 0B;
  goto <bb 88>; [INV]

  <bb 6> :
  # valid_235 = PHI <valid_102(3), valid_102(4)>

  <bb 7> :
  # valid_66 = PHI <valid_235(6), valid_67(12)>
  _111 = stbi__hdr_gettoken (s_104(D), &buffer);

  <bb 8> :
  _3 = _111;
  token = _3;
  token.534_4 = token;
  _5 = *token.534_4;
  if (_5 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 13>; [INV]

  <bb 10> :
  token.535_6 = token;
  _7 = strcmp (token.535_6, "FORMAT=32-bit_rle_rgbe");
  if (_7 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  valid_230 = 1;

  <bb 12> :
  # valid_67 = PHI <valid_66(10), valid_230(11)>
  goto <bb 7>; [INV]

  <bb 13> :
  if (valid_66 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  stbi__err ("unsupported format");
  _114 = 0B;
  goto <bb 88>; [INV]

  <bb 15> :
  _116 = stbi__hdr_gettoken (s_104(D), &buffer);

  <bb 16> :
  _8 = _116;
  token = _8;
  token.536_9 = token;
  _10 = strncmp (token.536_9, "-Y ", 3);
  if (_10 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stbi__err ("unsupported data layout");
  _119 = 0B;
  goto <bb 88>; [INV]

  <bb 18> :
  token.537_11 = token;
  _12 = token.537_11 + 3;
  token = _12;
  token.538_13 = token;
  height_122 = strtol (token.538_13, &token, 10);

  <bb 19> :
  token.539_14 = token;
  _15 = *token.539_14;
  if (_15 != 32)
    goto <bb 21>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  token.540_16 = token;
  _17 = token.540_16 + 1;
  token = _17;
  goto <bb 19>; [INV]

  <bb 21> :
  token.541_18 = token;
  _19 = strncmp (token.541_18, "+X ", 3);
  if (_19 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  stbi__err ("unsupported data layout");
  _125 = 0B;
  goto <bb 88>; [INV]

  <bb 23> :
  token.542_20 = token;
  _21 = token.542_20 + 3;
  token = _21;
  token.543_22 = token;
  width_128 = strtol (token.543_22, 0B, 10);
  if (height_122 > 16777216)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  stbi__err ("too large");
  _130 = 0B;
  goto <bb 88>; [INV]

  <bb 25> :
  if (width_128 > 16777216)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  stbi__err ("too large");
  _132 = 0B;
  goto <bb 88>; [INV]

  <bb 27> :
  *x_133(D) = width_128;
  *y_135(D) = height_122;
  if (comp_137(D) != 0B)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  *comp_137(D) = 3;

  <bb 29> :
  if (req_comp_139(D) == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  req_comp_140 = 3;

  <bb 31> :
  # req_comp_65 = PHI <req_comp_139(D)(29), req_comp_140(30)>
  _23 = stbi__mad4sizes_valid (width_128, height_122, req_comp_65, 4, 0);
  retval.544_142 = _23 == 0;
  if (retval.544_142 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  stbi__err ("too large");
  _144 = 0B;
  goto <bb 88>; [INV]

  <bb 33> :
  hdr_data_146 = stbi__malloc_mad4 (width_128, height_122, req_comp_65, 4, 0);
  if (hdr_data_146 == 0B)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  stbi__err ("outofmem");
  _148 = 0B;
  goto <bb 88>; [INV]

  <bb 35> :
  if (width_128 <= 7)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  if (width_128 > 32767)
    goto <bb 37>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 37> :
  j_221 = 0;

  <bb 38> :
  # j_77 = PHI <j_221(37), j_223(43)>
  if (j_77 >= height_122)
    goto <bb 44>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 39> :
  i_222 = 0;

  <bb 40> :
  # i_70 = PHI <i_222(39), i_227(42)>
  # j_78 = PHI <j_77(39), j_79(42)>
  if (i_70 >= width_128)
    goto <bb 43>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 41> :
  # i_71 = PHI <i_70(40), i_215(54)>
  # j_79 = PHI <j_78(40), j_216(54)>
main_decode_loop:
  stbi__getn (s_104(D), &rgbe, 4);

  <bb 42> :
  _24 = j_79 * width_128;
  _25 = req_comp_65 * _24;
  _26 = (sizetype) _25;
  _27 = i_71 * req_comp_65;
  _28 = (sizetype) _27;
  _29 = _26 + _28;
  _30 = _29 * 4;
  _31 = hdr_data_146 + _30;
  stbi__hdr_convert (_31, &rgbe, req_comp_65);
  rgbe ={v} {CLOBBER};
  i_227 = i_71 + 1;
  goto <bb 40>; [INV]

  <bb 43> :
  j_223 = j_78 + 1;
  goto <bb 38>; [INV]

  <bb 44> :
  goto <bb 87>; [INV]

  <bb 45> :
  scanline_149 = 0B;
  j_150 = 0;

  <bb 46> :
  # scanline_68 = PHI <scanline_149(45), scanline_69(84)>
  # j_80 = PHI <j_150(45), j_207(84)>
  if (j_80 >= height_122)
    goto <bb 85>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  _152 = stbi__get8 (s_104(D));

  <bb 48> :
  _32 = _152;
  c1_153 = (int) _32;
  _155 = stbi__get8 (s_104(D));

  <bb 49> :
  _33 = _155;
  c2_156 = (int) _33;
  _158 = stbi__get8 (s_104(D));

  <bb 50> :
  _34 = _158;
  len_159 = (int) _34;
  if (c1_153 != 2)
    goto <bb 53>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 51> :
  if (c2_156 != 2)
    goto <bb 53>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _35 = len_159 & 128;
  if (_35 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 53> :
  _36 = (unsigned char) c1_153;
  rgbe[0] = _36;
  _37 = (unsigned char) c2_156;
  rgbe[1] = _37;
  _38 = (unsigned char) len_159;
  rgbe[2] = _38;
  _212 = stbi__get8 (s_104(D));

  <bb 54> :
  _39 = _212;
  rgbe[3] = _39;
  stbi__hdr_convert (hdr_data_146, &rgbe, req_comp_65);
  i_215 = 1;
  j_216 = 0;
  free (scanline_68);
  // predicted unlikely by goto predictor.
  rgbe ={v} {CLOBBER};
  goto <bb 41>; [INV]

  <bb 55> :
  len_160 = len_159 << 8;
  _162 = stbi__get8 (s_104(D));

  <bb 56> :
  _163 = _162;
  _40 = (int) _163;
  len_164 = len_160 | _40;
  if (len_164 != width_128)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  free (hdr_data_146);
  free (scanline_68);
  stbi__err ("invalid decoded scanline length");
  _168 = 0B;
  goto <bb 88>; [INV]

  <bb 58> :
  if (scanline_68 == 0B)
    goto <bb 59>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 59> :
  scanline_170 = stbi__malloc_mad2 (width_128, 4, 0);
  if (scanline_170 == 0B)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  free (hdr_data_146);
  stbi__err ("outofmem");
  _173 = 0B;
  goto <bb 88>; [INV]

  <bb 61> :
  # scanline_69 = PHI <scanline_68(58), scanline_170(59)>
  k_174 = 0;

  <bb 62> :
  # k_81 = PHI <k_174(61), k_203(80)>
  if (k_81 > 3)
    goto <bb 81>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  i_175 = 0;

  <bb 64> :
  # i_72 = PHI <i_175(63), i_75(79)>
  nleft_176 = width_128 - i_72;
  retval.545_177 = nleft_176 > 0;
  if (retval.545_177 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 65> :
  _179 = stbi__get8 (s_104(D));

  <bb 66> :
  count_180 = _179;
  if (count_180 > 128)
    goto <bb 67>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 67> :
  _182 = stbi__get8 (s_104(D));

  <bb 68> :
  value_183 = _182;
  count_184 = count_180 + 128;
  _41 = (int) count_184;
  if (nleft_176 < _41)
    goto <bb 69>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 69> :
  free (hdr_data_146);
  free (scanline_69);
  stbi__err ("corrupt");
  _188 = 0B;
  goto <bb 88>; [INV]

  <bb 70> :
  z_189 = 0;

  <bb 71> :
  # i_73 = PHI <i_72(70), i_190(72)>
  # z_82 = PHI <z_189(70), z_192(72)>
  _42 = (int) count_184;
  if (z_82 >= _42)
    goto <bb 79>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  i.546_43 = i_73;
  i_190 = i.546_43 + 1;
  _44 = i.546_43 * 4;
  _45 = k_81 + _44;
  _46 = (sizetype) _45;
  _47 = scanline_69 + _46;
  *_47 = value_183;
  z_192 = z_82 + 1;
  goto <bb 71>; [INV]

  <bb 73> :
  _48 = (int) count_180;
  if (nleft_176 < _48)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  free (hdr_data_146);
  free (scanline_69);
  stbi__err ("corrupt");
  _196 = 0B;
  goto <bb 88>; [INV]

  <bb 75> :
  z_197 = 0;

  <bb 76> :
  # i_74 = PHI <i_72(75), i_198(78)>
  # z_83 = PHI <z_197(75), z_202(78)>
  _49 = (int) count_180;
  if (z_83 >= _49)
    goto <bb 79>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  i.547_50 = i_74;
  i_198 = i.547_50 + 1;
  _51 = i.547_50 * 4;
  _52 = k_81 + _51;
  _53 = (sizetype) _52;
  _54 = scanline_69 + _53;
  _200 = stbi__get8 (s_104(D));

  <bb 78> :
  _55 = _200;
  *_54 = _55;
  z_202 = z_83 + 1;
  goto <bb 76>; [INV]

  <bb 79> :
  # i_75 = PHI <i_73(71), i_74(76)>
  goto <bb 64>; [INV]

  <bb 80> :
  k_203 = k_81 + 1;
  goto <bb 62>; [INV]

  <bb 81> :
  i_204 = 0;

  <bb 82> :
  # i_76 = PHI <i_204(81), i_206(83)>
  if (i_76 >= width_128)
    goto <bb 84>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _56 = i_76 * 4;
  _57 = (sizetype) _56;
  _58 = scanline_69 + _57;
  _59 = j_80 * width_128;
  _60 = i_76 + _59;
  _61 = req_comp_65 * _60;
  _62 = (long long unsigned int) _61;
  _63 = _62 * 4;
  _64 = hdr_data_146 + _63;
  stbi__hdr_convert (_64, _58, req_comp_65);
  i_206 = i_76 + 1;
  goto <bb 82>; [INV]

  <bb 84> :
  j_207 = j_80 + 1;
  goto <bb 46>; [INV]

  <bb 85> :
  if (scanline_68 != 0B)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  free (scanline_68);

  <bb 87> :
  _229 = hdr_data_146;

  <bb 88> :
  # _84 = PHI <_109(5), _114(14), _119(17), _125(22), _130(24), _132(26), _144(32), _148(34), _168(57), _173(60), _188(69), _196(74), _229(87)>
  buffer ={v} {CLOBBER};
  token ={v} {CLOBBER};

  <bb 89> :
<L86>:
  return _84;

  <bb 90> :
<L87>:
  resx 2

  <bb 91> :
<L88>:
  resx 4

  <bb 92> :
<L89>:
  resx 1

}



;; Function stbi__hdr_info (_ZL14stbi__hdr_infoP13stbi__contextPiS1_S1_, funcdef_no=956, decl_uid=10201, cgraph_uid=862, symbol_order=892)

stbi__hdr_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  char * D.17476;
  char * D.17475;
  int D.17474;
  int dummy;
  int valid;
  char * token;
  char buffer[1024];
  int D.17458;
  bool retval.548;
  int _1;
  char * _2;
  char * token.549_3;
  char _4;
  char * token.550_5;
  int _6;
  char * _7;
  char * token.551_8;
  int _9;
  char * token.552_10;
  char * _11;
  char * token.553_12;
  long int _13;
  char * token.554_14;
  char _15;
  char * token.555_16;
  char * _17;
  char * token.556_18;
  int _19;
  char * token.557_20;
  char * _21;
  char * token.558_22;
  long int _23;
  int _29;
  int _44;
  bool retval.548_45;
  int _47;
  char * _49;
  int _52;
  char * _54;
  int _57;
  int _63;
  int _68;

  <bb 2> :
  valid_34 = 0;
  if (x_35(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_36 = &dummy;

  <bb 4> :
  # x_24 = PHI <x_35(D)(2), x_36(3)>
  if (y_37(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_38 = &dummy;

  <bb 6> :
  # y_25 = PHI <y_37(D)(4), y_38(5)>
  if (comp_39(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_40 = &dummy;

  <bb 8> :
  # comp_26 = PHI <comp_39(D)(6), comp_40(7)>
  _44 = stbi__hdr_test (s_42(D));

  <bb 9> :
  _1 = _44;
  retval.548_45 = _1 == 0;
  if (retval.548_45 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__rewind (s_42(D));
  _47 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 11> :
  # valid_27 = PHI <valid_34(9), valid_28(16)>
  _49 = stbi__hdr_gettoken (s_42(D), &buffer);

  <bb 12> :
  _2 = _49;
  token = _2;
  token.549_3 = token;
  _4 = *token.549_3;
  if (_4 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  goto <bb 17>; [INV]

  <bb 14> :
  token.550_5 = token;
  _6 = strcmp (token.550_5, "FORMAT=32-bit_rle_rgbe");
  if (_6 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  valid_69 = 1;

  <bb 16> :
  # valid_28 = PHI <valid_27(14), valid_69(15)>
  goto <bb 11>; [INV]

  <bb 17> :
  if (valid_27 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  stbi__rewind (s_42(D));
  _52 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 19> :
  _54 = stbi__hdr_gettoken (s_42(D), &buffer);

  <bb 20> :
  _7 = _54;
  token = _7;
  token.551_8 = token;
  _9 = strncmp (token.551_8, "-Y ", 3);
  if (_9 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  stbi__rewind (s_42(D));
  _57 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 22> :
  token.552_10 = token;
  _11 = token.552_10 + 3;
  token = _11;
  token.553_12 = token;
  _13 = strtol (token.553_12, &token, 10);
  *y_25 = _13;

  <bb 23> :
  token.554_14 = token;
  _15 = *token.554_14;
  if (_15 != 32)
    goto <bb 25>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  token.555_16 = token;
  _17 = token.555_16 + 1;
  token = _17;
  goto <bb 23>; [INV]

  <bb 25> :
  token.556_18 = token;
  _19 = strncmp (token.556_18, "+X ", 3);
  if (_19 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  stbi__rewind (s_42(D));
  _63 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 27> :
  token.557_20 = token;
  _21 = token.557_20 + 3;
  token = _21;
  token.558_22 = token;
  _23 = strtol (token.558_22, 0B, 10);
  *x_24 = _23;
  *comp_26 = 3;
  _68 = 1;

  <bb 28> :
  # _29 = PHI <_47(10), _52(18), _57(21), _63(26), _68(27)>
  buffer ={v} {CLOBBER};
  token ={v} {CLOBBER};
  dummy ={v} {CLOBBER};

  <bb 29> :
<L28>:
  return _29;

  <bb 30> :
<L29>:
  resx 1

}



;; Function stbi__bmp_info (_ZL14stbi__bmp_infoP13stbi__contextPiS1_S1_, funcdef_no=957, decl_uid=10156, cgraph_uid=863, symbol_order=893)

stbi__bmp_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  void * D.17500;
  struct stbi__bmp_data info;
  void * p;
  int iftmp.559;
  int D.17481;
  unsigned int _1;
  int _2;
  unsigned int _3;
  int _4;
  int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int iftmp.559_9;
  void * _19;
  int _22;
  int iftmp.559_29;
  int iftmp.559_30;
  int _32;

  <bb 2> :
  info.all_a = 255;
  _19 = stbi__bmp_parse_header (s_17(D), &info);

  <bb 3> :
  p_20 = _19;
  stbi__rewind (s_17(D));
  if (p_20 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 5> :
  if (x_23(D) != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _1 = s_17(D)->img_x;
  _2 = (int) _1;
  *x_23(D) = _2;

  <bb 7> :
  if (y_25(D) != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _3 = s_17(D)->img_y;
  _4 = (int) _3;
  *y_25(D) = _4;

  <bb 9> :
  if (comp_27(D) != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 10> :
  _5 = info.bpp;
  if (_5 == 24)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _6 = info.ma;
  if (_6 == 4278190080)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  *comp_27(D) = 3;
  goto <bb 17>; [INV]

  <bb 13> :
  _7 = info.ma;
  if (_7 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.559_29 = 4;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.559_30 = 3;

  <bb 16> :
  # iftmp.559_9 = PHI <iftmp.559_29(14), iftmp.559_30(15)>
  *comp_27(D) = iftmp.559_9;

  <bb 17> :

  <bb 18> :
  _32 = 1;

  <bb 19> :
  # _8 = PHI <_22(4), _32(18)>
  info ={v} {CLOBBER};

  <bb 20> :
<L19>:
  return _8;

  <bb 21> :
<L20>:
  resx 1

}



;; Function stbi__psd_info (_ZL14stbi__psd_infoP13stbi__contextPiS1_S1_, funcdef_no=958, decl_uid=10185, cgraph_uid=864, symbol_order=894)

stbi__psd_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17536;
  int D.17535;
  unsigned int D.17534;
  unsigned int D.17533;
  int D.17532;
  int D.17531;
  unsigned int D.17530;
  int depth;
  int dummy;
  int channelCount;
  bool retval.562;
  bool retval.561;
  int D.17515;
  bool retval.560;
  unsigned int _1;
  int _2;
  unsigned int _3;
  int _4;
  unsigned int _5;
  int _6;
  int _7;
  int _11;
  unsigned int _23;
  bool retval.560_24;
  int _26;
  int _28;
  bool retval.561_29;
  int _31;
  int _34;
  unsigned int _37;
  unsigned int _40;
  int _43;
  int _46;
  int _48;
  bool retval.562_49;
  int _51;
  int _53;
  int _55;

  <bb 2> :
  if (x_14(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_15 = &dummy;

  <bb 4> :
  # x_8 = PHI <x_14(D)(2), x_15(3)>
  if (y_16(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_17 = &dummy;

  <bb 6> :
  # y_9 = PHI <y_16(D)(4), y_17(5)>
  if (comp_18(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_19 = &dummy;

  <bb 8> :
  # comp_10 = PHI <comp_18(D)(6), comp_19(7)>
  _23 = stbi__get32be (s_21(D));

  <bb 9> :
  _1 = _23;
  retval.560_24 = _1 != 943870035;
  if (retval.560_24 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__rewind (s_21(D));
  _26 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 11> :
  _28 = stbi__get16be (s_21(D));

  <bb 12> :
  _2 = _28;
  retval.561_29 = _2 != 1;
  if (retval.561_29 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  stbi__rewind (s_21(D));
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 14> :
  stbi__skip (s_21(D), 6);

  <bb 15> :
  _34 = stbi__get16be (s_21(D));

  <bb 16> :
  channelCount_35 = _34;
  if (channelCount_35 < 0)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  if (channelCount_35 > 16)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  stbi__rewind (s_21(D));
  _55 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 19> :
  _37 = stbi__get32be (s_21(D));

  <bb 20> :
  _3 = _37;
  _4 = (int) _3;
  *y_9 = _4;
  _40 = stbi__get32be (s_21(D));

  <bb 21> :
  _5 = _40;
  _6 = (int) _5;
  *x_8 = _6;
  _43 = stbi__get16be (s_21(D));

  <bb 22> :
  depth_44 = _43;
  if (depth_44 != 8)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 23> :
  if (depth_44 != 16)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  stbi__rewind (s_21(D));
  _46 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 25> :
  _48 = stbi__get16be (s_21(D));

  <bb 26> :
  _7 = _48;
  retval.562_49 = _7 != 3;
  if (retval.562_49 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  stbi__rewind (s_21(D));
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 28> :
  *comp_10 = 4;
  _53 = 1;

  <bb 29> :
  # _11 = PHI <_26(10), _31(13), _55(18), _46(24), _51(27), _53(28)>
  dummy ={v} {CLOBBER};

  <bb 30> :
<L23>:
  return _11;

  <bb 31> :
<L24>:
  resx 1

}



;; Function stbi__psd_is16 (_ZL14stbi__psd_is16P13stbi__context, funcdef_no=959, decl_uid=10187, cgraph_uid=865, symbol_order=895)

stbi__psd_is16 (struct stbi__context * s)
{
  int D.17555;
  int D.17554;
  int D.17553;
  unsigned int D.17552;
  int depth;
  int channelCount;
  bool retval.564;
  int D.17542;
  bool retval.563;
  unsigned int _1;
  int _2;
  int _3;
  unsigned int _8;
  bool retval.563_9;
  int _11;
  int _13;
  bool retval.564_14;
  int _16;
  int _19;
  int _24;
  int _27;
  int _28;
  int _30;

  <bb 2> :
  _8 = stbi__get32be (s_6(D));
  _1 = _8;
  retval.563_9 = _1 != 943870035;
  if (retval.563_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__rewind (s_6(D));
  _11 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 4> :
  _13 = stbi__get16be (s_6(D));
  _2 = _13;
  retval.564_14 = _2 != 1;
  if (retval.564_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__rewind (s_6(D));
  _16 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 6> :
  stbi__skip (s_6(D), 6);
  _19 = stbi__get16be (s_6(D));
  channelCount_20 = _19;
  if (channelCount_20 < 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (channelCount_20 > 16)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  stbi__rewind (s_6(D));
  _30 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 9> :
  stbi__get32be (s_6(D));
  stbi__get32be (s_6(D));
  _24 = stbi__get16be (s_6(D));
  depth_25 = _24;
  if (depth_25 != 16)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__rewind (s_6(D));
  _27 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 11> :
  _28 = 1;

  <bb 12> :
  # _3 = PHI <_11(3), _16(5), _30(8), _27(10), _28(11)>
<L9>:
  return _3;

}



;; Function stbi__pic_info (_ZL14stbi__pic_infoP13stbi__contextPiS1_S1_, funcdef_no=960, decl_uid=10215, cgraph_uid=866, symbol_order=896)

stbi__pic_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17598;
  unsigned char D.17597;
  unsigned char D.17596;
  unsigned char D.17595;
  unsigned char D.17594;
  int D.17593;
  int D.17592;
  int D.17591;
  int D.17590;
  struct stbi__pic_packet * packet;
  struct stbi__pic_packet packets[10];
  int dummy;
  int chained;
  int num_packets;
  int act_comp;
  int iftmp.569;
  bool retval.568;
  bool retval.566;
  int D.17568;
  bool retval.565;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int num_packets.567_9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  int _15;
  int _16;
  unsigned char _17;
  int _18;
  int _24;
  int iftmp.569_25;
  int _40;
  bool retval.565_41;
  int _43;
  int _46;
  int _49;
  int _52;
  bool retval.566_53;
  int _55;
  int _57;
  int _59;
  unsigned char _63;
  unsigned char _66;
  unsigned char _69;
  unsigned char _72;
  int _76;
  bool retval.568_77;
  int _79;
  int _81;
  int iftmp.569_82;
  int iftmp.569_83;
  int _85;

  <bb 2> :
  act_comp_29 = 0;
  num_packets_30 = 0;
  if (x_31(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_32 = &dummy;

  <bb 4> :
  # x_19 = PHI <x_31(D)(2), x_32(3)>
  if (y_33(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_34 = &dummy;

  <bb 6> :
  # y_20 = PHI <y_33(D)(4), y_34(5)>
  if (comp_35(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_36 = &dummy;

  <bb 8> :
  # comp_21 = PHI <comp_35(D)(6), comp_36(7)>
  _40 = stbi__pic_is4 (s_38(D), "S\x80\xf64");

  <bb 9> :
  _1 = _40;
  retval.565_41 = _1 == 0;
  if (retval.565_41 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__rewind (s_38(D));
  _43 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 11> :
  stbi__skip (s_38(D), 88);

  <bb 12> :
  _46 = stbi__get16be (s_38(D));

  <bb 13> :
  _2 = _46;
  *x_19 = _2;
  _49 = stbi__get16be (s_38(D));

  <bb 14> :
  _3 = _49;
  *y_20 = _3;
  _52 = stbi__at_eof (s_38(D));

  <bb 15> :
  _4 = _52;
  retval.566_53 = _4 != 0;
  if (retval.566_53 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  stbi__rewind (s_38(D));
  _55 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 17> :
  _5 = *x_19;
  if (_5 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  _6 = *x_19;
  _7 = 268435456 / _6;
  _8 = *y_20;
  if (_7 < _8)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__rewind (s_38(D));
  _57 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 20> :
  stbi__skip (s_38(D), 8);

  <bb 21> :
  # act_comp_22 = PHI <act_comp_29(20), act_comp_74(33)>
  # num_packets_23 = PHI <num_packets_30(20), num_packets_60(33)>
  if (num_packets_23 == 10)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _59 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 23> :
  num_packets.567_9 = num_packets_23;
  num_packets_60 = num_packets.567_9 + 1;
  packet_61 = &packets[num_packets.567_9];
  _63 = stbi__get8 (s_38(D));

  <bb 24> :
  _10 = _63;
  chained_64 = (int) _10;
  _66 = stbi__get8 (s_38(D));

  <bb 25> :
  _11 = _66;
  packet_61->size = _11;
  _69 = stbi__get8 (s_38(D));

  <bb 26> :
  _12 = _69;
  packet_61->type = _12;
  _72 = stbi__get8 (s_38(D));

  <bb 27> :
  _13 = _72;
  packet_61->channel = _13;
  _14 = packet_61->channel;
  _15 = (int) _14;
  act_comp_74 = act_comp_22 | _15;
  _76 = stbi__at_eof (s_38(D));

  <bb 28> :
  _16 = _76;
  retval.568_77 = _16 != 0;
  if (retval.568_77 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  stbi__rewind (s_38(D));
  _79 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 30> :
  _17 = packet_61->size;
  if (_17 != 8)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  stbi__rewind (s_38(D));
  _81 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 38>; [INV]

  <bb 32> :
  if (chained_64 == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  goto <bb 21>; [INV]

  <bb 34> :
  _18 = act_comp_74 & 16;
  if (_18 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  iftmp.569_82 = 4;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.569_83 = 3;

  <bb 37> :
  # iftmp.569_25 = PHI <iftmp.569_82(35), iftmp.569_83(36)>
  *comp_21 = iftmp.569_25;
  _85 = 1;

  <bb 38> :
  # _24 = PHI <_43(10), _55(16), _57(19), _59(22), _79(29), _81(31), _85(37)>
  dummy ={v} {CLOBBER};
  packets ={v} {CLOBBER};

  <bb 39> :
<L30>:
  return _24;

  <bb 40> :
<L31>:
  resx 1

}



;; Function stbi__pnm_test (_ZL14stbi__pnm_testP13stbi__context, funcdef_no=961, decl_uid=10239, cgraph_uid=867, symbol_order=897)

stbi__pnm_test (struct stbi__context * s)
{
  unsigned char D.17608;
  unsigned char D.17607;
  char t;
  char p;
  int D.17605;
  unsigned char _1;
  unsigned char _2;
  int _3;
  unsigned char _8;
  unsigned char _11;
  int _13;
  int _15;

  <bb 2> :
  _8 = stbi__get8 (s_6(D));
  _1 = _8;
  p_9 = (char) _1;
  _11 = stbi__get8 (s_6(D));
  _2 = _11;
  t_12 = (char) _2;
  if (p_9 != 80)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (t_12 != 53)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (t_12 != 54)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__rewind (s_6(D));
  _15 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _13 = 1;

  <bb 7> :
  # _3 = PHI <_15(5), _13(6)>
<L4>:
  return _3;

}



;; Function stbi__pnm_load (_ZL14stbi__pnm_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=962, decl_uid=10246, cgraph_uid=868, symbol_order=898)

stbi__pnm_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.17634;
  int D.17633;
  stbi_uc * out;
  bool retval.571;
  void * D.17612;
  bool retval.570;
  int * _1;
  stbi__uint32 * _2;
  stbi__uint32 * _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned int _9;
  int _10;
  int _11;
  unsigned int _12;
  int _13;
  unsigned int _14;
  int _15;
  int _16;
  int _17;
  unsigned int _18;
  int _19;
  unsigned int _20;
  int _21;
  int _22;
  int _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  int _29;
  int _30;
  unsigned int _31;
  unsigned int _32;
  int _33;
  void * _35;
  int _42;
  bool retval.570_43;
  void * _44;
  void * _46;
  void * _48;
  bool retval.571_56;
  void * _58;
  void * _62;
  stbi_uc * _66;
  void * _68;
  void * _69;

  <bb 2> :
  _1 = &s_39(D)->img_n;
  _2 = &s_39(D)->img_y;
  _3 = &s_39(D)->img_x;
  _42 = stbi__pnm_info (s_39(D), _3, _2, _1);
  _4 = _42;
  retval.570_43 = _4 == 0;
  if (retval.570_43 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _44 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 4> :
  _5 = s_39(D)->img_y;
  if (_5 > 16777216)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__err ("too large");
  _46 = 0B;
  goto <bb 19>; [INV]

  <bb 6> :
  _6 = s_39(D)->img_x;
  if (_6 > 16777216)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  stbi__err ("too large");
  _48 = 0B;
  goto <bb 19>; [INV]

  <bb 8> :
  _7 = s_39(D)->img_x;
  _8 = (int) _7;
  *x_49(D) = _8;
  _9 = s_39(D)->img_y;
  _10 = (int) _9;
  *y_51(D) = _10;
  if (comp_53(D) != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _11 = s_39(D)->img_n;
  *comp_53(D) = _11;

  <bb 10> :
  _12 = s_39(D)->img_y;
  _13 = (int) _12;
  _14 = s_39(D)->img_x;
  _15 = (int) _14;
  _16 = s_39(D)->img_n;
  _17 = stbi__mad3sizes_valid (_16, _15, _13, 0);
  retval.571_56 = _17 == 0;
  if (retval.571_56 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__err ("too large");
  _58 = 0B;
  goto <bb 19>; [INV]

  <bb 12> :
  _18 = s_39(D)->img_y;
  _19 = (int) _18;
  _20 = s_39(D)->img_x;
  _21 = (int) _20;
  _22 = s_39(D)->img_n;
  out_60 = stbi__malloc_mad3 (_22, _21, _19, 0);
  if (out_60 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  stbi__err ("outofmem");
  _62 = 0B;
  goto <bb 19>; [INV]

  <bb 14> :
  _23 = s_39(D)->img_n;
  _24 = (unsigned int) _23;
  _25 = s_39(D)->img_x;
  _26 = _24 * _25;
  _27 = s_39(D)->img_y;
  _28 = _26 * _27;
  _29 = (int) _28;
  stbi__getn (s_39(D), out_60, _29);
  if (req_comp_64(D) != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _30 = s_39(D)->img_n;
  if (req_comp_64(D) != _30)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _31 = s_39(D)->img_y;
  _32 = s_39(D)->img_x;
  _33 = s_39(D)->img_n;
  _66 = stbi__convert_format (out_60, _33, req_comp_64(D), _32, _31);
  out_67 = _66;
  if (out_67 == 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _68 = out_67;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  # out_34 = PHI <out_60(14), out_60(15), out_67(16)>
  _69 = out_34;

  <bb 19> :
  # _35 = PHI <_44(3), _46(5), _48(7), _58(11), _62(13), _68(17), _69(18)>
<L20>:
  return _35;

}



;; Function stbi__pnm_isspace (_ZL17stbi__pnm_isspacec, funcdef_no=963, decl_uid=13332, cgraph_uid=869, symbol_order=899)

stbi__pnm_isspace (char c)
{
  bool iftmp.572;
  int D.17635;
  bool iftmp.572_1;
  bool iftmp.572_3;
  bool iftmp.572_4;
  int _5;

  <bb 2> :
  if (c_2(D) == 32)
    goto <bb 8>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (c_2(D) == 9)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (c_2(D) == 10)
    goto <bb 8>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (c_2(D) == 11)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (c_2(D) == 12)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (c_2(D) == 13)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.572_4 = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.572_3 = 0;

  <bb 10> :
  # iftmp.572_1 = PHI <iftmp.572_4(8), iftmp.572_3(9)>
  _5 = (int) iftmp.572_1;

  <bb 11> :
<L8>:
  return _5;

}



;; Function stbi__pnm_skip_whitespace (_ZL25stbi__pnm_skip_whitespaceP13stbi__contextPc, funcdef_no=964, decl_uid=13336, cgraph_uid=870, symbol_order=900)

stbi__pnm_skip_whitespace (struct stbi__context * s, char * c)
{
  unsigned char D.17676;
  int D.17675;
  int D.17674;
  unsigned char D.17673;
  int D.17672;
  bool iftmp.578;
  bool retval.577;
  bool iftmp.576;
  bool retval.575;
  bool iftmp.574;
  bool retval.573;
  int _1;
  char _2;
  int _3;
  int _4;
  unsigned char _5;
  char _6;
  int _7;
  char _8;
  int _9;
  char _10;
  char _11;
  unsigned char _12;
  char _13;
  bool iftmp.574_14;
  bool iftmp.576_15;
  bool iftmp.578_16;
  int _24;
  bool iftmp.574_27;
  bool iftmp.574_28;
  bool retval.573_29;
  unsigned char _31;
  int _34;
  bool iftmp.576_35;
  bool iftmp.576_36;
  bool retval.575_37;
  int _39;
  bool iftmp.578_40;
  bool iftmp.578_41;
  bool retval.577_42;
  unsigned char _44;

  <bb 2> :
  _24 = stbi__at_eof (s_22(D));
  _1 = _24;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = *c_25(D);
  _3 = (int) _2;
  _4 = stbi__pnm_isspace (_3);
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.574_27 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.574_28 = 0;

  <bb 6> :
  # iftmp.574_14 = PHI <iftmp.574_27(4), iftmp.574_28(5)>
  retval.573_29 = iftmp.574_14;
  if (retval.573_29 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _31 = stbi__get8 (s_22(D));
  _5 = _31;
  _6 = (char) _5;
  *c_25(D) = _6;
  goto <bb 2>; [INV]

  <bb 8> :
  _34 = stbi__at_eof (s_22(D));
  _7 = _34;
  if (_7 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _8 = *c_25(D);
  if (_8 != 35)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.576_36 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.576_35 = 0;

  <bb 12> :
  # iftmp.576_15 = PHI <iftmp.576_36(10), iftmp.576_35(11)>
  retval.575_37 = iftmp.576_15;
  if (retval.575_37 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  goto <bb 22>; [INV]

  <bb 14> :
  _39 = stbi__at_eof (s_22(D));
  _9 = _39;
  if (_9 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _10 = *c_25(D);
  if (_10 != 10)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _11 = *c_25(D);
  if (_11 != 13)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.578_40 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.578_41 = 0;

  <bb 19> :
  # iftmp.578_16 = PHI <iftmp.578_40(17), iftmp.578_41(18)>
  retval.577_42 = iftmp.578_16;
  if (retval.577_42 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _44 = stbi__get8 (s_22(D));
  _12 = _44;
  _13 = (char) _12;
  *c_25(D) = _13;
  goto <bb 14>; [INV]

  <bb 21> :
  goto <bb 2>; [INV]

  <bb 22> :
  return;

}



;; Function stbi__pnm_isdigit (_ZL17stbi__pnm_isdigitc, funcdef_no=965, decl_uid=13345, cgraph_uid=871, symbol_order=901)

stbi__pnm_isdigit (char c)
{
  bool iftmp.579;
  int D.17677;
  bool iftmp.579_1;
  bool iftmp.579_3;
  bool iftmp.579_4;
  int _5;

  <bb 2> :
  if (c_2(D) > 47)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (c_2(D) <= 57)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.579_3 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.579_4 = 0;

  <bb 6> :
  # iftmp.579_1 = PHI <iftmp.579_3(4), iftmp.579_4(5)>
  _5 = (int) iftmp.579_1;

  <bb 7> :
<L4>:
  return _5;

}



;; Function stbi__pnm_getinteger (_ZL20stbi__pnm_getintegerP13stbi__contextPc, funcdef_no=966, decl_uid=13349, cgraph_uid=872, symbol_order=902)

stbi__pnm_getinteger (struct stbi__context * s, char * c)
{
  unsigned char D.17695;
  int D.17694;
  int value;
  int D.17692;
  bool iftmp.581;
  bool retval.580;
  int _1;
  char _2;
  int _3;
  int _4;
  int _5;
  char _6;
  int _7;
  int _8;
  unsigned char _9;
  char _10;
  bool iftmp.581_12;
  int _20;
  bool iftmp.581_23;
  bool iftmp.581_24;
  bool retval.580_25;
  unsigned char _28;
  int _30;

  <bb 2> :
  value_16 = 0;

  <bb 3> :
  # value_11 = PHI <value_16(2), value_26(8)>
  _20 = stbi__at_eof (s_18(D));
  _1 = _20;
  if (_1 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _2 = *c_21(D);
  _3 = (int) _2;
  _4 = stbi__pnm_isdigit (_3);
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.581_23 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.581_24 = 0;

  <bb 7> :
  # iftmp.581_12 = PHI <iftmp.581_23(5), iftmp.581_24(6)>
  retval.580_25 = iftmp.581_12;
  if (retval.580_25 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _5 = value_11 * 10;
  _6 = *c_21(D);
  _7 = (int) _6;
  _8 = _7 + -48;
  value_26 = _5 + _8;
  _28 = stbi__get8 (s_18(D));
  _9 = _28;
  _10 = (char) _9;
  *c_21(D) = _10;
  goto <bb 3>; [INV]

  <bb 9> :
  _30 = value_11;

  <bb 10> :
<L7>:
  return _30;

}



;; Function stbi__pnm_info (_ZL14stbi__pnm_infoP13stbi__contextPiS1_S1_, funcdef_no=967, decl_uid=10251, cgraph_uid=873, symbol_order=903)

stbi__pnm_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17722;
  int D.17721;
  int D.17720;
  unsigned char D.17719;
  unsigned char D.17718;
  unsigned char D.17717;
  char t;
  char p;
  char c;
  int dummy;
  int maxv;
  int iftmp.582;
  int D.17709;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  char _4;
  int _5;
  int _6;
  int _10;
  int iftmp.582_11;
  unsigned char _24;
  unsigned char _27;
  int iftmp.582_29;
  int iftmp.582_30;
  unsigned char _33;
  int _37;
  int _41;
  int _45;
  int _48;
  int _49;
  int _51;

  <bb 2> :
  if (x_14(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_15 = &dummy;

  <bb 4> :
  # x_7 = PHI <x_14(D)(2), x_15(3)>
  if (y_16(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_17 = &dummy;

  <bb 6> :
  # y_8 = PHI <y_16(D)(4), y_17(5)>
  if (comp_18(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_19 = &dummy;

  <bb 8> :
  # comp_9 = PHI <comp_18(D)(6), comp_19(7)>
  stbi__rewind (s_21(D));
  _24 = stbi__get8 (s_21(D));

  <bb 9> :
  _1 = _24;
  p_25 = (char) _1;
  _27 = stbi__get8 (s_21(D));

  <bb 10> :
  _2 = _27;
  t_28 = (char) _2;
  if (p_25 != 80)
    goto <bb 13>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (t_28 != 53)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  if (t_28 != 54)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  stbi__rewind (s_21(D));
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 14> :
  if (t_28 == 54)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.582_29 = 3;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.582_30 = 1;

  <bb 17> :
  # iftmp.582_11 = PHI <iftmp.582_29(15), iftmp.582_30(16)>
  *comp_9 = iftmp.582_11;
  _33 = stbi__get8 (s_21(D));

  <bb 18> :
  _3 = _33;
  _4 = (char) _3;
  c = _4;
  stbi__pnm_skip_whitespace (s_21(D), &c);

  <bb 19> :
  _37 = stbi__pnm_getinteger (s_21(D), &c);

  <bb 20> :
  _5 = _37;
  *x_7 = _5;
  stbi__pnm_skip_whitespace (s_21(D), &c);

  <bb 21> :
  _41 = stbi__pnm_getinteger (s_21(D), &c);

  <bb 22> :
  _6 = _41;
  *y_8 = _6;
  stbi__pnm_skip_whitespace (s_21(D), &c);

  <bb 23> :
  _45 = stbi__pnm_getinteger (s_21(D), &c);

  <bb 24> :
  maxv_46 = _45;
  if (maxv_46 > 255)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _48 = stbi__err ("max value > 255");
  goto <bb 27>; [INV]

  <bb 26> :
  _49 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 27> :
  # _10 = PHI <_51(13), _48(25), _49(26)>
  dummy ={v} {CLOBBER};
  c ={v} {CLOBBER};

  <bb 28> :
<L19>:
  return _10;

  <bb 29> :
<L20>:
  resx 1

}



;; Function stbi__info_main (_ZL15stbi__info_mainP13stbi__contextPiS1_S1_, funcdef_no=968, decl_uid=13369, cgraph_uid=874, symbol_order=904)

stbi__info_main (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17762;
  int D.17761;
  int D.17760;
  int D.17759;
  int D.17758;
  int D.17757;
  int D.17756;
  int D.17755;
  int D.17754;
  bool retval.591;
  bool retval.590;
  bool retval.589;
  bool retval.588;
  bool retval.587;
  bool retval.586;
  bool retval.585;
  bool retval.584;
  int D.17728;
  bool retval.583;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _18;
  bool retval.583_19;
  int _20;
  int _22;
  bool retval.584_23;
  int _24;
  int _26;
  bool retval.585_27;
  int _28;
  int _30;
  bool retval.586_31;
  int _32;
  int _34;
  bool retval.587_35;
  int _36;
  int _38;
  bool retval.588_39;
  int _40;
  int _42;
  bool retval.589_43;
  int _44;
  int _46;
  bool retval.590_47;
  int _48;
  int _50;
  bool retval.591_51;
  int _52;
  int _54;

  <bb 2> :
  _18 = stbi__jpeg_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _1 = _18;
  retval.583_19 = _1 != 0;
  if (retval.583_19 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 4> :
  _22 = stbi__png_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _2 = _22;
  retval.584_23 = _2 != 0;
  if (retval.584_23 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 6> :
  _26 = stbi__gif_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _3 = _26;
  retval.585_27 = _3 != 0;
  if (retval.585_27 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 8> :
  _30 = stbi__bmp_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _4 = _30;
  retval.586_31 = _4 != 0;
  if (retval.586_31 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _32 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _34 = stbi__psd_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _5 = _34;
  retval.587_35 = _5 != 0;
  if (retval.587_35 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _36 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 12> :
  _38 = stbi__pic_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _6 = _38;
  retval.588_39 = _6 != 0;
  if (retval.588_39 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _40 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 14> :
  _42 = stbi__pnm_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _7 = _42;
  retval.589_43 = _7 != 0;
  if (retval.589_43 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _44 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 16> :
  _46 = stbi__hdr_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _8 = _46;
  retval.590_47 = _8 != 0;
  if (retval.590_47 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _48 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  _50 = stbi__tga_info (s_13(D), x_14(D), y_15(D), comp_16(D));
  _9 = _50;
  retval.591_51 = _9 != 0;
  if (retval.591_51 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _52 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  _54 = stbi__err ("unknown image type");

  <bb 21> :
  # _10 = PHI <_20(3), _24(5), _28(7), _32(9), _36(11), _40(13), _44(15), _48(17), _52(19), _54(20)>
<L18>:
  return _10;

}



;; Function stbi__is_16_main (_ZL16stbi__is_16_mainP13stbi__context, funcdef_no=969, decl_uid=13372, cgraph_uid=875, symbol_order=905)

stbi__is_16_main (struct stbi__context * s)
{
  int D.17772;
  int D.17771;
  bool retval.593;
  int D.17766;
  bool retval.592;
  int _1;
  int _2;
  int _3;
  int _8;
  bool retval.592_9;
  int _10;
  int _12;
  bool retval.593_13;
  int _14;
  int _15;

  <bb 2> :
  _8 = stbi__png_is16 (s_6(D));
  _1 = _8;
  retval.592_9 = _1 != 0;
  if (retval.592_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _10 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _12 = stbi__psd_is16 (s_6(D));
  _2 = _12;
  retval.593_13 = _2 != 0;
  if (retval.593_13 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _14 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _15 = 0;

  <bb 7> :
  # _3 = PHI <_10(3), _14(5), _15(6)>
<L4>:
  return _3;

}



;; Function stbi_info (stbi_info, funcdef_no=970, decl_uid=5097, cgraph_uid=876, symbol_order=906)

stbi_info (const char * filename, int * x, int * y, int * comp)
{
  int D.17778;
  struct FILE * D.17777;
  int result;
  struct FILE * f;
  int D.17775;
  int _1;
  struct FILE * _6;
  int _9;
  int _14;
  int _17;

  <bb 2> :
  _6 = stbi__fopen (filename_4(D), "rb");
  f_7 = _6;
  if (f_7 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _9 = stbi__err ("can\'t fopen");
  goto <bb 5>; [INV]

  <bb 4> :
  _14 = stbi_info_from_file (f_7, x_10(D), y_11(D), comp_12(D));
  result_15 = _14;
  fclose (f_7);
  _17 = result_15;

  <bb 5> :
  # _1 = PHI <_9(3), _17(4)>
<L2>:
  return _1;

}



;; Function stbi_info_from_file (stbi_info_from_file, funcdef_no=971, decl_uid=5102, cgraph_uid=877, symbol_order=907)

stbi_info_from_file (struct FILE * f, int * x, int * y, int * comp)
{
  int D.17782;
  long int D.17781;
  long int pos;
  struct stbi__context s;
  int r;
  int D.17779;
  long int _5;
  int _12;
  int _15;

  <bb 2> :
  _5 = ftell (f_3(D));

  <bb 3> :
  pos_6 = _5;
  stbi__start_file (&s, f_3(D));

  <bb 4> :
  _12 = stbi__info_main (&s, x_8(D), y_9(D), comp_10(D));

  <bb 5> :
  r_13 = _12;
  fseek (f_3(D), pos_6, 0);
  _15 = r_13;
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _15;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_is_16_bit (stbi_is_16_bit, funcdef_no=972, decl_uid=5104, cgraph_uid=878, symbol_order=908)

stbi_is_16_bit (const char * filename)
{
  int D.17790;
  struct FILE * D.17789;
  int result;
  struct FILE * f;
  int D.17787;
  int _1;
  struct FILE * _6;
  int _9;
  int _11;
  int _14;

  <bb 2> :
  _6 = stbi__fopen (filename_4(D), "rb");
  f_7 = _6;
  if (f_7 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _9 = stbi__err ("can\'t fopen");
  goto <bb 5>; [INV]

  <bb 4> :
  _11 = stbi_is_16_bit_from_file (f_7);
  result_12 = _11;
  fclose (f_7);
  _14 = result_12;

  <bb 5> :
  # _1 = PHI <_9(3), _14(4)>
<L2>:
  return _1;

}



;; Function stbi_is_16_bit_from_file (stbi_is_16_bit_from_file, funcdef_no=973, decl_uid=5106, cgraph_uid=879, symbol_order=909)

stbi_is_16_bit_from_file (struct FILE * f)
{
  int D.17794;
  long int D.17793;
  long int pos;
  struct stbi__context s;
  int r;
  int D.17791;
  long int _5;
  int _9;
  int _12;

  <bb 2> :
  _5 = ftell (f_3(D));

  <bb 3> :
  pos_6 = _5;
  stbi__start_file (&s, f_3(D));

  <bb 4> :
  _9 = stbi__is_16_main (&s);

  <bb 5> :
  r_10 = _9;
  fseek (f_3(D), pos_6, 0);
  _12 = r_10;
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _12;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_info_from_memory (stbi_info_from_memory, funcdef_no=974, decl_uid=5080, cgraph_uid=880, symbol_order=910)

stbi_info_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * comp)
{
  int D.17799;
  struct stbi__context s;
  int D.17797;
  int _9;
  int _10;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _9 = stbi__info_main (&s, x_5(D), y_6(D), comp_7(D));

  <bb 3> :
  _10 = _9;

  <bb 4> :
  s ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _10;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi_info_from_callbacks (stbi_info_from_callbacks, funcdef_no=975, decl_uid=5086, cgraph_uid=881, symbol_order=911)

stbi_info_from_callbacks (const struct stbi_io_callbacks * c, void * user, int * x, int * y, int * comp)
{
  int D.17804;
  struct stbi__context s;
  int D.17802;
  int _10;
  int _11;

  <bb 2> :
  stbi__start_callbacks (&s, c_3(D), user_4(D));

  <bb 3> :
  _10 = stbi__info_main (&s, x_6(D), y_7(D), comp_8(D));

  <bb 4> :
  _11 = _10;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _11;

  <bb 7> :
<L2>:
  resx 1

}



;; Function stbi_is_16_bit_from_memory (stbi_is_16_bit_from_memory, funcdef_no=976, decl_uid=5089, cgraph_uid=882, symbol_order=912)

stbi_is_16_bit_from_memory (const stbi_uc * buffer, int len)
{
  int D.17809;
  struct stbi__context s;
  int D.17807;
  int _6;
  int _7;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _6 = stbi__is_16_main (&s);

  <bb 3> :
  _7 = _6;

  <bb 4> :
  s ={v} {CLOBBER};

  <bb 5> :
<L1>:
  return _7;

  <bb 6> :
<L2>:
  resx 1

}



;; Function stbi_is_16_bit_from_callbacks (stbi_is_16_bit_from_callbacks, funcdef_no=977, decl_uid=5092, cgraph_uid=883, symbol_order=913)

stbi_is_16_bit_from_callbacks (const struct stbi_io_callbacks * c, void * user)
{
  int D.17814;
  struct stbi__context s;
  int D.17812;
  int _7;
  int _8;

  <bb 2> :
  stbi__start_callbacks (&s, c_3(D), user_4(D));

  <bb 3> :
  _7 = stbi__is_16_main (&s);

  <bb 4> :
  _8 = _7;

  <bb 5> :
  s ={v} {CLOBBER};

  <bb 6> :
<L1>:
  return _8;

  <bb 7> :
<L2>:
  resx 1

}


