
;; Function stbi__vertical_flip (_ZL19stbi__vertical_flipPviii, funcdef_no=795, decl_uid=10393, cgraph_uid=701, symbol_order=706)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


stbi__vertical_flip (void * image, int w, int h, int bytes_per_pixel)
{
  size_t bytes_copy;
  size_t bytes_left;
  stbi_uc * row1;
  stbi_uc * row0;
  stbi_uc * bytes;
  stbi_uc temp[2048];
  size_t bytes_per_row;
  int row;
  long long unsigned int _1;
  long long unsigned int _2;
  int _3;
  long long unsigned int _4;
  long long unsigned int _5;
  int _6;
  int _7;
  long long unsigned int _8;
  long long unsigned int _9;

  <bb 2> :
  _1 = (long long unsigned int) w_16(D);
  _2 = (long long unsigned int) bytes_per_pixel_17(D);
  bytes_per_row_18 = _1 * _2;
  bytes_20 = image_19(D);
  row_21 = 0;

  <bb 3> :
  # row_10 = PHI <row_21(2), row_34(7)>
  _3 = h_23(D) >> 1;
  if (row_10 >= _3)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _4 = (long long unsigned int) row_10;
  _5 = bytes_per_row_18 * _4;
  row0_24 = bytes_20 + _5;
  _6 = h_23(D) - row_10;
  _7 = _6 + -1;
  _8 = (long long unsigned int) _7;
  _9 = bytes_per_row_18 * _8;
  row1_25 = bytes_20 + _9;
  bytes_left_26 = bytes_per_row_18;

  <bb 5> :
  # row0_11 = PHI <row0_24(4), row0_31(6)>
  # row1_12 = PHI <row1_25(4), row1_32(6)>
  # bytes_left_13 = PHI <bytes_left_26(4), bytes_left_33(6)>
  if (bytes_left_13 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  bytes_copy_27 = MIN_EXPR <bytes_left_13, 2048>;
  memcpy (&temp, row0_11, bytes_copy_27);
  memcpy (row0_11, row1_12, bytes_copy_27);
  memcpy (row1_12, &temp, bytes_copy_27);
  row0_31 = row0_11 + bytes_copy_27;
  row1_32 = row1_12 + bytes_copy_27;
  bytes_left_33 = bytes_left_13 - bytes_copy_27;
  goto <bb 5>; [INV]

  <bb 7> :
  row_34 = row_10 + 1;
  goto <bb 3>; [INV]

  <bb 8> :
  temp ={v} {CLOBBER};
  return;

}



;; Function stbi__load_and_postprocess_8bit (_ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i, funcdef_no=797, decl_uid=10424, cgraph_uid=703, symbol_order=708)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L24>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L24>}


Removing basic block 27
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 7 and 8
stbi__load_and_postprocess_8bit (struct stbi__context * s, int * x, int * y, int * comp, int req_comp)
{
  int * D.20201;
  int * D.20200;
  void * D.13597;
  int channels;
  void * result;
  struct stbi__result_info ri;
  int iftmp.23;
  bool iftmp.19;
  int iftmp.18;
  bool iftmp.17;
  unsigned char * D.13571;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int stbi__vertically_flip_on_load_set.20_6;
  int stbi__vertically_flip_on_load_local.21_7;
  int stbi__vertically_flip_on_load_global.22_8;
  int _9;
  int _10;
  unsigned char * _12;
  int iftmp.18_13;
  bool iftmp.19_14;
  int iftmp.23_15;
  void * _28;
  unsigned char * _30;
  bool iftmp.17_32;
  bool iftmp.17_33;
  int iftmp.18_34;
  int iftmp.18_35;
  bool iftmp.19_39;
  bool iftmp.19_40;
  int iftmp.23_41;
  int iftmp.23_42;
  unsigned char * _45;

  <bb 2> :
  _28 = stbi__load_main (s_22(D), x_23(D), y_24(D), comp_25(D), req_comp_26(D), &ri, 8);
  result_29 = _28;
  if (result_29 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _30 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 4> :
  _1 = ri.bits_per_channel;
  if (_1 == 8)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _2 = ri.bits_per_channel;
  if (_2 == 16)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _assert ("ri.bits_per_channel == 8 || ri.bits_per_channel == 16", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1210);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.17_33 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.17_32 = 0;

  <bb 9> :
  _3 = ri.bits_per_channel;
  if (_3 != 8)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  if (req_comp_26(D) == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.18_34 = *comp_25(D);
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.18_35 = req_comp_26(D);

  <bb 13> :
  # iftmp.18_13 = PHI <iftmp.18_34(11), iftmp.18_35(12)>
  _4 = *y_24(D);
  _5 = *x_23(D);
  result_37 = stbi__convert_16_to_8 (result_29, _5, _4, iftmp.18_13);
  ri.bits_per_channel = 8;

  <bb 14> :
  # result_11 = PHI <result_29(9), result_37(13)>
  _48 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.20_6 = *_48;
  if (stbi__vertically_flip_on_load_set.20_6 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _49 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.21_7 = *_49;
  iftmp.19_39 = stbi__vertically_flip_on_load_local.21_7 != 0;
  goto <bb 17>; [INV]

  <bb 16> :
  stbi__vertically_flip_on_load_global.22_8 = stbi__vertically_flip_on_load_global;
  iftmp.19_40 = stbi__vertically_flip_on_load_global.22_8 != 0;

  <bb 17> :
  # iftmp.19_14 = PHI <iftmp.19_39(15), iftmp.19_40(16)>
  if (iftmp.19_14 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 18> :
  if (req_comp_26(D) == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  iftmp.23_41 = *comp_25(D);
  goto <bb 21>; [INV]

  <bb 20> :
  iftmp.23_42 = req_comp_26(D);

  <bb 21> :
  # iftmp.23_15 = PHI <iftmp.23_41(19), iftmp.23_42(20)>
  channels_43 = iftmp.23_15;
  _9 = *y_24(D);
  _10 = *x_23(D);
  stbi__vertical_flip (result_11, _10, _9, channels_43);

  <bb 22> :
  _45 = result_11;

  <bb 23> :
  # _12 = PHI <_30(3), _45(22)>
  ri ={v} {CLOBBER};

  <bb 24> :
<L23>:
  return _12;

}



;; Function stbi__load_and_postprocess_16bit (_ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i, funcdef_no=798, decl_uid=10443, cgraph_uid=704, symbol_order=709)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L24>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L24>}


Removing basic block 27
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 7 and 8
stbi__load_and_postprocess_16bit (struct stbi__context * s, int * x, int * y, int * comp, int req_comp)
{
  int * D.20199;
  int * D.20198;
  void * D.13629;
  int channels;
  void * result;
  struct stbi__result_info ri;
  int iftmp.30;
  bool iftmp.26;
  int iftmp.25;
  bool iftmp.24;
  stbi__uint16 * D.13603;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int stbi__vertically_flip_on_load_set.27_6;
  int stbi__vertically_flip_on_load_local.28_7;
  int stbi__vertically_flip_on_load_global.29_8;
  long long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  int _12;
  int _13;
  int _14;
  stbi__uint16 * _16;
  int iftmp.25_17;
  bool iftmp.26_18;
  int iftmp.30_19;
  void * _32;
  stbi__uint16 * _34;
  bool iftmp.24_36;
  bool iftmp.24_37;
  int iftmp.25_38;
  int iftmp.25_39;
  bool iftmp.26_43;
  bool iftmp.26_44;
  int iftmp.30_45;
  int iftmp.30_46;
  stbi__uint16 * _49;

  <bb 2> :
  _32 = stbi__load_main (s_26(D), x_27(D), y_28(D), comp_29(D), req_comp_30(D), &ri, 16);
  result_33 = _32;
  if (result_33 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _34 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 4> :
  _1 = ri.bits_per_channel;
  if (_1 == 8)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _2 = ri.bits_per_channel;
  if (_2 == 16)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _assert ("ri.bits_per_channel == 8 || ri.bits_per_channel == 16", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 1236);
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.24_37 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.24_36 = 0;

  <bb 9> :
  _3 = ri.bits_per_channel;
  if (_3 != 16)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  if (req_comp_30(D) == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.25_38 = *comp_29(D);
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.25_39 = req_comp_30(D);

  <bb 13> :
  # iftmp.25_17 = PHI <iftmp.25_38(11), iftmp.25_39(12)>
  _4 = *y_28(D);
  _5 = *x_27(D);
  result_41 = stbi__convert_8_to_16 (result_33, _5, _4, iftmp.25_17);
  ri.bits_per_channel = 16;

  <bb 14> :
  # result_15 = PHI <result_33(9), result_41(13)>
  _52 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.27_6 = *_52;
  if (stbi__vertically_flip_on_load_set.27_6 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _53 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.28_7 = *_53;
  iftmp.26_43 = stbi__vertically_flip_on_load_local.28_7 != 0;
  goto <bb 17>; [INV]

  <bb 16> :
  stbi__vertically_flip_on_load_global.29_8 = stbi__vertically_flip_on_load_global;
  iftmp.26_44 = stbi__vertically_flip_on_load_global.29_8 != 0;

  <bb 17> :
  # iftmp.26_18 = PHI <iftmp.26_43(15), iftmp.26_44(16)>
  if (iftmp.26_18 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 18> :
  if (req_comp_30(D) == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  iftmp.30_45 = *comp_29(D);
  goto <bb 21>; [INV]

  <bb 20> :
  iftmp.30_46 = req_comp_30(D);

  <bb 21> :
  # iftmp.30_19 = PHI <iftmp.30_45(19), iftmp.30_46(20)>
  channels_47 = iftmp.30_19;
  _9 = (long long unsigned int) channels_47;
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _12 = (int) _11;
  _13 = *y_28(D);
  _14 = *x_27(D);
  stbi__vertical_flip (result_15, _14, _13, _12);

  <bb 22> :
  _49 = result_15;

  <bb 23> :
  # _16 = PHI <_34(3), _49(22)>
  ri ={v} {CLOBBER};

  <bb 24> :
<L23>:
  return _16;

}



;; Function stbi_load_from_file (stbi_load_from_file, funcdef_no=802, decl_uid=4992, cgraph_uid=708, symbol_order=713)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L5>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L5>}


Removing basic block 8
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_load_from_file (struct FILE * f, int * x, int * y, int * comp, int req_comp)
{
  unsigned char * D.13659;
  struct stbi__context s;
  unsigned char * result;
  stbi_uc * D.13657;
  stbi_uc * _1;
  stbi_uc * _2;
  long long int _3;
  int _4;
  int _5;
  unsigned char * _16;
  stbi_uc * _19;

  <bb 2> :
  stbi__start_file (&s, f_9(D));
  _16 = stbi__load_and_postprocess_8bit (&s, x_11(D), y_12(D), comp_13(D), req_comp_14(D));
  result_17 = _16;
  if (result_17 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = s.img_buffer_end;
  _2 = s.img_buffer;
  _3 = _1 - _2;
  _4 = (int) _3;
  _5 = -_4;
  fseek (f_9(D), _5, 1);

  <bb 4> :
  _19 = result_17;
  s ={v} {CLOBBER};

  <bb 5> :
<L4>:
  return _19;

}



;; Function stbi_load_from_file_16 (stbi_load_from_file_16, funcdef_no=803, decl_uid=5027, cgraph_uid=709, symbol_order=714)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L5>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L5>}


Removing basic block 8
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_load_from_file_16 (struct FILE * f, int * x, int * y, int * comp, int req_comp)
{
  stbi__uint16 * D.13667;
  struct stbi__context s;
  stbi__uint16 * result;
  stbi__uint16 * D.13665;
  stbi_uc * _1;
  stbi_uc * _2;
  long long int _3;
  int _4;
  int _5;
  stbi__uint16 * _16;
  stbi__uint16 * _19;

  <bb 2> :
  stbi__start_file (&s, f_9(D));
  _16 = stbi__load_and_postprocess_16bit (&s, x_11(D), y_12(D), comp_13(D), req_comp_14(D));
  result_17 = _16;
  if (result_17 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = s.img_buffer_end;
  _2 = s.img_buffer;
  _3 = _1 - _2;
  _4 = (int) _3;
  _5 = -_4;
  fseek (f_9(D), _5, 1);

  <bb 4> :
  _19 = result_17;
  s ={v} {CLOBBER};

  <bb 5> :
<L4>:
  return _19;

}



;; Function stbi_load_16_from_memory (stbi_load_16_from_memory, funcdef_no=805, decl_uid=5008, cgraph_uid=711, symbol_order=716)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi_load_16_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * channels_in_file, int desired_channels)
{
  stbi_us * D.13678;
  struct stbi__context s;
  stbi_us * D.13676;
  stbi_us * _10;
  stbi_us * _11;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _10 = stbi__load_and_postprocess_16bit (&s, x_5(D), y_6(D), channels_in_file_7(D), desired_channels_8(D));
  _11 = _10;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _11;

}



;; Function stbi_load_16_from_callbacks (stbi_load_16_from_callbacks, funcdef_no=806, decl_uid=5015, cgraph_uid=712, symbol_order=717)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_load_16_from_callbacks (const struct stbi_io_callbacks * clbk, void * user, int * x, int * y, int * channels_in_file, int desired_channels)
{
  stbi_us * D.13683;
  struct stbi__context s;
  stbi_us * D.13681;
  stbi_us * _11;
  stbi_us * _12;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));
  _11 = stbi__load_and_postprocess_16bit (&s, x_6(D), y_7(D), channels_in_file_8(D), desired_channels_9(D));
  _12 = _11;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _12;

}



;; Function stbi_load_from_memory (stbi_load_from_memory, funcdef_no=807, decl_uid=4973, cgraph_uid=713, symbol_order=718)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi_load_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * comp, int req_comp)
{
  stbi_uc * D.13688;
  struct stbi__context s;
  stbi_uc * D.13686;
  stbi_uc * _10;
  stbi_uc * _11;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _10 = stbi__load_and_postprocess_8bit (&s, x_5(D), y_6(D), comp_7(D), req_comp_8(D));
  _11 = _10;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _11;

}



;; Function stbi_load_from_callbacks (stbi_load_from_callbacks, funcdef_no=808, decl_uid=4980, cgraph_uid=714, symbol_order=719)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_load_from_callbacks (const struct stbi_io_callbacks * clbk, void * user, int * x, int * y, int * comp, int req_comp)
{
  stbi_uc * D.13693;
  struct stbi__context s;
  stbi_uc * D.13691;
  stbi_uc * _11;
  stbi_uc * _12;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));
  _11 = stbi__load_and_postprocess_8bit (&s, x_6(D), y_7(D), comp_8(D), req_comp_9(D));
  _12 = _11;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _12;

}



;; Function stbi_load_gif_from_memory (stbi_load_gif_from_memory, funcdef_no=809, decl_uid=5001, cgraph_uid=715, symbol_order=720)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L8>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L8>}


Removing basic block 10
Removing unreachable region 1
Merging blocks 2 and 3
stbi_load_gif_from_memory (const stbi_uc * buffer, int len, int * * delays, int * x, int * y, int * z, int * comp, int req_comp)
{
  int * D.20195;
  int * D.20194;
  unsigned char * D.13705;
  struct stbi__context s;
  unsigned char * result;
  stbi_uc * D.13703;
  bool iftmp.36;
  int stbi__vertically_flip_on_load_set.37_1;
  int stbi__vertically_flip_on_load_local.38_2;
  int stbi__vertically_flip_on_load_global.39_3;
  int _4;
  int _5;
  int _6;
  int _7;
  bool iftmp.36_8;
  unsigned char * _21;
  bool iftmp.36_23;
  bool iftmp.36_24;
  stbi_uc * _26;

  <bb 2> :
  stbi__start_mem (&s, buffer_11(D), len_12(D));
  _21 = stbi__load_gif_main (&s, delays_14(D), x_15(D), y_16(D), z_17(D), comp_18(D), req_comp_19(D));
  result_22 = _21;
  _29 = __builtin___emutls_get_address (&__emutls_v._ZL33stbi__vertically_flip_on_load_set);
  stbi__vertically_flip_on_load_set.37_1 = *_29;
  if (stbi__vertically_flip_on_load_set.37_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _30 = __builtin___emutls_get_address (&__emutls_v._ZL35stbi__vertically_flip_on_load_local);
  stbi__vertically_flip_on_load_local.38_2 = *_30;
  iftmp.36_23 = stbi__vertically_flip_on_load_local.38_2 != 0;
  goto <bb 5>; [INV]

  <bb 4> :
  stbi__vertically_flip_on_load_global.39_3 = stbi__vertically_flip_on_load_global;
  iftmp.36_24 = stbi__vertically_flip_on_load_global.39_3 != 0;

  <bb 5> :
  # iftmp.36_8 = PHI <iftmp.36_23(3), iftmp.36_24(4)>
  if (iftmp.36_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _4 = *comp_18(D);
  _5 = *z_17(D);
  _6 = *y_16(D);
  _7 = *x_15(D);
  stbi__vertical_flip_slices (result_22, _7, _6, _5, _4);

  <bb 7> :
  _26 = result_22;
  s ={v} {CLOBBER};

  <bb 8> :
<L7>:
  return _26;

}



;; Function stbi__loadf_main (_ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i, funcdef_no=810, decl_uid=10583, cgraph_uid=716, symbol_order=721)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L12>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L12>}


Removing basic block 14
Removing unreachable region 1
Merging blocks 3 and 4
stbi__loadf_main (struct stbi__context * s, int * x, int * y, int * comp, int req_comp)
{
  unsigned char * D.13726;
  float * D.13723;
  int D.13722;
  float * hdr_data;
  struct stbi__result_info ri;
  unsigned char * data;
  int iftmp.41;
  float * D.13714;
  bool retval.40;
  int _1;
  int _2;
  int _3;
  float * _4;
  int iftmp.41_5;
  int _11;
  bool retval.40_12;
  float * _18;
  float * _21;
  unsigned char * _25;
  int iftmp.41_27;
  int iftmp.41_28;
  float * _30;
  float * _32;

  <bb 2> :
  _11 = stbi__hdr_test (s_9(D));
  _1 = _11;
  retval.40_12 = _1 != 0;
  if (retval.40_12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _18 = stbi__hdr_load (s_9(D), x_13(D), y_14(D), comp_15(D), req_comp_16(D), &ri);
  hdr_data_19 = _18;
  if (hdr_data_19 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__float_postprocess (hdr_data_19, x_13(D), y_14(D), comp_15(D), req_comp_16(D));

  <bb 5> :
  _21 = hdr_data_19;
  // predicted unlikely by early return (on trees) predictor.
  ri ={v} {CLOBBER};
  goto <bb 12>; [INV]

  <bb 6> :
  _25 = stbi__load_and_postprocess_8bit (s_9(D), x_13(D), y_14(D), comp_15(D), req_comp_16(D));
  data_26 = _25;
  if (data_26 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  if (req_comp_16(D) == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.41_27 = *comp_15(D);
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.41_28 = req_comp_16(D);

  <bb 10> :
  # iftmp.41_5 = PHI <iftmp.41_27(8), iftmp.41_28(9)>
  _2 = *y_14(D);
  _3 = *x_13(D);
  _30 = stbi__ldr_to_hdr (data_26, _3, _2, iftmp.41_5);
  goto <bb 12>; [INV]

  <bb 11> :
  stbi__err ("unknown image type");
  _32 = 0B;

  <bb 12> :
  # _4 = PHI <_21(5), _30(10), _32(11)>
<L11>:
  return _4;

}



;; Function stbi_loadf_from_memory (stbi_loadf_from_memory, funcdef_no=811, decl_uid=5034, cgraph_uid=717, symbol_order=722)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi_loadf_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * comp, int req_comp)
{
  float * D.13729;
  struct stbi__context s;
  float * D.13727;
  float * _10;
  float * _11;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _10 = stbi__loadf_main (&s, x_5(D), y_6(D), comp_7(D), req_comp_8(D));
  _11 = _10;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _11;

}



;; Function stbi_loadf_from_callbacks (stbi_loadf_from_callbacks, funcdef_no=812, decl_uid=5041, cgraph_uid=718, symbol_order=723)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_loadf_from_callbacks (const struct stbi_io_callbacks * clbk, void * user, int * x, int * y, int * comp, int req_comp)
{
  float * D.13734;
  struct stbi__context s;
  float * D.13732;
  float * _11;
  float * _12;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));
  _11 = stbi__loadf_main (&s, x_6(D), y_7(D), comp_8(D), req_comp_9(D));
  _12 = _11;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _12;

}



;; Function stbi_loadf_from_file (stbi_loadf_from_file, funcdef_no=814, decl_uid=5053, cgraph_uid=720, symbol_order=725)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_loadf_from_file (struct FILE * f, int * x, int * y, int * comp, int req_comp)
{
  float * D.13745;
  struct stbi__context s;
  float * D.13743;
  float * _10;
  float * _11;

  <bb 2> :
  stbi__start_file (&s, f_3(D));
  _10 = stbi__loadf_main (&s, x_5(D), y_6(D), comp_7(D), req_comp_8(D));
  _11 = _10;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _11;

}



;; Function stbi_is_hdr_from_memory (stbi_is_hdr_from_memory, funcdef_no=815, decl_uid=5067, cgraph_uid=721, symbol_order=726)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi_is_hdr_from_memory (const stbi_uc * buffer, int len)
{
  int D.13750;
  struct stbi__context s;
  int D.13748;
  int _6;
  int _7;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _6 = stbi__hdr_test (&s);
  _7 = _6;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _7;

}



;; Function stbi_is_hdr_from_file (stbi_is_hdr_from_file, funcdef_no=817, decl_uid=5071, cgraph_uid=723, symbol_order=728)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
Merging blocks 2 and 5
stbi_is_hdr_from_file (struct FILE * f)
{
  int D.13763;
  long int D.13762;
  struct stbi__context s;
  int res;
  long int pos;
  int D.13760;
  long int _5;
  int _9;
  int _12;

  <bb 2> :
  _5 = ftell (f_3(D));
  pos_6 = _5;
  stbi__start_file (&s, f_3(D));
  _9 = stbi__hdr_test (&s);
  res_10 = _9;
  fseek (f_3(D), pos_6, 0);
  _12 = res_10;
  s ={v} {CLOBBER};

  <bb 3> :
<L1>:
  return _12;

}



;; Function stbi_is_hdr_from_callbacks (stbi_is_hdr_from_callbacks, funcdef_no=818, decl_uid=5064, cgraph_uid=724, symbol_order=729)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_is_hdr_from_callbacks (const struct stbi_io_callbacks * clbk, void * user)
{
  int D.13768;
  struct stbi__context s;
  int D.13766;
  int _7;
  int _8;

  <bb 2> :
  stbi__start_callbacks (&s, clbk_3(D), user_4(D));
  _7 = stbi__hdr_test (&s);
  _8 = _7;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _8;

}



;; Function stbi__hdr_to_ldr (_ZL16stbi__hdr_to_ldrPfiii, funcdef_no=837, decl_uid=10317, cgraph_uid=743, symbol_order=752)

Before removal of unreachable regions:
Eh tree:
   2 cleanup
   1 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


stbi__hdr_to_ldr (float * data, int x, int y, int comp)
{
  float z;
  float z;
  stbi_uc * output;
  int n;
  int k;
  int i;
  stbi_uc * D.13919;
  int _1;
  int _2;
  float stbi__h2l_gamma_i.77_3;
  int _4;
  int _5;
  long long unsigned int _6;
  long long unsigned int _7;
  float * _8;
  float _9;
  float stbi__h2l_scale_i.78_10;
  float _11;
  float _12;
  float _13;
  float _14;
  float z.79_15;
  float z.80_16;
  float z.81_17;
  int _18;
  int _19;
  int _20;
  sizetype _21;
  stbi_uc * _22;
  unsigned char _23;
  int _24;
  int _25;
  long long unsigned int _26;
  long long unsigned int _27;
  float * _28;
  float _29;
  float _30;
  float _31;
  float z.82_32;
  float z.83_33;
  float z.84_34;
  int _35;
  int _36;
  int _37;
  sizetype _38;
  stbi_uc * _39;
  unsigned char _40;
  stbi_uc * _44;
  stbi_uc * _54;
  stbi_uc * _63;
  stbi_uc * _82;

  <bb 2> :
  if (data_53(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _54 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 26>; [INV]

  <bb 4> :
  output_60 = stbi__malloc_mad3 (x_56(D), y_57(D), comp_58(D), 0);
  if (output_60 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  free (data_53(D));
  stbi__err ("outofmem");
  _63 = 0B;
  goto <bb 26>; [INV]

  <bb 6> :
  _1 = comp_58(D) & 1;
  if (_1 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  n_64 = comp_58(D);
  goto <bb 9>; [INV]

  <bb 8> :
  n_65 = comp_58(D) + -1;

  <bb 9> :
  # n_43 = PHI <n_64(7), n_65(8)>
  i_66 = 0;

  <bb 10> :
  # i_41 = PHI <i_66(9), i_80(24)>
  _2 = x_56(D) * y_57(D);
  if (i_41 >= _2)
    goto <bb 25>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  k_67 = 0;

  <bb 12> :
  # k_42 = PHI <k_67(11), k_74(17)>
  if (k_42 >= n_43)
    goto <bb 18>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  stbi__h2l_gamma_i.77_3 = stbi__h2l_gamma_i;
  _4 = i_41 * comp_58(D);
  _5 = k_42 + _4;
  _6 = (long long unsigned int) _5;
  _7 = _6 * 4;
  _8 = data_53(D) + _7;
  _9 = *_8;
  stbi__h2l_scale_i.78_10 = stbi__h2l_scale_i;
  _11 = _9 * stbi__h2l_scale_i.78_10;
  _12 = std::pow (_11, stbi__h2l_gamma_i.77_3);
  _13 = _12 * 2.55e+2;
  _14 = _13 + 5.0e-1;
  z = _14;
  z.79_15 = z;
  if (z.79_15 < 0.0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  z = 0.0;

  <bb 15> :
  z.80_16 = z;
  if (z.80_16 > 2.55e+2)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  z = 2.55e+2;

  <bb 17> :
  z.81_17 = z;
  _18 = (int) z.81_17;
  _19 = i_41 * comp_58(D);
  _20 = k_42 + _19;
  _21 = (sizetype) _20;
  _22 = output_60 + _21;
  _23 = (unsigned char) _18;
  *_22 = _23;
  z ={v} {CLOBBER};
  k_74 = k_42 + 1;
  goto <bb 12>; [INV]

  <bb 18> :
  if (k_42 < comp_58(D))
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  _24 = i_41 * comp_58(D);
  _25 = k_42 + _24;
  _26 = (long long unsigned int) _25;
  _27 = _26 * 4;
  _28 = data_53(D) + _27;
  _29 = *_28;
  _30 = _29 * 2.55e+2;
  _31 = _30 + 5.0e-1;
  z = _31;
  z.82_32 = z;
  if (z.82_32 < 0.0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  z = 0.0;

  <bb 21> :
  z.83_33 = z;
  if (z.83_33 > 2.55e+2)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  z = 2.55e+2;

  <bb 23> :
  z.84_34 = z;
  _35 = (int) z.84_34;
  _36 = i_41 * comp_58(D);
  _37 = k_42 + _36;
  _38 = (sizetype) _37;
  _39 = output_60 + _38;
  _40 = (unsigned char) _35;
  *_39 = _40;
  z ={v} {CLOBBER};

  <bb 24> :
  i_80 = i_41 + 1;
  goto <bb 10>; [INV]

  <bb 25> :
  free (data_53(D));
  _82 = output_60;

  <bb 26> :
  # _44 = PHI <_54(3), _63(5), _82(25)>
<L28>:
  return _44;

}



;; Function stbi__idct_block (_ZL16stbi__idct_blockPhiPs, funcdef_no=849, decl_uid=11072, cgraph_uid=755, symbol_order=767)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


stbi__idct_block (stbi_uc * out, int out_stride, short int * data)
{
  int x3;
  int x2;
  int x1;
  int x0;
  int p5;
  int p4;
  int p3;
  int p2;
  int p1;
  int t3;
  int t2;
  int t1;
  int t0;
  int x3;
  int x2;
  int x1;
  int x0;
  int p5;
  int p4;
  int p3;
  int p2;
  int p1;
  int t3;
  int t2;
  int t1;
  int t0;
  int dcterm;
  short int * d;
  stbi_uc * o;
  int * v;
  int val[64];
  int i;
  short int * _1;
  short int _2;
  short int * _3;
  short int _4;
  short int * _5;
  short int _6;
  short int * _7;
  short int _8;
  short int * _9;
  short int _10;
  short int * _11;
  short int _12;
  short int * _13;
  short int _14;
  short int _15;
  int _16;
  int * _17;
  int * _18;
  int _19;
  int * _20;
  int _21;
  int * _22;
  int _23;
  int * _24;
  int _25;
  int * _26;
  int _27;
  int * _28;
  int _29;
  int _30;
  short int * _31;
  short int _32;
  short int * _33;
  short int _34;
  int _35;
  int _36;
  int _37;
  short int _38;
  short int * _39;
  short int _40;
  int _41;
  int _42;
  short int * _43;
  short int _44;
  short int * _45;
  short int _46;
  short int * _47;
  short int _48;
  short int * _49;
  short int _50;
  int _51;
  int _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int _58;
  int _59;
  int _60;
  int * _61;
  int _62;
  int _63;
  int * _64;
  int _65;
  int _66;
  int * _67;
  int _68;
  int _69;
  int * _70;
  int _71;
  int _72;
  int * _73;
  int _74;
  int _75;
  int * _76;
  int _77;
  int _78;
  int * _79;
  int _80;
  int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;
  int _94;
  unsigned char _95;
  int _96;
  int _97;
  stbi_uc * _98;
  unsigned char _99;
  int _100;
  int _101;
  stbi_uc * _102;
  unsigned char _103;
  int _104;
  int _105;
  stbi_uc * _106;
  unsigned char _107;
  int _108;
  int _109;
  stbi_uc * _110;
  unsigned char _111;
  int _112;
  int _113;
  stbi_uc * _114;
  unsigned char _115;
  int _116;
  int _117;
  stbi_uc * _118;
  unsigned char _119;
  int _120;
  int _121;
  stbi_uc * _122;
  unsigned char _123;
  sizetype _124;

  <bb 2> :
  v_134 = &val;
  d_136 = data_135(D);
  i_137 = 0;

  <bb 3> :
  # i_125 = PHI <i_137(2), i_194(13)>
  # v_127 = PHI <v_134(2), v_196(13)>
  # d_130 = PHI <d_136(2), d_195(13)>
  if (i_125 > 7)
    goto <bb 14>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = d_130 + 16;
  _2 = *_1;
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  _3 = d_130 + 32;
  _4 = *_3;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  _5 = d_130 + 48;
  _6 = *_5;
  if (_6 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  _7 = d_130 + 64;
  _8 = *_7;
  if (_8 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _9 = d_130 + 80;
  _10 = *_9;
  if (_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _11 = d_130 + 96;
  _12 = *_11;
  if (_12 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _13 = d_130 + 112;
  _14 = *_13;
  if (_14 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _15 = *d_130;
  _16 = (int) _15;
  dcterm_139 = _16 * 4;
  _17 = v_127 + 224;
  *_17 = dcterm_139;
  _18 = v_127 + 192;
  _19 = *_17;
  *_18 = _19;
  _20 = v_127 + 160;
  _21 = *_18;
  *_20 = _21;
  _22 = v_127 + 128;
  _23 = *_20;
  *_22 = _23;
  _24 = v_127 + 96;
  _25 = *_22;
  *_24 = _25;
  _26 = v_127 + 64;
  _27 = *_24;
  *_26 = _27;
  _28 = v_127 + 32;
  _29 = *_26;
  *_28 = _29;
  _30 = *_28;
  *v_127 = _30;
  goto <bb 13>; [INV]

  <bb 12> :
  _31 = d_130 + 32;
  _32 = *_31;
  p2_148 = (int) _32;
  _33 = d_130 + 96;
  _34 = *_33;
  p3_149 = (int) _34;
  _35 = p2_148 + p3_149;
  p1_150 = _35 * 2217;
  _36 = p3_149 * -7567;
  t2_151 = p1_150 + _36;
  _37 = p2_148 * 3135;
  t3_152 = p1_150 + _37;
  _38 = *d_130;
  p2_153 = (int) _38;
  _39 = d_130 + 64;
  _40 = *_39;
  p3_154 = (int) _40;
  _41 = p2_153 + p3_154;
  t0_155 = _41 * 4096;
  _42 = p2_153 - p3_154;
  t1_156 = _42 * 4096;
  x0_157 = t0_155 + t3_152;
  x3_158 = t0_155 - t3_152;
  x1_159 = t1_156 + t2_151;
  x2_160 = t1_156 - t2_151;
  _43 = d_130 + 112;
  _44 = *_43;
  t0_161 = (int) _44;
  _45 = d_130 + 80;
  _46 = *_45;
  t1_162 = (int) _46;
  _47 = d_130 + 48;
  _48 = *_47;
  t2_163 = (int) _48;
  _49 = d_130 + 16;
  _50 = *_49;
  t3_164 = (int) _50;
  p3_165 = t0_161 + t2_163;
  p4_166 = t1_162 + t3_164;
  p1_167 = t0_161 + t3_164;
  p2_168 = t1_162 + t2_163;
  _51 = p3_165 + p4_166;
  p5_169 = _51 * 4816;
  t0_170 = t0_161 * 1223;
  t1_171 = t1_162 * 8410;
  t2_172 = t2_163 * 12586;
  t3_173 = t3_164 * 6149;
  _52 = p1_167 * -3685;
  p1_174 = p5_169 + _52;
  _53 = p2_168 * -10497;
  p2_175 = p5_169 + _53;
  p3_176 = p3_165 * -8034;
  p4_177 = p4_166 * -1597;
  _54 = p1_174 + p4_177;
  t3_178 = t3_173 + _54;
  _55 = p2_175 + p3_176;
  t2_179 = t2_172 + _55;
  _56 = p2_175 + p4_177;
  t1_180 = t1_171 + _56;
  _57 = p1_174 + p3_176;
  t0_181 = t0_170 + _57;
  x0_182 = x0_157 + 512;
  x1_183 = x1_159 + 512;
  x2_184 = x2_160 + 512;
  x3_185 = x3_158 + 512;
  _58 = x0_182 + t3_178;
  _59 = _58 >> 10;
  *v_127 = _59;
  _60 = x0_182 - t3_178;
  _61 = v_127 + 224;
  _62 = _60 >> 10;
  *_61 = _62;
  _63 = x1_183 + t2_179;
  _64 = v_127 + 32;
  _65 = _63 >> 10;
  *_64 = _65;
  _66 = x1_183 - t2_179;
  _67 = v_127 + 192;
  _68 = _66 >> 10;
  *_67 = _68;
  _69 = x2_184 + t1_180;
  _70 = v_127 + 64;
  _71 = _69 >> 10;
  *_70 = _71;
  _72 = x2_184 - t1_180;
  _73 = v_127 + 160;
  _74 = _72 >> 10;
  *_73 = _74;
  _75 = x3_185 + t0_181;
  _76 = v_127 + 96;
  _77 = _75 >> 10;
  *_76 = _77;
  _78 = x3_185 - t0_181;
  _79 = v_127 + 128;
  _80 = _78 >> 10;
  *_79 = _80;

  <bb 13> :
  i_194 = i_125 + 1;
  d_195 = d_130 + 2;
  v_196 = v_127 + 4;
  goto <bb 3>; [INV]

  <bb 14> :
  i_197 = 0;
  v_198 = &val;
  o_200 = out_199(D);

  <bb 15> :
  # i_126 = PHI <i_197(14), i_255(16)>
  # v_128 = PHI <v_198(14), v_256(16)>
  # o_129 = PHI <o_200(14), o_258(16)>
  if (i_126 > 7)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  p2_201 = MEM[(int *)v_128 + 8B];
  p3_202 = MEM[(int *)v_128 + 24B];
  _81 = p2_201 + p3_202;
  p1_203 = _81 * 2217;
  _82 = p3_202 * -7567;
  t2_204 = p1_203 + _82;
  _83 = p2_201 * 3135;
  t3_205 = p1_203 + _83;
  p2_206 = *v_128;
  p3_207 = MEM[(int *)v_128 + 16B];
  _84 = p2_206 + p3_207;
  t0_208 = _84 * 4096;
  _85 = p2_206 - p3_207;
  t1_209 = _85 * 4096;
  x0_210 = t0_208 + t3_205;
  x3_211 = t0_208 - t3_205;
  x1_212 = t1_209 + t2_204;
  x2_213 = t1_209 - t2_204;
  t0_214 = MEM[(int *)v_128 + 28B];
  t1_215 = MEM[(int *)v_128 + 20B];
  t2_216 = MEM[(int *)v_128 + 12B];
  t3_217 = MEM[(int *)v_128 + 4B];
  p3_218 = t0_214 + t2_216;
  p4_219 = t1_215 + t3_217;
  p1_220 = t0_214 + t3_217;
  p2_221 = t1_215 + t2_216;
  _86 = p3_218 + p4_219;
  p5_222 = _86 * 4816;
  t0_223 = t0_214 * 1223;
  t1_224 = t1_215 * 8410;
  t2_225 = t2_216 * 12586;
  t3_226 = t3_217 * 6149;
  _87 = p1_220 * -3685;
  p1_227 = p5_222 + _87;
  _88 = p2_221 * -10497;
  p2_228 = p5_222 + _88;
  p3_229 = p3_218 * -8034;
  p4_230 = p4_219 * -1597;
  _89 = p1_227 + p4_230;
  t3_231 = t3_226 + _89;
  _90 = p2_228 + p3_229;
  t2_232 = t2_225 + _90;
  _91 = p2_228 + p4_230;
  t1_233 = t1_224 + _91;
  _92 = p1_227 + p3_229;
  t0_234 = t0_223 + _92;
  x0_235 = x0_210 + 16842752;
  x1_236 = x1_212 + 16842752;
  x2_237 = x2_213 + 16842752;
  x3_238 = x3_211 + 16842752;
  _93 = x0_235 + t3_231;
  _94 = _93 >> 17;
  _95 = stbi__clamp (_94);
  *o_129 = _95;
  _96 = x0_235 - t3_231;
  _97 = _96 >> 17;
  _98 = o_129 + 7;
  _99 = stbi__clamp (_97);
  *_98 = _99;
  _100 = x1_236 + t2_232;
  _101 = _100 >> 17;
  _102 = o_129 + 1;
  _103 = stbi__clamp (_101);
  *_102 = _103;
  _104 = x1_236 - t2_232;
  _105 = _104 >> 17;
  _106 = o_129 + 6;
  _107 = stbi__clamp (_105);
  *_106 = _107;
  _108 = x2_237 + t1_233;
  _109 = _108 >> 17;
  _110 = o_129 + 2;
  _111 = stbi__clamp (_109);
  *_110 = _111;
  _112 = x2_237 - t1_233;
  _113 = _112 >> 17;
  _114 = o_129 + 5;
  _115 = stbi__clamp (_113);
  *_114 = _115;
  _116 = x3_238 + t0_234;
  _117 = _116 >> 17;
  _118 = o_129 + 3;
  _119 = stbi__clamp (_117);
  *_118 = _119;
  _120 = x3_238 - t0_234;
  _121 = _120 >> 17;
  _122 = o_129 + 4;
  _123 = stbi__clamp (_121);
  *_122 = _123;
  i_255 = i_126 + 1;
  v_256 = v_128 + 32;
  _124 = (sizetype) out_stride_257(D);
  o_258 = o_129 + _124;
  goto <bb 15>; [INV]

  <bb 17> :
  val ={v} {CLOBBER};
  return;

}



;; Function stbi__idct_simd (_ZL15stbi__idct_simdPhiPs, funcdef_no=850, decl_uid=11113, cgraph_uid=756, symbol_order=768)

Before removal of unreachable regions:
Eh tree:
   8 must_not_throw
   1 cleanup land:{2,<L3>}
     7 must_not_throw
     6 cleanup land:{4,<L2>}
     5 must_not_throw
     4 cleanup land:{3,<L1>}
     3 must_not_throw
     2 cleanup land:{1,<L0>}
Reachable regions: n_bits = 9, set = {1 2 4 6 }
Reachable landing pads: n_bits = 5, set = {1 2 3 4 }
Removing unreachable region 3
Removing unreachable region 5
Removing unreachable region 7
Removing unreachable region 8


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{2,<L3>}
     6 cleanup land:{4,<L2>}
     4 cleanup land:{3,<L1>}
     2 cleanup land:{1,<L0>}


Removing basic block 438
Removing basic block 437
Removing basic block 436
Removing basic block 435
Removing unreachable region 1
Removing unreachable region 2
Removing unreachable region 4
Removing unreachable region 6
Merging blocks 30 and 31
Merging blocks 32 and 33
Merging blocks 34 and 35
Merging blocks 36 and 37
Merging blocks 38 and 39
Merging blocks 40 and 41
Merging blocks 45 and 46
Merging blocks 47 and 48
Merging blocks 50 and 51
Merging blocks 52 and 53
Merging blocks 55 and 56
Merging blocks 57 and 58
Merging blocks 60 and 61
Merging blocks 62 and 63
Merging blocks 72 and 73
Merging blocks 74 and 75
Merging blocks 76 and 77
Merging blocks 78 and 79
Merging blocks 80 and 81
Merging blocks 82 and 83
Merging blocks 84 and 85
Merging blocks 86 and 87
Merging blocks 88 and 89
Merging blocks 90 and 91
Merging blocks 92 and 93
Merging blocks 94 and 95
Merging blocks 98 and 99
Merging blocks 100 and 101
Merging blocks 102 and 103
Merging blocks 104 and 105
Merging blocks 106 and 107
Merging blocks 108 and 109
Merging blocks 124 and 125
Merging blocks 126 and 127
Merging blocks 128 and 129
Merging blocks 130 and 131
Merging blocks 132 and 133
Merging blocks 134 and 135
Merging blocks 142 and 143
Merging blocks 144 and 145
Merging blocks 146 and 147
Merging blocks 148 and 149
Merging blocks 150 and 151
Merging blocks 152 and 153
Merging blocks 160 and 161
Merging blocks 162 and 163
Merging blocks 164 and 165
Merging blocks 166 and 167
Merging blocks 168 and 169
Merging blocks 170 and 171
Merging blocks 178 and 179
Merging blocks 180 and 181
Merging blocks 182 and 183
Merging blocks 184 and 185
Merging blocks 186 and 187
Merging blocks 188 and 189
Merging blocks 190 and 191
Merging blocks 192 and 193
Merging blocks 194 and 195
Merging blocks 196 and 197
Merging blocks 198 and 199
Merging blocks 200 and 201
Merging blocks 202 and 203
Merging blocks 204 and 205
Merging blocks 206 and 207
Merging blocks 208 and 209
Merging blocks 210 and 211
Merging blocks 212 and 213
Merging blocks 214 and 215
Merging blocks 216 and 217
Merging blocks 218 and 219
Merging blocks 220 and 221
Merging blocks 222 and 223
Merging blocks 224 and 225
Merging blocks 226 and 227
Merging blocks 228 and 229
Merging blocks 230 and 231
Merging blocks 232 and 233
Merging blocks 234 and 235
Merging blocks 236 and 237
Merging blocks 238 and 239
Merging blocks 240 and 241
Merging blocks 242 and 243
Merging blocks 244 and 245
Merging blocks 246 and 247
Merging blocks 248 and 249
Merging blocks 253 and 254
Merging blocks 255 and 256
Merging blocks 258 and 259
Merging blocks 260 and 261
Merging blocks 263 and 264
Merging blocks 265 and 266
Merging blocks 268 and 269
Merging blocks 270 and 271
Merging blocks 280 and 281
Merging blocks 282 and 283
Merging blocks 284 and 285
Merging blocks 286 and 287
Merging blocks 288 and 289
Merging blocks 290 and 291
Merging blocks 292 and 293
Merging blocks 294 and 295
Merging blocks 296 and 297
Merging blocks 298 and 299
Merging blocks 300 and 301
Merging blocks 302 and 303
Merging blocks 306 and 307
Merging blocks 308 and 309
Merging blocks 310 and 311
Merging blocks 312 and 313
Merging blocks 314 and 315
Merging blocks 316 and 317
Merging blocks 332 and 333
Merging blocks 334 and 335
Merging blocks 336 and 337
Merging blocks 338 and 339
Merging blocks 340 and 341
Merging blocks 342 and 343
Merging blocks 350 and 351
Merging blocks 352 and 353
Merging blocks 354 and 355
Merging blocks 356 and 357
Merging blocks 358 and 359
Merging blocks 360 and 361
Merging blocks 368 and 369
Merging blocks 370 and 371
Merging blocks 372 and 373
Merging blocks 374 and 375
Merging blocks 376 and 377
Merging blocks 378 and 379
Merging blocks 386 and 387
Merging blocks 388 and 389
Merging blocks 390 and 391
Merging blocks 392 and 393
Merging blocks 394 and 395
Merging blocks 396 and 397
Merging blocks 398 and 399
Merging blocks 400 and 401
Merging blocks 402 and 403
Merging blocks 404 and 405
Merging blocks 406 and 407
Merging blocks 408 and 409
Merging blocks 410 and 411
Merging blocks 412 and 413
Merging blocks 414 and 415
Merging blocks 416 and 417
Merging blocks 418 and 419
Merging blocks 420 and 421
Merging blocks 422 and 423
Merging blocks 424 and 425
Merging blocks 426 and 427
Merging blocks 428 and 429
Merging blocks 430 and 431
Merging blocks 430 and 432
Merging blocks 430 and 433
Merging blocks 430 and 434
stbi__idct_simd (stbi_uc * out, int out_stride, short int * data)
{
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i D.20030;
  vector(16) char D.20029;
  __m128i D.20028;
  __m128i __A;
  __m128i __B;
  __m128i D.20024;
  vector(16) char D.20023;
  __m128i D.20022;
  __m128i __A;
  __m128i __B;
  __m128i D.20018;
  vector(16) char D.20017;
  __m128i D.20016;
  __m128i __A;
  __m128i __B;
  __m128i D.20012;
  vector(16) char D.20011;
  __m128i D.20010;
  __m128i __A;
  __m128i __B;
  __m128i D.20006;
  vector(16) char D.20005;
  __m128i D.20004;
  __m128i __A;
  __m128i __B;
  __m128i D.20000;
  vector(16) char D.19999;
  __m128i D.19998;
  __m128i __A;
  __m128i __B;
  __m128i D.19994;
  vector(16) char D.19993;
  __m128i D.19992;
  __m128i __A;
  __m128i __B;
  __m128i D.19988;
  vector(16) char D.19987;
  __m128i D.19986;
  __m128i __A;
  __m128i __B;
  __m128i D.19982;
  vector(16) char D.19981;
  __m128i D.19980;
  __m128i __A;
  __m128i __B;
  __m128i D.19976;
  vector(16) char D.19975;
  __m128i D.19974;
  __m128i __A;
  __m128i __B;
  __m128i D.19970;
  vector(16) char D.19969;
  __m128i D.19968;
  __m128i __A;
  __m128i __B;
  __m128i D.19964;
  vector(16) char D.19963;
  __m128i D.19962;
  __m128i __A;
  __m128i __B;
  __m128i D.19958;
  vector(16) char D.19957;
  __m128i D.19956;
  __m128i __A;
  __m128i __B;
  __m128i D.19952;
  vector(16) char D.19951;
  __m128i D.19950;
  __m128i __A;
  __m128i __B;
  __m128i D.19946;
  vector(16) char D.19945;
  __m128i D.19944;
  __m128i __A;
  __m128i __B;
  __m128i D.19940;
  vector(16) char D.19939;
  __m128i D.19938;
  __m128i __A;
  __m128i __B;
  __m128i D.19934;
  vector(8) short int D.19933;
  __m128i D.19932;
  __m128i __A;
  __m128i __B;
  __m128i D.19928;
  vector(4) int D.19927;
  __m128i D.19926;
  __m128i __A;
  int __B;
  __m128i D.19922;
  vector(4) int D.19921;
  __m128i D.19920;
  __m128i __A;
  int __B;
  __m128i D.19916;
  vector(8) short int D.19915;
  __m128i D.19914;
  __m128i __A;
  __m128i __B;
  __m128i D.19910;
  vector(4) int D.19909;
  __m128i D.19908;
  __m128i __A;
  int __B;
  __m128i D.19904;
  __m128i D.19903;
  __m128i __A;
  __m128i __B;
  __m128i D.19899;
  __m128i D.19898;
  __m128i __A;
  __m128i __B;
  __m128i D.19894;
  __m128i D.19893;
  __m128i __A;
  __m128i __B;
  __m128i D.19889;
  __m128i D.19888;
  __m128i __A;
  __m128i __B;
  __m128i D.19884;
  __m128i D.19883;
  __m128i __A;
  __m128i __B;
  __m128i D.19879;
  __m128i D.19878;
  __m128i __A;
  __m128i __B;
  __m128i D.19874;
  vector(4) int D.19873;
  __m128i D.19872;
  __m128i __A;
  int __B;
  __m128i D.19868;
  vector(8) short int D.19867;
  __m128i D.19866;
  __m128i __A;
  __m128i __B;
  __m128i D.19862;
  vector(4) int D.19861;
  __m128i D.19860;
  __m128i __A;
  int __B;
  __m128i D.19856;
  vector(4) int D.19855;
  __m128i D.19854;
  __m128i __A;
  int __B;
  __m128i D.19850;
  vector(8) short int D.19849;
  __m128i D.19848;
  __m128i __A;
  __m128i __B;
  __m128i D.19844;
  vector(4) int D.19843;
  __m128i D.19842;
  __m128i __A;
  int __B;
  __m128i D.19838;
  __m128i D.19837;
  __m128i __A;
  __m128i __B;
  __m128i D.19833;
  __m128i D.19832;
  __m128i __A;
  __m128i __B;
  __m128i D.19828;
  __m128i D.19827;
  __m128i __A;
  __m128i __B;
  __m128i D.19823;
  __m128i D.19822;
  __m128i __A;
  __m128i __B;
  __m128i D.19818;
  __m128i D.19817;
  __m128i __A;
  __m128i __B;
  __m128i D.19813;
  __m128i D.19812;
  __m128i __A;
  __m128i __B;
  __m128i D.19808;
  vector(4) int D.19807;
  __m128i D.19806;
  __m128i __A;
  int __B;
  __m128i D.19802;
  vector(8) short int D.19801;
  __m128i D.19800;
  __m128i __A;
  __m128i __B;
  __m128i D.19796;
  vector(4) int D.19795;
  __m128i D.19794;
  __m128i __A;
  int __B;
  __m128i D.19790;
  vector(4) int D.19789;
  __m128i D.19788;
  __m128i __A;
  int __B;
  __m128i D.19784;
  vector(8) short int D.19783;
  __m128i D.19782;
  __m128i __A;
  __m128i __B;
  __m128i D.19778;
  vector(4) int D.19777;
  __m128i D.19776;
  __m128i __A;
  int __B;
  __m128i D.19772;
  __m128i D.19771;
  __m128i __A;
  __m128i __B;
  __m128i D.19767;
  __m128i D.19766;
  __m128i __A;
  __m128i __B;
  __m128i D.19762;
  __m128i D.19761;
  __m128i __A;
  __m128i __B;
  __m128i D.19757;
  __m128i D.19756;
  __m128i __A;
  __m128i __B;
  __m128i D.19752;
  __m128i D.19751;
  __m128i __A;
  __m128i __B;
  __m128i D.19747;
  __m128i D.19746;
  __m128i __A;
  __m128i __B;
  __m128i D.19742;
  vector(4) int D.19741;
  __m128i D.19740;
  __m128i __A;
  int __B;
  __m128i D.19736;
  vector(8) short int D.19735;
  __m128i D.19734;
  __m128i __A;
  __m128i __B;
  __m128i D.19730;
  vector(4) int D.19729;
  __m128i D.19728;
  __m128i __A;
  int __B;
  __m128i D.19724;
  vector(4) int D.19723;
  __m128i D.19722;
  __m128i __A;
  int __B;
  __m128i D.19718;
  vector(8) short int D.19717;
  __m128i D.19716;
  __m128i __A;
  __m128i __B;
  __m128i D.19712;
  vector(4) int D.19711;
  __m128i D.19710;
  __m128i __A;
  int __B;
  __m128i D.19706;
  __m128i D.19705;
  __m128i __A;
  __m128i __B;
  __m128i D.19701;
  __m128i D.19700;
  __m128i __A;
  __m128i __B;
  __m128i D.19696;
  __m128i D.19695;
  __m128i __A;
  __m128i __B;
  __m128i D.19691;
  __m128i D.19690;
  __m128i __A;
  __m128i __B;
  __m128i D.19686;
  __m128i D.19685;
  __m128i __A;
  __m128i __B;
  __m128i D.19681;
  __m128i D.19680;
  __m128i __A;
  __m128i __B;
  __m128i D.19676;
  __m128i D.19675;
  __m128i __A;
  __m128i __B;
  __m128i D.19671;
  __m128i D.19670;
  __m128i __A;
  __m128i __B;
  __m128i D.19666;
  __m128i D.19665;
  __m128i __A;
  __m128i __B;
  __m128i D.19661;
  __m128i D.19660;
  __m128i __A;
  __m128i __B;
  __m128i D.19656;
  __m128i D.19655;
  __m128i __A;
  __m128i __B;
  __m128i D.19651;
  __m128i D.19650;
  __m128i __A;
  __m128i __B;
  __m128i D.19646;
  __m128i D.19645;
  __m128i __A;
  __m128i __B;
  __m128i D.19641;
  __m128i D.19640;
  __m128i __A;
  __m128i __B;
  __m128i D.19636;
  vector(4) int D.19635;
  __m128i D.19634;
  __m128i __A;
  int __B;
  __m128i D.19630;
  vector(4) int D.19629;
  __m128i D.19628;
  __m128i __A;
  __m128i __B;
  __m128i D.19624;
  vector(4) int D.19623;
  __m128i D.19622;
  __m128i __A;
  __m128i __B;
  __m128i D.19618;
  vector(4) int D.19617;
  __m128i D.19616;
  __m128i __A;
  __m128i __B;
  __m128i D.19612;
  vector(4) int D.19611;
  __m128i D.19610;
  __m128i __A;
  __m128i __B;
  __m128i D.19606;
  vector(8) short int D.19605;
  __m128i D.19604;
  __m128i __A;
  __m128i __B;
  __m128i D.19600;
  __m128i D.19599;
  __m128i __A;
  __m128i __B;
  __m128i D.19595;
  __m128i D.19594;
  __m128i __A;
  __m128i __B;
  __m128i D.19590;
  vector(8) short int D.19589;
  __m128i D.19588;
  __m128i __A;
  __m128i __B;
  __m128i D.19584;
  vector(4) int D.19583;
  __m128i D.19582;
  __m128i __A;
  __m128i __B;
  __m128i D.19578;
  vector(4) int D.19577;
  __m128i D.19576;
  __m128i __A;
  __m128i __B;
  __m128i D.19572;
  vector(4) int D.19571;
  __m128i D.19570;
  __m128i __A;
  __m128i __B;
  __m128i D.19566;
  vector(4) int D.19565;
  __m128i D.19564;
  __m128i __A;
  __m128i __B;
  __m128i D.19560;
  vector(8) short int D.19559;
  __m128i D.19558;
  __m128i __A;
  __m128i __B;
  __m128i D.19554;
  vector(8) short int D.19553;
  __m128i D.19552;
  __m128i __A;
  __m128i __B;
  __m128i D.19548;
  vector(4) int D.19547;
  __m128i D.19546;
  __m128i __A;
  __m128i __B;
  __m128i D.19542;
  vector(4) int D.19541;
  __m128i D.19540;
  __m128i __A;
  __m128i __B;
  __m128i D.19536;
  vector(4) int D.19535;
  __m128i D.19534;
  __m128i __A;
  __m128i __B;
  __m128i D.19530;
  vector(4) int D.19529;
  __m128i D.19528;
  __m128i __A;
  __m128i __B;
  __m128i D.19524;
  vector(8) short int D.19523;
  __m128i D.19522;
  __m128i __A;
  __m128i __B;
  __m128i D.19518;
  __m128i D.19517;
  __m128i __A;
  __m128i __B;
  __m128i D.19513;
  __m128i D.19512;
  __m128i __A;
  __m128i __B;
  __m128i D.19508;
  __m128i D.19507;
  __m128i __A;
  __m128i __B;
  __m128i D.19503;
  __m128i D.19502;
  __m128i __A;
  __m128i __B;
  __m128i D.19498;
  __m128i D.19497;
  __m128i __A;
  __m128i __B;
  __m128i D.19493;
  __m128i D.19492;
  __m128i __A;
  __m128i __B;
  __m128i D.19488;
  __m128i D.19487;
  __m128i __A;
  __m128i __B;
  __m128i D.19483;
  __m128i D.19482;
  __m128i __A;
  __m128i __B;
  __m128i D.19478;
  vector(8) short int D.19477;
  __m128i D.19476;
  __m128i __A;
  __m128i __B;
  __m128i D.19472;
  vector(4) int D.19471;
  __m128i D.19470;
  __m128i __A;
  int __B;
  __m128i D.19466;
  __m128i D.19465;
  __m128i D.19463;
  vector(8) short int D.19462;
  __m128i D.19461;
  __m128i __A;
  __m128i __B;
  __m128i D.19457;
  vector(4) int D.19456;
  __m128i D.19455;
  __m128i __A;
  int __B;
  __m128i D.19451;
  __m128i D.19450;
  __m128i D.19448;
  vector(8) short int D.19447;
  __m128i D.19446;
  __m128i __A;
  __m128i __B;
  __m128i D.19442;
  vector(4) int D.19441;
  __m128i D.19440;
  __m128i __A;
  int __B;
  __m128i D.19436;
  __m128i D.19435;
  __m128i D.19433;
  vector(8) short int D.19432;
  __m128i D.19431;
  __m128i __A;
  __m128i __B;
  __m128i D.19427;
  vector(4) int D.19426;
  __m128i D.19425;
  __m128i __A;
  int __B;
  __m128i D.19421;
  __m128i D.19420;
  __m128i __A;
  __m128i __B;
  __m128i D.19416;
  __m128i D.19415;
  __m128i __A;
  __m128i __B;
  __m128i D.19411;
  __m128i D.19410;
  __m128i D.19408;
  vector(8) short int D.19407;
  __m128i D.19406;
  __m128i __A;
  __m128i __B;
  __m128i D.19402;
  vector(4) int D.19401;
  __m128i D.19400;
  __m128i __A;
  __m128i __B;
  __m128i D.19396;
  vector(4) int D.19395;
  __m128i D.19394;
  __m128i __A;
  __m128i __B;
  __m128i D.19390;
  vector(4) int D.19389;
  __m128i D.19388;
  __m128i __A;
  __m128i __B;
  __m128i D.19384;
  vector(4) int D.19383;
  __m128i D.19382;
  __m128i __A;
  __m128i __B;
  __m128i D.19378;
  vector(8) short int D.19377;
  __m128i D.19376;
  __m128i __A;
  __m128i __B;
  __m128i D.19372;
  vector(8) short int D.19371;
  __m128i D.19370;
  __m128i __A;
  __m128i __B;
  __m128i D.19366;
  vector(8) short int D.19365;
  __m128i D.19364;
  __m128i __A;
  __m128i __B;
  __m128i D.19360;
  vector(8) short int D.19359;
  __m128i D.19358;
  __m128i __A;
  __m128i __B;
  __m128i D.19354;
  vector(8) short int D.19353;
  __m128i D.19352;
  __m128i __A;
  __m128i __B;
  __m128i D.19348;
  vector(8) short int D.19347;
  __m128i D.19346;
  __m128i __A;
  __m128i __B;
  __m128i D.19342;
  vector(8) short int D.19341;
  __m128i D.19340;
  __m128i __A;
  __m128i __B;
  __m128i D.19336;
  vector(8) short int D.19335;
  __m128i D.19334;
  __m128i __A;
  __m128i __B;
  __m128i D.19330;
  vector(8) short int D.19329;
  __m128i D.19328;
  __m128i __A;
  __m128i __B;
  __m128i D.19324;
  vector(8) short int D.19323;
  __m128i D.19322;
  __m128i __A;
  __m128i __B;
  __m128i D.19318;
  vector(8) short int D.19317;
  __m128i D.19316;
  __m128i __A;
  __m128i __B;
  __m128i D.19312;
  vector(8) short int D.19311;
  __m128i D.19310;
  __m128i __A;
  __m128i __B;
  __m128i D.19306;
  vector(8) short int D.19305;
  __m128i D.19304;
  __m128i __A;
  __m128i __B;
  __m128i D.19300;
  vector(8) short int D.19299;
  __m128i D.19298;
  __m128i __A;
  __m128i __B;
  __m128i D.19294;
  vector(8) short int D.19293;
  __m128i D.19292;
  __m128i __A;
  __m128i __B;
  __m128i D.19288;
  vector(8) short int D.19287;
  __m128i D.19286;
  __m128i __A;
  __m128i __B;
  __m128i D.19282;
  vector(8) short int D.19281;
  __m128i D.19280;
  __m128i __A;
  __m128i __B;
  __m128i D.19276;
  vector(8) short int D.19275;
  __m128i D.19274;
  __m128i __A;
  __m128i __B;
  __m128i D.19270;
  vector(8) short int D.19269;
  __m128i D.19268;
  __m128i __A;
  __m128i __B;
  __m128i D.19264;
  vector(8) short int D.19263;
  __m128i D.19262;
  __m128i __A;
  __m128i __B;
  __m128i D.19258;
  vector(8) short int D.19257;
  __m128i D.19256;
  __m128i __A;
  __m128i __B;
  __m128i D.19252;
  vector(8) short int D.19251;
  __m128i D.19250;
  __m128i __A;
  __m128i __B;
  __m128i D.19246;
  vector(8) short int D.19245;
  __m128i D.19244;
  __m128i __A;
  __m128i __B;
  __m128i D.19240;
  vector(8) short int D.19239;
  __m128i D.19238;
  __m128i __A;
  __m128i __B;
  __m128i D.19234;
  vector(8) short int D.19233;
  __m128i D.19232;
  __m128i __A;
  __m128i __B;
  __m128i D.19228;
  vector(8) short int D.19227;
  __m128i D.19226;
  __m128i __A;
  __m128i __B;
  __m128i D.19222;
  vector(8) short int D.19221;
  __m128i D.19220;
  __m128i __A;
  __m128i __B;
  __m128i D.19216;
  vector(4) int D.19215;
  __m128i D.19214;
  __m128i __A;
  int __B;
  __m128i D.19210;
  vector(4) int D.19209;
  __m128i D.19208;
  __m128i __A;
  int __B;
  __m128i D.19204;
  vector(8) short int D.19203;
  __m128i D.19202;
  __m128i __A;
  __m128i __B;
  __m128i D.19198;
  vector(4) int D.19197;
  __m128i D.19196;
  __m128i __A;
  int __B;
  __m128i D.19192;
  __m128i D.19191;
  __m128i __A;
  __m128i __B;
  __m128i D.19187;
  __m128i D.19186;
  __m128i __A;
  __m128i __B;
  __m128i D.19182;
  __m128i D.19181;
  __m128i __A;
  __m128i __B;
  __m128i D.19177;
  __m128i D.19176;
  __m128i __A;
  __m128i __B;
  __m128i D.19172;
  __m128i D.19171;
  __m128i __A;
  __m128i __B;
  __m128i D.19167;
  __m128i D.19166;
  __m128i __A;
  __m128i __B;
  __m128i D.19162;
  vector(4) int D.19161;
  __m128i D.19160;
  __m128i __A;
  int __B;
  __m128i D.19156;
  vector(8) short int D.19155;
  __m128i D.19154;
  __m128i __A;
  __m128i __B;
  __m128i D.19150;
  vector(4) int D.19149;
  __m128i D.19148;
  __m128i __A;
  int __B;
  __m128i D.19144;
  vector(4) int D.19143;
  __m128i D.19142;
  __m128i __A;
  int __B;
  __m128i D.19138;
  vector(8) short int D.19137;
  __m128i D.19136;
  __m128i __A;
  __m128i __B;
  __m128i D.19132;
  vector(4) int D.19131;
  __m128i D.19130;
  __m128i __A;
  int __B;
  __m128i D.19126;
  __m128i D.19125;
  __m128i __A;
  __m128i __B;
  __m128i D.19121;
  __m128i D.19120;
  __m128i __A;
  __m128i __B;
  __m128i D.19116;
  __m128i D.19115;
  __m128i __A;
  __m128i __B;
  __m128i D.19111;
  __m128i D.19110;
  __m128i __A;
  __m128i __B;
  __m128i D.19106;
  __m128i D.19105;
  __m128i __A;
  __m128i __B;
  __m128i D.19101;
  __m128i D.19100;
  __m128i __A;
  __m128i __B;
  __m128i D.19096;
  vector(4) int D.19095;
  __m128i D.19094;
  __m128i __A;
  int __B;
  __m128i D.19090;
  vector(8) short int D.19089;
  __m128i D.19088;
  __m128i __A;
  __m128i __B;
  __m128i D.19084;
  vector(4) int D.19083;
  __m128i D.19082;
  __m128i __A;
  int __B;
  __m128i D.19078;
  vector(4) int D.19077;
  __m128i D.19076;
  __m128i __A;
  int __B;
  __m128i D.19072;
  vector(8) short int D.19071;
  __m128i D.19070;
  __m128i __A;
  __m128i __B;
  __m128i D.19066;
  vector(4) int D.19065;
  __m128i D.19064;
  __m128i __A;
  int __B;
  __m128i D.19060;
  __m128i D.19059;
  __m128i __A;
  __m128i __B;
  __m128i D.19055;
  __m128i D.19054;
  __m128i __A;
  __m128i __B;
  __m128i D.19050;
  __m128i D.19049;
  __m128i __A;
  __m128i __B;
  __m128i D.19045;
  __m128i D.19044;
  __m128i __A;
  __m128i __B;
  __m128i D.19040;
  __m128i D.19039;
  __m128i __A;
  __m128i __B;
  __m128i D.19035;
  __m128i D.19034;
  __m128i __A;
  __m128i __B;
  __m128i D.19030;
  vector(4) int D.19029;
  __m128i D.19028;
  __m128i __A;
  int __B;
  __m128i D.19024;
  vector(8) short int D.19023;
  __m128i D.19022;
  __m128i __A;
  __m128i __B;
  __m128i D.19018;
  vector(4) int D.19017;
  __m128i D.19016;
  __m128i __A;
  int __B;
  __m128i D.19012;
  vector(4) int D.19011;
  __m128i D.19010;
  __m128i __A;
  int __B;
  __m128i D.19006;
  vector(8) short int D.19005;
  __m128i D.19004;
  __m128i __A;
  __m128i __B;
  __m128i D.19000;
  vector(4) int D.18999;
  __m128i D.18998;
  __m128i __A;
  int __B;
  __m128i D.18994;
  __m128i D.18993;
  __m128i __A;
  __m128i __B;
  __m128i D.18989;
  __m128i D.18988;
  __m128i __A;
  __m128i __B;
  __m128i D.18984;
  __m128i D.18983;
  __m128i __A;
  __m128i __B;
  __m128i D.18979;
  __m128i D.18978;
  __m128i __A;
  __m128i __B;
  __m128i D.18974;
  __m128i D.18973;
  __m128i __A;
  __m128i __B;
  __m128i D.18969;
  __m128i D.18968;
  __m128i __A;
  __m128i __B;
  __m128i D.18964;
  __m128i D.18963;
  __m128i __A;
  __m128i __B;
  __m128i D.18959;
  __m128i D.18958;
  __m128i __A;
  __m128i __B;
  __m128i D.18954;
  __m128i D.18953;
  __m128i __A;
  __m128i __B;
  __m128i D.18949;
  __m128i D.18948;
  __m128i __A;
  __m128i __B;
  __m128i D.18944;
  __m128i D.18943;
  __m128i __A;
  __m128i __B;
  __m128i D.18939;
  __m128i D.18938;
  __m128i __A;
  __m128i __B;
  __m128i D.18934;
  __m128i D.18933;
  __m128i __A;
  __m128i __B;
  __m128i D.18929;
  __m128i D.18928;
  __m128i __A;
  __m128i __B;
  __m128i D.18924;
  vector(4) int D.18923;
  __m128i D.18922;
  __m128i __A;
  int __B;
  __m128i D.18918;
  vector(4) int D.18917;
  __m128i D.18916;
  __m128i __A;
  __m128i __B;
  __m128i D.18912;
  vector(4) int D.18911;
  __m128i D.18910;
  __m128i __A;
  __m128i __B;
  __m128i D.18906;
  vector(4) int D.18905;
  __m128i D.18904;
  __m128i __A;
  __m128i __B;
  __m128i D.18900;
  vector(4) int D.18899;
  __m128i D.18898;
  __m128i __A;
  __m128i __B;
  __m128i D.18894;
  vector(8) short int D.18893;
  __m128i D.18892;
  __m128i __A;
  __m128i __B;
  __m128i D.18888;
  __m128i D.18887;
  __m128i __A;
  __m128i __B;
  __m128i D.18883;
  __m128i D.18882;
  __m128i __A;
  __m128i __B;
  __m128i D.18878;
  vector(8) short int D.18877;
  __m128i D.18876;
  __m128i __A;
  __m128i __B;
  __m128i D.18872;
  vector(4) int D.18871;
  __m128i D.18870;
  __m128i __A;
  __m128i __B;
  __m128i D.18866;
  vector(4) int D.18865;
  __m128i D.18864;
  __m128i __A;
  __m128i __B;
  __m128i D.18860;
  vector(4) int D.18859;
  __m128i D.18858;
  __m128i __A;
  __m128i __B;
  __m128i D.18854;
  vector(4) int D.18853;
  __m128i D.18852;
  __m128i __A;
  __m128i __B;
  __m128i D.18848;
  vector(8) short int D.18847;
  __m128i D.18846;
  __m128i __A;
  __m128i __B;
  __m128i D.18842;
  vector(8) short int D.18841;
  __m128i D.18840;
  __m128i __A;
  __m128i __B;
  __m128i D.18836;
  vector(4) int D.18835;
  __m128i D.18834;
  __m128i __A;
  __m128i __B;
  __m128i D.18830;
  vector(4) int D.18829;
  __m128i D.18828;
  __m128i __A;
  __m128i __B;
  __m128i D.18824;
  vector(4) int D.18823;
  __m128i D.18822;
  __m128i __A;
  __m128i __B;
  __m128i D.18818;
  vector(4) int D.18817;
  __m128i D.18816;
  __m128i __A;
  __m128i __B;
  __m128i D.18812;
  vector(8) short int D.18811;
  __m128i D.18810;
  __m128i __A;
  __m128i __B;
  __m128i D.18806;
  __m128i D.18805;
  __m128i __A;
  __m128i __B;
  __m128i D.18801;
  __m128i D.18800;
  __m128i __A;
  __m128i __B;
  __m128i D.18796;
  __m128i D.18795;
  __m128i __A;
  __m128i __B;
  __m128i D.18791;
  __m128i D.18790;
  __m128i __A;
  __m128i __B;
  __m128i D.18786;
  __m128i D.18785;
  __m128i __A;
  __m128i __B;
  __m128i D.18781;
  __m128i D.18780;
  __m128i __A;
  __m128i __B;
  __m128i D.18776;
  __m128i D.18775;
  __m128i __A;
  __m128i __B;
  __m128i D.18771;
  __m128i D.18770;
  __m128i __A;
  __m128i __B;
  __m128i D.18766;
  vector(8) short int D.18765;
  __m128i D.18764;
  __m128i __A;
  __m128i __B;
  __m128i D.18760;
  vector(4) int D.18759;
  __m128i D.18758;
  __m128i __A;
  int __B;
  __m128i D.18754;
  __m128i D.18753;
  __m128i D.18751;
  vector(8) short int D.18750;
  __m128i D.18749;
  __m128i __A;
  __m128i __B;
  __m128i D.18745;
  vector(4) int D.18744;
  __m128i D.18743;
  __m128i __A;
  int __B;
  __m128i D.18739;
  __m128i D.18738;
  __m128i D.18736;
  vector(8) short int D.18735;
  __m128i D.18734;
  __m128i __A;
  __m128i __B;
  __m128i D.18730;
  vector(4) int D.18729;
  __m128i D.18728;
  __m128i __A;
  int __B;
  __m128i D.18724;
  __m128i D.18723;
  __m128i D.18721;
  vector(8) short int D.18720;
  __m128i D.18719;
  __m128i __A;
  __m128i __B;
  __m128i D.18715;
  vector(4) int D.18714;
  __m128i D.18713;
  __m128i __A;
  int __B;
  __m128i D.18709;
  __m128i D.18708;
  __m128i __A;
  __m128i __B;
  __m128i D.18704;
  __m128i D.18703;
  __m128i __A;
  __m128i __B;
  __m128i D.18699;
  __m128i D.18698;
  __m128i D.18696;
  vector(8) short int D.18695;
  __m128i D.18694;
  __m128i __A;
  __m128i __B;
  __m128i D.18690;
  vector(4) int D.18689;
  __m128i D.18688;
  __m128i __A;
  __m128i __B;
  __m128i D.18684;
  vector(4) int D.18683;
  __m128i D.18682;
  __m128i __A;
  __m128i __B;
  __m128i D.18678;
  vector(4) int D.18677;
  __m128i D.18676;
  __m128i __A;
  __m128i __B;
  __m128i D.18672;
  vector(4) int D.18671;
  __m128i D.18670;
  __m128i __A;
  __m128i __B;
  __m128i D.18666;
  vector(8) short int D.18665;
  __m128i D.18664;
  __m128i __A;
  __m128i __B;
  __m128i D.18659;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18656;
  __m128i D.18658;
  __m128i D.18657;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18637;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18634;
  __m128i D.18636;
  __m128i D.18635;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18615;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18612;
  __m128i D.18614;
  __m128i D.18613;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18593;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18590;
  __m128i D.18592;
  __m128i D.18591;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18571;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18568;
  __m128i D.18570;
  __m128i D.18569;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18549;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18546;
  __m128i D.18548;
  __m128i D.18547;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18527;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18524;
  __m128i D.18526;
  __m128i D.18525;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18505;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18502;
  __m128i D.18504;
  __m128i D.18503;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.18483;
  int __q0;
  int __q1;
  int __q2;
  int __q3;
  __m128i D.18480;
  __m128i D.18482;
  __m128i D.18481;
  int __A;
  __m128i D.18472;
  int __q0;
  int __q1;
  int __q2;
  int __q3;
  __m128i D.18469;
  __m128i D.18471;
  __m128i D.18470;
  int __A;
  __m128i D.18462;
  __m128i D.18461;
  const __m128i * {ref-all} __P;
  __m128i D.18458;
  __m128i D.18457;
  const __m128i * {ref-all} __P;
  __m128i D.18454;
  __m128i D.18453;
  const __m128i * {ref-all} __P;
  __m128i D.18450;
  __m128i D.18449;
  const __m128i * {ref-all} __P;
  __m128i D.18446;
  __m128i D.18445;
  const __m128i * {ref-all} __P;
  __m128i D.18442;
  __m128i D.18441;
  const __m128i * {ref-all} __P;
  __m128i D.18438;
  __m128i D.18437;
  const __m128i * {ref-all} __P;
  __m128i D.18434;
  __m128i D.18433;
  const __m128i * {ref-all} __P;
  __m128i D.18430;
  vector(8) short int D.18429;
  __m128i D.18428;
  __m128i __A;
  __m128i __B;
  vector(4) int D.14362;
  vector(4) int D.14361;
  vector(4) int D.14360;
  vector(4) int D.14359;
  vector(2) long long int D.14358;
  vector(2) long long int D.14357;
  vector(2) long long int D.14356;
  vector(2) long long int D.14355;
  vector(2) long long int D.14354;
  vector(2) long long int D.14353;
  vector(2) long long int D.14352;
  vector(2) long long int D.14351;
  vector(2) long long int D.14350;
  vector(2) long long int D.14349;
  vector(2) long long int D.14348;
  vector(2) long long int D.14347;
  vector(2) long long int D.14346;
  vector(2) long long int D.14345;
  vector(2) long long int D.14344;
  vector(2) long long int D.14343;
  __m128i D.14341;
  vector(2) long long int D.14340;
  vector(2) long long int D.14339;
  vector(2) long long int D.14338;
  vector(2) long long int D.14337;
  vector(2) long long int D.14336;
  vector(2) long long int D.14335;
  vector(2) long long int D.14334;
  vector(2) long long int D.14333;
  vector(2) long long int D.14332;
  vector(2) long long int D.14331;
  vector(2) long long int D.14330;
  vector(2) long long int D.14329;
  vector(2) long long int D.14328;
  vector(2) long long int D.14327;
  vector(2) long long int D.14326;
  vector(2) long long int D.14325;
  vector(2) long long int D.14324;
  vector(2) long long int D.14323;
  vector(2) long long int D.14322;
  vector(2) long long int D.14321;
  __m128i D.14320;
  vector(2) long long int D.14319;
  vector(2) long long int D.14318;
  __m128i D.14317;
  __m128i D.14316;
  __m128i D.14315;
  __m128i D.14314;
  __m128i D.14313;
  __m128i D.14312;
  __m128i D.14311;
  __m128i D.14310;
  __m128i D.14309;
  __m128i D.14308;
  __m128i D.14307;
  __m128i D.14306;
  __m128i D.14305;
  __m128i D.14304;
  __m128i D.14303;
  __m128i D.14302;
  __m128i D.14301;
  __m128i D.14300;
  __m128i D.14299;
  vector(2) long long int D.14298;
  __m128i D.14297;
  vector(2) long long int D.14296;
  __m128i D.14295;
  vector(2) long long int D.14294;
  __m128i D.14293;
  vector(2) long long int D.14292;
  __m128i D.14291;
  __m128i D.14290;
  __m128i D.14289;
  __m128i D.14288;
  __m128i D.14287;
  __m128i D.14286;
  vector(2) long long int D.14285;
  vector(2) long long int D.14284;
  vector(2) long long int D.14283;
  __m128i D.14282;
  vector(2) long long int D.14281;
  vector(2) long long int D.14280;
  vector(2) long long int D.14279;
  __m128i D.14278;
  vector(2) long long int D.14277;
  vector(2) long long int D.14276;
  vector(2) long long int D.14275;
  __m128i D.14274;
  vector(2) long long int D.14273;
  vector(2) long long int D.14272;
  vector(2) long long int D.14271;
  __m128i D.14270;
  vector(2) long long int D.14269;
  vector(2) long long int D.14268;
  vector(2) long long int D.14267;
  vector(2) long long int D.14266;
  vector(2) long long int D.14265;
  vector(2) long long int D.14264;
  __m128i D.14263;
  __m128i D.14262;
  __m128i D.14260;
  vector(2) long long int D.14259;
  vector(2) long long int D.14258;
  vector(2) long long int D.14257;
  vector(2) long long int D.14256;
  vector(2) long long int D.14255;
  vector(2) long long int D.14254;
  vector(2) long long int D.14253;
  vector(2) long long int D.14252;
  vector(2) long long int D.14251;
  vector(2) long long int D.14250;
  vector(2) long long int D.14249;
  vector(2) long long int D.14248;
  vector(2) long long int D.14247;
  vector(2) long long int D.14246;
  vector(2) long long int D.14245;
  vector(2) long long int D.14244;
  vector(2) long long int D.14243;
  vector(2) long long int D.14242;
  vector(2) long long int D.14241;
  vector(2) long long int D.14240;
  __m128i D.14239;
  vector(2) long long int D.14238;
  vector(2) long long int D.14237;
  __m128i D.14236;
  __m128i D.14235;
  __m128i D.14234;
  __m128i D.14233;
  __m128i D.14232;
  __m128i D.14231;
  __m128i D.14230;
  __m128i D.14229;
  __m128i D.14228;
  __m128i D.14227;
  __m128i D.14226;
  __m128i D.14225;
  __m128i D.14224;
  __m128i D.14223;
  __m128i D.14222;
  __m128i D.14221;
  __m128i D.14220;
  __m128i D.14219;
  __m128i D.14218;
  vector(2) long long int D.14217;
  __m128i D.14216;
  vector(2) long long int D.14215;
  __m128i D.14214;
  vector(2) long long int D.14213;
  __m128i D.14212;
  vector(2) long long int D.14211;
  __m128i D.14210;
  __m128i D.14209;
  __m128i D.14208;
  __m128i D.14207;
  __m128i D.14206;
  __m128i D.14205;
  __m128i p3;
  __m128i p2;
  __m128i p1;
  __m128i p0;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i x7_h;
  __m128i x7_l;
  __m128i x6_h;
  __m128i x6_l;
  __m128i x5_h;
  __m128i x5_l;
  __m128i x4_h;
  __m128i x4_l;
  __m128i y5o_h;
  __m128i y5o_l;
  __m128i y4o_h;
  __m128i y4o_l;
  __m128i rot1_0hi;
  __m128i rot1_0lo;
  __m128i sum35;
  __m128i sum17;
  __m128i y3o_h;
  __m128i y3o_l;
  __m128i y1o_h;
  __m128i y1o_l;
  __m128i rot3_0hi;
  __m128i rot3_0lo;
  __m128i y2o_h;
  __m128i y2o_l;
  __m128i y0o_h;
  __m128i y0o_l;
  __m128i rot2_0hi;
  __m128i rot2_0lo;
  __m128i x2_h;
  __m128i x2_l;
  __m128i x1_h;
  __m128i x1_l;
  __m128i x3_h;
  __m128i x3_l;
  __m128i x0_h;
  __m128i x0_l;
  __m128i t1e_h;
  __m128i t1e_l;
  __m128i t0e_h;
  __m128i t0e_l;
  __m128i dif04;
  __m128i sum04;
  __m128i t3e_h;
  __m128i t3e_l;
  __m128i t2e_h;
  __m128i t2e_l;
  __m128i rot0_0hi;
  __m128i rot0_0lo;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i dif_h;
  __m128i dif_l;
  __m128i sum_h;
  __m128i sum_l;
  __m128i abiased_h;
  __m128i abiased_l;
  __m128i x7_h;
  __m128i x7_l;
  __m128i x6_h;
  __m128i x6_l;
  __m128i x5_h;
  __m128i x5_l;
  __m128i x4_h;
  __m128i x4_l;
  __m128i y5o_h;
  __m128i y5o_l;
  __m128i y4o_h;
  __m128i y4o_l;
  __m128i rot1_0hi;
  __m128i rot1_0lo;
  __m128i sum35;
  __m128i sum17;
  __m128i y3o_h;
  __m128i y3o_l;
  __m128i y1o_h;
  __m128i y1o_l;
  __m128i rot3_0hi;
  __m128i rot3_0lo;
  __m128i y2o_h;
  __m128i y2o_l;
  __m128i y0o_h;
  __m128i y0o_l;
  __m128i rot2_0hi;
  __m128i rot2_0lo;
  __m128i x2_h;
  __m128i x2_l;
  __m128i x1_h;
  __m128i x1_l;
  __m128i x3_h;
  __m128i x3_l;
  __m128i x0_h;
  __m128i x0_l;
  __m128i t1e_h;
  __m128i t1e_l;
  __m128i t0e_h;
  __m128i t0e_l;
  __m128i dif04;
  __m128i sum04;
  __m128i t3e_h;
  __m128i t3e_l;
  __m128i t2e_h;
  __m128i t2e_l;
  __m128i rot0_0hi;
  __m128i rot0_0lo;
  __m128i bias_1;
  __m128i bias_0;
  __m128i rot3_1;
  __m128i rot3_0;
  __m128i rot2_1;
  __m128i rot2_0;
  __m128i rot1_1;
  __m128i rot1_0;
  __m128i rot0_1;
  __m128i rot0_0;
  __m128i tmp;
  __m128i row7;
  __m128i row6;
  __m128i row5;
  __m128i row4;
  __m128i row3;
  __m128i row2;
  __m128i row1;
  __m128i row0;
  short int * _1;
  vector(2) long long int _2;
  short int * _3;
  vector(2) long long int _4;
  short int * _5;
  vector(2) long long int _6;
  short int * _7;
  short int * _8;
  vector(2) long long int _9;
  short int * _10;
  vector(2) long long int _11;
  short int * _12;
  vector(2) long long int _13;
  vector(2) long long int row6.122_14;
  vector(2) long long int row2.123_15;
  vector(2) long long int row6.124_16;
  vector(2) long long int row2.125_17;
  vector(2) long long int _18;
  vector(2) long long int _19;
  vector(2) long long int sum04.126_20;
  vector(2) long long int _21;
  vector(2) long long int _22;
  vector(2) long long int sum04.127_23;
  vector(2) long long int _24;
  vector(2) long long int _25;
  vector(2) long long int dif04.128_26;
  vector(2) long long int _27;
  vector(2) long long int _28;
  vector(2) long long int dif04.129_29;
  vector(2) long long int _30;
  vector(2) long long int _31;
  vector(2) long long int row3.130_32;
  vector(2) long long int row7.131_33;
  vector(2) long long int row3.132_34;
  vector(2) long long int row7.133_35;
  vector(2) long long int row1.134_36;
  vector(2) long long int row5.135_37;
  vector(2) long long int row1.136_38;
  vector(2) long long int row5.137_39;
  vector(2) long long int row7.138_40;
  vector(2) long long int row1.139_41;
  vector(2) long long int _42;
  vector(2) long long int row5.140_43;
  vector(2) long long int row3.141_44;
  vector(2) long long int _45;
  vector(2) long long int sum35.142_46;
  vector(2) long long int sum17.143_47;
  vector(2) long long int sum35.144_48;
  vector(2) long long int sum17.145_49;
  vector(2) long long int _50;
  vector(2) long long int _51;
  vector(2) long long int _52;
  vector(2) long long int _53;
  vector(2) long long int _54;
  vector(2) long long int _55;
  vector(2) long long int _56;
  vector(2) long long int _57;
  vector(2) long long int _58;
  vector(2) long long int _59;
  vector(2) long long int _60;
  vector(2) long long int _61;
  vector(2) long long int _62;
  vector(2) long long int _63;
  vector(2) long long int _64;
  vector(2) long long int _65;
  vector(2) long long int _66;
  vector(2) long long int _67;
  vector(2) long long int _68;
  vector(2) long long int _69;
  vector(2) long long int _70;
  vector(2) long long int _71;
  vector(2) long long int row5.146_72;
  vector(2) long long int row1.147_73;
  vector(2) long long int _74;
  vector(2) long long int row5.148_75;
  vector(2) long long int _76;
  vector(2) long long int row6.149_77;
  vector(2) long long int row2.150_78;
  vector(2) long long int _79;
  vector(2) long long int row6.151_80;
  vector(2) long long int _81;
  vector(2) long long int row7.152_82;
  vector(2) long long int row3.153_83;
  vector(2) long long int _84;
  vector(2) long long int row7.154_85;
  vector(2) long long int _86;
  vector(2) long long int row2.155_87;
  vector(2) long long int row2.156_88;
  vector(2) long long int _89;
  vector(2) long long int row3.157_90;
  vector(2) long long int row1.158_91;
  vector(2) long long int _92;
  vector(2) long long int row3.159_93;
  vector(2) long long int _94;
  vector(2) long long int row6.160_95;
  vector(2) long long int row6.161_96;
  vector(2) long long int _97;
  vector(2) long long int row7.162_98;
  vector(2) long long int row5.163_99;
  vector(2) long long int _100;
  vector(2) long long int row7.164_101;
  vector(2) long long int _102;
  vector(2) long long int row1.165_103;
  vector(2) long long int row1.166_104;
  vector(2) long long int _105;
  vector(2) long long int row3.167_106;
  vector(2) long long int row2.168_107;
  vector(2) long long int _108;
  vector(2) long long int row3.169_109;
  vector(2) long long int _110;
  vector(2) long long int row5.170_111;
  vector(2) long long int row5.171_112;
  vector(2) long long int _113;
  vector(2) long long int row7.172_114;
  vector(2) long long int row6.173_115;
  vector(2) long long int _116;
  vector(2) long long int row7.174_117;
  vector(2) long long int _118;
  vector(2) long long int row6.175_119;
  vector(2) long long int row2.176_120;
  vector(2) long long int row6.177_121;
  vector(2) long long int row2.178_122;
  vector(2) long long int _123;
  vector(2) long long int _124;
  vector(2) long long int sum04.179_125;
  vector(2) long long int _126;
  vector(2) long long int _127;
  vector(2) long long int sum04.180_128;
  vector(2) long long int _129;
  vector(2) long long int _130;
  vector(2) long long int dif04.181_131;
  vector(2) long long int _132;
  vector(2) long long int _133;
  vector(2) long long int dif04.182_134;
  vector(2) long long int _135;
  vector(2) long long int _136;
  vector(2) long long int row3.183_137;
  vector(2) long long int row7.184_138;
  vector(2) long long int row3.185_139;
  vector(2) long long int row7.186_140;
  vector(2) long long int row1.187_141;
  vector(2) long long int row5.188_142;
  vector(2) long long int row1.189_143;
  vector(2) long long int row5.190_144;
  vector(2) long long int row7.191_145;
  vector(2) long long int row1.192_146;
  vector(2) long long int _147;
  vector(2) long long int row5.193_148;
  vector(2) long long int row3.194_149;
  vector(2) long long int _150;
  vector(2) long long int sum35.195_151;
  vector(2) long long int sum17.196_152;
  vector(2) long long int sum35.197_153;
  vector(2) long long int sum17.198_154;
  vector(2) long long int _155;
  vector(2) long long int _156;
  vector(2) long long int _157;
  vector(2) long long int _158;
  vector(2) long long int _159;
  vector(2) long long int _160;
  vector(2) long long int _161;
  vector(2) long long int _162;
  vector(2) long long int _163;
  vector(2) long long int _164;
  vector(2) long long int _165;
  vector(2) long long int _166;
  vector(2) long long int _167;
  vector(2) long long int _168;
  vector(2) long long int _169;
  vector(2) long long int _170;
  vector(2) long long int _171;
  vector(2) long long int _172;
  vector(2) long long int _173;
  vector(2) long long int _174;
  vector(2) long long int _175;
  vector(2) long long int _176;
  vector(2) long long int row1.199_177;
  vector(2) long long int _178;
  vector(2) long long int row3.200_179;
  vector(2) long long int row2.201_180;
  vector(2) long long int _181;
  vector(2) long long int row5.202_182;
  vector(2) long long int _183;
  vector(2) long long int row7.203_184;
  vector(2) long long int row6.204_185;
  vector(2) long long int _186;
  vector(2) long long int p2.205_187;
  vector(2) long long int p0.206_188;
  vector(2) long long int _189;
  vector(2) long long int p2.207_190;
  vector(2) long long int _191;
  vector(2) long long int p3.208_192;
  vector(2) long long int p1.209_193;
  vector(2) long long int _194;
  vector(2) long long int p3.210_195;
  vector(2) long long int _196;
  vector(2) long long int p1.211_197;
  vector(2) long long int p0.212_198;
  vector(2) long long int _199;
  vector(2) long long int p1.213_200;
  vector(2) long long int _201;
  vector(2) long long int p3.214_202;
  vector(2) long long int p2.215_203;
  vector(2) long long int _204;
  vector(2) long long int p3.216_205;
  vector(2) long long int _206;
  vector(2) long long int p2.217_207;
  vector(2) long long int p0.218_208;
  vector(2) long long int _209;
  vector(2) long long int p2.219_210;
  vector(2) long long int _211;
  vector(2) long long int p3.220_212;
  vector(2) long long int p1.221_213;
  vector(2) long long int _214;
  vector(2) long long int p3.222_215;
  vector(2) long long int _216;
  vector(2) long long int p0.223_217;
  sizetype _218;
  vector(2) long long int p0.224_219;
  vector(4) int _220;
  vector(4) int _221;
  vector(2) long long int _222;
  sizetype _223;
  vector(2) long long int p2.225_224;
  sizetype _225;
  vector(2) long long int p2.226_226;
  vector(4) int _227;
  vector(4) int _228;
  vector(2) long long int _229;
  sizetype _230;
  vector(2) long long int p1.227_231;
  sizetype _232;
  vector(2) long long int p1.228_233;
  vector(4) int _234;
  vector(4) int _235;
  vector(2) long long int _236;
  sizetype _237;
  vector(2) long long int p3.229_238;
  sizetype _239;
  vector(2) long long int p3.230_240;
  vector(4) int _241;
  vector(4) int _242;
  vector(2) long long int _243;
  __m128i _268;
  __m128i _270;
  __m128i _272;
  __m128i _274;
  __m128i _276;
  __m128i _278;
  vector(2) long long int _282;
  __m128i _283;
  vector(2) long long int _285;
  __m128i _286;
  vector(2) long long int _288;
  __m128i _289;
  vector(2) long long int _291;
  __m128i _292;
  __m128i _302;
  __m128i _304;
  __m128i _306;
  __m128i _308;
  __m128i _310;
  __m128i _312;
  __m128i _314;
  __m128i _316;
  __m128i _318;
  __m128i _320;
  __m128i _322;
  __m128i _324;
  __m128i _328;
  __m128i _330;
  __m128i _332;
  __m128i _334;
  __m128i _336;
  __m128i _338;
  vector(2) long long int _354;
  vector(2) long long int _355;
  __m128i _356;
  vector(2) long long int _358;
  vector(2) long long int _359;
  vector(2) long long int _360;
  vector(2) long long int _368;
  vector(2) long long int _369;
  vector(2) long long int _370;
  vector(2) long long int _372;
  vector(2) long long int _373;
  vector(2) long long int _374;
  vector(2) long long int _382;
  vector(2) long long int _383;
  vector(2) long long int _384;
  vector(2) long long int _386;
  vector(2) long long int _387;
  vector(2) long long int _388;
  vector(2) long long int _396;
  vector(2) long long int _397;
  vector(2) long long int _398;
  vector(2) long long int _400;
  vector(2) long long int _401;
  __m128i _402;
  __m128i _409;
  __m128i _411;
  vector(2) long long int _414;
  vector(2) long long int _416;
  vector(2) long long int _419;
  vector(2) long long int _421;
  vector(2) long long int _424;
  vector(2) long long int _426;
  __m128i _429;
  vector(2) long long int _431;
  vector(2) long long int _434;
  vector(2) long long int _436;
  __m128i _439;
  vector(2) long long int _441;
  vector(2) long long int _444;
  vector(2) long long int _446;
  __m128i _449;
  vector(2) long long int _451;
  vector(2) long long int _454;
  vector(2) long long int _456;
  __m128i _459;
  vector(2) long long int _461;
  vector(2) long long int _464;
  vector(2) long long int _466;
  __m128i _468;
  __m128i _470;
  __m128i _472;
  __m128i _474;
  __m128i _476;
  __m128i _478;
  vector(2) long long int _482;
  __m128i _483;
  vector(2) long long int _485;
  __m128i _486;
  vector(2) long long int _488;
  __m128i _489;
  vector(2) long long int _491;
  __m128i _492;
  __m128i _502;
  __m128i _504;
  __m128i _506;
  __m128i _508;
  __m128i _510;
  __m128i _512;
  __m128i _514;
  __m128i _516;
  __m128i _518;
  __m128i _520;
  __m128i _522;
  __m128i _524;
  __m128i _528;
  __m128i _530;
  __m128i _532;
  __m128i _534;
  __m128i _536;
  __m128i _538;
  vector(2) long long int _554;
  vector(2) long long int _555;
  __m128i _556;
  vector(2) long long int _558;
  vector(2) long long int _559;
  vector(2) long long int _560;
  vector(2) long long int _568;
  vector(2) long long int _569;
  vector(2) long long int _570;
  vector(2) long long int _572;
  vector(2) long long int _573;
  vector(2) long long int _574;
  vector(2) long long int _582;
  vector(2) long long int _583;
  vector(2) long long int _584;
  vector(2) long long int _586;
  vector(2) long long int _587;
  vector(2) long long int _588;
  vector(2) long long int _596;
  vector(2) long long int _597;
  vector(2) long long int _598;
  vector(2) long long int _600;
  vector(2) long long int _601;
  __m128i _602;
  vector(2) long long int _608;
  vector(2) long long int _610;
  vector(2) long long int _612;
  vector(2) long long int _614;
  vector(2) long long int _617;
  vector(2) long long int _619;
  vector(2) long long int _622;
  vector(2) long long int _624;
  vector(2) long long int _627;
  vector(2) long long int _629;
  vector(2) long long int _632;
  vector(2) long long int _634;
  vector(2) long long int _637;
  vector(2) long long int _639;
  vector(2) long long int _642;
  vector(2) long long int _644;
  vector(4) int _649;
  vector(4) int _652;
  vector(4) int _655;
  vector(4) int _658;
  vector(8) short int _689;
  vector(8) short int _690;
  vector(8) short int _691;
  vector(8) short int _692;
  vector(2) long long int _693;
  vector(2) long long int _695;
  vector(2) long long int _697;
  vector(2) long long int _699;
  vector(2) long long int _701;
  vector(2) long long int _703;
  vector(2) long long int _705;
  vector(2) long long int _707;
  vector(2) long long int _709;
  vector(4) int _715;
  vector(2) long long int _716;
  vector(2) long long int _717;
  vector(2) long long int _718;
  vector(4) int _724;
  vector(2) long long int _725;
  vector(2) long long int _726;
  vector(2) long long int _727;
  int _736;
  int _737;
  int _738;
  int _739;
  int _740;
  int _741;
  int _742;
  int _743;
  vector(8) short int _752;
  vector(2) long long int _753;
  vector(2) long long int _754;
  vector(2) long long int _755;
  int _764;
  int _765;
  int _766;
  int _767;
  int _768;
  int _769;
  int _770;
  int _771;
  vector(8) short int _780;
  vector(2) long long int _781;
  vector(2) long long int _782;
  vector(2) long long int _783;
  int _792;
  int _793;
  int _794;
  int _795;
  int _796;
  int _797;
  int _798;
  int _799;
  vector(8) short int _808;
  vector(2) long long int _809;
  vector(2) long long int _810;
  vector(2) long long int _811;
  int _820;
  int _821;
  int _822;
  int _823;
  int _824;
  int _825;
  int _826;
  int _827;
  vector(8) short int _836;
  vector(2) long long int _837;
  vector(2) long long int _838;
  vector(2) long long int _839;
  int _848;
  int _849;
  int _850;
  int _851;
  int _852;
  int _853;
  int _854;
  int _855;
  vector(8) short int _864;
  vector(2) long long int _865;
  vector(2) long long int _866;
  vector(2) long long int _867;
  int _876;
  int _877;
  int _878;
  int _879;
  int _880;
  int _881;
  int _882;
  int _883;
  vector(8) short int _892;
  vector(2) long long int _893;
  vector(2) long long int _894;
  vector(2) long long int _895;
  int _904;
  int _905;
  int _906;
  int _907;
  int _908;
  int _909;
  int _910;
  int _911;
  vector(8) short int _920;
  vector(2) long long int _921;
  vector(2) long long int _922;
  vector(2) long long int _923;
  int _932;
  int _933;
  int _934;
  int _935;
  int _936;
  int _937;
  int _938;
  int _939;
  vector(8) short int _948;
  vector(2) long long int _949;
  vector(2) long long int _950;
  vector(2) long long int _951;
  vector(8) short int _954;
  vector(8) short int _955;
  vector(8) short int _956;
  vector(8) short int _957;
  vector(2) long long int _958;
  vector(8) short int _961;
  vector(8) short int _962;
  vector(4) int _963;
  vector(4) int _964;
  vector(2) long long int _965;
  vector(8) short int _968;
  vector(8) short int _969;
  vector(4) int _970;
  vector(4) int _971;
  vector(2) long long int _972;
  vector(8) short int _975;
  vector(8) short int _976;
  vector(4) int _977;
  vector(4) int _978;
  vector(2) long long int _979;
  vector(8) short int _982;
  vector(8) short int _983;
  vector(4) int _984;
  vector(4) int _985;
  vector(2) long long int _986;
  vector(8) short int _989;
  vector(8) short int _990;
  vector(8) short int _991;
  vector(8) short int _992;
  vector(2) long long int _993;
  vector(2) long long int _994;
  vector(8) short unsigned int _997;
  vector(8) short unsigned int _998;
  vector(8) short unsigned int _999;
  vector(2) long long int _1000;
  vector(8) short unsigned int _1003;
  vector(8) short unsigned int _1004;
  vector(8) short unsigned int _1005;
  vector(2) long long int _1006;
  vector(4) int _1009;
  vector(4) int _1010;
  vector(4) int _1011;
  vector(2) long long int _1012;
  vector(8) short int _1015;
  vector(8) short int _1016;
  vector(8) short int _1017;
  vector(8) short int _1018;
  vector(2) long long int _1019;
  vector(2) long long int _1020;
  vector(4) int _1023;
  vector(4) int _1024;
  vector(4) int _1025;
  vector(2) long long int _1026;
  vector(8) short int _1029;
  vector(8) short int _1030;
  vector(8) short int _1031;
  vector(8) short int _1032;
  vector(2) long long int _1033;
  vector(2) long long int _1034;
  vector(4) int _1037;
  vector(4) int _1038;
  vector(4) int _1039;
  vector(2) long long int _1040;
  vector(8) short int _1043;
  vector(8) short int _1044;
  vector(8) short int _1045;
  vector(8) short int _1046;
  vector(2) long long int _1047;
  vector(2) long long int _1048;
  vector(4) int _1051;
  vector(4) int _1052;
  vector(4) int _1053;
  vector(2) long long int _1054;
  vector(8) short int _1057;
  vector(8) short int _1058;
  vector(8) short int _1059;
  vector(8) short int _1060;
  vector(2) long long int _1061;
  vector(4) unsigned int _1064;
  vector(4) unsigned int _1065;
  vector(4) unsigned int _1066;
  vector(2) long long int _1067;
  vector(4) unsigned int _1070;
  vector(4) unsigned int _1071;
  vector(4) unsigned int _1072;
  vector(2) long long int _1073;
  vector(4) unsigned int _1076;
  vector(4) unsigned int _1077;
  vector(4) unsigned int _1078;
  vector(2) long long int _1079;
  vector(4) unsigned int _1082;
  vector(4) unsigned int _1083;
  vector(4) unsigned int _1084;
  vector(2) long long int _1085;
  vector(4) unsigned int _1088;
  vector(4) unsigned int _1089;
  vector(4) unsigned int _1090;
  vector(2) long long int _1091;
  vector(4) unsigned int _1094;
  vector(4) unsigned int _1095;
  vector(4) unsigned int _1096;
  vector(2) long long int _1097;
  vector(4) unsigned int _1100;
  vector(4) unsigned int _1101;
  vector(4) unsigned int _1102;
  vector(2) long long int _1103;
  vector(4) unsigned int _1106;
  vector(4) unsigned int _1107;
  vector(4) unsigned int _1108;
  vector(2) long long int _1109;
  vector(8) short int _1112;
  vector(8) short int _1113;
  vector(8) short int _1114;
  vector(8) short int _1115;
  vector(2) long long int _1116;
  vector(8) short int _1119;
  vector(8) short int _1120;
  vector(4) int _1121;
  vector(4) int _1122;
  vector(2) long long int _1123;
  vector(8) short int _1126;
  vector(8) short int _1127;
  vector(4) int _1128;
  vector(4) int _1129;
  vector(2) long long int _1130;
  vector(8) short int _1133;
  vector(8) short int _1134;
  vector(4) int _1135;
  vector(4) int _1136;
  vector(2) long long int _1137;
  vector(8) short int _1140;
  vector(8) short int _1141;
  vector(4) int _1142;
  vector(4) int _1143;
  vector(2) long long int _1144;
  vector(8) short int _1147;
  vector(8) short int _1148;
  vector(8) short int _1149;
  vector(8) short int _1150;
  vector(2) long long int _1151;
  vector(8) short int _1154;
  vector(8) short int _1155;
  vector(8) short int _1156;
  vector(8) short int _1157;
  vector(2) long long int _1158;
  vector(8) short int _1161;
  vector(8) short int _1162;
  vector(4) int _1163;
  vector(4) int _1164;
  vector(2) long long int _1165;
  vector(8) short int _1168;
  vector(8) short int _1169;
  vector(4) int _1170;
  vector(4) int _1171;
  vector(2) long long int _1172;
  vector(8) short int _1175;
  vector(8) short int _1176;
  vector(4) int _1177;
  vector(4) int _1178;
  vector(2) long long int _1179;
  vector(8) short int _1182;
  vector(8) short int _1183;
  vector(4) int _1184;
  vector(4) int _1185;
  vector(2) long long int _1186;
  vector(8) short int _1189;
  vector(8) short int _1190;
  vector(8) short int _1191;
  vector(8) short int _1192;
  vector(2) long long int _1193;
  vector(8) short unsigned int _1196;
  vector(8) short unsigned int _1197;
  vector(8) short unsigned int _1198;
  vector(2) long long int _1199;
  vector(8) short unsigned int _1202;
  vector(8) short unsigned int _1203;
  vector(8) short unsigned int _1204;
  vector(2) long long int _1205;
  vector(8) short int _1208;
  vector(8) short int _1209;
  vector(8) short int _1210;
  vector(8) short int _1211;
  vector(2) long long int _1212;
  vector(8) short int _1215;
  vector(8) short int _1216;
  vector(4) int _1217;
  vector(4) int _1218;
  vector(2) long long int _1219;
  vector(8) short int _1222;
  vector(8) short int _1223;
  vector(4) int _1224;
  vector(4) int _1225;
  vector(2) long long int _1226;
  vector(8) short int _1229;
  vector(8) short int _1230;
  vector(4) int _1231;
  vector(4) int _1232;
  vector(2) long long int _1233;
  vector(8) short int _1236;
  vector(8) short int _1237;
  vector(4) int _1238;
  vector(4) int _1239;
  vector(2) long long int _1240;
  vector(4) int _1243;
  vector(4) int _1244;
  vector(4) int _1245;
  vector(2) long long int _1246;
  vector(4) unsigned int _1249;
  vector(4) unsigned int _1250;
  vector(4) unsigned int _1251;
  vector(2) long long int _1252;
  vector(4) unsigned int _1255;
  vector(4) unsigned int _1256;
  vector(4) unsigned int _1257;
  vector(2) long long int _1258;
  vector(4) unsigned int _1261;
  vector(4) unsigned int _1262;
  vector(4) unsigned int _1263;
  vector(2) long long int _1264;
  vector(4) unsigned int _1267;
  vector(4) unsigned int _1268;
  vector(4) unsigned int _1269;
  vector(2) long long int _1270;
  vector(4) unsigned int _1273;
  vector(4) unsigned int _1274;
  vector(4) unsigned int _1275;
  vector(2) long long int _1276;
  vector(4) unsigned int _1279;
  vector(4) unsigned int _1280;
  vector(4) unsigned int _1281;
  vector(2) long long int _1282;
  vector(4) unsigned int _1285;
  vector(4) unsigned int _1286;
  vector(4) unsigned int _1287;
  vector(2) long long int _1288;
  vector(4) unsigned int _1291;
  vector(4) unsigned int _1292;
  vector(4) unsigned int _1293;
  vector(2) long long int _1294;
  vector(4) unsigned int _1297;
  vector(4) unsigned int _1298;
  vector(4) unsigned int _1299;
  vector(2) long long int _1300;
  vector(4) unsigned int _1303;
  vector(4) unsigned int _1304;
  vector(4) unsigned int _1305;
  vector(2) long long int _1306;
  vector(4) unsigned int _1309;
  vector(4) unsigned int _1310;
  vector(4) unsigned int _1311;
  vector(2) long long int _1312;
  vector(4) unsigned int _1315;
  vector(4) unsigned int _1316;
  vector(4) unsigned int _1317;
  vector(2) long long int _1318;
  vector(4) unsigned int _1321;
  vector(4) unsigned int _1322;
  vector(4) unsigned int _1323;
  vector(2) long long int _1324;
  vector(4) unsigned int _1327;
  vector(4) unsigned int _1328;
  vector(4) unsigned int _1329;
  vector(2) long long int _1330;
  vector(4) int _1333;
  vector(4) int _1334;
  vector(4) int _1335;
  vector(2) long long int _1336;
  vector(4) int _1339;
  vector(4) int _1340;
  vector(8) short int _1341;
  vector(8) short int _1342;
  vector(2) long long int _1343;
  vector(4) int _1346;
  vector(4) int _1347;
  vector(4) int _1348;
  vector(2) long long int _1349;
  vector(4) int _1352;
  vector(4) int _1353;
  vector(4) int _1354;
  vector(2) long long int _1355;
  vector(4) int _1358;
  vector(4) int _1359;
  vector(8) short int _1360;
  vector(8) short int _1361;
  vector(2) long long int _1362;
  vector(4) int _1365;
  vector(4) int _1366;
  vector(4) int _1367;
  vector(2) long long int _1368;
  vector(4) unsigned int _1371;
  vector(4) unsigned int _1372;
  vector(4) unsigned int _1373;
  vector(2) long long int _1374;
  vector(4) unsigned int _1377;
  vector(4) unsigned int _1378;
  vector(4) unsigned int _1379;
  vector(2) long long int _1380;
  vector(4) unsigned int _1383;
  vector(4) unsigned int _1384;
  vector(4) unsigned int _1385;
  vector(2) long long int _1386;
  vector(4) unsigned int _1389;
  vector(4) unsigned int _1390;
  vector(4) unsigned int _1391;
  vector(2) long long int _1392;
  vector(4) unsigned int _1395;
  vector(4) unsigned int _1396;
  vector(4) unsigned int _1397;
  vector(2) long long int _1398;
  vector(4) unsigned int _1401;
  vector(4) unsigned int _1402;
  vector(4) unsigned int _1403;
  vector(2) long long int _1404;
  vector(4) int _1407;
  vector(4) int _1408;
  vector(4) int _1409;
  vector(2) long long int _1410;
  vector(4) int _1413;
  vector(4) int _1414;
  vector(8) short int _1415;
  vector(8) short int _1416;
  vector(2) long long int _1417;
  vector(4) int _1420;
  vector(4) int _1421;
  vector(4) int _1422;
  vector(2) long long int _1423;
  vector(4) int _1426;
  vector(4) int _1427;
  vector(4) int _1428;
  vector(2) long long int _1429;
  vector(4) int _1432;
  vector(4) int _1433;
  vector(8) short int _1434;
  vector(8) short int _1435;
  vector(2) long long int _1436;
  vector(4) int _1439;
  vector(4) int _1440;
  vector(4) int _1441;
  vector(2) long long int _1442;
  vector(4) unsigned int _1445;
  vector(4) unsigned int _1446;
  vector(4) unsigned int _1447;
  vector(2) long long int _1448;
  vector(4) unsigned int _1451;
  vector(4) unsigned int _1452;
  vector(4) unsigned int _1453;
  vector(2) long long int _1454;
  vector(4) unsigned int _1457;
  vector(4) unsigned int _1458;
  vector(4) unsigned int _1459;
  vector(2) long long int _1460;
  vector(4) unsigned int _1463;
  vector(4) unsigned int _1464;
  vector(4) unsigned int _1465;
  vector(2) long long int _1466;
  vector(4) unsigned int _1469;
  vector(4) unsigned int _1470;
  vector(4) unsigned int _1471;
  vector(2) long long int _1472;
  vector(4) unsigned int _1475;
  vector(4) unsigned int _1476;
  vector(4) unsigned int _1477;
  vector(2) long long int _1478;
  vector(4) int _1481;
  vector(4) int _1482;
  vector(4) int _1483;
  vector(2) long long int _1484;
  vector(4) int _1487;
  vector(4) int _1488;
  vector(8) short int _1489;
  vector(8) short int _1490;
  vector(2) long long int _1491;
  vector(4) int _1494;
  vector(4) int _1495;
  vector(4) int _1496;
  vector(2) long long int _1497;
  vector(4) int _1500;
  vector(4) int _1501;
  vector(4) int _1502;
  vector(2) long long int _1503;
  vector(4) int _1506;
  vector(4) int _1507;
  vector(8) short int _1508;
  vector(8) short int _1509;
  vector(2) long long int _1510;
  vector(4) int _1513;
  vector(4) int _1514;
  vector(4) int _1515;
  vector(2) long long int _1516;
  vector(4) unsigned int _1519;
  vector(4) unsigned int _1520;
  vector(4) unsigned int _1521;
  vector(2) long long int _1522;
  vector(4) unsigned int _1525;
  vector(4) unsigned int _1526;
  vector(4) unsigned int _1527;
  vector(2) long long int _1528;
  vector(4) unsigned int _1531;
  vector(4) unsigned int _1532;
  vector(4) unsigned int _1533;
  vector(2) long long int _1534;
  vector(4) unsigned int _1537;
  vector(4) unsigned int _1538;
  vector(4) unsigned int _1539;
  vector(2) long long int _1540;
  vector(4) unsigned int _1543;
  vector(4) unsigned int _1544;
  vector(4) unsigned int _1545;
  vector(2) long long int _1546;
  vector(4) unsigned int _1549;
  vector(4) unsigned int _1550;
  vector(4) unsigned int _1551;
  vector(2) long long int _1552;
  vector(4) int _1555;
  vector(4) int _1556;
  vector(4) int _1557;
  vector(2) long long int _1558;
  vector(4) int _1561;
  vector(4) int _1562;
  vector(8) short int _1563;
  vector(8) short int _1564;
  vector(2) long long int _1565;
  vector(4) int _1568;
  vector(4) int _1569;
  vector(4) int _1570;
  vector(2) long long int _1571;
  vector(4) int _1574;
  vector(4) int _1575;
  vector(4) int _1576;
  vector(2) long long int _1577;
  vector(4) int _1580;
  vector(4) int _1581;
  vector(8) short int _1582;
  vector(8) short int _1583;
  vector(2) long long int _1584;
  vector(8) short int _1587;
  vector(8) short int _1588;
  vector(8) short int _1589;
  vector(8) short int _1590;
  vector(2) long long int _1591;
  vector(8) short int _1594;
  vector(8) short int _1595;
  vector(8) short int _1596;
  vector(8) short int _1597;
  vector(2) long long int _1598;
  vector(8) short int _1601;
  vector(8) short int _1602;
  vector(8) short int _1603;
  vector(8) short int _1604;
  vector(2) long long int _1605;
  vector(8) short int _1608;
  vector(8) short int _1609;
  vector(8) short int _1610;
  vector(8) short int _1611;
  vector(2) long long int _1612;
  vector(8) short int _1615;
  vector(8) short int _1616;
  vector(8) short int _1617;
  vector(8) short int _1618;
  vector(2) long long int _1619;
  vector(8) short int _1622;
  vector(8) short int _1623;
  vector(8) short int _1624;
  vector(8) short int _1625;
  vector(2) long long int _1626;
  vector(8) short int _1629;
  vector(8) short int _1630;
  vector(8) short int _1631;
  vector(8) short int _1632;
  vector(2) long long int _1633;
  vector(8) short int _1636;
  vector(8) short int _1637;
  vector(8) short int _1638;
  vector(8) short int _1639;
  vector(2) long long int _1640;
  vector(8) short int _1643;
  vector(8) short int _1644;
  vector(8) short int _1645;
  vector(8) short int _1646;
  vector(2) long long int _1647;
  vector(8) short int _1650;
  vector(8) short int _1651;
  vector(8) short int _1652;
  vector(8) short int _1653;
  vector(2) long long int _1654;
  vector(8) short int _1657;
  vector(8) short int _1658;
  vector(8) short int _1659;
  vector(8) short int _1660;
  vector(2) long long int _1661;
  vector(8) short int _1664;
  vector(8) short int _1665;
  vector(8) short int _1666;
  vector(8) short int _1667;
  vector(2) long long int _1668;
  vector(8) short int _1671;
  vector(8) short int _1672;
  vector(8) short int _1673;
  vector(8) short int _1674;
  vector(2) long long int _1675;
  vector(8) short int _1678;
  vector(8) short int _1679;
  vector(8) short int _1680;
  vector(8) short int _1681;
  vector(2) long long int _1682;
  vector(8) short int _1685;
  vector(8) short int _1686;
  vector(8) short int _1687;
  vector(8) short int _1688;
  vector(2) long long int _1689;
  vector(8) short int _1692;
  vector(8) short int _1693;
  vector(8) short int _1694;
  vector(8) short int _1695;
  vector(2) long long int _1696;
  vector(8) short int _1699;
  vector(8) short int _1700;
  vector(8) short int _1701;
  vector(8) short int _1702;
  vector(2) long long int _1703;
  vector(8) short int _1706;
  vector(8) short int _1707;
  vector(8) short int _1708;
  vector(8) short int _1709;
  vector(2) long long int _1710;
  vector(8) short int _1713;
  vector(8) short int _1714;
  vector(8) short int _1715;
  vector(8) short int _1716;
  vector(2) long long int _1717;
  vector(8) short int _1720;
  vector(8) short int _1721;
  vector(8) short int _1722;
  vector(8) short int _1723;
  vector(2) long long int _1724;
  vector(8) short int _1727;
  vector(8) short int _1728;
  vector(8) short int _1729;
  vector(8) short int _1730;
  vector(2) long long int _1731;
  vector(8) short int _1734;
  vector(8) short int _1735;
  vector(8) short int _1736;
  vector(8) short int _1737;
  vector(2) long long int _1738;
  vector(8) short int _1741;
  vector(8) short int _1742;
  vector(8) short int _1743;
  vector(8) short int _1744;
  vector(2) long long int _1745;
  vector(8) short int _1748;
  vector(8) short int _1749;
  vector(8) short int _1750;
  vector(8) short int _1751;
  vector(2) long long int _1752;
  vector(8) short int _1755;
  vector(8) short int _1756;
  vector(8) short int _1757;
  vector(8) short int _1758;
  vector(2) long long int _1759;
  vector(8) short int _1762;
  vector(8) short int _1763;
  vector(8) short int _1764;
  vector(8) short int _1765;
  vector(2) long long int _1766;
  vector(8) short int _1769;
  vector(8) short int _1770;
  vector(4) int _1771;
  vector(4) int _1772;
  vector(2) long long int _1773;
  vector(8) short int _1776;
  vector(8) short int _1777;
  vector(4) int _1778;
  vector(4) int _1779;
  vector(2) long long int _1780;
  vector(8) short int _1783;
  vector(8) short int _1784;
  vector(4) int _1785;
  vector(4) int _1786;
  vector(2) long long int _1787;
  vector(8) short int _1790;
  vector(8) short int _1791;
  vector(4) int _1792;
  vector(4) int _1793;
  vector(2) long long int _1794;
  vector(8) short int _1797;
  vector(8) short int _1798;
  vector(8) short int _1799;
  vector(8) short int _1800;
  vector(2) long long int _1801;
  vector(2) long long int _1802;
  vector(8) short unsigned int _1805;
  vector(8) short unsigned int _1806;
  vector(8) short unsigned int _1807;
  vector(2) long long int _1808;
  vector(8) short unsigned int _1811;
  vector(8) short unsigned int _1812;
  vector(8) short unsigned int _1813;
  vector(2) long long int _1814;
  vector(4) int _1817;
  vector(4) int _1818;
  vector(4) int _1819;
  vector(2) long long int _1820;
  vector(8) short int _1823;
  vector(8) short int _1824;
  vector(8) short int _1825;
  vector(8) short int _1826;
  vector(2) long long int _1827;
  vector(2) long long int _1828;
  vector(4) int _1831;
  vector(4) int _1832;
  vector(4) int _1833;
  vector(2) long long int _1834;
  vector(8) short int _1837;
  vector(8) short int _1838;
  vector(8) short int _1839;
  vector(8) short int _1840;
  vector(2) long long int _1841;
  vector(2) long long int _1842;
  vector(4) int _1845;
  vector(4) int _1846;
  vector(4) int _1847;
  vector(2) long long int _1848;
  vector(8) short int _1851;
  vector(8) short int _1852;
  vector(8) short int _1853;
  vector(8) short int _1854;
  vector(2) long long int _1855;
  vector(2) long long int _1856;
  vector(4) int _1859;
  vector(4) int _1860;
  vector(4) int _1861;
  vector(2) long long int _1862;
  vector(8) short int _1865;
  vector(8) short int _1866;
  vector(8) short int _1867;
  vector(8) short int _1868;
  vector(2) long long int _1869;
  vector(4) unsigned int _1872;
  vector(4) unsigned int _1873;
  vector(4) unsigned int _1874;
  vector(2) long long int _1875;
  vector(4) unsigned int _1878;
  vector(4) unsigned int _1879;
  vector(4) unsigned int _1880;
  vector(2) long long int _1881;
  vector(4) unsigned int _1884;
  vector(4) unsigned int _1885;
  vector(4) unsigned int _1886;
  vector(2) long long int _1887;
  vector(4) unsigned int _1890;
  vector(4) unsigned int _1891;
  vector(4) unsigned int _1892;
  vector(2) long long int _1893;
  vector(4) unsigned int _1896;
  vector(4) unsigned int _1897;
  vector(4) unsigned int _1898;
  vector(2) long long int _1899;
  vector(4) unsigned int _1902;
  vector(4) unsigned int _1903;
  vector(4) unsigned int _1904;
  vector(2) long long int _1905;
  vector(4) unsigned int _1908;
  vector(4) unsigned int _1909;
  vector(4) unsigned int _1910;
  vector(2) long long int _1911;
  vector(4) unsigned int _1914;
  vector(4) unsigned int _1915;
  vector(4) unsigned int _1916;
  vector(2) long long int _1917;
  vector(8) short int _1920;
  vector(8) short int _1921;
  vector(8) short int _1922;
  vector(8) short int _1923;
  vector(2) long long int _1924;
  vector(8) short int _1927;
  vector(8) short int _1928;
  vector(4) int _1929;
  vector(4) int _1930;
  vector(2) long long int _1931;
  vector(8) short int _1934;
  vector(8) short int _1935;
  vector(4) int _1936;
  vector(4) int _1937;
  vector(2) long long int _1938;
  vector(8) short int _1941;
  vector(8) short int _1942;
  vector(4) int _1943;
  vector(4) int _1944;
  vector(2) long long int _1945;
  vector(8) short int _1948;
  vector(8) short int _1949;
  vector(4) int _1950;
  vector(4) int _1951;
  vector(2) long long int _1952;
  vector(8) short int _1955;
  vector(8) short int _1956;
  vector(8) short int _1957;
  vector(8) short int _1958;
  vector(2) long long int _1959;
  vector(8) short int _1962;
  vector(8) short int _1963;
  vector(8) short int _1964;
  vector(8) short int _1965;
  vector(2) long long int _1966;
  vector(8) short int _1969;
  vector(8) short int _1970;
  vector(4) int _1971;
  vector(4) int _1972;
  vector(2) long long int _1973;
  vector(8) short int _1976;
  vector(8) short int _1977;
  vector(4) int _1978;
  vector(4) int _1979;
  vector(2) long long int _1980;
  vector(8) short int _1983;
  vector(8) short int _1984;
  vector(4) int _1985;
  vector(4) int _1986;
  vector(2) long long int _1987;
  vector(8) short int _1990;
  vector(8) short int _1991;
  vector(4) int _1992;
  vector(4) int _1993;
  vector(2) long long int _1994;
  vector(8) short int _1997;
  vector(8) short int _1998;
  vector(8) short int _1999;
  vector(8) short int _2000;
  vector(2) long long int _2001;
  vector(8) short unsigned int _2004;
  vector(8) short unsigned int _2005;
  vector(8) short unsigned int _2006;
  vector(2) long long int _2007;
  vector(8) short unsigned int _2010;
  vector(8) short unsigned int _2011;
  vector(8) short unsigned int _2012;
  vector(2) long long int _2013;
  vector(8) short int _2016;
  vector(8) short int _2017;
  vector(8) short int _2018;
  vector(8) short int _2019;
  vector(2) long long int _2020;
  vector(8) short int _2023;
  vector(8) short int _2024;
  vector(4) int _2025;
  vector(4) int _2026;
  vector(2) long long int _2027;
  vector(8) short int _2030;
  vector(8) short int _2031;
  vector(4) int _2032;
  vector(4) int _2033;
  vector(2) long long int _2034;
  vector(8) short int _2037;
  vector(8) short int _2038;
  vector(4) int _2039;
  vector(4) int _2040;
  vector(2) long long int _2041;
  vector(8) short int _2044;
  vector(8) short int _2045;
  vector(4) int _2046;
  vector(4) int _2047;
  vector(2) long long int _2048;
  vector(4) int _2051;
  vector(4) int _2052;
  vector(4) int _2053;
  vector(2) long long int _2054;
  vector(4) unsigned int _2057;
  vector(4) unsigned int _2058;
  vector(4) unsigned int _2059;
  vector(2) long long int _2060;
  vector(4) unsigned int _2063;
  vector(4) unsigned int _2064;
  vector(4) unsigned int _2065;
  vector(2) long long int _2066;
  vector(4) unsigned int _2069;
  vector(4) unsigned int _2070;
  vector(4) unsigned int _2071;
  vector(2) long long int _2072;
  vector(4) unsigned int _2075;
  vector(4) unsigned int _2076;
  vector(4) unsigned int _2077;
  vector(2) long long int _2078;
  vector(4) unsigned int _2081;
  vector(4) unsigned int _2082;
  vector(4) unsigned int _2083;
  vector(2) long long int _2084;
  vector(4) unsigned int _2087;
  vector(4) unsigned int _2088;
  vector(4) unsigned int _2089;
  vector(2) long long int _2090;
  vector(4) unsigned int _2093;
  vector(4) unsigned int _2094;
  vector(4) unsigned int _2095;
  vector(2) long long int _2096;
  vector(4) unsigned int _2099;
  vector(4) unsigned int _2100;
  vector(4) unsigned int _2101;
  vector(2) long long int _2102;
  vector(4) unsigned int _2105;
  vector(4) unsigned int _2106;
  vector(4) unsigned int _2107;
  vector(2) long long int _2108;
  vector(4) unsigned int _2111;
  vector(4) unsigned int _2112;
  vector(4) unsigned int _2113;
  vector(2) long long int _2114;
  vector(4) unsigned int _2117;
  vector(4) unsigned int _2118;
  vector(4) unsigned int _2119;
  vector(2) long long int _2120;
  vector(4) unsigned int _2123;
  vector(4) unsigned int _2124;
  vector(4) unsigned int _2125;
  vector(2) long long int _2126;
  vector(4) unsigned int _2129;
  vector(4) unsigned int _2130;
  vector(4) unsigned int _2131;
  vector(2) long long int _2132;
  vector(4) unsigned int _2135;
  vector(4) unsigned int _2136;
  vector(4) unsigned int _2137;
  vector(2) long long int _2138;
  vector(4) int _2141;
  vector(4) int _2142;
  vector(4) int _2143;
  vector(2) long long int _2144;
  vector(4) int _2147;
  vector(4) int _2148;
  vector(8) short int _2149;
  vector(8) short int _2150;
  vector(2) long long int _2151;
  vector(4) int _2154;
  vector(4) int _2155;
  vector(4) int _2156;
  vector(2) long long int _2157;
  vector(4) int _2160;
  vector(4) int _2161;
  vector(4) int _2162;
  vector(2) long long int _2163;
  vector(4) int _2166;
  vector(4) int _2167;
  vector(8) short int _2168;
  vector(8) short int _2169;
  vector(2) long long int _2170;
  vector(4) int _2173;
  vector(4) int _2174;
  vector(4) int _2175;
  vector(2) long long int _2176;
  vector(4) unsigned int _2179;
  vector(4) unsigned int _2180;
  vector(4) unsigned int _2181;
  vector(2) long long int _2182;
  vector(4) unsigned int _2185;
  vector(4) unsigned int _2186;
  vector(4) unsigned int _2187;
  vector(2) long long int _2188;
  vector(4) unsigned int _2191;
  vector(4) unsigned int _2192;
  vector(4) unsigned int _2193;
  vector(2) long long int _2194;
  vector(4) unsigned int _2197;
  vector(4) unsigned int _2198;
  vector(4) unsigned int _2199;
  vector(2) long long int _2200;
  vector(4) unsigned int _2203;
  vector(4) unsigned int _2204;
  vector(4) unsigned int _2205;
  vector(2) long long int _2206;
  vector(4) unsigned int _2209;
  vector(4) unsigned int _2210;
  vector(4) unsigned int _2211;
  vector(2) long long int _2212;
  vector(4) int _2215;
  vector(4) int _2216;
  vector(4) int _2217;
  vector(2) long long int _2218;
  vector(4) int _2221;
  vector(4) int _2222;
  vector(8) short int _2223;
  vector(8) short int _2224;
  vector(2) long long int _2225;
  vector(4) int _2228;
  vector(4) int _2229;
  vector(4) int _2230;
  vector(2) long long int _2231;
  vector(4) int _2234;
  vector(4) int _2235;
  vector(4) int _2236;
  vector(2) long long int _2237;
  vector(4) int _2240;
  vector(4) int _2241;
  vector(8) short int _2242;
  vector(8) short int _2243;
  vector(2) long long int _2244;
  vector(4) int _2247;
  vector(4) int _2248;
  vector(4) int _2249;
  vector(2) long long int _2250;
  vector(4) unsigned int _2253;
  vector(4) unsigned int _2254;
  vector(4) unsigned int _2255;
  vector(2) long long int _2256;
  vector(4) unsigned int _2259;
  vector(4) unsigned int _2260;
  vector(4) unsigned int _2261;
  vector(2) long long int _2262;
  vector(4) unsigned int _2265;
  vector(4) unsigned int _2266;
  vector(4) unsigned int _2267;
  vector(2) long long int _2268;
  vector(4) unsigned int _2271;
  vector(4) unsigned int _2272;
  vector(4) unsigned int _2273;
  vector(2) long long int _2274;
  vector(4) unsigned int _2277;
  vector(4) unsigned int _2278;
  vector(4) unsigned int _2279;
  vector(2) long long int _2280;
  vector(4) unsigned int _2283;
  vector(4) unsigned int _2284;
  vector(4) unsigned int _2285;
  vector(2) long long int _2286;
  vector(4) int _2289;
  vector(4) int _2290;
  vector(4) int _2291;
  vector(2) long long int _2292;
  vector(4) int _2295;
  vector(4) int _2296;
  vector(8) short int _2297;
  vector(8) short int _2298;
  vector(2) long long int _2299;
  vector(4) int _2302;
  vector(4) int _2303;
  vector(4) int _2304;
  vector(2) long long int _2305;
  vector(4) int _2308;
  vector(4) int _2309;
  vector(4) int _2310;
  vector(2) long long int _2311;
  vector(4) int _2314;
  vector(4) int _2315;
  vector(8) short int _2316;
  vector(8) short int _2317;
  vector(2) long long int _2318;
  vector(4) int _2321;
  vector(4) int _2322;
  vector(4) int _2323;
  vector(2) long long int _2324;
  vector(4) unsigned int _2327;
  vector(4) unsigned int _2328;
  vector(4) unsigned int _2329;
  vector(2) long long int _2330;
  vector(4) unsigned int _2333;
  vector(4) unsigned int _2334;
  vector(4) unsigned int _2335;
  vector(2) long long int _2336;
  vector(4) unsigned int _2339;
  vector(4) unsigned int _2340;
  vector(4) unsigned int _2341;
  vector(2) long long int _2342;
  vector(4) unsigned int _2345;
  vector(4) unsigned int _2346;
  vector(4) unsigned int _2347;
  vector(2) long long int _2348;
  vector(4) unsigned int _2351;
  vector(4) unsigned int _2352;
  vector(4) unsigned int _2353;
  vector(2) long long int _2354;
  vector(4) unsigned int _2357;
  vector(4) unsigned int _2358;
  vector(4) unsigned int _2359;
  vector(2) long long int _2360;
  vector(4) int _2363;
  vector(4) int _2364;
  vector(4) int _2365;
  vector(2) long long int _2366;
  vector(4) int _2369;
  vector(4) int _2370;
  vector(8) short int _2371;
  vector(8) short int _2372;
  vector(2) long long int _2373;
  vector(4) int _2376;
  vector(4) int _2377;
  vector(4) int _2378;
  vector(2) long long int _2379;
  vector(4) int _2382;
  vector(4) int _2383;
  vector(4) int _2384;
  vector(2) long long int _2385;
  vector(4) int _2388;
  vector(4) int _2389;
  vector(8) short int _2390;
  vector(8) short int _2391;
  vector(2) long long int _2392;
  vector(8) short int _2395;
  vector(8) short int _2396;
  vector(16) char _2397;
  vector(16) char _2398;
  vector(2) long long int _2399;
  vector(8) short int _2402;
  vector(8) short int _2403;
  vector(16) char _2404;
  vector(16) char _2405;
  vector(2) long long int _2406;
  vector(8) short int _2409;
  vector(8) short int _2410;
  vector(16) char _2411;
  vector(16) char _2412;
  vector(2) long long int _2413;
  vector(8) short int _2416;
  vector(8) short int _2417;
  vector(16) char _2418;
  vector(16) char _2419;
  vector(2) long long int _2420;
  vector(16) char _2423;
  vector(16) char _2424;
  vector(16) char _2425;
  vector(16) char _2426;
  vector(2) long long int _2427;
  vector(16) char _2430;
  vector(16) char _2431;
  vector(16) char _2432;
  vector(16) char _2433;
  vector(2) long long int _2434;
  vector(16) char _2437;
  vector(16) char _2438;
  vector(16) char _2439;
  vector(16) char _2440;
  vector(2) long long int _2441;
  vector(16) char _2444;
  vector(16) char _2445;
  vector(16) char _2446;
  vector(16) char _2447;
  vector(2) long long int _2448;
  vector(16) char _2451;
  vector(16) char _2452;
  vector(16) char _2453;
  vector(16) char _2454;
  vector(2) long long int _2455;
  vector(16) char _2458;
  vector(16) char _2459;
  vector(16) char _2460;
  vector(16) char _2461;
  vector(2) long long int _2462;
  vector(16) char _2465;
  vector(16) char _2466;
  vector(16) char _2467;
  vector(16) char _2468;
  vector(2) long long int _2469;
  vector(16) char _2472;
  vector(16) char _2473;
  vector(16) char _2474;
  vector(16) char _2475;
  vector(2) long long int _2476;
  vector(16) char _2479;
  vector(16) char _2480;
  vector(16) char _2481;
  vector(16) char _2482;
  vector(2) long long int _2483;
  vector(16) char _2486;
  vector(16) char _2487;
  vector(16) char _2488;
  vector(16) char _2489;
  vector(2) long long int _2490;
  vector(16) char _2493;
  vector(16) char _2494;
  vector(16) char _2495;
  vector(16) char _2496;
  vector(2) long long int _2497;
  vector(16) char _2500;
  vector(16) char _2501;
  vector(16) char _2502;
  vector(16) char _2503;
  vector(2) long long int _2504;
  long long int _2507;
  vector(2) int _2508;
  long long int _2511;
  vector(2) int _2512;
  long long int _2515;
  vector(2) int _2516;
  long long int _2519;
  vector(2) int _2520;
  long long int _2523;
  vector(2) int _2524;
  long long int _2527;
  vector(2) int _2528;
  long long int _2531;
  vector(2) int _2532;
  long long int _2535;
  vector(2) int _2536;

  <bb 2> :
  __q0_924 = 2217;
  __q1_925 = -5350;
  __q2_926 = 2217;
  __q3_927 = -5350;
  __q4_928 = 2217;
  __q5_929 = -5350;
  __q6_930 = 2217;
  __q7_931 = -5350;
  _932 = (int) __q0_924;
  _933 = (int) __q1_925;
  _934 = (int) __q2_926;
  _935 = (int) __q3_927;
  _936 = (int) __q4_928;
  _937 = (int) __q5_929;
  _938 = (int) __q6_930;
  _939 = (int) __q7_931;
  __q7_940 = (short int) _939;
  __q6_941 = (short int) _938;
  __q5_942 = (short int) _937;
  __q4_943 = (short int) _936;
  __q3_944 = (short int) _935;
  __q2_945 = (short int) _934;
  __q1_946 = (short int) _933;
  __q0_947 = (short int) _932;
  _948 = {__q0_947, __q1_946, __q2_945, __q3_944, __q4_943, __q5_942, __q6_941, __q7_940};
  _949 = VIEW_CONVERT_EXPR<__m128i>(_948);

  <bb 3> :
<L31>:
  _950 = _949;
  _951 = _950;

  <bb 4> :
<L32>:
  _2537 = _951;
  rot0_0_249 = _2537;
  __q0_896 = 5352;
  __q1_897 = 2217;
  __q2_898 = 5352;
  __q3_899 = 2217;
  __q4_900 = 5352;
  __q5_901 = 2217;
  __q6_902 = 5352;
  __q7_903 = 2217;
  _904 = (int) __q0_896;
  _905 = (int) __q1_897;
  _906 = (int) __q2_898;
  _907 = (int) __q3_899;
  _908 = (int) __q4_900;
  _909 = (int) __q5_901;
  _910 = (int) __q6_902;
  _911 = (int) __q7_903;
  __q7_912 = (short int) _911;
  __q6_913 = (short int) _910;
  __q5_914 = (short int) _909;
  __q4_915 = (short int) _908;
  __q3_916 = (short int) _907;
  __q2_917 = (short int) _906;
  __q1_918 = (short int) _905;
  __q0_919 = (short int) _904;
  _920 = {__q0_919, __q1_918, __q2_917, __q3_916, __q4_915, __q5_914, __q6_913, __q7_912};
  _921 = VIEW_CONVERT_EXPR<__m128i>(_920);

  <bb 5> :
<L29>:
  _922 = _921;
  _923 = _922;

  <bb 6> :
<L30>:
  _2538 = _923;
  rot0_1_250 = _2538;
  __q0_868 = 1131;
  __q1_869 = 4816;
  __q2_870 = 1131;
  __q3_871 = 4816;
  __q4_872 = 1131;
  __q5_873 = 4816;
  __q6_874 = 1131;
  __q7_875 = 4816;
  _876 = (int) __q0_868;
  _877 = (int) __q1_869;
  _878 = (int) __q2_870;
  _879 = (int) __q3_871;
  _880 = (int) __q4_872;
  _881 = (int) __q5_873;
  _882 = (int) __q6_874;
  _883 = (int) __q7_875;
  __q7_884 = (short int) _883;
  __q6_885 = (short int) _882;
  __q5_886 = (short int) _881;
  __q4_887 = (short int) _880;
  __q3_888 = (short int) _879;
  __q2_889 = (short int) _878;
  __q1_890 = (short int) _877;
  __q0_891 = (short int) _876;
  _892 = {__q0_891, __q1_890, __q2_889, __q3_888, __q4_887, __q5_886, __q6_885, __q7_884};
  _893 = VIEW_CONVERT_EXPR<__m128i>(_892);

  <bb 7> :
<L27>:
  _894 = _893;
  _895 = _894;

  <bb 8> :
<L28>:
  _2539 = _895;
  rot1_0_251 = _2539;
  __q0_840 = 4816;
  __q1_841 = -5681;
  __q2_842 = 4816;
  __q3_843 = -5681;
  __q4_844 = 4816;
  __q5_845 = -5681;
  __q6_846 = 4816;
  __q7_847 = -5681;
  _848 = (int) __q0_840;
  _849 = (int) __q1_841;
  _850 = (int) __q2_842;
  _851 = (int) __q3_843;
  _852 = (int) __q4_844;
  _853 = (int) __q5_845;
  _854 = (int) __q6_846;
  _855 = (int) __q7_847;
  __q7_856 = (short int) _855;
  __q6_857 = (short int) _854;
  __q5_858 = (short int) _853;
  __q4_859 = (short int) _852;
  __q3_860 = (short int) _851;
  __q2_861 = (short int) _850;
  __q1_862 = (short int) _849;
  __q0_863 = (short int) _848;
  _864 = {__q0_863, __q1_862, __q2_861, __q3_860, __q4_859, __q5_858, __q6_857, __q7_856};
  _865 = VIEW_CONVERT_EXPR<__m128i>(_864);

  <bb 9> :
<L25>:
  _866 = _865;
  _867 = _866;

  <bb 10> :
<L26>:
  _2540 = _867;
  rot1_1_252 = _2540;
  __q0_812 = -6811;
  __q1_813 = -8034;
  __q2_814 = -6811;
  __q3_815 = -8034;
  __q4_816 = -6811;
  __q5_817 = -8034;
  __q6_818 = -6811;
  __q7_819 = -8034;
  _820 = (int) __q0_812;
  _821 = (int) __q1_813;
  _822 = (int) __q2_814;
  _823 = (int) __q3_815;
  _824 = (int) __q4_816;
  _825 = (int) __q5_817;
  _826 = (int) __q6_818;
  _827 = (int) __q7_819;
  __q7_828 = (short int) _827;
  __q6_829 = (short int) _826;
  __q5_830 = (short int) _825;
  __q4_831 = (short int) _824;
  __q3_832 = (short int) _823;
  __q2_833 = (short int) _822;
  __q1_834 = (short int) _821;
  __q0_835 = (short int) _820;
  _836 = {__q0_835, __q1_834, __q2_833, __q3_832, __q4_831, __q5_830, __q6_829, __q7_828};
  _837 = VIEW_CONVERT_EXPR<__m128i>(_836);

  <bb 11> :
<L23>:
  _838 = _837;
  _839 = _838;

  <bb 12> :
<L24>:
  _2541 = _839;
  rot2_0_253 = _2541;
  __q0_784 = -8034;
  __q1_785 = 4552;
  __q2_786 = -8034;
  __q3_787 = 4552;
  __q4_788 = -8034;
  __q5_789 = 4552;
  __q6_790 = -8034;
  __q7_791 = 4552;
  _792 = (int) __q0_784;
  _793 = (int) __q1_785;
  _794 = (int) __q2_786;
  _795 = (int) __q3_787;
  _796 = (int) __q4_788;
  _797 = (int) __q5_789;
  _798 = (int) __q6_790;
  _799 = (int) __q7_791;
  __q7_800 = (short int) _799;
  __q6_801 = (short int) _798;
  __q5_802 = (short int) _797;
  __q4_803 = (short int) _796;
  __q3_804 = (short int) _795;
  __q2_805 = (short int) _794;
  __q1_806 = (short int) _793;
  __q0_807 = (short int) _792;
  _808 = {__q0_807, __q1_806, __q2_805, __q3_804, __q4_803, __q5_802, __q6_801, __q7_800};
  _809 = VIEW_CONVERT_EXPR<__m128i>(_808);

  <bb 13> :
<L21>:
  _810 = _809;
  _811 = _810;

  <bb 14> :
<L22>:
  _2542 = _811;
  rot2_1_254 = _2542;
  __q0_756 = 6813;
  __q1_757 = -1597;
  __q2_758 = 6813;
  __q3_759 = -1597;
  __q4_760 = 6813;
  __q5_761 = -1597;
  __q6_762 = 6813;
  __q7_763 = -1597;
  _764 = (int) __q0_756;
  _765 = (int) __q1_757;
  _766 = (int) __q2_758;
  _767 = (int) __q3_759;
  _768 = (int) __q4_760;
  _769 = (int) __q5_761;
  _770 = (int) __q6_762;
  _771 = (int) __q7_763;
  __q7_772 = (short int) _771;
  __q6_773 = (short int) _770;
  __q5_774 = (short int) _769;
  __q4_775 = (short int) _768;
  __q3_776 = (short int) _767;
  __q2_777 = (short int) _766;
  __q1_778 = (short int) _765;
  __q0_779 = (short int) _764;
  _780 = {__q0_779, __q1_778, __q2_777, __q3_776, __q4_775, __q5_774, __q6_773, __q7_772};
  _781 = VIEW_CONVERT_EXPR<__m128i>(_780);

  <bb 15> :
<L19>:
  _782 = _781;
  _783 = _782;

  <bb 16> :
<L20>:
  _2543 = _783;
  rot3_0_255 = _2543;
  __q0_728 = -1597;
  __q1_729 = 4552;
  __q2_730 = -1597;
  __q3_731 = 4552;
  __q4_732 = -1597;
  __q5_733 = 4552;
  __q6_734 = -1597;
  __q7_735 = 4552;
  _736 = (int) __q0_728;
  _737 = (int) __q1_729;
  _738 = (int) __q2_730;
  _739 = (int) __q3_731;
  _740 = (int) __q4_732;
  _741 = (int) __q5_733;
  _742 = (int) __q6_734;
  _743 = (int) __q7_735;
  __q7_744 = (short int) _743;
  __q6_745 = (short int) _742;
  __q5_746 = (short int) _741;
  __q4_747 = (short int) _740;
  __q3_748 = (short int) _739;
  __q2_749 = (short int) _738;
  __q1_750 = (short int) _737;
  __q0_751 = (short int) _736;
  _752 = {__q0_751, __q1_750, __q2_749, __q3_748, __q4_747, __q5_746, __q6_745, __q7_744};
  _753 = VIEW_CONVERT_EXPR<__m128i>(_752);

  <bb 17> :
<L17>:
  _754 = _753;
  _755 = _754;

  <bb 18> :
<L18>:
  _2544 = _755;
  rot3_1_256 = _2544;
  __A_719 = 512;
  __q3_720 = __A_719;
  __q2_721 = __A_719;
  __q1_722 = __A_719;
  __q0_723 = __A_719;
  _724 = {__q0_723, __q1_722, __q2_721, __q3_720};
  _725 = VIEW_CONVERT_EXPR<__m128i>(_724);

  <bb 19> :
<L15>:
  _726 = _725;
  _727 = _726;

  <bb 20> :
<L16>:
  _2545 = _727;
  bias_0_257 = _2545;
  __A_710 = 16842752;
  __q3_711 = __A_710;
  __q2_712 = __A_710;
  __q1_713 = __A_710;
  __q0_714 = __A_710;
  _715 = {__q0_714, __q1_713, __q2_712, __q3_711};
  _716 = VIEW_CONVERT_EXPR<__m128i>(_715);

  <bb 21> :
<L13>:
  _717 = _716;
  _718 = _717;

  <bb 22> :
<L14>:
  _2546 = _718;
  bias_1_258 = _2546;
  __P_708 = data_259(D);
  _709 = *__P_708;

  <bb 23> :
<L12>:
  _2547 = _709;
  row0_260 = _2547;
  _1 = data_259(D) + 16;
  __P_706 = _1;
  _707 = *__P_706;

  <bb 24> :
<L11>:
  _2548 = _707;
  _2 = _2548;
  row1 = _2;
  _3 = data_259(D) + 32;
  __P_704 = _3;
  _705 = *__P_704;

  <bb 25> :
<L10>:
  _2549 = _705;
  _4 = _2549;
  row2 = _4;
  _5 = data_259(D) + 48;
  __P_702 = _5;
  _703 = *__P_702;

  <bb 26> :
<L9>:
  _2550 = _703;
  _6 = _2550;
  row3 = _6;
  _7 = data_259(D) + 64;
  __P_700 = _7;
  _701 = *__P_700;

  <bb 27> :
<L8>:
  _2551 = _701;
  row4_264 = _2551;
  _8 = data_259(D) + 80;
  __P_698 = _8;
  _699 = *__P_698;

  <bb 28> :
<L7>:
  _2552 = _699;
  _9 = _2552;
  row5 = _9;
  _10 = data_259(D) + 96;
  __P_696 = _10;
  _697 = *__P_696;

  <bb 29> :
<L6>:
  _2553 = _697;
  _11 = _2553;
  row6 = _11;
  _12 = data_259(D) + 112;
  __P_694 = _12;
  _695 = *__P_694;

  <bb 30> :
<L5>:
  _2554 = _695;
  _13 = _2554;
  row7 = _13;
  row6.122_14 = row6;
  row2.123_15 = row2;
  __A_687 = row2.123_15;
  __B_688 = row6.122_14;
  _689 = VIEW_CONVERT_EXPR<__v8hi>(__B_688);
  _690 = VIEW_CONVERT_EXPR<__v8hi>(__A_687);
  _691 = __builtin_ia32_punpcklwd128 (_690, _689);
  _692 = _691;
  _693 = VIEW_CONVERT_EXPR<__m128i>(_692);

  <bb 31> :
<L4>:
  _2555 = _693;
  _268 = _2555;
  rot0_0lo_269 = _268;
  row6.124_16 = row6;
  row2.125_17 = row2;
  __A_952 = row2.125_17;
  __B_953 = row6.124_16;
  _954 = VIEW_CONVERT_EXPR<__v8hi>(__B_953);
  _955 = VIEW_CONVERT_EXPR<__v8hi>(__A_952);
  _956 = __builtin_ia32_punpckhwd128 (_955, _954);
  _957 = _956;
  _958 = VIEW_CONVERT_EXPR<__m128i>(_957);

  <bb 32> :
<L33>:
  _2556 = _958;
  _270 = _2556;
  rot0_0hi_271 = _270;
  __A_959 = rot0_0lo_269;
  __B_960 = rot0_0_249;
  _961 = VIEW_CONVERT_EXPR<__v8hi>(__B_960);
  _962 = VIEW_CONVERT_EXPR<__v8hi>(__A_959);
  _963 = __builtin_ia32_pmaddwd128 (_962, _961);
  _964 = _963;
  _965 = VIEW_CONVERT_EXPR<__m128i>(_964);

  <bb 33> :
<L34>:
  _2557 = _965;
  _272 = _2557;
  t2e_l_273 = _272;
  __A_966 = rot0_0hi_271;
  __B_967 = rot0_0_249;
  _968 = VIEW_CONVERT_EXPR<__v8hi>(__B_967);
  _969 = VIEW_CONVERT_EXPR<__v8hi>(__A_966);
  _970 = __builtin_ia32_pmaddwd128 (_969, _968);
  _971 = _970;
  _972 = VIEW_CONVERT_EXPR<__m128i>(_971);

  <bb 34> :
<L35>:
  _2558 = _972;
  _274 = _2558;
  t2e_h_275 = _274;
  __A_973 = rot0_0lo_269;
  __B_974 = rot0_1_250;
  _975 = VIEW_CONVERT_EXPR<__v8hi>(__B_974);
  _976 = VIEW_CONVERT_EXPR<__v8hi>(__A_973);
  _977 = __builtin_ia32_pmaddwd128 (_976, _975);
  _978 = _977;
  _979 = VIEW_CONVERT_EXPR<__m128i>(_978);

  <bb 35> :
<L36>:
  _2559 = _979;
  _276 = _2559;
  t3e_l_277 = _276;
  __A_980 = rot0_0hi_271;
  __B_981 = rot0_1_250;
  _982 = VIEW_CONVERT_EXPR<__v8hi>(__B_981);
  _983 = VIEW_CONVERT_EXPR<__v8hi>(__A_980);
  _984 = __builtin_ia32_pmaddwd128 (_983, _982);
  _985 = _984;
  _986 = VIEW_CONVERT_EXPR<__m128i>(_985);

  <bb 36> :
<L37>:
  _2560 = _986;
  _278 = _2560;
  t3e_h_279 = _278;
  __A_1001 = row0_260;
  __B_1002 = row4_264;
  _1003 = VIEW_CONVERT_EXPR<__v8hu>(__A_1001);
  _1004 = VIEW_CONVERT_EXPR<__v8hu>(__B_1002);
  _1005 = _1003 + _1004;
  _1006 = VIEW_CONVERT_EXPR<__m128i>(_1005);

  <bb 37> :
<L41>:
  _2561 = _1006;
  _18 = _2561;
  sum04 = _18;
  __A_995 = row0_260;
  __B_996 = row4_264;
  _997 = VIEW_CONVERT_EXPR<__v8hu>(__A_995);
  _998 = VIEW_CONVERT_EXPR<__v8hu>(__B_996);
  _999 = _997 - _998;
  _1000 = VIEW_CONVERT_EXPR<__m128i>(_999);

  <bb 38> :
<L40>:
  _2562 = _1000;
  _19 = _2562;
  dif04 = _19;
  sum04.126_20 = sum04;
  _994 = { 0, 0 };

  <bb 39> :
<L39>:
  _2563 = _994;
  _21 = _2563;
  __A_987 = _21;
  __B_988 = sum04.126_20;
  _989 = VIEW_CONVERT_EXPR<__v8hi>(__B_988);
  _990 = VIEW_CONVERT_EXPR<__v8hi>(__A_987);
  _991 = __builtin_ia32_punpcklwd128 (_990, _989);
  _992 = _991;
  _993 = VIEW_CONVERT_EXPR<__m128i>(_992);

  <bb 40> :
<L38>:
  _2564 = _993;
  _282 = _2564;
  _22 = _282;
  __A_1007 = _22;
  __B_1008 = 4;
  _1009 = VIEW_CONVERT_EXPR<__v4si>(__A_1007);
  _1010 = __builtin_ia32_psradi128 (_1009, __B_1008);
  _1011 = _1010;
  _1012 = VIEW_CONVERT_EXPR<__m128i>(_1011);

  <bb 41> :
<L42>:
  _2565 = _1012;
  _283 = _2565;
  t0e_l_284 = _283;
  sum04.127_23 = sum04;
  _1020 = { 0, 0 };

  <bb 42> :
<L44>:
  _2566 = _1020;
  _24 = _2566;
  __A_1013 = _24;
  __B_1014 = sum04.127_23;
  _1015 = VIEW_CONVERT_EXPR<__v8hi>(__B_1014);
  _1016 = VIEW_CONVERT_EXPR<__v8hi>(__A_1013);
  _1017 = __builtin_ia32_punpckhwd128 (_1016, _1015);
  _1018 = _1017;
  _1019 = VIEW_CONVERT_EXPR<__m128i>(_1018);

  <bb 43> :
<L43>:
  _2567 = _1019;
  _285 = _2567;
  _25 = _285;
  __A_1021 = _25;
  __B_1022 = 4;
  _1023 = VIEW_CONVERT_EXPR<__v4si>(__A_1021);
  _1024 = __builtin_ia32_psradi128 (_1023, __B_1022);
  _1025 = _1024;
  _1026 = VIEW_CONVERT_EXPR<__m128i>(_1025);

  <bb 44> :
<L45>:
  _2568 = _1026;
  _286 = _2568;
  t0e_h_287 = _286;
  dif04.128_26 = dif04;
  _1034 = { 0, 0 };

  <bb 45> :
<L47>:
  _2569 = _1034;
  _27 = _2569;
  __A_1027 = _27;
  __B_1028 = dif04.128_26;
  _1029 = VIEW_CONVERT_EXPR<__v8hi>(__B_1028);
  _1030 = VIEW_CONVERT_EXPR<__v8hi>(__A_1027);
  _1031 = __builtin_ia32_punpcklwd128 (_1030, _1029);
  _1032 = _1031;
  _1033 = VIEW_CONVERT_EXPR<__m128i>(_1032);

  <bb 46> :
<L46>:
  _2570 = _1033;
  _288 = _2570;
  _28 = _288;
  __A_1035 = _28;
  __B_1036 = 4;
  _1037 = VIEW_CONVERT_EXPR<__v4si>(__A_1035);
  _1038 = __builtin_ia32_psradi128 (_1037, __B_1036);
  _1039 = _1038;
  _1040 = VIEW_CONVERT_EXPR<__m128i>(_1039);

  <bb 47> :
<L48>:
  _2571 = _1040;
  _289 = _2571;
  t1e_l_290 = _289;
  dif04.129_29 = dif04;
  _1048 = { 0, 0 };

  <bb 48> :
<L50>:
  _2572 = _1048;
  _30 = _2572;
  __A_1041 = _30;
  __B_1042 = dif04.129_29;
  _1043 = VIEW_CONVERT_EXPR<__v8hi>(__B_1042);
  _1044 = VIEW_CONVERT_EXPR<__v8hi>(__A_1041);
  _1045 = __builtin_ia32_punpckhwd128 (_1044, _1043);
  _1046 = _1045;
  _1047 = VIEW_CONVERT_EXPR<__m128i>(_1046);

  <bb 49> :
<L49>:
  _2573 = _1047;
  _291 = _2573;
  _31 = _291;
  __A_1049 = _31;
  __B_1050 = 4;
  _1051 = VIEW_CONVERT_EXPR<__v4si>(__A_1049);
  _1052 = __builtin_ia32_psradi128 (_1051, __B_1050);
  _1053 = _1052;
  _1054 = VIEW_CONVERT_EXPR<__m128i>(_1053);

  <bb 50> :
<L51>:
  _2574 = _1054;
  _292 = _2574;
  t1e_h_293 = _292;
  __A_1104 = t0e_l_284;
  __B_1105 = t3e_l_277;
  _1106 = VIEW_CONVERT_EXPR<__v4su>(__A_1104);
  _1107 = VIEW_CONVERT_EXPR<__v4su>(__B_1105);
  _1108 = _1106 + _1107;
  _1109 = VIEW_CONVERT_EXPR<__m128i>(_1108);

  <bb 51> :
<L60>:
  _2575 = _1109;
  x0_l_294 = _2575;
  __A_1098 = t0e_h_287;
  __B_1099 = t3e_h_279;
  _1100 = VIEW_CONVERT_EXPR<__v4su>(__A_1098);
  _1101 = VIEW_CONVERT_EXPR<__v4su>(__B_1099);
  _1102 = _1100 + _1101;
  _1103 = VIEW_CONVERT_EXPR<__m128i>(_1102);

  <bb 52> :
<L59>:
  _2576 = _1103;
  x0_h_295 = _2576;
  __A_1092 = t0e_l_284;
  __B_1093 = t3e_l_277;
  _1094 = VIEW_CONVERT_EXPR<__v4su>(__A_1092);
  _1095 = VIEW_CONVERT_EXPR<__v4su>(__B_1093);
  _1096 = _1094 - _1095;
  _1097 = VIEW_CONVERT_EXPR<__m128i>(_1096);

  <bb 53> :
<L58>:
  _2577 = _1097;
  x3_l_296 = _2577;
  __A_1086 = t0e_h_287;
  __B_1087 = t3e_h_279;
  _1088 = VIEW_CONVERT_EXPR<__v4su>(__A_1086);
  _1089 = VIEW_CONVERT_EXPR<__v4su>(__B_1087);
  _1090 = _1088 - _1089;
  _1091 = VIEW_CONVERT_EXPR<__m128i>(_1090);

  <bb 54> :
<L57>:
  _2578 = _1091;
  x3_h_297 = _2578;
  __A_1080 = t1e_l_290;
  __B_1081 = t2e_l_273;
  _1082 = VIEW_CONVERT_EXPR<__v4su>(__A_1080);
  _1083 = VIEW_CONVERT_EXPR<__v4su>(__B_1081);
  _1084 = _1082 + _1083;
  _1085 = VIEW_CONVERT_EXPR<__m128i>(_1084);

  <bb 55> :
<L56>:
  _2579 = _1085;
  x1_l_298 = _2579;
  __A_1074 = t1e_h_293;
  __B_1075 = t2e_h_275;
  _1076 = VIEW_CONVERT_EXPR<__v4su>(__A_1074);
  _1077 = VIEW_CONVERT_EXPR<__v4su>(__B_1075);
  _1078 = _1076 + _1077;
  _1079 = VIEW_CONVERT_EXPR<__m128i>(_1078);

  <bb 56> :
<L55>:
  _2580 = _1079;
  x1_h_299 = _2580;
  __A_1068 = t1e_l_290;
  __B_1069 = t2e_l_273;
  _1070 = VIEW_CONVERT_EXPR<__v4su>(__A_1068);
  _1071 = VIEW_CONVERT_EXPR<__v4su>(__B_1069);
  _1072 = _1070 - _1071;
  _1073 = VIEW_CONVERT_EXPR<__m128i>(_1072);

  <bb 57> :
<L54>:
  _2581 = _1073;
  x2_l_300 = _2581;
  __A_1062 = t1e_h_293;
  __B_1063 = t2e_h_275;
  _1064 = VIEW_CONVERT_EXPR<__v4su>(__A_1062);
  _1065 = VIEW_CONVERT_EXPR<__v4su>(__B_1063);
  _1066 = _1064 - _1065;
  _1067 = VIEW_CONVERT_EXPR<__m128i>(_1066);

  <bb 58> :
<L53>:
  _2582 = _1067;
  x2_h_301 = _2582;
  row3.130_32 = row3;
  row7.131_33 = row7;
  __A_1055 = row7.131_33;
  __B_1056 = row3.130_32;
  _1057 = VIEW_CONVERT_EXPR<__v8hi>(__B_1056);
  _1058 = VIEW_CONVERT_EXPR<__v8hi>(__A_1055);
  _1059 = __builtin_ia32_punpcklwd128 (_1058, _1057);
  _1060 = _1059;
  _1061 = VIEW_CONVERT_EXPR<__m128i>(_1060);

  <bb 59> :
<L52>:
  _2583 = _1061;
  _302 = _2583;
  rot2_0lo_303 = _302;
  row3.132_34 = row3;
  row7.133_35 = row7;
  __A_1110 = row7.133_35;
  __B_1111 = row3.132_34;
  _1112 = VIEW_CONVERT_EXPR<__v8hi>(__B_1111);
  _1113 = VIEW_CONVERT_EXPR<__v8hi>(__A_1110);
  _1114 = __builtin_ia32_punpckhwd128 (_1113, _1112);
  _1115 = _1114;
  _1116 = VIEW_CONVERT_EXPR<__m128i>(_1115);

  <bb 60> :
<L61>:
  _2584 = _1116;
  _304 = _2584;
  rot2_0hi_305 = _304;
  __A_1117 = rot2_0lo_303;
  __B_1118 = rot2_0_253;
  _1119 = VIEW_CONVERT_EXPR<__v8hi>(__B_1118);
  _1120 = VIEW_CONVERT_EXPR<__v8hi>(__A_1117);
  _1121 = __builtin_ia32_pmaddwd128 (_1120, _1119);
  _1122 = _1121;
  _1123 = VIEW_CONVERT_EXPR<__m128i>(_1122);

  <bb 61> :
<L62>:
  _2585 = _1123;
  _306 = _2585;
  y0o_l_307 = _306;
  __A_1124 = rot2_0hi_305;
  __B_1125 = rot2_0_253;
  _1126 = VIEW_CONVERT_EXPR<__v8hi>(__B_1125);
  _1127 = VIEW_CONVERT_EXPR<__v8hi>(__A_1124);
  _1128 = __builtin_ia32_pmaddwd128 (_1127, _1126);
  _1129 = _1128;
  _1130 = VIEW_CONVERT_EXPR<__m128i>(_1129);

  <bb 62> :
<L63>:
  _2586 = _1130;
  _308 = _2586;
  y0o_h_309 = _308;
  __A_1131 = rot2_0lo_303;
  __B_1132 = rot2_1_254;
  _1133 = VIEW_CONVERT_EXPR<__v8hi>(__B_1132);
  _1134 = VIEW_CONVERT_EXPR<__v8hi>(__A_1131);
  _1135 = __builtin_ia32_pmaddwd128 (_1134, _1133);
  _1136 = _1135;
  _1137 = VIEW_CONVERT_EXPR<__m128i>(_1136);

  <bb 63> :
<L64>:
  _2587 = _1137;
  _310 = _2587;
  y2o_l_311 = _310;
  __A_1138 = rot2_0hi_305;
  __B_1139 = rot2_1_254;
  _1140 = VIEW_CONVERT_EXPR<__v8hi>(__B_1139);
  _1141 = VIEW_CONVERT_EXPR<__v8hi>(__A_1138);
  _1142 = __builtin_ia32_pmaddwd128 (_1141, _1140);
  _1143 = _1142;
  _1144 = VIEW_CONVERT_EXPR<__m128i>(_1143);

  <bb 64> :
<L65>:
  _2588 = _1144;
  _312 = _2588;
  y2o_h_313 = _312;
  row1.134_36 = row1;
  row5.135_37 = row5;
  __A_1145 = row5.135_37;
  __B_1146 = row1.134_36;
  _1147 = VIEW_CONVERT_EXPR<__v8hi>(__B_1146);
  _1148 = VIEW_CONVERT_EXPR<__v8hi>(__A_1145);
  _1149 = __builtin_ia32_punpcklwd128 (_1148, _1147);
  _1150 = _1149;
  _1151 = VIEW_CONVERT_EXPR<__m128i>(_1150);

  <bb 65> :
<L66>:
  _2589 = _1151;
  _314 = _2589;
  rot3_0lo_315 = _314;
  row1.136_38 = row1;
  row5.137_39 = row5;
  __A_1152 = row5.137_39;
  __B_1153 = row1.136_38;
  _1154 = VIEW_CONVERT_EXPR<__v8hi>(__B_1153);
  _1155 = VIEW_CONVERT_EXPR<__v8hi>(__A_1152);
  _1156 = __builtin_ia32_punpckhwd128 (_1155, _1154);
  _1157 = _1156;
  _1158 = VIEW_CONVERT_EXPR<__m128i>(_1157);

  <bb 66> :
<L67>:
  _2590 = _1158;
  _316 = _2590;
  rot3_0hi_317 = _316;
  __A_1159 = rot3_0lo_315;
  __B_1160 = rot3_0_255;
  _1161 = VIEW_CONVERT_EXPR<__v8hi>(__B_1160);
  _1162 = VIEW_CONVERT_EXPR<__v8hi>(__A_1159);
  _1163 = __builtin_ia32_pmaddwd128 (_1162, _1161);
  _1164 = _1163;
  _1165 = VIEW_CONVERT_EXPR<__m128i>(_1164);

  <bb 67> :
<L68>:
  _2591 = _1165;
  _318 = _2591;
  y1o_l_319 = _318;
  __A_1166 = rot3_0hi_317;
  __B_1167 = rot3_0_255;
  _1168 = VIEW_CONVERT_EXPR<__v8hi>(__B_1167);
  _1169 = VIEW_CONVERT_EXPR<__v8hi>(__A_1166);
  _1170 = __builtin_ia32_pmaddwd128 (_1169, _1168);
  _1171 = _1170;
  _1172 = VIEW_CONVERT_EXPR<__m128i>(_1171);

  <bb 68> :
<L69>:
  _2592 = _1172;
  _320 = _2592;
  y1o_h_321 = _320;
  __A_1173 = rot3_0lo_315;
  __B_1174 = rot3_1_256;
  _1175 = VIEW_CONVERT_EXPR<__v8hi>(__B_1174);
  _1176 = VIEW_CONVERT_EXPR<__v8hi>(__A_1173);
  _1177 = __builtin_ia32_pmaddwd128 (_1176, _1175);
  _1178 = _1177;
  _1179 = VIEW_CONVERT_EXPR<__m128i>(_1178);

  <bb 69> :
<L70>:
  _2593 = _1179;
  _322 = _2593;
  y3o_l_323 = _322;
  __A_1180 = rot3_0hi_317;
  __B_1181 = rot3_1_256;
  _1182 = VIEW_CONVERT_EXPR<__v8hi>(__B_1181);
  _1183 = VIEW_CONVERT_EXPR<__v8hi>(__A_1180);
  _1184 = __builtin_ia32_pmaddwd128 (_1183, _1182);
  _1185 = _1184;
  _1186 = VIEW_CONVERT_EXPR<__m128i>(_1185);

  <bb 70> :
<L71>:
  _2594 = _1186;
  _324 = _2594;
  y3o_h_325 = _324;
  row7.138_40 = row7;
  row1.139_41 = row1;
  __A_1200 = row1.139_41;
  __B_1201 = row7.138_40;
  _1202 = VIEW_CONVERT_EXPR<__v8hu>(__A_1200);
  _1203 = VIEW_CONVERT_EXPR<__v8hu>(__B_1201);
  _1204 = _1202 + _1203;
  _1205 = VIEW_CONVERT_EXPR<__m128i>(_1204);

  <bb 71> :
<L74>:
  _2595 = _1205;
  _42 = _2595;
  sum17 = _42;
  row5.140_43 = row5;
  row3.141_44 = row3;
  __A_1194 = row3.141_44;
  __B_1195 = row5.140_43;
  _1196 = VIEW_CONVERT_EXPR<__v8hu>(__A_1194);
  _1197 = VIEW_CONVERT_EXPR<__v8hu>(__B_1195);
  _1198 = _1196 + _1197;
  _1199 = VIEW_CONVERT_EXPR<__m128i>(_1198);

  <bb 72> :
<L73>:
  _2596 = _1199;
  _45 = _2596;
  sum35 = _45;
  sum35.142_46 = sum35;
  sum17.143_47 = sum17;
  __A_1187 = sum17.143_47;
  __B_1188 = sum35.142_46;
  _1189 = VIEW_CONVERT_EXPR<__v8hi>(__B_1188);
  _1190 = VIEW_CONVERT_EXPR<__v8hi>(__A_1187);
  _1191 = __builtin_ia32_punpcklwd128 (_1190, _1189);
  _1192 = _1191;
  _1193 = VIEW_CONVERT_EXPR<__m128i>(_1192);

  <bb 73> :
<L72>:
  _2597 = _1193;
  _328 = _2597;
  rot1_0lo_329 = _328;
  sum35.144_48 = sum35;
  sum17.145_49 = sum17;
  __A_1206 = sum17.145_49;
  __B_1207 = sum35.144_48;
  _1208 = VIEW_CONVERT_EXPR<__v8hi>(__B_1207);
  _1209 = VIEW_CONVERT_EXPR<__v8hi>(__A_1206);
  _1210 = __builtin_ia32_punpckhwd128 (_1209, _1208);
  _1211 = _1210;
  _1212 = VIEW_CONVERT_EXPR<__m128i>(_1211);

  <bb 74> :
<L75>:
  _2598 = _1212;
  _330 = _2598;
  rot1_0hi_331 = _330;
  __A_1213 = rot1_0lo_329;
  __B_1214 = rot1_0_251;
  _1215 = VIEW_CONVERT_EXPR<__v8hi>(__B_1214);
  _1216 = VIEW_CONVERT_EXPR<__v8hi>(__A_1213);
  _1217 = __builtin_ia32_pmaddwd128 (_1216, _1215);
  _1218 = _1217;
  _1219 = VIEW_CONVERT_EXPR<__m128i>(_1218);

  <bb 75> :
<L76>:
  _2599 = _1219;
  _332 = _2599;
  y4o_l_333 = _332;
  __A_1220 = rot1_0hi_331;
  __B_1221 = rot1_0_251;
  _1222 = VIEW_CONVERT_EXPR<__v8hi>(__B_1221);
  _1223 = VIEW_CONVERT_EXPR<__v8hi>(__A_1220);
  _1224 = __builtin_ia32_pmaddwd128 (_1223, _1222);
  _1225 = _1224;
  _1226 = VIEW_CONVERT_EXPR<__m128i>(_1225);

  <bb 76> :
<L77>:
  _2600 = _1226;
  _334 = _2600;
  y4o_h_335 = _334;
  __A_1227 = rot1_0lo_329;
  __B_1228 = rot1_1_252;
  _1229 = VIEW_CONVERT_EXPR<__v8hi>(__B_1228);
  _1230 = VIEW_CONVERT_EXPR<__v8hi>(__A_1227);
  _1231 = __builtin_ia32_pmaddwd128 (_1230, _1229);
  _1232 = _1231;
  _1233 = VIEW_CONVERT_EXPR<__m128i>(_1232);

  <bb 77> :
<L78>:
  _2601 = _1233;
  _336 = _2601;
  y5o_l_337 = _336;
  __A_1234 = rot1_0hi_331;
  __B_1235 = rot1_1_252;
  _1236 = VIEW_CONVERT_EXPR<__v8hi>(__B_1235);
  _1237 = VIEW_CONVERT_EXPR<__v8hi>(__A_1234);
  _1238 = __builtin_ia32_pmaddwd128 (_1237, _1236);
  _1239 = _1238;
  _1240 = VIEW_CONVERT_EXPR<__m128i>(_1239);

  <bb 78> :
<L79>:
  _2602 = _1240;
  _338 = _2602;
  y5o_h_339 = _338;
  __A_1325 = y0o_l_307;
  __B_1326 = y4o_l_333;
  _1327 = VIEW_CONVERT_EXPR<__v4su>(__A_1325);
  _1328 = VIEW_CONVERT_EXPR<__v4su>(__B_1326);
  _1329 = _1327 + _1328;
  _1330 = VIEW_CONVERT_EXPR<__m128i>(_1329);

  <bb 79> :
<L94>:
  _2603 = _1330;
  x4_l_340 = _2603;
  __A_1319 = y0o_h_309;
  __B_1320 = y4o_h_335;
  _1321 = VIEW_CONVERT_EXPR<__v4su>(__A_1319);
  _1322 = VIEW_CONVERT_EXPR<__v4su>(__B_1320);
  _1323 = _1321 + _1322;
  _1324 = VIEW_CONVERT_EXPR<__m128i>(_1323);

  <bb 80> :
<L93>:
  _2604 = _1324;
  x4_h_341 = _2604;
  __A_1313 = y1o_l_319;
  __B_1314 = y5o_l_337;
  _1315 = VIEW_CONVERT_EXPR<__v4su>(__A_1313);
  _1316 = VIEW_CONVERT_EXPR<__v4su>(__B_1314);
  _1317 = _1315 + _1316;
  _1318 = VIEW_CONVERT_EXPR<__m128i>(_1317);

  <bb 81> :
<L92>:
  _2605 = _1318;
  x5_l_342 = _2605;
  __A_1307 = y1o_h_321;
  __B_1308 = y5o_h_339;
  _1309 = VIEW_CONVERT_EXPR<__v4su>(__A_1307);
  _1310 = VIEW_CONVERT_EXPR<__v4su>(__B_1308);
  _1311 = _1309 + _1310;
  _1312 = VIEW_CONVERT_EXPR<__m128i>(_1311);

  <bb 82> :
<L91>:
  _2606 = _1312;
  x5_h_343 = _2606;
  __A_1301 = y2o_l_311;
  __B_1302 = y5o_l_337;
  _1303 = VIEW_CONVERT_EXPR<__v4su>(__A_1301);
  _1304 = VIEW_CONVERT_EXPR<__v4su>(__B_1302);
  _1305 = _1303 + _1304;
  _1306 = VIEW_CONVERT_EXPR<__m128i>(_1305);

  <bb 83> :
<L90>:
  _2607 = _1306;
  x6_l_344 = _2607;
  __A_1295 = y2o_h_313;
  __B_1296 = y5o_h_339;
  _1297 = VIEW_CONVERT_EXPR<__v4su>(__A_1295);
  _1298 = VIEW_CONVERT_EXPR<__v4su>(__B_1296);
  _1299 = _1297 + _1298;
  _1300 = VIEW_CONVERT_EXPR<__m128i>(_1299);

  <bb 84> :
<L89>:
  _2608 = _1300;
  x6_h_345 = _2608;
  __A_1289 = y3o_l_323;
  __B_1290 = y4o_l_333;
  _1291 = VIEW_CONVERT_EXPR<__v4su>(__A_1289);
  _1292 = VIEW_CONVERT_EXPR<__v4su>(__B_1290);
  _1293 = _1291 + _1292;
  _1294 = VIEW_CONVERT_EXPR<__m128i>(_1293);

  <bb 85> :
<L88>:
  _2609 = _1294;
  x7_l_346 = _2609;
  __A_1283 = y3o_h_325;
  __B_1284 = y4o_h_335;
  _1285 = VIEW_CONVERT_EXPR<__v4su>(__A_1283);
  _1286 = VIEW_CONVERT_EXPR<__v4su>(__B_1284);
  _1287 = _1285 + _1286;
  _1288 = VIEW_CONVERT_EXPR<__m128i>(_1287);

  <bb 86> :
<L87>:
  _2610 = _1288;
  x7_h_347 = _2610;
  __A_1277 = x0_l_294;
  __B_1278 = bias_0_257;
  _1279 = VIEW_CONVERT_EXPR<__v4su>(__A_1277);
  _1280 = VIEW_CONVERT_EXPR<__v4su>(__B_1278);
  _1281 = _1279 + _1280;
  _1282 = VIEW_CONVERT_EXPR<__m128i>(_1281);

  <bb 87> :
<L86>:
  _2611 = _1282;
  abiased_l_348 = _2611;
  __A_1271 = x0_h_295;
  __B_1272 = bias_0_257;
  _1273 = VIEW_CONVERT_EXPR<__v4su>(__A_1271);
  _1274 = VIEW_CONVERT_EXPR<__v4su>(__B_1272);
  _1275 = _1273 + _1274;
  _1276 = VIEW_CONVERT_EXPR<__m128i>(_1275);

  <bb 88> :
<L85>:
  _2612 = _1276;
  abiased_h_349 = _2612;
  __A_1265 = abiased_l_348;
  __B_1266 = x7_l_346;
  _1267 = VIEW_CONVERT_EXPR<__v4su>(__A_1265);
  _1268 = VIEW_CONVERT_EXPR<__v4su>(__B_1266);
  _1269 = _1267 + _1268;
  _1270 = VIEW_CONVERT_EXPR<__m128i>(_1269);

  <bb 89> :
<L84>:
  _2613 = _1270;
  sum_l_350 = _2613;
  __A_1259 = abiased_h_349;
  __B_1260 = x7_h_347;
  _1261 = VIEW_CONVERT_EXPR<__v4su>(__A_1259);
  _1262 = VIEW_CONVERT_EXPR<__v4su>(__B_1260);
  _1263 = _1261 + _1262;
  _1264 = VIEW_CONVERT_EXPR<__m128i>(_1263);

  <bb 90> :
<L83>:
  _2614 = _1264;
  sum_h_351 = _2614;
  __A_1253 = abiased_l_348;
  __B_1254 = x7_l_346;
  _1255 = VIEW_CONVERT_EXPR<__v4su>(__A_1253);
  _1256 = VIEW_CONVERT_EXPR<__v4su>(__B_1254);
  _1257 = _1255 - _1256;
  _1258 = VIEW_CONVERT_EXPR<__m128i>(_1257);

  <bb 91> :
<L82>:
  _2615 = _1258;
  dif_l_352 = _2615;
  __A_1247 = abiased_h_349;
  __B_1248 = x7_h_347;
  _1249 = VIEW_CONVERT_EXPR<__v4su>(__A_1247);
  _1250 = VIEW_CONVERT_EXPR<__v4su>(__B_1248);
  _1251 = _1249 - _1250;
  _1252 = VIEW_CONVERT_EXPR<__m128i>(_1251);

  <bb 92> :
<L81>:
  _2616 = _1252;
  dif_h_353 = _2616;
  __A_1241 = sum_h_351;
  __B_1242 = 10;
  _1243 = VIEW_CONVERT_EXPR<__v4si>(__A_1241);
  _1244 = __builtin_ia32_psradi128 (_1243, __B_1242);
  _1245 = _1244;
  _1246 = VIEW_CONVERT_EXPR<__m128i>(_1245);

  <bb 93> :
<L80>:
  _2617 = _1246;
  _354 = _2617;
  _50 = _354;
  __A_1331 = sum_l_350;
  __B_1332 = 10;
  _1333 = VIEW_CONVERT_EXPR<__v4si>(__A_1331);
  _1334 = __builtin_ia32_psradi128 (_1333, __B_1332);
  _1335 = _1334;
  _1336 = VIEW_CONVERT_EXPR<__m128i>(_1335);

  <bb 94> :
<L95>:
  _2618 = _1336;
  _355 = _2618;
  _51 = _355;
  __A_1337 = _51;
  __B_1338 = _50;
  _1339 = VIEW_CONVERT_EXPR<__v4si>(__B_1338);
  _1340 = VIEW_CONVERT_EXPR<__v4si>(__A_1337);
  _1341 = __builtin_ia32_packssdw128 (_1340, _1339);
  _1342 = _1341;
  _1343 = VIEW_CONVERT_EXPR<__m128i>(_1342);

  <bb 95> :
<L96>:
  _2619 = _1343;
  _356 = _2619;
  row0_357 = _356;
  __A_1344 = dif_h_353;
  __B_1345 = 10;
  _1346 = VIEW_CONVERT_EXPR<__v4si>(__A_1344);
  _1347 = __builtin_ia32_psradi128 (_1346, __B_1345);
  _1348 = _1347;
  _1349 = VIEW_CONVERT_EXPR<__m128i>(_1348);

  <bb 96> :
<L97>:
  _2620 = _1349;
  _358 = _2620;
  _52 = _358;
  __A_1350 = dif_l_352;
  __B_1351 = 10;
  _1352 = VIEW_CONVERT_EXPR<__v4si>(__A_1350);
  _1353 = __builtin_ia32_psradi128 (_1352, __B_1351);
  _1354 = _1353;
  _1355 = VIEW_CONVERT_EXPR<__m128i>(_1354);

  <bb 97> :
<L98>:
  _2621 = _1355;
  _359 = _2621;
  _53 = _359;
  __A_1356 = _53;
  __B_1357 = _52;
  _1358 = VIEW_CONVERT_EXPR<__v4si>(__B_1357);
  _1359 = VIEW_CONVERT_EXPR<__v4si>(__A_1356);
  _1360 = __builtin_ia32_packssdw128 (_1359, _1358);
  _1361 = _1360;
  _1362 = VIEW_CONVERT_EXPR<__m128i>(_1361);

  <bb 98> :
<L99>:
  _2622 = _1362;
  _360 = _2622;
  _54 = _360;
  row7 = _54;
  __A_1399 = x1_l_298;
  __B_1400 = bias_0_257;
  _1401 = VIEW_CONVERT_EXPR<__v4su>(__A_1399);
  _1402 = VIEW_CONVERT_EXPR<__v4su>(__B_1400);
  _1403 = _1401 + _1402;
  _1404 = VIEW_CONVERT_EXPR<__m128i>(_1403);

  <bb 99> :
<L106>:
  _2623 = _1404;
  abiased_l_362 = _2623;
  __A_1393 = x1_h_299;
  __B_1394 = bias_0_257;
  _1395 = VIEW_CONVERT_EXPR<__v4su>(__A_1393);
  _1396 = VIEW_CONVERT_EXPR<__v4su>(__B_1394);
  _1397 = _1395 + _1396;
  _1398 = VIEW_CONVERT_EXPR<__m128i>(_1397);

  <bb 100> :
<L105>:
  _2624 = _1398;
  abiased_h_363 = _2624;
  __A_1387 = abiased_l_362;
  __B_1388 = x6_l_344;
  _1389 = VIEW_CONVERT_EXPR<__v4su>(__A_1387);
  _1390 = VIEW_CONVERT_EXPR<__v4su>(__B_1388);
  _1391 = _1389 + _1390;
  _1392 = VIEW_CONVERT_EXPR<__m128i>(_1391);

  <bb 101> :
<L104>:
  _2625 = _1392;
  sum_l_364 = _2625;
  __A_1381 = abiased_h_363;
  __B_1382 = x6_h_345;
  _1383 = VIEW_CONVERT_EXPR<__v4su>(__A_1381);
  _1384 = VIEW_CONVERT_EXPR<__v4su>(__B_1382);
  _1385 = _1383 + _1384;
  _1386 = VIEW_CONVERT_EXPR<__m128i>(_1385);

  <bb 102> :
<L103>:
  _2626 = _1386;
  sum_h_365 = _2626;
  __A_1375 = abiased_l_362;
  __B_1376 = x6_l_344;
  _1377 = VIEW_CONVERT_EXPR<__v4su>(__A_1375);
  _1378 = VIEW_CONVERT_EXPR<__v4su>(__B_1376);
  _1379 = _1377 - _1378;
  _1380 = VIEW_CONVERT_EXPR<__m128i>(_1379);

  <bb 103> :
<L102>:
  _2627 = _1380;
  dif_l_366 = _2627;
  __A_1369 = abiased_h_363;
  __B_1370 = x6_h_345;
  _1371 = VIEW_CONVERT_EXPR<__v4su>(__A_1369);
  _1372 = VIEW_CONVERT_EXPR<__v4su>(__B_1370);
  _1373 = _1371 - _1372;
  _1374 = VIEW_CONVERT_EXPR<__m128i>(_1373);

  <bb 104> :
<L101>:
  _2628 = _1374;
  dif_h_367 = _2628;
  __A_1363 = sum_h_365;
  __B_1364 = 10;
  _1365 = VIEW_CONVERT_EXPR<__v4si>(__A_1363);
  _1366 = __builtin_ia32_psradi128 (_1365, __B_1364);
  _1367 = _1366;
  _1368 = VIEW_CONVERT_EXPR<__m128i>(_1367);

  <bb 105> :
<L100>:
  _2629 = _1368;
  _368 = _2629;
  _55 = _368;
  __A_1405 = sum_l_364;
  __B_1406 = 10;
  _1407 = VIEW_CONVERT_EXPR<__v4si>(__A_1405);
  _1408 = __builtin_ia32_psradi128 (_1407, __B_1406);
  _1409 = _1408;
  _1410 = VIEW_CONVERT_EXPR<__m128i>(_1409);

  <bb 106> :
<L107>:
  _2630 = _1410;
  _369 = _2630;
  _56 = _369;
  __A_1411 = _56;
  __B_1412 = _55;
  _1413 = VIEW_CONVERT_EXPR<__v4si>(__B_1412);
  _1414 = VIEW_CONVERT_EXPR<__v4si>(__A_1411);
  _1415 = __builtin_ia32_packssdw128 (_1414, _1413);
  _1416 = _1415;
  _1417 = VIEW_CONVERT_EXPR<__m128i>(_1416);

  <bb 107> :
<L108>:
  _2631 = _1417;
  _370 = _2631;
  _57 = _370;
  row1 = _57;
  __A_1418 = dif_h_367;
  __B_1419 = 10;
  _1420 = VIEW_CONVERT_EXPR<__v4si>(__A_1418);
  _1421 = __builtin_ia32_psradi128 (_1420, __B_1419);
  _1422 = _1421;
  _1423 = VIEW_CONVERT_EXPR<__m128i>(_1422);

  <bb 108> :
<L109>:
  _2632 = _1423;
  _372 = _2632;
  _58 = _372;
  __A_1424 = dif_l_366;
  __B_1425 = 10;
  _1426 = VIEW_CONVERT_EXPR<__v4si>(__A_1424);
  _1427 = __builtin_ia32_psradi128 (_1426, __B_1425);
  _1428 = _1427;
  _1429 = VIEW_CONVERT_EXPR<__m128i>(_1428);

  <bb 109> :
<L110>:
  _2633 = _1429;
  _373 = _2633;
  _59 = _373;
  __A_1430 = _59;
  __B_1431 = _58;
  _1432 = VIEW_CONVERT_EXPR<__v4si>(__B_1431);
  _1433 = VIEW_CONVERT_EXPR<__v4si>(__A_1430);
  _1434 = __builtin_ia32_packssdw128 (_1433, _1432);
  _1435 = _1434;
  _1436 = VIEW_CONVERT_EXPR<__m128i>(_1435);

  <bb 110> :
<L111>:
  _2634 = _1436;
  _374 = _2634;
  _60 = _374;
  row6 = _60;
  __A_1473 = x2_l_300;
  __B_1474 = bias_0_257;
  _1475 = VIEW_CONVERT_EXPR<__v4su>(__A_1473);
  _1476 = VIEW_CONVERT_EXPR<__v4su>(__B_1474);
  _1477 = _1475 + _1476;
  _1478 = VIEW_CONVERT_EXPR<__m128i>(_1477);

  <bb 111> :
<L118>:
  _2635 = _1478;
  abiased_l_376 = _2635;
  __A_1467 = x2_h_301;
  __B_1468 = bias_0_257;
  _1469 = VIEW_CONVERT_EXPR<__v4su>(__A_1467);
  _1470 = VIEW_CONVERT_EXPR<__v4su>(__B_1468);
  _1471 = _1469 + _1470;
  _1472 = VIEW_CONVERT_EXPR<__m128i>(_1471);

  <bb 112> :
<L117>:
  _2636 = _1472;
  abiased_h_377 = _2636;
  __A_1461 = abiased_l_376;
  __B_1462 = x5_l_342;
  _1463 = VIEW_CONVERT_EXPR<__v4su>(__A_1461);
  _1464 = VIEW_CONVERT_EXPR<__v4su>(__B_1462);
  _1465 = _1463 + _1464;
  _1466 = VIEW_CONVERT_EXPR<__m128i>(_1465);

  <bb 113> :
<L116>:
  _2637 = _1466;
  sum_l_378 = _2637;
  __A_1455 = abiased_h_377;
  __B_1456 = x5_h_343;
  _1457 = VIEW_CONVERT_EXPR<__v4su>(__A_1455);
  _1458 = VIEW_CONVERT_EXPR<__v4su>(__B_1456);
  _1459 = _1457 + _1458;
  _1460 = VIEW_CONVERT_EXPR<__m128i>(_1459);

  <bb 114> :
<L115>:
  _2638 = _1460;
  sum_h_379 = _2638;
  __A_1449 = abiased_l_376;
  __B_1450 = x5_l_342;
  _1451 = VIEW_CONVERT_EXPR<__v4su>(__A_1449);
  _1452 = VIEW_CONVERT_EXPR<__v4su>(__B_1450);
  _1453 = _1451 - _1452;
  _1454 = VIEW_CONVERT_EXPR<__m128i>(_1453);

  <bb 115> :
<L114>:
  _2639 = _1454;
  dif_l_380 = _2639;
  __A_1443 = abiased_h_377;
  __B_1444 = x5_h_343;
  _1445 = VIEW_CONVERT_EXPR<__v4su>(__A_1443);
  _1446 = VIEW_CONVERT_EXPR<__v4su>(__B_1444);
  _1447 = _1445 - _1446;
  _1448 = VIEW_CONVERT_EXPR<__m128i>(_1447);

  <bb 116> :
<L113>:
  _2640 = _1448;
  dif_h_381 = _2640;
  __A_1437 = sum_h_379;
  __B_1438 = 10;
  _1439 = VIEW_CONVERT_EXPR<__v4si>(__A_1437);
  _1440 = __builtin_ia32_psradi128 (_1439, __B_1438);
  _1441 = _1440;
  _1442 = VIEW_CONVERT_EXPR<__m128i>(_1441);

  <bb 117> :
<L112>:
  _2641 = _1442;
  _382 = _2641;
  _61 = _382;
  __A_1479 = sum_l_378;
  __B_1480 = 10;
  _1481 = VIEW_CONVERT_EXPR<__v4si>(__A_1479);
  _1482 = __builtin_ia32_psradi128 (_1481, __B_1480);
  _1483 = _1482;
  _1484 = VIEW_CONVERT_EXPR<__m128i>(_1483);

  <bb 118> :
<L119>:
  _2642 = _1484;
  _383 = _2642;
  _62 = _383;
  __A_1485 = _62;
  __B_1486 = _61;
  _1487 = VIEW_CONVERT_EXPR<__v4si>(__B_1486);
  _1488 = VIEW_CONVERT_EXPR<__v4si>(__A_1485);
  _1489 = __builtin_ia32_packssdw128 (_1488, _1487);
  _1490 = _1489;
  _1491 = VIEW_CONVERT_EXPR<__m128i>(_1490);

  <bb 119> :
<L120>:
  _2643 = _1491;
  _384 = _2643;
  _63 = _384;
  row2 = _63;
  __A_1492 = dif_h_381;
  __B_1493 = 10;
  _1494 = VIEW_CONVERT_EXPR<__v4si>(__A_1492);
  _1495 = __builtin_ia32_psradi128 (_1494, __B_1493);
  _1496 = _1495;
  _1497 = VIEW_CONVERT_EXPR<__m128i>(_1496);

  <bb 120> :
<L121>:
  _2644 = _1497;
  _386 = _2644;
  _64 = _386;
  __A_1498 = dif_l_380;
  __B_1499 = 10;
  _1500 = VIEW_CONVERT_EXPR<__v4si>(__A_1498);
  _1501 = __builtin_ia32_psradi128 (_1500, __B_1499);
  _1502 = _1501;
  _1503 = VIEW_CONVERT_EXPR<__m128i>(_1502);

  <bb 121> :
<L122>:
  _2645 = _1503;
  _387 = _2645;
  _65 = _387;
  __A_1504 = _65;
  __B_1505 = _64;
  _1506 = VIEW_CONVERT_EXPR<__v4si>(__B_1505);
  _1507 = VIEW_CONVERT_EXPR<__v4si>(__A_1504);
  _1508 = __builtin_ia32_packssdw128 (_1507, _1506);
  _1509 = _1508;
  _1510 = VIEW_CONVERT_EXPR<__m128i>(_1509);

  <bb 122> :
<L123>:
  _2646 = _1510;
  _388 = _2646;
  _66 = _388;
  row5 = _66;
  __A_1547 = x3_l_296;
  __B_1548 = bias_0_257;
  _1549 = VIEW_CONVERT_EXPR<__v4su>(__A_1547);
  _1550 = VIEW_CONVERT_EXPR<__v4su>(__B_1548);
  _1551 = _1549 + _1550;
  _1552 = VIEW_CONVERT_EXPR<__m128i>(_1551);

  <bb 123> :
<L130>:
  _2647 = _1552;
  abiased_l_390 = _2647;
  __A_1541 = x3_h_297;
  __B_1542 = bias_0_257;
  _1543 = VIEW_CONVERT_EXPR<__v4su>(__A_1541);
  _1544 = VIEW_CONVERT_EXPR<__v4su>(__B_1542);
  _1545 = _1543 + _1544;
  _1546 = VIEW_CONVERT_EXPR<__m128i>(_1545);

  <bb 124> :
<L129>:
  _2648 = _1546;
  abiased_h_391 = _2648;
  __A_1535 = abiased_l_390;
  __B_1536 = x4_l_340;
  _1537 = VIEW_CONVERT_EXPR<__v4su>(__A_1535);
  _1538 = VIEW_CONVERT_EXPR<__v4su>(__B_1536);
  _1539 = _1537 + _1538;
  _1540 = VIEW_CONVERT_EXPR<__m128i>(_1539);

  <bb 125> :
<L128>:
  _2649 = _1540;
  sum_l_392 = _2649;
  __A_1529 = abiased_h_391;
  __B_1530 = x4_h_341;
  _1531 = VIEW_CONVERT_EXPR<__v4su>(__A_1529);
  _1532 = VIEW_CONVERT_EXPR<__v4su>(__B_1530);
  _1533 = _1531 + _1532;
  _1534 = VIEW_CONVERT_EXPR<__m128i>(_1533);

  <bb 126> :
<L127>:
  _2650 = _1534;
  sum_h_393 = _2650;
  __A_1523 = abiased_l_390;
  __B_1524 = x4_l_340;
  _1525 = VIEW_CONVERT_EXPR<__v4su>(__A_1523);
  _1526 = VIEW_CONVERT_EXPR<__v4su>(__B_1524);
  _1527 = _1525 - _1526;
  _1528 = VIEW_CONVERT_EXPR<__m128i>(_1527);

  <bb 127> :
<L126>:
  _2651 = _1528;
  dif_l_394 = _2651;
  __A_1517 = abiased_h_391;
  __B_1518 = x4_h_341;
  _1519 = VIEW_CONVERT_EXPR<__v4su>(__A_1517);
  _1520 = VIEW_CONVERT_EXPR<__v4su>(__B_1518);
  _1521 = _1519 - _1520;
  _1522 = VIEW_CONVERT_EXPR<__m128i>(_1521);

  <bb 128> :
<L125>:
  _2652 = _1522;
  dif_h_395 = _2652;
  __A_1511 = sum_h_393;
  __B_1512 = 10;
  _1513 = VIEW_CONVERT_EXPR<__v4si>(__A_1511);
  _1514 = __builtin_ia32_psradi128 (_1513, __B_1512);
  _1515 = _1514;
  _1516 = VIEW_CONVERT_EXPR<__m128i>(_1515);

  <bb 129> :
<L124>:
  _2653 = _1516;
  _396 = _2653;
  _67 = _396;
  __A_1553 = sum_l_392;
  __B_1554 = 10;
  _1555 = VIEW_CONVERT_EXPR<__v4si>(__A_1553);
  _1556 = __builtin_ia32_psradi128 (_1555, __B_1554);
  _1557 = _1556;
  _1558 = VIEW_CONVERT_EXPR<__m128i>(_1557);

  <bb 130> :
<L131>:
  _2654 = _1558;
  _397 = _2654;
  _68 = _397;
  __A_1559 = _68;
  __B_1560 = _67;
  _1561 = VIEW_CONVERT_EXPR<__v4si>(__B_1560);
  _1562 = VIEW_CONVERT_EXPR<__v4si>(__A_1559);
  _1563 = __builtin_ia32_packssdw128 (_1562, _1561);
  _1564 = _1563;
  _1565 = VIEW_CONVERT_EXPR<__m128i>(_1564);

  <bb 131> :
<L132>:
  _2655 = _1565;
  _398 = _2655;
  _69 = _398;
  row3 = _69;
  __A_1566 = dif_h_395;
  __B_1567 = 10;
  _1568 = VIEW_CONVERT_EXPR<__v4si>(__A_1566);
  _1569 = __builtin_ia32_psradi128 (_1568, __B_1567);
  _1570 = _1569;
  _1571 = VIEW_CONVERT_EXPR<__m128i>(_1570);

  <bb 132> :
<L133>:
  _2656 = _1571;
  _400 = _2656;
  _70 = _400;
  __A_1572 = dif_l_394;
  __B_1573 = 10;
  _1574 = VIEW_CONVERT_EXPR<__v4si>(__A_1572);
  _1575 = __builtin_ia32_psradi128 (_1574, __B_1573);
  _1576 = _1575;
  _1577 = VIEW_CONVERT_EXPR<__m128i>(_1576);

  <bb 133> :
<L134>:
  _2657 = _1577;
  _401 = _2657;
  _71 = _401;
  __A_1578 = _71;
  __B_1579 = _70;
  _1580 = VIEW_CONVERT_EXPR<__v4si>(__B_1579);
  _1581 = VIEW_CONVERT_EXPR<__v4si>(__A_1578);
  _1582 = __builtin_ia32_packssdw128 (_1581, _1580);
  _1583 = _1582;
  _1584 = VIEW_CONVERT_EXPR<__m128i>(_1583);

  <bb 134> :
<L135>:
  _2658 = _1584;
  _402 = _2658;
  row4_403 = _402;
  sum04 ={v} {CLOBBER};
  dif04 ={v} {CLOBBER};
  sum17 ={v} {CLOBBER};
  sum35 ={v} {CLOBBER};
  tmp_408 = row0_357;
  __A_1585 = row0_357;
  __B_1586 = row4_403;
  _1587 = VIEW_CONVERT_EXPR<__v8hi>(__B_1586);
  _1588 = VIEW_CONVERT_EXPR<__v8hi>(__A_1585);
  _1589 = __builtin_ia32_punpcklwd128 (_1588, _1587);
  _1590 = _1589;
  _1591 = VIEW_CONVERT_EXPR<__m128i>(_1590);

  <bb 135> :
<L136>:
  _2659 = _1591;
  _409 = _2659;
  row0_410 = _409;
  __A_1592 = tmp_408;
  __B_1593 = row4_403;
  _1594 = VIEW_CONVERT_EXPR<__v8hi>(__B_1593);
  _1595 = VIEW_CONVERT_EXPR<__v8hi>(__A_1592);
  _1596 = __builtin_ia32_punpckhwd128 (_1595, _1594);
  _1597 = _1596;
  _1598 = VIEW_CONVERT_EXPR<__m128i>(_1597);

  <bb 136> :
<L137>:
  _2660 = _1598;
  _411 = _2660;
  row4_412 = _411;
  tmp_413 = row1;
  row5.146_72 = row5;
  row1.147_73 = row1;
  __A_1599 = row1.147_73;
  __B_1600 = row5.146_72;
  _1601 = VIEW_CONVERT_EXPR<__v8hi>(__B_1600);
  _1602 = VIEW_CONVERT_EXPR<__v8hi>(__A_1599);
  _1603 = __builtin_ia32_punpcklwd128 (_1602, _1601);
  _1604 = _1603;
  _1605 = VIEW_CONVERT_EXPR<__m128i>(_1604);

  <bb 137> :
<L138>:
  _2661 = _1605;
  _414 = _2661;
  _74 = _414;
  row1 = _74;
  row5.148_75 = row5;
  __A_1606 = tmp_413;
  __B_1607 = row5.148_75;
  _1608 = VIEW_CONVERT_EXPR<__v8hi>(__B_1607);
  _1609 = VIEW_CONVERT_EXPR<__v8hi>(__A_1606);
  _1610 = __builtin_ia32_punpckhwd128 (_1609, _1608);
  _1611 = _1610;
  _1612 = VIEW_CONVERT_EXPR<__m128i>(_1611);

  <bb 138> :
<L139>:
  _2662 = _1612;
  _416 = _2662;
  _76 = _416;
  row5 = _76;
  tmp_418 = row2;
  row6.149_77 = row6;
  row2.150_78 = row2;
  __A_1613 = row2.150_78;
  __B_1614 = row6.149_77;
  _1615 = VIEW_CONVERT_EXPR<__v8hi>(__B_1614);
  _1616 = VIEW_CONVERT_EXPR<__v8hi>(__A_1613);
  _1617 = __builtin_ia32_punpcklwd128 (_1616, _1615);
  _1618 = _1617;
  _1619 = VIEW_CONVERT_EXPR<__m128i>(_1618);

  <bb 139> :
<L140>:
  _2663 = _1619;
  _419 = _2663;
  _79 = _419;
  row2 = _79;
  row6.151_80 = row6;
  __A_1620 = tmp_418;
  __B_1621 = row6.151_80;
  _1622 = VIEW_CONVERT_EXPR<__v8hi>(__B_1621);
  _1623 = VIEW_CONVERT_EXPR<__v8hi>(__A_1620);
  _1624 = __builtin_ia32_punpckhwd128 (_1623, _1622);
  _1625 = _1624;
  _1626 = VIEW_CONVERT_EXPR<__m128i>(_1625);

  <bb 140> :
<L141>:
  _2664 = _1626;
  _421 = _2664;
  _81 = _421;
  row6 = _81;
  tmp_423 = row3;
  row7.152_82 = row7;
  row3.153_83 = row3;
  __A_1627 = row3.153_83;
  __B_1628 = row7.152_82;
  _1629 = VIEW_CONVERT_EXPR<__v8hi>(__B_1628);
  _1630 = VIEW_CONVERT_EXPR<__v8hi>(__A_1627);
  _1631 = __builtin_ia32_punpcklwd128 (_1630, _1629);
  _1632 = _1631;
  _1633 = VIEW_CONVERT_EXPR<__m128i>(_1632);

  <bb 141> :
<L142>:
  _2665 = _1633;
  _424 = _2665;
  _84 = _424;
  row3 = _84;
  row7.154_85 = row7;
  __A_1634 = tmp_423;
  __B_1635 = row7.154_85;
  _1636 = VIEW_CONVERT_EXPR<__v8hi>(__B_1635);
  _1637 = VIEW_CONVERT_EXPR<__v8hi>(__A_1634);
  _1638 = __builtin_ia32_punpckhwd128 (_1637, _1636);
  _1639 = _1638;
  _1640 = VIEW_CONVERT_EXPR<__m128i>(_1639);

  <bb 142> :
<L143>:
  _2666 = _1640;
  _426 = _2666;
  _86 = _426;
  row7 = _86;
  tmp_428 = row0_410;
  row2.155_87 = row2;
  __A_1641 = row0_410;
  __B_1642 = row2.155_87;
  _1643 = VIEW_CONVERT_EXPR<__v8hi>(__B_1642);
  _1644 = VIEW_CONVERT_EXPR<__v8hi>(__A_1641);
  _1645 = __builtin_ia32_punpcklwd128 (_1644, _1643);
  _1646 = _1645;
  _1647 = VIEW_CONVERT_EXPR<__m128i>(_1646);

  <bb 143> :
<L144>:
  _2667 = _1647;
  _429 = _2667;
  row0_430 = _429;
  row2.156_88 = row2;
  __A_1648 = tmp_428;
  __B_1649 = row2.156_88;
  _1650 = VIEW_CONVERT_EXPR<__v8hi>(__B_1649);
  _1651 = VIEW_CONVERT_EXPR<__v8hi>(__A_1648);
  _1652 = __builtin_ia32_punpckhwd128 (_1651, _1650);
  _1653 = _1652;
  _1654 = VIEW_CONVERT_EXPR<__m128i>(_1653);

  <bb 144> :
<L145>:
  _2668 = _1654;
  _431 = _2668;
  _89 = _431;
  row2 = _89;
  tmp_433 = row1;
  row3.157_90 = row3;
  row1.158_91 = row1;
  __A_1655 = row1.158_91;
  __B_1656 = row3.157_90;
  _1657 = VIEW_CONVERT_EXPR<__v8hi>(__B_1656);
  _1658 = VIEW_CONVERT_EXPR<__v8hi>(__A_1655);
  _1659 = __builtin_ia32_punpcklwd128 (_1658, _1657);
  _1660 = _1659;
  _1661 = VIEW_CONVERT_EXPR<__m128i>(_1660);

  <bb 145> :
<L146>:
  _2669 = _1661;
  _434 = _2669;
  _92 = _434;
  row1 = _92;
  row3.159_93 = row3;
  __A_1662 = tmp_433;
  __B_1663 = row3.159_93;
  _1664 = VIEW_CONVERT_EXPR<__v8hi>(__B_1663);
  _1665 = VIEW_CONVERT_EXPR<__v8hi>(__A_1662);
  _1666 = __builtin_ia32_punpckhwd128 (_1665, _1664);
  _1667 = _1666;
  _1668 = VIEW_CONVERT_EXPR<__m128i>(_1667);

  <bb 146> :
<L147>:
  _2670 = _1668;
  _436 = _2670;
  _94 = _436;
  row3 = _94;
  tmp_438 = row4_412;
  row6.160_95 = row6;
  __A_1669 = row4_412;
  __B_1670 = row6.160_95;
  _1671 = VIEW_CONVERT_EXPR<__v8hi>(__B_1670);
  _1672 = VIEW_CONVERT_EXPR<__v8hi>(__A_1669);
  _1673 = __builtin_ia32_punpcklwd128 (_1672, _1671);
  _1674 = _1673;
  _1675 = VIEW_CONVERT_EXPR<__m128i>(_1674);

  <bb 147> :
<L148>:
  _2671 = _1675;
  _439 = _2671;
  row4_440 = _439;
  row6.161_96 = row6;
  __A_1676 = tmp_438;
  __B_1677 = row6.161_96;
  _1678 = VIEW_CONVERT_EXPR<__v8hi>(__B_1677);
  _1679 = VIEW_CONVERT_EXPR<__v8hi>(__A_1676);
  _1680 = __builtin_ia32_punpckhwd128 (_1679, _1678);
  _1681 = _1680;
  _1682 = VIEW_CONVERT_EXPR<__m128i>(_1681);

  <bb 148> :
<L149>:
  _2672 = _1682;
  _441 = _2672;
  _97 = _441;
  row6 = _97;
  tmp_443 = row5;
  row7.162_98 = row7;
  row5.163_99 = row5;
  __A_1683 = row5.163_99;
  __B_1684 = row7.162_98;
  _1685 = VIEW_CONVERT_EXPR<__v8hi>(__B_1684);
  _1686 = VIEW_CONVERT_EXPR<__v8hi>(__A_1683);
  _1687 = __builtin_ia32_punpcklwd128 (_1686, _1685);
  _1688 = _1687;
  _1689 = VIEW_CONVERT_EXPR<__m128i>(_1688);

  <bb 149> :
<L150>:
  _2673 = _1689;
  _444 = _2673;
  _100 = _444;
  row5 = _100;
  row7.164_101 = row7;
  __A_1690 = tmp_443;
  __B_1691 = row7.164_101;
  _1692 = VIEW_CONVERT_EXPR<__v8hi>(__B_1691);
  _1693 = VIEW_CONVERT_EXPR<__v8hi>(__A_1690);
  _1694 = __builtin_ia32_punpckhwd128 (_1693, _1692);
  _1695 = _1694;
  _1696 = VIEW_CONVERT_EXPR<__m128i>(_1695);

  <bb 150> :
<L151>:
  _2674 = _1696;
  _446 = _2674;
  _102 = _446;
  row7 = _102;
  tmp_448 = row0_430;
  row1.165_103 = row1;
  __A_1697 = row0_430;
  __B_1698 = row1.165_103;
  _1699 = VIEW_CONVERT_EXPR<__v8hi>(__B_1698);
  _1700 = VIEW_CONVERT_EXPR<__v8hi>(__A_1697);
  _1701 = __builtin_ia32_punpcklwd128 (_1700, _1699);
  _1702 = _1701;
  _1703 = VIEW_CONVERT_EXPR<__m128i>(_1702);

  <bb 151> :
<L152>:
  _2675 = _1703;
  _449 = _2675;
  row0_450 = _449;
  row1.166_104 = row1;
  __A_1704 = tmp_448;
  __B_1705 = row1.166_104;
  _1706 = VIEW_CONVERT_EXPR<__v8hi>(__B_1705);
  _1707 = VIEW_CONVERT_EXPR<__v8hi>(__A_1704);
  _1708 = __builtin_ia32_punpckhwd128 (_1707, _1706);
  _1709 = _1708;
  _1710 = VIEW_CONVERT_EXPR<__m128i>(_1709);

  <bb 152> :
<L153>:
  _2676 = _1710;
  _451 = _2676;
  _105 = _451;
  row1 = _105;
  tmp_453 = row2;
  row3.167_106 = row3;
  row2.168_107 = row2;
  __A_1711 = row2.168_107;
  __B_1712 = row3.167_106;
  _1713 = VIEW_CONVERT_EXPR<__v8hi>(__B_1712);
  _1714 = VIEW_CONVERT_EXPR<__v8hi>(__A_1711);
  _1715 = __builtin_ia32_punpcklwd128 (_1714, _1713);
  _1716 = _1715;
  _1717 = VIEW_CONVERT_EXPR<__m128i>(_1716);

  <bb 153> :
<L154>:
  _2677 = _1717;
  _454 = _2677;
  _108 = _454;
  row2 = _108;
  row3.169_109 = row3;
  __A_1718 = tmp_453;
  __B_1719 = row3.169_109;
  _1720 = VIEW_CONVERT_EXPR<__v8hi>(__B_1719);
  _1721 = VIEW_CONVERT_EXPR<__v8hi>(__A_1718);
  _1722 = __builtin_ia32_punpckhwd128 (_1721, _1720);
  _1723 = _1722;
  _1724 = VIEW_CONVERT_EXPR<__m128i>(_1723);

  <bb 154> :
<L155>:
  _2678 = _1724;
  _456 = _2678;
  _110 = _456;
  row3 = _110;
  tmp_458 = row4_440;
  row5.170_111 = row5;
  __A_1725 = row4_440;
  __B_1726 = row5.170_111;
  _1727 = VIEW_CONVERT_EXPR<__v8hi>(__B_1726);
  _1728 = VIEW_CONVERT_EXPR<__v8hi>(__A_1725);
  _1729 = __builtin_ia32_punpcklwd128 (_1728, _1727);
  _1730 = _1729;
  _1731 = VIEW_CONVERT_EXPR<__m128i>(_1730);

  <bb 155> :
<L156>:
  _2679 = _1731;
  _459 = _2679;
  row4_460 = _459;
  row5.171_112 = row5;
  __A_1732 = tmp_458;
  __B_1733 = row5.171_112;
  _1734 = VIEW_CONVERT_EXPR<__v8hi>(__B_1733);
  _1735 = VIEW_CONVERT_EXPR<__v8hi>(__A_1732);
  _1736 = __builtin_ia32_punpckhwd128 (_1735, _1734);
  _1737 = _1736;
  _1738 = VIEW_CONVERT_EXPR<__m128i>(_1737);

  <bb 156> :
<L157>:
  _2680 = _1738;
  _461 = _2680;
  _113 = _461;
  row5 = _113;
  tmp_463 = row6;
  row7.172_114 = row7;
  row6.173_115 = row6;
  __A_1739 = row6.173_115;
  __B_1740 = row7.172_114;
  _1741 = VIEW_CONVERT_EXPR<__v8hi>(__B_1740);
  _1742 = VIEW_CONVERT_EXPR<__v8hi>(__A_1739);
  _1743 = __builtin_ia32_punpcklwd128 (_1742, _1741);
  _1744 = _1743;
  _1745 = VIEW_CONVERT_EXPR<__m128i>(_1744);

  <bb 157> :
<L158>:
  _2681 = _1745;
  _464 = _2681;
  _116 = _464;
  row6 = _116;
  row7.174_117 = row7;
  __A_1746 = tmp_463;
  __B_1747 = row7.174_117;
  _1748 = VIEW_CONVERT_EXPR<__v8hi>(__B_1747);
  _1749 = VIEW_CONVERT_EXPR<__v8hi>(__A_1746);
  _1750 = __builtin_ia32_punpckhwd128 (_1749, _1748);
  _1751 = _1750;
  _1752 = VIEW_CONVERT_EXPR<__m128i>(_1751);

  <bb 158> :
<L159>:
  _2682 = _1752;
  _466 = _2682;
  _118 = _466;
  row7 = _118;
  row6.175_119 = row6;
  row2.176_120 = row2;
  __A_1753 = row2.176_120;
  __B_1754 = row6.175_119;
  _1755 = VIEW_CONVERT_EXPR<__v8hi>(__B_1754);
  _1756 = VIEW_CONVERT_EXPR<__v8hi>(__A_1753);
  _1757 = __builtin_ia32_punpcklwd128 (_1756, _1755);
  _1758 = _1757;
  _1759 = VIEW_CONVERT_EXPR<__m128i>(_1758);

  <bb 159> :
<L160>:
  _2683 = _1759;
  _468 = _2683;
  rot0_0lo_469 = _468;
  row6.177_121 = row6;
  row2.178_122 = row2;
  __A_1760 = row2.178_122;
  __B_1761 = row6.177_121;
  _1762 = VIEW_CONVERT_EXPR<__v8hi>(__B_1761);
  _1763 = VIEW_CONVERT_EXPR<__v8hi>(__A_1760);
  _1764 = __builtin_ia32_punpckhwd128 (_1763, _1762);
  _1765 = _1764;
  _1766 = VIEW_CONVERT_EXPR<__m128i>(_1765);

  <bb 160> :
<L161>:
  _2684 = _1766;
  _470 = _2684;
  rot0_0hi_471 = _470;
  __A_1767 = rot0_0lo_469;
  __B_1768 = rot0_0_249;
  _1769 = VIEW_CONVERT_EXPR<__v8hi>(__B_1768);
  _1770 = VIEW_CONVERT_EXPR<__v8hi>(__A_1767);
  _1771 = __builtin_ia32_pmaddwd128 (_1770, _1769);
  _1772 = _1771;
  _1773 = VIEW_CONVERT_EXPR<__m128i>(_1772);

  <bb 161> :
<L162>:
  _2685 = _1773;
  _472 = _2685;
  t2e_l_473 = _472;
  __A_1774 = rot0_0hi_471;
  __B_1775 = rot0_0_249;
  _1776 = VIEW_CONVERT_EXPR<__v8hi>(__B_1775);
  _1777 = VIEW_CONVERT_EXPR<__v8hi>(__A_1774);
  _1778 = __builtin_ia32_pmaddwd128 (_1777, _1776);
  _1779 = _1778;
  _1780 = VIEW_CONVERT_EXPR<__m128i>(_1779);

  <bb 162> :
<L163>:
  _2686 = _1780;
  _474 = _2686;
  t2e_h_475 = _474;
  __A_1781 = rot0_0lo_469;
  __B_1782 = rot0_1_250;
  _1783 = VIEW_CONVERT_EXPR<__v8hi>(__B_1782);
  _1784 = VIEW_CONVERT_EXPR<__v8hi>(__A_1781);
  _1785 = __builtin_ia32_pmaddwd128 (_1784, _1783);
  _1786 = _1785;
  _1787 = VIEW_CONVERT_EXPR<__m128i>(_1786);

  <bb 163> :
<L164>:
  _2687 = _1787;
  _476 = _2687;
  t3e_l_477 = _476;
  __A_1788 = rot0_0hi_471;
  __B_1789 = rot0_1_250;
  _1790 = VIEW_CONVERT_EXPR<__v8hi>(__B_1789);
  _1791 = VIEW_CONVERT_EXPR<__v8hi>(__A_1788);
  _1792 = __builtin_ia32_pmaddwd128 (_1791, _1790);
  _1793 = _1792;
  _1794 = VIEW_CONVERT_EXPR<__m128i>(_1793);

  <bb 164> :
<L165>:
  _2688 = _1794;
  _478 = _2688;
  t3e_h_479 = _478;
  __A_1809 = row0_450;
  __B_1810 = row4_460;
  _1811 = VIEW_CONVERT_EXPR<__v8hu>(__A_1809);
  _1812 = VIEW_CONVERT_EXPR<__v8hu>(__B_1810);
  _1813 = _1811 + _1812;
  _1814 = VIEW_CONVERT_EXPR<__m128i>(_1813);

  <bb 165> :
<L169>:
  _2689 = _1814;
  _123 = _2689;
  sum04 = _123;
  __A_1803 = row0_450;
  __B_1804 = row4_460;
  _1805 = VIEW_CONVERT_EXPR<__v8hu>(__A_1803);
  _1806 = VIEW_CONVERT_EXPR<__v8hu>(__B_1804);
  _1807 = _1805 - _1806;
  _1808 = VIEW_CONVERT_EXPR<__m128i>(_1807);

  <bb 166> :
<L168>:
  _2690 = _1808;
  _124 = _2690;
  dif04 = _124;
  sum04.179_125 = sum04;
  _1802 = { 0, 0 };

  <bb 167> :
<L167>:
  _2691 = _1802;
  _126 = _2691;
  __A_1795 = _126;
  __B_1796 = sum04.179_125;
  _1797 = VIEW_CONVERT_EXPR<__v8hi>(__B_1796);
  _1798 = VIEW_CONVERT_EXPR<__v8hi>(__A_1795);
  _1799 = __builtin_ia32_punpcklwd128 (_1798, _1797);
  _1800 = _1799;
  _1801 = VIEW_CONVERT_EXPR<__m128i>(_1800);

  <bb 168> :
<L166>:
  _2692 = _1801;
  _482 = _2692;
  _127 = _482;
  __A_1815 = _127;
  __B_1816 = 4;
  _1817 = VIEW_CONVERT_EXPR<__v4si>(__A_1815);
  _1818 = __builtin_ia32_psradi128 (_1817, __B_1816);
  _1819 = _1818;
  _1820 = VIEW_CONVERT_EXPR<__m128i>(_1819);

  <bb 169> :
<L170>:
  _2693 = _1820;
  _483 = _2693;
  t0e_l_484 = _483;
  sum04.180_128 = sum04;
  _1828 = { 0, 0 };

  <bb 170> :
<L172>:
  _2694 = _1828;
  _129 = _2694;
  __A_1821 = _129;
  __B_1822 = sum04.180_128;
  _1823 = VIEW_CONVERT_EXPR<__v8hi>(__B_1822);
  _1824 = VIEW_CONVERT_EXPR<__v8hi>(__A_1821);
  _1825 = __builtin_ia32_punpckhwd128 (_1824, _1823);
  _1826 = _1825;
  _1827 = VIEW_CONVERT_EXPR<__m128i>(_1826);

  <bb 171> :
<L171>:
  _2695 = _1827;
  _485 = _2695;
  _130 = _485;
  __A_1829 = _130;
  __B_1830 = 4;
  _1831 = VIEW_CONVERT_EXPR<__v4si>(__A_1829);
  _1832 = __builtin_ia32_psradi128 (_1831, __B_1830);
  _1833 = _1832;
  _1834 = VIEW_CONVERT_EXPR<__m128i>(_1833);

  <bb 172> :
<L173>:
  _2696 = _1834;
  _486 = _2696;
  t0e_h_487 = _486;
  dif04.181_131 = dif04;
  _1842 = { 0, 0 };

  <bb 173> :
<L175>:
  _2697 = _1842;
  _132 = _2697;
  __A_1835 = _132;
  __B_1836 = dif04.181_131;
  _1837 = VIEW_CONVERT_EXPR<__v8hi>(__B_1836);
  _1838 = VIEW_CONVERT_EXPR<__v8hi>(__A_1835);
  _1839 = __builtin_ia32_punpcklwd128 (_1838, _1837);
  _1840 = _1839;
  _1841 = VIEW_CONVERT_EXPR<__m128i>(_1840);

  <bb 174> :
<L174>:
  _2698 = _1841;
  _488 = _2698;
  _133 = _488;
  __A_1843 = _133;
  __B_1844 = 4;
  _1845 = VIEW_CONVERT_EXPR<__v4si>(__A_1843);
  _1846 = __builtin_ia32_psradi128 (_1845, __B_1844);
  _1847 = _1846;
  _1848 = VIEW_CONVERT_EXPR<__m128i>(_1847);

  <bb 175> :
<L176>:
  _2699 = _1848;
  _489 = _2699;
  t1e_l_490 = _489;
  dif04.182_134 = dif04;
  _1856 = { 0, 0 };

  <bb 176> :
<L178>:
  _2700 = _1856;
  _135 = _2700;
  __A_1849 = _135;
  __B_1850 = dif04.182_134;
  _1851 = VIEW_CONVERT_EXPR<__v8hi>(__B_1850);
  _1852 = VIEW_CONVERT_EXPR<__v8hi>(__A_1849);
  _1853 = __builtin_ia32_punpckhwd128 (_1852, _1851);
  _1854 = _1853;
  _1855 = VIEW_CONVERT_EXPR<__m128i>(_1854);

  <bb 177> :
<L177>:
  _2701 = _1855;
  _491 = _2701;
  _136 = _491;
  __A_1857 = _136;
  __B_1858 = 4;
  _1859 = VIEW_CONVERT_EXPR<__v4si>(__A_1857);
  _1860 = __builtin_ia32_psradi128 (_1859, __B_1858);
  _1861 = _1860;
  _1862 = VIEW_CONVERT_EXPR<__m128i>(_1861);

  <bb 178> :
<L179>:
  _2702 = _1862;
  _492 = _2702;
  t1e_h_493 = _492;
  __A_1912 = t0e_l_484;
  __B_1913 = t3e_l_477;
  _1914 = VIEW_CONVERT_EXPR<__v4su>(__A_1912);
  _1915 = VIEW_CONVERT_EXPR<__v4su>(__B_1913);
  _1916 = _1914 + _1915;
  _1917 = VIEW_CONVERT_EXPR<__m128i>(_1916);

  <bb 179> :
<L188>:
  _2703 = _1917;
  x0_l_494 = _2703;
  __A_1906 = t0e_h_487;
  __B_1907 = t3e_h_479;
  _1908 = VIEW_CONVERT_EXPR<__v4su>(__A_1906);
  _1909 = VIEW_CONVERT_EXPR<__v4su>(__B_1907);
  _1910 = _1908 + _1909;
  _1911 = VIEW_CONVERT_EXPR<__m128i>(_1910);

  <bb 180> :
<L187>:
  _2704 = _1911;
  x0_h_495 = _2704;
  __A_1900 = t0e_l_484;
  __B_1901 = t3e_l_477;
  _1902 = VIEW_CONVERT_EXPR<__v4su>(__A_1900);
  _1903 = VIEW_CONVERT_EXPR<__v4su>(__B_1901);
  _1904 = _1902 - _1903;
  _1905 = VIEW_CONVERT_EXPR<__m128i>(_1904);

  <bb 181> :
<L186>:
  _2705 = _1905;
  x3_l_496 = _2705;
  __A_1894 = t0e_h_487;
  __B_1895 = t3e_h_479;
  _1896 = VIEW_CONVERT_EXPR<__v4su>(__A_1894);
  _1897 = VIEW_CONVERT_EXPR<__v4su>(__B_1895);
  _1898 = _1896 - _1897;
  _1899 = VIEW_CONVERT_EXPR<__m128i>(_1898);

  <bb 182> :
<L185>:
  _2706 = _1899;
  x3_h_497 = _2706;
  __A_1888 = t1e_l_490;
  __B_1889 = t2e_l_473;
  _1890 = VIEW_CONVERT_EXPR<__v4su>(__A_1888);
  _1891 = VIEW_CONVERT_EXPR<__v4su>(__B_1889);
  _1892 = _1890 + _1891;
  _1893 = VIEW_CONVERT_EXPR<__m128i>(_1892);

  <bb 183> :
<L184>:
  _2707 = _1893;
  x1_l_498 = _2707;
  __A_1882 = t1e_h_493;
  __B_1883 = t2e_h_475;
  _1884 = VIEW_CONVERT_EXPR<__v4su>(__A_1882);
  _1885 = VIEW_CONVERT_EXPR<__v4su>(__B_1883);
  _1886 = _1884 + _1885;
  _1887 = VIEW_CONVERT_EXPR<__m128i>(_1886);

  <bb 184> :
<L183>:
  _2708 = _1887;
  x1_h_499 = _2708;
  __A_1876 = t1e_l_490;
  __B_1877 = t2e_l_473;
  _1878 = VIEW_CONVERT_EXPR<__v4su>(__A_1876);
  _1879 = VIEW_CONVERT_EXPR<__v4su>(__B_1877);
  _1880 = _1878 - _1879;
  _1881 = VIEW_CONVERT_EXPR<__m128i>(_1880);

  <bb 185> :
<L182>:
  _2709 = _1881;
  x2_l_500 = _2709;
  __A_1870 = t1e_h_493;
  __B_1871 = t2e_h_475;
  _1872 = VIEW_CONVERT_EXPR<__v4su>(__A_1870);
  _1873 = VIEW_CONVERT_EXPR<__v4su>(__B_1871);
  _1874 = _1872 - _1873;
  _1875 = VIEW_CONVERT_EXPR<__m128i>(_1874);

  <bb 186> :
<L181>:
  _2710 = _1875;
  x2_h_501 = _2710;
  row3.183_137 = row3;
  row7.184_138 = row7;
  __A_1863 = row7.184_138;
  __B_1864 = row3.183_137;
  _1865 = VIEW_CONVERT_EXPR<__v8hi>(__B_1864);
  _1866 = VIEW_CONVERT_EXPR<__v8hi>(__A_1863);
  _1867 = __builtin_ia32_punpcklwd128 (_1866, _1865);
  _1868 = _1867;
  _1869 = VIEW_CONVERT_EXPR<__m128i>(_1868);

  <bb 187> :
<L180>:
  _2711 = _1869;
  _502 = _2711;
  rot2_0lo_503 = _502;
  row3.185_139 = row3;
  row7.186_140 = row7;
  __A_1918 = row7.186_140;
  __B_1919 = row3.185_139;
  _1920 = VIEW_CONVERT_EXPR<__v8hi>(__B_1919);
  _1921 = VIEW_CONVERT_EXPR<__v8hi>(__A_1918);
  _1922 = __builtin_ia32_punpckhwd128 (_1921, _1920);
  _1923 = _1922;
  _1924 = VIEW_CONVERT_EXPR<__m128i>(_1923);

  <bb 188> :
<L189>:
  _2712 = _1924;
  _504 = _2712;
  rot2_0hi_505 = _504;
  __A_1925 = rot2_0lo_503;
  __B_1926 = rot2_0_253;
  _1927 = VIEW_CONVERT_EXPR<__v8hi>(__B_1926);
  _1928 = VIEW_CONVERT_EXPR<__v8hi>(__A_1925);
  _1929 = __builtin_ia32_pmaddwd128 (_1928, _1927);
  _1930 = _1929;
  _1931 = VIEW_CONVERT_EXPR<__m128i>(_1930);

  <bb 189> :
<L190>:
  _2713 = _1931;
  _506 = _2713;
  y0o_l_507 = _506;
  __A_1932 = rot2_0hi_505;
  __B_1933 = rot2_0_253;
  _1934 = VIEW_CONVERT_EXPR<__v8hi>(__B_1933);
  _1935 = VIEW_CONVERT_EXPR<__v8hi>(__A_1932);
  _1936 = __builtin_ia32_pmaddwd128 (_1935, _1934);
  _1937 = _1936;
  _1938 = VIEW_CONVERT_EXPR<__m128i>(_1937);

  <bb 190> :
<L191>:
  _2714 = _1938;
  _508 = _2714;
  y0o_h_509 = _508;
  __A_1939 = rot2_0lo_503;
  __B_1940 = rot2_1_254;
  _1941 = VIEW_CONVERT_EXPR<__v8hi>(__B_1940);
  _1942 = VIEW_CONVERT_EXPR<__v8hi>(__A_1939);
  _1943 = __builtin_ia32_pmaddwd128 (_1942, _1941);
  _1944 = _1943;
  _1945 = VIEW_CONVERT_EXPR<__m128i>(_1944);

  <bb 191> :
<L192>:
  _2715 = _1945;
  _510 = _2715;
  y2o_l_511 = _510;
  __A_1946 = rot2_0hi_505;
  __B_1947 = rot2_1_254;
  _1948 = VIEW_CONVERT_EXPR<__v8hi>(__B_1947);
  _1949 = VIEW_CONVERT_EXPR<__v8hi>(__A_1946);
  _1950 = __builtin_ia32_pmaddwd128 (_1949, _1948);
  _1951 = _1950;
  _1952 = VIEW_CONVERT_EXPR<__m128i>(_1951);

  <bb 192> :
<L193>:
  _2716 = _1952;
  _512 = _2716;
  y2o_h_513 = _512;
  row1.187_141 = row1;
  row5.188_142 = row5;
  __A_1953 = row5.188_142;
  __B_1954 = row1.187_141;
  _1955 = VIEW_CONVERT_EXPR<__v8hi>(__B_1954);
  _1956 = VIEW_CONVERT_EXPR<__v8hi>(__A_1953);
  _1957 = __builtin_ia32_punpcklwd128 (_1956, _1955);
  _1958 = _1957;
  _1959 = VIEW_CONVERT_EXPR<__m128i>(_1958);

  <bb 193> :
<L194>:
  _2717 = _1959;
  _514 = _2717;
  rot3_0lo_515 = _514;
  row1.189_143 = row1;
  row5.190_144 = row5;
  __A_1960 = row5.190_144;
  __B_1961 = row1.189_143;
  _1962 = VIEW_CONVERT_EXPR<__v8hi>(__B_1961);
  _1963 = VIEW_CONVERT_EXPR<__v8hi>(__A_1960);
  _1964 = __builtin_ia32_punpckhwd128 (_1963, _1962);
  _1965 = _1964;
  _1966 = VIEW_CONVERT_EXPR<__m128i>(_1965);

  <bb 194> :
<L195>:
  _2718 = _1966;
  _516 = _2718;
  rot3_0hi_517 = _516;
  __A_1967 = rot3_0lo_515;
  __B_1968 = rot3_0_255;
  _1969 = VIEW_CONVERT_EXPR<__v8hi>(__B_1968);
  _1970 = VIEW_CONVERT_EXPR<__v8hi>(__A_1967);
  _1971 = __builtin_ia32_pmaddwd128 (_1970, _1969);
  _1972 = _1971;
  _1973 = VIEW_CONVERT_EXPR<__m128i>(_1972);

  <bb 195> :
<L196>:
  _2719 = _1973;
  _518 = _2719;
  y1o_l_519 = _518;
  __A_1974 = rot3_0hi_517;
  __B_1975 = rot3_0_255;
  _1976 = VIEW_CONVERT_EXPR<__v8hi>(__B_1975);
  _1977 = VIEW_CONVERT_EXPR<__v8hi>(__A_1974);
  _1978 = __builtin_ia32_pmaddwd128 (_1977, _1976);
  _1979 = _1978;
  _1980 = VIEW_CONVERT_EXPR<__m128i>(_1979);

  <bb 196> :
<L197>:
  _2720 = _1980;
  _520 = _2720;
  y1o_h_521 = _520;
  __A_1981 = rot3_0lo_515;
  __B_1982 = rot3_1_256;
  _1983 = VIEW_CONVERT_EXPR<__v8hi>(__B_1982);
  _1984 = VIEW_CONVERT_EXPR<__v8hi>(__A_1981);
  _1985 = __builtin_ia32_pmaddwd128 (_1984, _1983);
  _1986 = _1985;
  _1987 = VIEW_CONVERT_EXPR<__m128i>(_1986);

  <bb 197> :
<L198>:
  _2721 = _1987;
  _522 = _2721;
  y3o_l_523 = _522;
  __A_1988 = rot3_0hi_517;
  __B_1989 = rot3_1_256;
  _1990 = VIEW_CONVERT_EXPR<__v8hi>(__B_1989);
  _1991 = VIEW_CONVERT_EXPR<__v8hi>(__A_1988);
  _1992 = __builtin_ia32_pmaddwd128 (_1991, _1990);
  _1993 = _1992;
  _1994 = VIEW_CONVERT_EXPR<__m128i>(_1993);

  <bb 198> :
<L199>:
  _2722 = _1994;
  _524 = _2722;
  y3o_h_525 = _524;
  row7.191_145 = row7;
  row1.192_146 = row1;
  __A_2008 = row1.192_146;
  __B_2009 = row7.191_145;
  _2010 = VIEW_CONVERT_EXPR<__v8hu>(__A_2008);
  _2011 = VIEW_CONVERT_EXPR<__v8hu>(__B_2009);
  _2012 = _2010 + _2011;
  _2013 = VIEW_CONVERT_EXPR<__m128i>(_2012);

  <bb 199> :
<L202>:
  _2723 = _2013;
  _147 = _2723;
  sum17 = _147;
  row5.193_148 = row5;
  row3.194_149 = row3;
  __A_2002 = row3.194_149;
  __B_2003 = row5.193_148;
  _2004 = VIEW_CONVERT_EXPR<__v8hu>(__A_2002);
  _2005 = VIEW_CONVERT_EXPR<__v8hu>(__B_2003);
  _2006 = _2004 + _2005;
  _2007 = VIEW_CONVERT_EXPR<__m128i>(_2006);

  <bb 200> :
<L201>:
  _2724 = _2007;
  _150 = _2724;
  sum35 = _150;
  sum35.195_151 = sum35;
  sum17.196_152 = sum17;
  __A_1995 = sum17.196_152;
  __B_1996 = sum35.195_151;
  _1997 = VIEW_CONVERT_EXPR<__v8hi>(__B_1996);
  _1998 = VIEW_CONVERT_EXPR<__v8hi>(__A_1995);
  _1999 = __builtin_ia32_punpcklwd128 (_1998, _1997);
  _2000 = _1999;
  _2001 = VIEW_CONVERT_EXPR<__m128i>(_2000);

  <bb 201> :
<L200>:
  _2725 = _2001;
  _528 = _2725;
  rot1_0lo_529 = _528;
  sum35.197_153 = sum35;
  sum17.198_154 = sum17;
  __A_2014 = sum17.198_154;
  __B_2015 = sum35.197_153;
  _2016 = VIEW_CONVERT_EXPR<__v8hi>(__B_2015);
  _2017 = VIEW_CONVERT_EXPR<__v8hi>(__A_2014);
  _2018 = __builtin_ia32_punpckhwd128 (_2017, _2016);
  _2019 = _2018;
  _2020 = VIEW_CONVERT_EXPR<__m128i>(_2019);

  <bb 202> :
<L203>:
  _2726 = _2020;
  _530 = _2726;
  rot1_0hi_531 = _530;
  __A_2021 = rot1_0lo_529;
  __B_2022 = rot1_0_251;
  _2023 = VIEW_CONVERT_EXPR<__v8hi>(__B_2022);
  _2024 = VIEW_CONVERT_EXPR<__v8hi>(__A_2021);
  _2025 = __builtin_ia32_pmaddwd128 (_2024, _2023);
  _2026 = _2025;
  _2027 = VIEW_CONVERT_EXPR<__m128i>(_2026);

  <bb 203> :
<L204>:
  _2727 = _2027;
  _532 = _2727;
  y4o_l_533 = _532;
  __A_2028 = rot1_0hi_531;
  __B_2029 = rot1_0_251;
  _2030 = VIEW_CONVERT_EXPR<__v8hi>(__B_2029);
  _2031 = VIEW_CONVERT_EXPR<__v8hi>(__A_2028);
  _2032 = __builtin_ia32_pmaddwd128 (_2031, _2030);
  _2033 = _2032;
  _2034 = VIEW_CONVERT_EXPR<__m128i>(_2033);

  <bb 204> :
<L205>:
  _2728 = _2034;
  _534 = _2728;
  y4o_h_535 = _534;
  __A_2035 = rot1_0lo_529;
  __B_2036 = rot1_1_252;
  _2037 = VIEW_CONVERT_EXPR<__v8hi>(__B_2036);
  _2038 = VIEW_CONVERT_EXPR<__v8hi>(__A_2035);
  _2039 = __builtin_ia32_pmaddwd128 (_2038, _2037);
  _2040 = _2039;
  _2041 = VIEW_CONVERT_EXPR<__m128i>(_2040);

  <bb 205> :
<L206>:
  _2729 = _2041;
  _536 = _2729;
  y5o_l_537 = _536;
  __A_2042 = rot1_0hi_531;
  __B_2043 = rot1_1_252;
  _2044 = VIEW_CONVERT_EXPR<__v8hi>(__B_2043);
  _2045 = VIEW_CONVERT_EXPR<__v8hi>(__A_2042);
  _2046 = __builtin_ia32_pmaddwd128 (_2045, _2044);
  _2047 = _2046;
  _2048 = VIEW_CONVERT_EXPR<__m128i>(_2047);

  <bb 206> :
<L207>:
  _2730 = _2048;
  _538 = _2730;
  y5o_h_539 = _538;
  __A_2133 = y0o_l_507;
  __B_2134 = y4o_l_533;
  _2135 = VIEW_CONVERT_EXPR<__v4su>(__A_2133);
  _2136 = VIEW_CONVERT_EXPR<__v4su>(__B_2134);
  _2137 = _2135 + _2136;
  _2138 = VIEW_CONVERT_EXPR<__m128i>(_2137);

  <bb 207> :
<L222>:
  _2731 = _2138;
  x4_l_540 = _2731;
  __A_2127 = y0o_h_509;
  __B_2128 = y4o_h_535;
  _2129 = VIEW_CONVERT_EXPR<__v4su>(__A_2127);
  _2130 = VIEW_CONVERT_EXPR<__v4su>(__B_2128);
  _2131 = _2129 + _2130;
  _2132 = VIEW_CONVERT_EXPR<__m128i>(_2131);

  <bb 208> :
<L221>:
  _2732 = _2132;
  x4_h_541 = _2732;
  __A_2121 = y1o_l_519;
  __B_2122 = y5o_l_537;
  _2123 = VIEW_CONVERT_EXPR<__v4su>(__A_2121);
  _2124 = VIEW_CONVERT_EXPR<__v4su>(__B_2122);
  _2125 = _2123 + _2124;
  _2126 = VIEW_CONVERT_EXPR<__m128i>(_2125);

  <bb 209> :
<L220>:
  _2733 = _2126;
  x5_l_542 = _2733;
  __A_2115 = y1o_h_521;
  __B_2116 = y5o_h_539;
  _2117 = VIEW_CONVERT_EXPR<__v4su>(__A_2115);
  _2118 = VIEW_CONVERT_EXPR<__v4su>(__B_2116);
  _2119 = _2117 + _2118;
  _2120 = VIEW_CONVERT_EXPR<__m128i>(_2119);

  <bb 210> :
<L219>:
  _2734 = _2120;
  x5_h_543 = _2734;
  __A_2109 = y2o_l_511;
  __B_2110 = y5o_l_537;
  _2111 = VIEW_CONVERT_EXPR<__v4su>(__A_2109);
  _2112 = VIEW_CONVERT_EXPR<__v4su>(__B_2110);
  _2113 = _2111 + _2112;
  _2114 = VIEW_CONVERT_EXPR<__m128i>(_2113);

  <bb 211> :
<L218>:
  _2735 = _2114;
  x6_l_544 = _2735;
  __A_2103 = y2o_h_513;
  __B_2104 = y5o_h_539;
  _2105 = VIEW_CONVERT_EXPR<__v4su>(__A_2103);
  _2106 = VIEW_CONVERT_EXPR<__v4su>(__B_2104);
  _2107 = _2105 + _2106;
  _2108 = VIEW_CONVERT_EXPR<__m128i>(_2107);

  <bb 212> :
<L217>:
  _2736 = _2108;
  x6_h_545 = _2736;
  __A_2097 = y3o_l_523;
  __B_2098 = y4o_l_533;
  _2099 = VIEW_CONVERT_EXPR<__v4su>(__A_2097);
  _2100 = VIEW_CONVERT_EXPR<__v4su>(__B_2098);
  _2101 = _2099 + _2100;
  _2102 = VIEW_CONVERT_EXPR<__m128i>(_2101);

  <bb 213> :
<L216>:
  _2737 = _2102;
  x7_l_546 = _2737;
  __A_2091 = y3o_h_525;
  __B_2092 = y4o_h_535;
  _2093 = VIEW_CONVERT_EXPR<__v4su>(__A_2091);
  _2094 = VIEW_CONVERT_EXPR<__v4su>(__B_2092);
  _2095 = _2093 + _2094;
  _2096 = VIEW_CONVERT_EXPR<__m128i>(_2095);

  <bb 214> :
<L215>:
  _2738 = _2096;
  x7_h_547 = _2738;
  __A_2085 = x0_l_494;
  __B_2086 = bias_1_258;
  _2087 = VIEW_CONVERT_EXPR<__v4su>(__A_2085);
  _2088 = VIEW_CONVERT_EXPR<__v4su>(__B_2086);
  _2089 = _2087 + _2088;
  _2090 = VIEW_CONVERT_EXPR<__m128i>(_2089);

  <bb 215> :
<L214>:
  _2739 = _2090;
  abiased_l_548 = _2739;
  __A_2079 = x0_h_495;
  __B_2080 = bias_1_258;
  _2081 = VIEW_CONVERT_EXPR<__v4su>(__A_2079);
  _2082 = VIEW_CONVERT_EXPR<__v4su>(__B_2080);
  _2083 = _2081 + _2082;
  _2084 = VIEW_CONVERT_EXPR<__m128i>(_2083);

  <bb 216> :
<L213>:
  _2740 = _2084;
  abiased_h_549 = _2740;
  __A_2073 = abiased_l_548;
  __B_2074 = x7_l_546;
  _2075 = VIEW_CONVERT_EXPR<__v4su>(__A_2073);
  _2076 = VIEW_CONVERT_EXPR<__v4su>(__B_2074);
  _2077 = _2075 + _2076;
  _2078 = VIEW_CONVERT_EXPR<__m128i>(_2077);

  <bb 217> :
<L212>:
  _2741 = _2078;
  sum_l_550 = _2741;
  __A_2067 = abiased_h_549;
  __B_2068 = x7_h_547;
  _2069 = VIEW_CONVERT_EXPR<__v4su>(__A_2067);
  _2070 = VIEW_CONVERT_EXPR<__v4su>(__B_2068);
  _2071 = _2069 + _2070;
  _2072 = VIEW_CONVERT_EXPR<__m128i>(_2071);

  <bb 218> :
<L211>:
  _2742 = _2072;
  sum_h_551 = _2742;
  __A_2061 = abiased_l_548;
  __B_2062 = x7_l_546;
  _2063 = VIEW_CONVERT_EXPR<__v4su>(__A_2061);
  _2064 = VIEW_CONVERT_EXPR<__v4su>(__B_2062);
  _2065 = _2063 - _2064;
  _2066 = VIEW_CONVERT_EXPR<__m128i>(_2065);

  <bb 219> :
<L210>:
  _2743 = _2066;
  dif_l_552 = _2743;
  __A_2055 = abiased_h_549;
  __B_2056 = x7_h_547;
  _2057 = VIEW_CONVERT_EXPR<__v4su>(__A_2055);
  _2058 = VIEW_CONVERT_EXPR<__v4su>(__B_2056);
  _2059 = _2057 - _2058;
  _2060 = VIEW_CONVERT_EXPR<__m128i>(_2059);

  <bb 220> :
<L209>:
  _2744 = _2060;
  dif_h_553 = _2744;
  __A_2049 = sum_h_551;
  __B_2050 = 17;
  _2051 = VIEW_CONVERT_EXPR<__v4si>(__A_2049);
  _2052 = __builtin_ia32_psradi128 (_2051, __B_2050);
  _2053 = _2052;
  _2054 = VIEW_CONVERT_EXPR<__m128i>(_2053);

  <bb 221> :
<L208>:
  _2745 = _2054;
  _554 = _2745;
  _155 = _554;
  __A_2139 = sum_l_550;
  __B_2140 = 17;
  _2141 = VIEW_CONVERT_EXPR<__v4si>(__A_2139);
  _2142 = __builtin_ia32_psradi128 (_2141, __B_2140);
  _2143 = _2142;
  _2144 = VIEW_CONVERT_EXPR<__m128i>(_2143);

  <bb 222> :
<L223>:
  _2746 = _2144;
  _555 = _2746;
  _156 = _555;
  __A_2145 = _156;
  __B_2146 = _155;
  _2147 = VIEW_CONVERT_EXPR<__v4si>(__B_2146);
  _2148 = VIEW_CONVERT_EXPR<__v4si>(__A_2145);
  _2149 = __builtin_ia32_packssdw128 (_2148, _2147);
  _2150 = _2149;
  _2151 = VIEW_CONVERT_EXPR<__m128i>(_2150);

  <bb 223> :
<L224>:
  _2747 = _2151;
  _556 = _2747;
  row0_557 = _556;
  __A_2152 = dif_h_553;
  __B_2153 = 17;
  _2154 = VIEW_CONVERT_EXPR<__v4si>(__A_2152);
  _2155 = __builtin_ia32_psradi128 (_2154, __B_2153);
  _2156 = _2155;
  _2157 = VIEW_CONVERT_EXPR<__m128i>(_2156);

  <bb 224> :
<L225>:
  _2748 = _2157;
  _558 = _2748;
  _157 = _558;
  __A_2158 = dif_l_552;
  __B_2159 = 17;
  _2160 = VIEW_CONVERT_EXPR<__v4si>(__A_2158);
  _2161 = __builtin_ia32_psradi128 (_2160, __B_2159);
  _2162 = _2161;
  _2163 = VIEW_CONVERT_EXPR<__m128i>(_2162);

  <bb 225> :
<L226>:
  _2749 = _2163;
  _559 = _2749;
  _158 = _559;
  __A_2164 = _158;
  __B_2165 = _157;
  _2166 = VIEW_CONVERT_EXPR<__v4si>(__B_2165);
  _2167 = VIEW_CONVERT_EXPR<__v4si>(__A_2164);
  _2168 = __builtin_ia32_packssdw128 (_2167, _2166);
  _2169 = _2168;
  _2170 = VIEW_CONVERT_EXPR<__m128i>(_2169);

  <bb 226> :
<L227>:
  _2750 = _2170;
  _560 = _2750;
  _159 = _560;
  row7 = _159;
  __A_2207 = x1_l_498;
  __B_2208 = bias_1_258;
  _2209 = VIEW_CONVERT_EXPR<__v4su>(__A_2207);
  _2210 = VIEW_CONVERT_EXPR<__v4su>(__B_2208);
  _2211 = _2209 + _2210;
  _2212 = VIEW_CONVERT_EXPR<__m128i>(_2211);

  <bb 227> :
<L234>:
  _2751 = _2212;
  abiased_l_562 = _2751;
  __A_2201 = x1_h_499;
  __B_2202 = bias_1_258;
  _2203 = VIEW_CONVERT_EXPR<__v4su>(__A_2201);
  _2204 = VIEW_CONVERT_EXPR<__v4su>(__B_2202);
  _2205 = _2203 + _2204;
  _2206 = VIEW_CONVERT_EXPR<__m128i>(_2205);

  <bb 228> :
<L233>:
  _2752 = _2206;
  abiased_h_563 = _2752;
  __A_2195 = abiased_l_562;
  __B_2196 = x6_l_544;
  _2197 = VIEW_CONVERT_EXPR<__v4su>(__A_2195);
  _2198 = VIEW_CONVERT_EXPR<__v4su>(__B_2196);
  _2199 = _2197 + _2198;
  _2200 = VIEW_CONVERT_EXPR<__m128i>(_2199);

  <bb 229> :
<L232>:
  _2753 = _2200;
  sum_l_564 = _2753;
  __A_2189 = abiased_h_563;
  __B_2190 = x6_h_545;
  _2191 = VIEW_CONVERT_EXPR<__v4su>(__A_2189);
  _2192 = VIEW_CONVERT_EXPR<__v4su>(__B_2190);
  _2193 = _2191 + _2192;
  _2194 = VIEW_CONVERT_EXPR<__m128i>(_2193);

  <bb 230> :
<L231>:
  _2754 = _2194;
  sum_h_565 = _2754;
  __A_2183 = abiased_l_562;
  __B_2184 = x6_l_544;
  _2185 = VIEW_CONVERT_EXPR<__v4su>(__A_2183);
  _2186 = VIEW_CONVERT_EXPR<__v4su>(__B_2184);
  _2187 = _2185 - _2186;
  _2188 = VIEW_CONVERT_EXPR<__m128i>(_2187);

  <bb 231> :
<L230>:
  _2755 = _2188;
  dif_l_566 = _2755;
  __A_2177 = abiased_h_563;
  __B_2178 = x6_h_545;
  _2179 = VIEW_CONVERT_EXPR<__v4su>(__A_2177);
  _2180 = VIEW_CONVERT_EXPR<__v4su>(__B_2178);
  _2181 = _2179 - _2180;
  _2182 = VIEW_CONVERT_EXPR<__m128i>(_2181);

  <bb 232> :
<L229>:
  _2756 = _2182;
  dif_h_567 = _2756;
  __A_2171 = sum_h_565;
  __B_2172 = 17;
  _2173 = VIEW_CONVERT_EXPR<__v4si>(__A_2171);
  _2174 = __builtin_ia32_psradi128 (_2173, __B_2172);
  _2175 = _2174;
  _2176 = VIEW_CONVERT_EXPR<__m128i>(_2175);

  <bb 233> :
<L228>:
  _2757 = _2176;
  _568 = _2757;
  _160 = _568;
  __A_2213 = sum_l_564;
  __B_2214 = 17;
  _2215 = VIEW_CONVERT_EXPR<__v4si>(__A_2213);
  _2216 = __builtin_ia32_psradi128 (_2215, __B_2214);
  _2217 = _2216;
  _2218 = VIEW_CONVERT_EXPR<__m128i>(_2217);

  <bb 234> :
<L235>:
  _2758 = _2218;
  _569 = _2758;
  _161 = _569;
  __A_2219 = _161;
  __B_2220 = _160;
  _2221 = VIEW_CONVERT_EXPR<__v4si>(__B_2220);
  _2222 = VIEW_CONVERT_EXPR<__v4si>(__A_2219);
  _2223 = __builtin_ia32_packssdw128 (_2222, _2221);
  _2224 = _2223;
  _2225 = VIEW_CONVERT_EXPR<__m128i>(_2224);

  <bb 235> :
<L236>:
  _2759 = _2225;
  _570 = _2759;
  _162 = _570;
  row1 = _162;
  __A_2226 = dif_h_567;
  __B_2227 = 17;
  _2228 = VIEW_CONVERT_EXPR<__v4si>(__A_2226);
  _2229 = __builtin_ia32_psradi128 (_2228, __B_2227);
  _2230 = _2229;
  _2231 = VIEW_CONVERT_EXPR<__m128i>(_2230);

  <bb 236> :
<L237>:
  _2760 = _2231;
  _572 = _2760;
  _163 = _572;
  __A_2232 = dif_l_566;
  __B_2233 = 17;
  _2234 = VIEW_CONVERT_EXPR<__v4si>(__A_2232);
  _2235 = __builtin_ia32_psradi128 (_2234, __B_2233);
  _2236 = _2235;
  _2237 = VIEW_CONVERT_EXPR<__m128i>(_2236);

  <bb 237> :
<L238>:
  _2761 = _2237;
  _573 = _2761;
  _164 = _573;
  __A_2238 = _164;
  __B_2239 = _163;
  _2240 = VIEW_CONVERT_EXPR<__v4si>(__B_2239);
  _2241 = VIEW_CONVERT_EXPR<__v4si>(__A_2238);
  _2242 = __builtin_ia32_packssdw128 (_2241, _2240);
  _2243 = _2242;
  _2244 = VIEW_CONVERT_EXPR<__m128i>(_2243);

  <bb 238> :
<L239>:
  _2762 = _2244;
  _574 = _2762;
  _165 = _574;
  row6 = _165;
  __A_2281 = x2_l_500;
  __B_2282 = bias_1_258;
  _2283 = VIEW_CONVERT_EXPR<__v4su>(__A_2281);
  _2284 = VIEW_CONVERT_EXPR<__v4su>(__B_2282);
  _2285 = _2283 + _2284;
  _2286 = VIEW_CONVERT_EXPR<__m128i>(_2285);

  <bb 239> :
<L246>:
  _2763 = _2286;
  abiased_l_576 = _2763;
  __A_2275 = x2_h_501;
  __B_2276 = bias_1_258;
  _2277 = VIEW_CONVERT_EXPR<__v4su>(__A_2275);
  _2278 = VIEW_CONVERT_EXPR<__v4su>(__B_2276);
  _2279 = _2277 + _2278;
  _2280 = VIEW_CONVERT_EXPR<__m128i>(_2279);

  <bb 240> :
<L245>:
  _2764 = _2280;
  abiased_h_577 = _2764;
  __A_2269 = abiased_l_576;
  __B_2270 = x5_l_542;
  _2271 = VIEW_CONVERT_EXPR<__v4su>(__A_2269);
  _2272 = VIEW_CONVERT_EXPR<__v4su>(__B_2270);
  _2273 = _2271 + _2272;
  _2274 = VIEW_CONVERT_EXPR<__m128i>(_2273);

  <bb 241> :
<L244>:
  _2765 = _2274;
  sum_l_578 = _2765;
  __A_2263 = abiased_h_577;
  __B_2264 = x5_h_543;
  _2265 = VIEW_CONVERT_EXPR<__v4su>(__A_2263);
  _2266 = VIEW_CONVERT_EXPR<__v4su>(__B_2264);
  _2267 = _2265 + _2266;
  _2268 = VIEW_CONVERT_EXPR<__m128i>(_2267);

  <bb 242> :
<L243>:
  _2766 = _2268;
  sum_h_579 = _2766;
  __A_2257 = abiased_l_576;
  __B_2258 = x5_l_542;
  _2259 = VIEW_CONVERT_EXPR<__v4su>(__A_2257);
  _2260 = VIEW_CONVERT_EXPR<__v4su>(__B_2258);
  _2261 = _2259 - _2260;
  _2262 = VIEW_CONVERT_EXPR<__m128i>(_2261);

  <bb 243> :
<L242>:
  _2767 = _2262;
  dif_l_580 = _2767;
  __A_2251 = abiased_h_577;
  __B_2252 = x5_h_543;
  _2253 = VIEW_CONVERT_EXPR<__v4su>(__A_2251);
  _2254 = VIEW_CONVERT_EXPR<__v4su>(__B_2252);
  _2255 = _2253 - _2254;
  _2256 = VIEW_CONVERT_EXPR<__m128i>(_2255);

  <bb 244> :
<L241>:
  _2768 = _2256;
  dif_h_581 = _2768;
  __A_2245 = sum_h_579;
  __B_2246 = 17;
  _2247 = VIEW_CONVERT_EXPR<__v4si>(__A_2245);
  _2248 = __builtin_ia32_psradi128 (_2247, __B_2246);
  _2249 = _2248;
  _2250 = VIEW_CONVERT_EXPR<__m128i>(_2249);

  <bb 245> :
<L240>:
  _2769 = _2250;
  _582 = _2769;
  _166 = _582;
  __A_2287 = sum_l_578;
  __B_2288 = 17;
  _2289 = VIEW_CONVERT_EXPR<__v4si>(__A_2287);
  _2290 = __builtin_ia32_psradi128 (_2289, __B_2288);
  _2291 = _2290;
  _2292 = VIEW_CONVERT_EXPR<__m128i>(_2291);

  <bb 246> :
<L247>:
  _2770 = _2292;
  _583 = _2770;
  _167 = _583;
  __A_2293 = _167;
  __B_2294 = _166;
  _2295 = VIEW_CONVERT_EXPR<__v4si>(__B_2294);
  _2296 = VIEW_CONVERT_EXPR<__v4si>(__A_2293);
  _2297 = __builtin_ia32_packssdw128 (_2296, _2295);
  _2298 = _2297;
  _2299 = VIEW_CONVERT_EXPR<__m128i>(_2298);

  <bb 247> :
<L248>:
  _2771 = _2299;
  _584 = _2771;
  _168 = _584;
  row2 = _168;
  __A_2300 = dif_h_581;
  __B_2301 = 17;
  _2302 = VIEW_CONVERT_EXPR<__v4si>(__A_2300);
  _2303 = __builtin_ia32_psradi128 (_2302, __B_2301);
  _2304 = _2303;
  _2305 = VIEW_CONVERT_EXPR<__m128i>(_2304);

  <bb 248> :
<L249>:
  _2772 = _2305;
  _586 = _2772;
  _169 = _586;
  __A_2306 = dif_l_580;
  __B_2307 = 17;
  _2308 = VIEW_CONVERT_EXPR<__v4si>(__A_2306);
  _2309 = __builtin_ia32_psradi128 (_2308, __B_2307);
  _2310 = _2309;
  _2311 = VIEW_CONVERT_EXPR<__m128i>(_2310);

  <bb 249> :
<L250>:
  _2773 = _2311;
  _587 = _2773;
  _170 = _587;
  __A_2312 = _170;
  __B_2313 = _169;
  _2314 = VIEW_CONVERT_EXPR<__v4si>(__B_2313);
  _2315 = VIEW_CONVERT_EXPR<__v4si>(__A_2312);
  _2316 = __builtin_ia32_packssdw128 (_2315, _2314);
  _2317 = _2316;
  _2318 = VIEW_CONVERT_EXPR<__m128i>(_2317);

  <bb 250> :
<L251>:
  _2774 = _2318;
  _588 = _2774;
  _171 = _588;
  row5 = _171;
  __A_2355 = x3_l_496;
  __B_2356 = bias_1_258;
  _2357 = VIEW_CONVERT_EXPR<__v4su>(__A_2355);
  _2358 = VIEW_CONVERT_EXPR<__v4su>(__B_2356);
  _2359 = _2357 + _2358;
  _2360 = VIEW_CONVERT_EXPR<__m128i>(_2359);

  <bb 251> :
<L258>:
  _2775 = _2360;
  abiased_l_590 = _2775;
  __A_2349 = x3_h_497;
  __B_2350 = bias_1_258;
  _2351 = VIEW_CONVERT_EXPR<__v4su>(__A_2349);
  _2352 = VIEW_CONVERT_EXPR<__v4su>(__B_2350);
  _2353 = _2351 + _2352;
  _2354 = VIEW_CONVERT_EXPR<__m128i>(_2353);

  <bb 252> :
<L257>:
  _2776 = _2354;
  abiased_h_591 = _2776;
  __A_2343 = abiased_l_590;
  __B_2344 = x4_l_540;
  _2345 = VIEW_CONVERT_EXPR<__v4su>(__A_2343);
  _2346 = VIEW_CONVERT_EXPR<__v4su>(__B_2344);
  _2347 = _2345 + _2346;
  _2348 = VIEW_CONVERT_EXPR<__m128i>(_2347);

  <bb 253> :
<L256>:
  _2777 = _2348;
  sum_l_592 = _2777;
  __A_2337 = abiased_h_591;
  __B_2338 = x4_h_541;
  _2339 = VIEW_CONVERT_EXPR<__v4su>(__A_2337);
  _2340 = VIEW_CONVERT_EXPR<__v4su>(__B_2338);
  _2341 = _2339 + _2340;
  _2342 = VIEW_CONVERT_EXPR<__m128i>(_2341);

  <bb 254> :
<L255>:
  _2778 = _2342;
  sum_h_593 = _2778;
  __A_2331 = abiased_l_590;
  __B_2332 = x4_l_540;
  _2333 = VIEW_CONVERT_EXPR<__v4su>(__A_2331);
  _2334 = VIEW_CONVERT_EXPR<__v4su>(__B_2332);
  _2335 = _2333 - _2334;
  _2336 = VIEW_CONVERT_EXPR<__m128i>(_2335);

  <bb 255> :
<L254>:
  _2779 = _2336;
  dif_l_594 = _2779;
  __A_2325 = abiased_h_591;
  __B_2326 = x4_h_541;
  _2327 = VIEW_CONVERT_EXPR<__v4su>(__A_2325);
  _2328 = VIEW_CONVERT_EXPR<__v4su>(__B_2326);
  _2329 = _2327 - _2328;
  _2330 = VIEW_CONVERT_EXPR<__m128i>(_2329);

  <bb 256> :
<L253>:
  _2780 = _2330;
  dif_h_595 = _2780;
  __A_2319 = sum_h_593;
  __B_2320 = 17;
  _2321 = VIEW_CONVERT_EXPR<__v4si>(__A_2319);
  _2322 = __builtin_ia32_psradi128 (_2321, __B_2320);
  _2323 = _2322;
  _2324 = VIEW_CONVERT_EXPR<__m128i>(_2323);

  <bb 257> :
<L252>:
  _2781 = _2324;
  _596 = _2781;
  _172 = _596;
  __A_2361 = sum_l_592;
  __B_2362 = 17;
  _2363 = VIEW_CONVERT_EXPR<__v4si>(__A_2361);
  _2364 = __builtin_ia32_psradi128 (_2363, __B_2362);
  _2365 = _2364;
  _2366 = VIEW_CONVERT_EXPR<__m128i>(_2365);

  <bb 258> :
<L259>:
  _2782 = _2366;
  _597 = _2782;
  _173 = _597;
  __A_2367 = _173;
  __B_2368 = _172;
  _2369 = VIEW_CONVERT_EXPR<__v4si>(__B_2368);
  _2370 = VIEW_CONVERT_EXPR<__v4si>(__A_2367);
  _2371 = __builtin_ia32_packssdw128 (_2370, _2369);
  _2372 = _2371;
  _2373 = VIEW_CONVERT_EXPR<__m128i>(_2372);

  <bb 259> :
<L260>:
  _2783 = _2373;
  _598 = _2783;
  _174 = _598;
  row3 = _174;
  __A_2374 = dif_h_595;
  __B_2375 = 17;
  _2376 = VIEW_CONVERT_EXPR<__v4si>(__A_2374);
  _2377 = __builtin_ia32_psradi128 (_2376, __B_2375);
  _2378 = _2377;
  _2379 = VIEW_CONVERT_EXPR<__m128i>(_2378);

  <bb 260> :
<L261>:
  _2784 = _2379;
  _600 = _2784;
  _175 = _600;
  __A_2380 = dif_l_594;
  __B_2381 = 17;
  _2382 = VIEW_CONVERT_EXPR<__v4si>(__A_2380);
  _2383 = __builtin_ia32_psradi128 (_2382, __B_2381);
  _2384 = _2383;
  _2385 = VIEW_CONVERT_EXPR<__m128i>(_2384);

  <bb 261> :
<L262>:
  _2785 = _2385;
  _601 = _2785;
  _176 = _601;
  __A_2386 = _176;
  __B_2387 = _175;
  _2388 = VIEW_CONVERT_EXPR<__v4si>(__B_2387);
  _2389 = VIEW_CONVERT_EXPR<__v4si>(__A_2386);
  _2390 = __builtin_ia32_packssdw128 (_2389, _2388);
  _2391 = _2390;
  _2392 = VIEW_CONVERT_EXPR<__m128i>(_2391);

  <bb 262> :
<L263>:
  _2786 = _2392;
  _602 = _2786;
  row4_603 = _602;
  sum04 ={v} {CLOBBER};
  dif04 ={v} {CLOBBER};
  sum17 ={v} {CLOBBER};
  sum35 ={v} {CLOBBER};
  row1.199_177 = row1;
  __A_2393 = row0_557;
  __B_2394 = row1.199_177;
  _2395 = VIEW_CONVERT_EXPR<__v8hi>(__B_2394);
  _2396 = VIEW_CONVERT_EXPR<__v8hi>(__A_2393);
  _2397 = __builtin_ia32_packuswb128 (_2396, _2395);
  _2398 = _2397;
  _2399 = VIEW_CONVERT_EXPR<__m128i>(_2398);

  <bb 263> :
<L264>:
  _2787 = _2399;
  _608 = _2787;
  _178 = _608;
  p0 = _178;
  row3.200_179 = row3;
  row2.201_180 = row2;
  __A_2400 = row2.201_180;
  __B_2401 = row3.200_179;
  _2402 = VIEW_CONVERT_EXPR<__v8hi>(__B_2401);
  _2403 = VIEW_CONVERT_EXPR<__v8hi>(__A_2400);
  _2404 = __builtin_ia32_packuswb128 (_2403, _2402);
  _2405 = _2404;
  _2406 = VIEW_CONVERT_EXPR<__m128i>(_2405);

  <bb 264> :
<L265>:
  _2788 = _2406;
  _610 = _2788;
  _181 = _610;
  p1 = _181;
  row5.202_182 = row5;
  __A_2407 = row4_603;
  __B_2408 = row5.202_182;
  _2409 = VIEW_CONVERT_EXPR<__v8hi>(__B_2408);
  _2410 = VIEW_CONVERT_EXPR<__v8hi>(__A_2407);
  _2411 = __builtin_ia32_packuswb128 (_2410, _2409);
  _2412 = _2411;
  _2413 = VIEW_CONVERT_EXPR<__m128i>(_2412);

  <bb 265> :
<L266>:
  _2789 = _2413;
  _612 = _2789;
  _183 = _612;
  p2 = _183;
  row7.203_184 = row7;
  row6.204_185 = row6;
  __A_2414 = row6.204_185;
  __B_2415 = row7.203_184;
  _2416 = VIEW_CONVERT_EXPR<__v8hi>(__B_2415);
  _2417 = VIEW_CONVERT_EXPR<__v8hi>(__A_2414);
  _2418 = __builtin_ia32_packuswb128 (_2417, _2416);
  _2419 = _2418;
  _2420 = VIEW_CONVERT_EXPR<__m128i>(_2419);

  <bb 266> :
<L267>:
  _2790 = _2420;
  _614 = _2790;
  _186 = _614;
  p3 = _186;
  tmp_616 = p0;
  p2.205_187 = p2;
  p0.206_188 = p0;
  __A_2421 = p0.206_188;
  __B_2422 = p2.205_187;
  _2423 = VIEW_CONVERT_EXPR<__v16qi>(__B_2422);
  _2424 = VIEW_CONVERT_EXPR<__v16qi>(__A_2421);
  _2425 = __builtin_ia32_punpcklbw128 (_2424, _2423);
  _2426 = _2425;
  _2427 = VIEW_CONVERT_EXPR<__m128i>(_2426);

  <bb 267> :
<L268>:
  _2791 = _2427;
  _617 = _2791;
  _189 = _617;
  p0 = _189;
  p2.207_190 = p2;
  __A_2428 = tmp_616;
  __B_2429 = p2.207_190;
  _2430 = VIEW_CONVERT_EXPR<__v16qi>(__B_2429);
  _2431 = VIEW_CONVERT_EXPR<__v16qi>(__A_2428);
  _2432 = __builtin_ia32_punpckhbw128 (_2431, _2430);
  _2433 = _2432;
  _2434 = VIEW_CONVERT_EXPR<__m128i>(_2433);

  <bb 268> :
<L269>:
  _2792 = _2434;
  _619 = _2792;
  _191 = _619;
  p2 = _191;
  tmp_621 = p1;
  p3.208_192 = p3;
  p1.209_193 = p1;
  __A_2435 = p1.209_193;
  __B_2436 = p3.208_192;
  _2437 = VIEW_CONVERT_EXPR<__v16qi>(__B_2436);
  _2438 = VIEW_CONVERT_EXPR<__v16qi>(__A_2435);
  _2439 = __builtin_ia32_punpcklbw128 (_2438, _2437);
  _2440 = _2439;
  _2441 = VIEW_CONVERT_EXPR<__m128i>(_2440);

  <bb 269> :
<L270>:
  _2793 = _2441;
  _622 = _2793;
  _194 = _622;
  p1 = _194;
  p3.210_195 = p3;
  __A_2442 = tmp_621;
  __B_2443 = p3.210_195;
  _2444 = VIEW_CONVERT_EXPR<__v16qi>(__B_2443);
  _2445 = VIEW_CONVERT_EXPR<__v16qi>(__A_2442);
  _2446 = __builtin_ia32_punpckhbw128 (_2445, _2444);
  _2447 = _2446;
  _2448 = VIEW_CONVERT_EXPR<__m128i>(_2447);

  <bb 270> :
<L271>:
  _2794 = _2448;
  _624 = _2794;
  _196 = _624;
  p3 = _196;
  tmp_626 = p0;
  p1.211_197 = p1;
  p0.212_198 = p0;
  __A_2449 = p0.212_198;
  __B_2450 = p1.211_197;
  _2451 = VIEW_CONVERT_EXPR<__v16qi>(__B_2450);
  _2452 = VIEW_CONVERT_EXPR<__v16qi>(__A_2449);
  _2453 = __builtin_ia32_punpcklbw128 (_2452, _2451);
  _2454 = _2453;
  _2455 = VIEW_CONVERT_EXPR<__m128i>(_2454);

  <bb 271> :
<L272>:
  _2795 = _2455;
  _627 = _2795;
  _199 = _627;
  p0 = _199;
  p1.213_200 = p1;
  __A_2456 = tmp_626;
  __B_2457 = p1.213_200;
  _2458 = VIEW_CONVERT_EXPR<__v16qi>(__B_2457);
  _2459 = VIEW_CONVERT_EXPR<__v16qi>(__A_2456);
  _2460 = __builtin_ia32_punpckhbw128 (_2459, _2458);
  _2461 = _2460;
  _2462 = VIEW_CONVERT_EXPR<__m128i>(_2461);

  <bb 272> :
<L273>:
  _2796 = _2462;
  _629 = _2796;
  _201 = _629;
  p1 = _201;
  tmp_631 = p2;
  p3.214_202 = p3;
  p2.215_203 = p2;
  __A_2463 = p2.215_203;
  __B_2464 = p3.214_202;
  _2465 = VIEW_CONVERT_EXPR<__v16qi>(__B_2464);
  _2466 = VIEW_CONVERT_EXPR<__v16qi>(__A_2463);
  _2467 = __builtin_ia32_punpcklbw128 (_2466, _2465);
  _2468 = _2467;
  _2469 = VIEW_CONVERT_EXPR<__m128i>(_2468);

  <bb 273> :
<L274>:
  _2797 = _2469;
  _632 = _2797;
  _204 = _632;
  p2 = _204;
  p3.216_205 = p3;
  __A_2470 = tmp_631;
  __B_2471 = p3.216_205;
  _2472 = VIEW_CONVERT_EXPR<__v16qi>(__B_2471);
  _2473 = VIEW_CONVERT_EXPR<__v16qi>(__A_2470);
  _2474 = __builtin_ia32_punpckhbw128 (_2473, _2472);
  _2475 = _2474;
  _2476 = VIEW_CONVERT_EXPR<__m128i>(_2475);

  <bb 274> :
<L275>:
  _2798 = _2476;
  _634 = _2798;
  _206 = _634;
  p3 = _206;
  tmp_636 = p0;
  p2.217_207 = p2;
  p0.218_208 = p0;
  __A_2477 = p0.218_208;
  __B_2478 = p2.217_207;
  _2479 = VIEW_CONVERT_EXPR<__v16qi>(__B_2478);
  _2480 = VIEW_CONVERT_EXPR<__v16qi>(__A_2477);
  _2481 = __builtin_ia32_punpcklbw128 (_2480, _2479);
  _2482 = _2481;
  _2483 = VIEW_CONVERT_EXPR<__m128i>(_2482);

  <bb 275> :
<L276>:
  _2799 = _2483;
  _637 = _2799;
  _209 = _637;
  p0 = _209;
  p2.219_210 = p2;
  __A_2484 = tmp_636;
  __B_2485 = p2.219_210;
  _2486 = VIEW_CONVERT_EXPR<__v16qi>(__B_2485);
  _2487 = VIEW_CONVERT_EXPR<__v16qi>(__A_2484);
  _2488 = __builtin_ia32_punpckhbw128 (_2487, _2486);
  _2489 = _2488;
  _2490 = VIEW_CONVERT_EXPR<__m128i>(_2489);

  <bb 276> :
<L277>:
  _2800 = _2490;
  _639 = _2800;
  _211 = _639;
  p2 = _211;
  tmp_641 = p1;
  p3.220_212 = p3;
  p1.221_213 = p1;
  __A_2491 = p1.221_213;
  __B_2492 = p3.220_212;
  _2493 = VIEW_CONVERT_EXPR<__v16qi>(__B_2492);
  _2494 = VIEW_CONVERT_EXPR<__v16qi>(__A_2491);
  _2495 = __builtin_ia32_punpcklbw128 (_2494, _2493);
  _2496 = _2495;
  _2497 = VIEW_CONVERT_EXPR<__m128i>(_2496);

  <bb 277> :
<L278>:
  _2801 = _2497;
  _642 = _2801;
  _214 = _642;
  p1 = _214;
  p3.222_215 = p3;
  __A_2498 = tmp_641;
  __B_2499 = p3.222_215;
  _2500 = VIEW_CONVERT_EXPR<__v16qi>(__B_2499);
  _2501 = VIEW_CONVERT_EXPR<__v16qi>(__A_2498);
  _2502 = __builtin_ia32_punpckhbw128 (_2501, _2500);
  _2503 = _2502;
  _2504 = VIEW_CONVERT_EXPR<__m128i>(_2503);

  <bb 278> :
<L279>:
  _2802 = _2504;
  _644 = _2802;
  _216 = _644;
  p3 = _216;
  p0.223_217 = p0;
  __P_2505 = out_646(D);
  __B_2506 = p0.223_217;
  _2507 = BIT_FIELD_REF <__B_2506, 64, 0>;
  _2508 = VIEW_CONVERT_EXPR<__m64>(_2507);
  MEM[(__m64_u * {ref-all})__P_2505] = _2508;
  _218 = (sizetype) out_stride_647(D);
  out_648 = out_646(D) + _218;
  p0.224_219 = p0;
  _220 = VIEW_CONVERT_EXPR<__v4si>(p0.224_219);
  _649 = __builtin_ia32_pshufd (_220, 78);
  _221 = _649;
  _222 = VIEW_CONVERT_EXPR<__m128i>(_221);
  __P_2513 = out_648;
  __B_2514 = _222;
  _2515 = BIT_FIELD_REF <__B_2514, 64, 0>;
  _2516 = VIEW_CONVERT_EXPR<__m64>(_2515);
  MEM[(__m64_u * {ref-all})__P_2513] = _2516;
  _223 = (sizetype) out_stride_647(D);
  out_650 = out_648 + _223;
  p2.225_224 = p2;
  __P_2509 = out_650;
  __B_2510 = p2.225_224;
  _2511 = BIT_FIELD_REF <__B_2510, 64, 0>;
  _2512 = VIEW_CONVERT_EXPR<__m64>(_2511);
  MEM[(__m64_u * {ref-all})__P_2509] = _2512;
  _225 = (sizetype) out_stride_647(D);
  out_651 = out_650 + _225;
  p2.226_226 = p2;
  _227 = VIEW_CONVERT_EXPR<__v4si>(p2.226_226);
  _652 = __builtin_ia32_pshufd (_227, 78);
  _228 = _652;
  _229 = VIEW_CONVERT_EXPR<__m128i>(_228);
  __P_2521 = out_651;
  __B_2522 = _229;
  _2523 = BIT_FIELD_REF <__B_2522, 64, 0>;
  _2524 = VIEW_CONVERT_EXPR<__m64>(_2523);
  MEM[(__m64_u * {ref-all})__P_2521] = _2524;
  _230 = (sizetype) out_stride_647(D);
  out_653 = out_651 + _230;
  p1.227_231 = p1;
  __P_2517 = out_653;
  __B_2518 = p1.227_231;
  _2519 = BIT_FIELD_REF <__B_2518, 64, 0>;
  _2520 = VIEW_CONVERT_EXPR<__m64>(_2519);
  MEM[(__m64_u * {ref-all})__P_2517] = _2520;
  _232 = (sizetype) out_stride_647(D);
  out_654 = out_653 + _232;
  p1.228_233 = p1;
  _234 = VIEW_CONVERT_EXPR<__v4si>(p1.228_233);
  _655 = __builtin_ia32_pshufd (_234, 78);
  _235 = _655;
  _236 = VIEW_CONVERT_EXPR<__m128i>(_235);
  __P_2529 = out_654;
  __B_2530 = _236;
  _2531 = BIT_FIELD_REF <__B_2530, 64, 0>;
  _2532 = VIEW_CONVERT_EXPR<__m64>(_2531);
  MEM[(__m64_u * {ref-all})__P_2529] = _2532;
  _237 = (sizetype) out_stride_647(D);
  out_656 = out_654 + _237;
  p3.229_238 = p3;
  __P_2525 = out_656;
  __B_2526 = p3.229_238;
  _2527 = BIT_FIELD_REF <__B_2526, 64, 0>;
  _2528 = VIEW_CONVERT_EXPR<__m64>(_2527);
  MEM[(__m64_u * {ref-all})__P_2525] = _2528;
  _239 = (sizetype) out_stride_647(D);
  out_657 = out_656 + _239;
  p3.230_240 = p3;
  _241 = VIEW_CONVERT_EXPR<__v4si>(p3.230_240);
  _658 = __builtin_ia32_pshufd (_241, 78);
  _242 = _658;
  _243 = VIEW_CONVERT_EXPR<__m128i>(_242);
  __P_2533 = out_657;
  __B_2534 = _243;
  _2535 = BIT_FIELD_REF <__B_2534, 64, 0>;
  _2536 = VIEW_CONVERT_EXPR<__m64>(_2535);
  MEM[(__m64_u * {ref-all})__P_2533] = _2536;
  p0 ={v} {CLOBBER};
  p1 ={v} {CLOBBER};
  p2 ={v} {CLOBBER};
  p3 ={v} {CLOBBER};
  row1 ={v} {CLOBBER};
  row2 ={v} {CLOBBER};
  row3 ={v} {CLOBBER};
  row5 ={v} {CLOBBER};
  row6 ={v} {CLOBBER};
  row7 ={v} {CLOBBER};
  return;

}



;; Function stbi__parse_entropy_coded_data (_ZL30stbi__parse_entropy_coded_dataP10stbi__jpeg, funcdef_no=853, decl_uid=11292, cgraph_uid=759, symbol_order=771)

Before removal of unreachable regions:
Eh tree:
   4 must_not_throw
   3 cleanup land:{2,<L101>}
   2 must_not_throw
   1 cleanup land:{1,<L100>}
Reachable regions: n_bits = 5, set = {1 3 }
Reachable landing pads: n_bits = 3, set = {1 2 }
Removing unreachable region 2
Removing unreachable region 4


After removal of unreachable regions:
Eh tree:
   3 cleanup land:{2,<L101>}
   1 cleanup land:{1,<L100>}


Removing basic block 100
Removing basic block 99
Removing unreachable region 1
Removing unreachable region 3
Merging blocks 8 and 9
Merging blocks 11 and 12
Merging blocks 14 and 15
Merging blocks 34 and 35
Merging blocks 37 and 38
Merging blocks 43 and 44
stbi__parse_entropy_coded_data (struct stbi__jpeg * z)
{
  int D.14525;
  int D.14524;
  int D.14523;
  int D.14520;
  int D.14517;
  short int * data;
  int y2;
  int x2;
  int n;
  int y;
  int x;
  int k;
  int j;
  int i;
  int ha;
  short int * data;
  int h;
  int w;
  int n;
  int j;
  int i;
  int ha;
  int y2;
  int x2;
  int n;
  short int data[64];
  int y;
  int x;
  int k;
  int j;
  int i;
  int ha;
  int h;
  int w;
  int n;
  short int data[64];
  int j;
  int i;
  bool retval.240;
  bool retval.239;
  bool retval.238;
  bool retval.237;
  bool retval.236;
  bool retval.235;
  bool retval.234;
  bool retval.233;
  int D.14434;
  bool retval.232;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  stbi__uint16[64] * _8;
  stbi__int16[512] * _9;
  struct stbi__huffman[4] * _10;
  long long unsigned int _11;
  long long unsigned int _12;
  struct stbi__huffman * _13;
  struct stbi__huffman[4] * _14;
  int _15;
  long long unsigned int _16;
  long long unsigned int _17;
  struct stbi__huffman * _18;
  int _19;
  void (*<Tc52>) (stbi_uc *, int, short int *) _20;
  int _21;
  stbi_uc * _22;
  int _23;
  int _24;
  int _25;
  sizetype _26;
  int _27;
  sizetype _28;
  sizetype _29;
  stbi_uc * _30;
  int _31;
  int _32;
  int _33;
  int _34;
  unsigned char _35;
  unsigned char _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  int _47;
  int _48;
  stbi__uint16[64] * _49;
  stbi__int16[512] * _50;
  struct stbi__huffman[4] * _51;
  long long unsigned int _52;
  long long unsigned int _53;
  struct stbi__huffman * _54;
  struct stbi__huffman[4] * _55;
  int _56;
  long long unsigned int _57;
  long long unsigned int _58;
  struct stbi__huffman * _59;
  int _60;
  void (*<Tc52>) (stbi_uc *, int, short int *) _61;
  int _62;
  stbi_uc * _63;
  int _64;
  int _65;
  sizetype _66;
  sizetype _67;
  sizetype _68;
  stbi_uc * _69;
  int _70;
  int _71;
  int _72;
  int _73;
  unsigned char _74;
  unsigned char _75;
  int _76;
  int _77;
  int _78;
  int _79;
  int _80;
  short int * _81;
  int _82;
  int _83;
  int _84;
  int _85;
  long long unsigned int _86;
  long long unsigned int _87;
  int _88;
  int _89;
  struct stbi__huffman * _90;
  int _91;
  stbi__int16[512] * _92;
  struct stbi__huffman * _93;
  int _94;
  int _95;
  int _96;
  int _97;
  int _98;
  unsigned char _99;
  unsigned char _100;
  int _101;
  int _102;
  int _103;
  int _104;
  int _105;
  int _106;
  int _107;
  int _108;
  int _109;
  short int * _110;
  int _111;
  int _112;
  int _113;
  int _114;
  long long unsigned int _115;
  long long unsigned int _116;
  int _117;
  struct stbi__huffman * _118;
  int _119;
  int _120;
  int _121;
  int _122;
  int _123;
  unsigned char _124;
  unsigned char _125;
  int _140;
  int _141;
  int _142;
  int _181;
  bool retval.232_182;
  int _183;
  bool retval.233_186;
  int _189;
  int _193;
  int _205;
  bool retval.234_206;
  int _207;
  bool retval.235_213;
  int _216;
  int _220;
  int _229;
  bool retval.236_230;
  int _231;
  int _234;
  bool retval.237_235;
  int _236;
  bool retval.238_238;
  int _241;
  int _244;
  int _255;
  bool retval.239_256;
  int _257;
  bool retval.240_262;
  int _265;
  int _268;

  <bb 2> :
  stbi__jpeg_reset (z_172(D));
  _1 = z_172(D)->progressive;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 3> :
  _2 = z_172(D)->scan_n;
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 4> :
  n_174 = z_172(D)->order[0];
  _3 = z_172(D)->img_comp[n_174].x;
  _4 = _3 + 7;
  w_175 = _4 >> 3;
  _5 = z_172(D)->img_comp[n_174].y;
  _6 = _5 + 7;
  h_176 = _6 >> 3;
  j_177 = 0;

  <bb 5> :
  # j_127 = PHI <j_177(4), j_192(18)>
  if (j_127 >= h_176)
    goto <bb 19>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  i_178 = 0;

  <bb 7> :
  # i_126 = PHI <i_178(6), i_190(17)>
  if (i_126 >= w_175)
    goto <bb 18>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  ha_179 = z_172(D)->img_comp[n_174].ha;
  _7 = z_172(D)->img_comp[n_174].tq;
  _8 = &z_172(D)->dequant[_7];
  _9 = &z_172(D)->fast_ac[ha_179];
  _10 = &z_172(D)->huff_ac;
  _11 = (long long unsigned int) ha_179;
  _12 = _11 * 1680;
  _13 = _10 + _12;
  _14 = &z_172(D)->huff_dc;
  _15 = z_172(D)->img_comp[n_174].hd;
  _16 = (long long unsigned int) _15;
  _17 = _16 * 1680;
  _18 = _14 + _17;
  _181 = stbi__jpeg_decode_block (z_172(D), &data, _18, _13, _9, n_174, _8);
  _19 = _181;
  retval.232_182 = _19 == 0;
  if (retval.232_182 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _183 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 10> :
  _20 = z_172(D)->idct_block_kernel;
  _21 = z_172(D)->img_comp[n_174].w2;
  _22 = z_172(D)->img_comp[n_174].data;
  _23 = z_172(D)->img_comp[n_174].w2;
  _24 = j_127 * _23;
  _25 = _24 * 8;
  _26 = (sizetype) _25;
  _27 = i_126 * 8;
  _28 = (sizetype) _27;
  _29 = _26 + _28;
  _30 = _22 + _29;
  _20 (_30, _21, &data);
  _31 = z_172(D)->todo;
  _32 = _31 + -1;
  z_172(D)->todo = _32;
  _33 = z_172(D)->todo;
  retval.233_186 = _33 <= 0;
  if (retval.233_186 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 11> :
  _34 = z_172(D)->code_bits;
  if (_34 <= 23)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 13> :
  _35 = z_172(D)->marker;
  if (_35 <= 207)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _36 = z_172(D)->marker;
  if (_36 > 215)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _189 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 16> :
  stbi__jpeg_reset (z_172(D));

  <bb 17> :
  i_190 = i_126 + 1;
  goto <bb 7>; [INV]

  <bb 18> :
  j_192 = j_127 + 1;
  goto <bb 5>; [INV]

  <bb 19> :
  _193 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 20> :
  # _140 = PHI <_183(9), _189(15), _193(19)>
  data ={v} {CLOBBER};
  goto <bb 92>; [INV]

  <bb 21> :
  j_195 = 0;

  <bb 22> :
  # j_129 = PHI <j_195(21), j_219(44)>
  _37 = z_172(D)->img_mcu_y;
  if (j_129 >= _37)
    goto <bb 45>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  i_196 = 0;

  <bb 24> :
  # i_128 = PHI <i_196(23), i_217(43)>
  _38 = z_172(D)->img_mcu_x;
  if (i_128 >= _38)
    goto <bb 44>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  k_197 = 0;

  <bb 26> :
  # k_130 = PHI <k_197(25), k_211(35)>
  _39 = z_172(D)->scan_n;
  if (k_130 >= _39)
    goto <bb 36>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  n_198 = z_172(D)->order[k_130];
  y_199 = 0;

  <bb 28> :
  # y_132 = PHI <y_199(27), y_210(34)>
  _40 = z_172(D)->img_comp[n_198].v;
  if (y_132 >= _40)
    goto <bb 35>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  x_200 = 0;

  <bb 30> :
  # x_131 = PHI <x_200(29), x_209(33)>
  _41 = z_172(D)->img_comp[n_198].h;
  if (x_131 >= _41)
    goto <bb 34>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  _42 = z_172(D)->img_comp[n_198].h;
  _43 = i_128 * _42;
  _44 = x_131 + _43;
  x2_201 = _44 * 8;
  _45 = z_172(D)->img_comp[n_198].v;
  _46 = j_129 * _45;
  _47 = y_132 + _46;
  y2_202 = _47 * 8;
  ha_203 = z_172(D)->img_comp[n_198].ha;
  _48 = z_172(D)->img_comp[n_198].tq;
  _49 = &z_172(D)->dequant[_48];
  _50 = &z_172(D)->fast_ac[ha_203];
  _51 = &z_172(D)->huff_ac;
  _52 = (long long unsigned int) ha_203;
  _53 = _52 * 1680;
  _54 = _51 + _53;
  _55 = &z_172(D)->huff_dc;
  _56 = z_172(D)->img_comp[n_198].hd;
  _57 = (long long unsigned int) _56;
  _58 = _57 * 1680;
  _59 = _55 + _58;
  _205 = stbi__jpeg_decode_block (z_172(D), &data, _59, _54, _50, n_198, _49);
  _60 = _205;
  retval.234_206 = _60 == 0;
  if (retval.234_206 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  _207 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 46>; [INV]

  <bb 33> :
  _61 = z_172(D)->idct_block_kernel;
  _62 = z_172(D)->img_comp[n_198].w2;
  _63 = z_172(D)->img_comp[n_198].data;
  _64 = z_172(D)->img_comp[n_198].w2;
  _65 = y2_202 * _64;
  _66 = (sizetype) _65;
  _67 = (sizetype) x2_201;
  _68 = _66 + _67;
  _69 = _63 + _68;
  _61 (_69, _62, &data);
  x_209 = x_131 + 1;
  goto <bb 30>; [INV]

  <bb 34> :
  y_210 = y_132 + 1;
  goto <bb 28>; [INV]

  <bb 35> :
  k_211 = k_130 + 1;
  goto <bb 26>; [INV]

  <bb 36> :
  _70 = z_172(D)->todo;
  _71 = _70 + -1;
  z_172(D)->todo = _71;
  _72 = z_172(D)->todo;
  retval.235_213 = _72 <= 0;
  if (retval.235_213 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 37> :
  _73 = z_172(D)->code_bits;
  if (_73 <= 23)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 39> :
  _74 = z_172(D)->marker;
  if (_74 <= 207)
    goto <bb 41>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 40> :
  _75 = z_172(D)->marker;
  if (_75 > 215)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  _216 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 46>; [INV]

  <bb 42> :
  stbi__jpeg_reset (z_172(D));

  <bb 43> :
  i_217 = i_128 + 1;
  goto <bb 24>; [INV]

  <bb 44> :
  j_219 = j_129 + 1;
  goto <bb 22>; [INV]

  <bb 45> :
  _220 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 46> :
  # _141 = PHI <_207(32), _216(41), _220(45)>
  data ={v} {CLOBBER};
  goto <bb 92>; [INV]

  <bb 47> :
  _76 = z_172(D)->scan_n;
  if (_76 == 1)
    goto <bb 48>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 48> :
  n_222 = z_172(D)->order[0];
  _77 = z_172(D)->img_comp[n_222].x;
  _78 = _77 + 7;
  w_223 = _78 >> 3;
  _79 = z_172(D)->img_comp[n_222].y;
  _80 = _79 + 7;
  h_224 = _80 >> 3;
  j_225 = 0;

  <bb 49> :
  # j_134 = PHI <j_225(48), j_243(65)>
  if (j_134 >= h_224)
    goto <bb 66>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 50> :
  i_226 = 0;

  <bb 51> :
  # i_133 = PHI <i_226(50), i_242(64)>
  if (i_133 >= w_223)
    goto <bb 65>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  _81 = z_172(D)->img_comp[n_222].coeff;
  _82 = z_172(D)->img_comp[n_222].coeff_w;
  _83 = j_134 * _82;
  _84 = i_133 + _83;
  _85 = _84 * 64;
  _86 = (long long unsigned int) _85;
  _87 = _86 * 2;
  data_227 = _81 + _87;
  _88 = z_172(D)->spec_start;
  if (_88 == 0)
    goto <bb 53>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 53> :
  _89 = z_172(D)->img_comp[n_222].hd;
  _90 = &z_172(D)->huff_dc[_89];
  _229 = stbi__jpeg_decode_block_prog_dc (z_172(D), data_227, _90, n_222);
  _91 = _229;
  retval.236_230 = _91 == 0;
  if (retval.236_230 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  _231 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 55> :
  ha_232 = z_172(D)->img_comp[n_222].ha;
  _92 = &z_172(D)->fast_ac[ha_232];
  _93 = &z_172(D)->huff_ac[ha_232];
  _234 = stbi__jpeg_decode_block_prog_ac (z_172(D), data_227, _93, _92);
  _94 = _234;
  retval.237_235 = _94 == 0;
  if (retval.237_235 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  _236 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 57> :
  _95 = z_172(D)->todo;
  _96 = _95 + -1;
  z_172(D)->todo = _96;
  _97 = z_172(D)->todo;
  retval.238_238 = _97 <= 0;
  if (retval.238_238 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 58> :
  _98 = z_172(D)->code_bits;
  if (_98 <= 23)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 60> :
  _99 = z_172(D)->marker;
  if (_99 <= 207)
    goto <bb 62>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  _100 = z_172(D)->marker;
  if (_100 > 215)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  _241 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 63> :
  stbi__jpeg_reset (z_172(D));

  <bb 64> :
  i_242 = i_133 + 1;
  goto <bb 51>; [INV]

  <bb 65> :
  j_243 = j_134 + 1;
  goto <bb 49>; [INV]

  <bb 66> :
  _244 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 67> :
  j_245 = 0;

  <bb 68> :
  # j_136 = PHI <j_245(67), j_267(90)>
  _101 = z_172(D)->img_mcu_y;
  if (j_136 >= _101)
    goto <bb 91>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 69> :
  i_246 = 0;

  <bb 70> :
  # i_135 = PHI <i_246(69), i_266(89)>
  _102 = z_172(D)->img_mcu_x;
  if (i_135 >= _102)
    goto <bb 90>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 71> :
  k_247 = 0;

  <bb 72> :
  # k_137 = PHI <k_247(71), k_260(81)>
  _103 = z_172(D)->scan_n;
  if (k_137 >= _103)
    goto <bb 82>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 73> :
  n_248 = z_172(D)->order[k_137];
  y_249 = 0;

  <bb 74> :
  # y_139 = PHI <y_249(73), y_259(80)>
  _104 = z_172(D)->img_comp[n_248].v;
  if (y_139 >= _104)
    goto <bb 81>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 75> :
  x_250 = 0;

  <bb 76> :
  # x_138 = PHI <x_250(75), x_258(79)>
  _105 = z_172(D)->img_comp[n_248].h;
  if (x_138 >= _105)
    goto <bb 80>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 77> :
  _106 = z_172(D)->img_comp[n_248].h;
  _107 = i_135 * _106;
  x2_251 = x_138 + _107;
  _108 = z_172(D)->img_comp[n_248].v;
  _109 = j_136 * _108;
  y2_252 = y_139 + _109;
  _110 = z_172(D)->img_comp[n_248].coeff;
  _111 = z_172(D)->img_comp[n_248].coeff_w;
  _112 = y2_252 * _111;
  _113 = x2_251 + _112;
  _114 = _113 * 64;
  _115 = (long long unsigned int) _114;
  _116 = _115 * 2;
  data_253 = _110 + _116;
  _117 = z_172(D)->img_comp[n_248].hd;
  _118 = &z_172(D)->huff_dc[_117];
  _255 = stbi__jpeg_decode_block_prog_dc (z_172(D), data_253, _118, n_248);
  _119 = _255;
  retval.239_256 = _119 == 0;
  if (retval.239_256 != 0)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  _257 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 79> :
  x_258 = x_138 + 1;
  goto <bb 76>; [INV]

  <bb 80> :
  y_259 = y_139 + 1;
  goto <bb 74>; [INV]

  <bb 81> :
  k_260 = k_137 + 1;
  goto <bb 72>; [INV]

  <bb 82> :
  _120 = z_172(D)->todo;
  _121 = _120 + -1;
  z_172(D)->todo = _121;
  _122 = z_172(D)->todo;
  retval.240_262 = _122 <= 0;
  if (retval.240_262 != 0)
    goto <bb 83>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 83> :
  _123 = z_172(D)->code_bits;
  if (_123 <= 23)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  stbi__grow_buffer_unsafe (z_172(D));

  <bb 85> :
  _124 = z_172(D)->marker;
  if (_124 <= 207)
    goto <bb 87>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 86> :
  _125 = z_172(D)->marker;
  if (_125 > 215)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  _265 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 92>; [INV]

  <bb 88> :
  stbi__jpeg_reset (z_172(D));

  <bb 89> :
  i_266 = i_135 + 1;
  goto <bb 70>; [INV]

  <bb 90> :
  j_267 = j_136 + 1;
  goto <bb 68>; [INV]

  <bb 91> :
  _268 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 92> :
  # _142 = PHI <_140(20), _141(46), _231(54), _236(56), _241(62), _244(66), _257(78), _265(87), _268(91)>
<L99>:
  return _142;

}



;; Function stbi__process_marker (_ZL20stbi__process_markerP10stbi__jpegi, funcdef_no=856, decl_uid=11379, cgraph_uid=762, symbol_order=776)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L85>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L85>}


Removing basic block 85
Removing unreachable region 1
Merging blocks 31 and 32
Merging blocks 37 and 38
Merging blocks 48 and 49
stbi__process_marker (struct stbi__jpeg * z, int m)
{
  unsigned char D.14633;
  unsigned char D.14632;
  unsigned char D.14631;
  int D.14630;
  unsigned char D.14626;
  unsigned char D.14625;
  unsigned char D.14624;
  int D.14623;
  unsigned char D.14622;
  int D.14621;
  unsigned char D.14620;
  int D.14619;
  int D.14618;
  int D.14617;
  int i;
  int ok;
  static const unsigned char tag[6] = {65, 100, 111, 98, 101, 0};
  int i;
  int ok;
  static const unsigned char tag[5] = {74, 70, 73, 70, 0};
  int th;
  int tc;
  int q;
  int n;
  int i;
  int sizes[16];
  stbi_uc * v;
  int i;
  int t;
  int sixteen;
  int p;
  int q;
  int L;
  bool retval.247;
  bool retval.246;
  bool retval.245;
  bool retval.244;
  int iftmp.243;
  stbi__uint16 iftmp.242;
  bool retval.241;
  int D.14537;
  struct stbi__context * _1;
  int _2;
  struct stbi__context * _3;
  int _4;
  struct stbi__context * _5;
  int _6;
  struct stbi__context * _7;
  unsigned char _8;
  bool _9;
  struct stbi__context * _10;
  int _11;
  struct stbi__context * _12;
  unsigned char _13;
  unsigned char _14;
  int _15;
  bool _16;
  struct stbi__context * _17;
  int _18;
  struct stbi__context * _19;
  unsigned char _20;
  struct stbi__context * _21;
  unsigned char _22;
  int _23;
  int _24;
  struct stbi__huffman[4] * _25;
  long long unsigned int _26;
  long long unsigned int _27;
  struct stbi__huffman * _28;
  int _29;
  struct stbi__huffman[4] * _30;
  long long unsigned int _31;
  long long unsigned int _32;
  struct stbi__huffman * _33;
  int _34;
  struct stbi__context * _35;
  sizetype _36;
  stbi_uc * _37;
  unsigned char _38;
  struct stbi__huffman[4] * _39;
  long long unsigned int _40;
  long long unsigned int _41;
  struct stbi__huffman * _42;
  stbi__int16[512] * _43;
  bool _44;
  struct stbi__context * _45;
  struct stbi__context * _46;
  unsigned char _47;
  unsigned char _48;
  struct stbi__context * _49;
  unsigned char _50;
  unsigned char _51;
  struct stbi__context * _52;
  struct stbi__context * _53;
  struct stbi__context * _54;
  struct stbi__context * _55;
  unsigned char _56;
  int _57;
  struct stbi__context * _58;
  int _74;
  int _75;
  stbi__uint16 iftmp.242_76;
  int iftmp.243_77;
  int _97;
  int _100;
  bool retval.241_101;
  int _103;
  int _105;
  int _107;
  int _109;
  unsigned char _112;
  int _118;
  int _120;
  int _123;
  stbi__uint16 iftmp.242_124;
  unsigned char _126;
  stbi__uint16 iftmp.242_127;
  int iftmp.243_130;
  int iftmp.243_131;
  int _133;
  int _135;
  unsigned char _139;
  unsigned char _145;
  bool retval.244_151;
  int _152;
  bool retval.245_155;
  int _156;
  unsigned char _160;
  int _167;
  int _170;
  int _172;
  int _174;
  int _177;
  int _179;
  unsigned char _184;
  bool retval.246_185;
  unsigned char _193;
  bool retval.247_194;
  unsigned char _202;
  int _206;

  <bb 2> :
  if (m_94(D) == 219)
    goto <bb 11>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (m_94(D) > 219)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (m_94(D) == 196)
    goto <bb 29>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 5> :
  if (m_94(D) == 221)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (m_94(D) == 255)
    goto <bb 7>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 7> :
<L0>:
  _97 = stbi__err ("expected marker");
  goto <bb 81>; [INV]

  <bb 8> :
<L1>:
  _1 = z_98(D)->s;
  _100 = stbi__get16be (_1);
  _2 = _100;
  retval.241_101 = _2 != 4;
  if (retval.241_101 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _103 = stbi__err ("bad DRI len");
  goto <bb 81>; [INV]

  <bb 10> :
  _3 = z_98(D)->s;
  _105 = stbi__get16be (_3);
  _4 = _105;
  z_98(D)->restart_interval = _4;
  _107 = 1;
  goto <bb 81>; [INV]

  <bb 11> :
<L4>:
  _5 = z_98(D)->s;
  _109 = stbi__get16be (_5);
  _6 = _109;
  L_110 = _6 + -2;

  <bb 12> :
  # L_59 = PHI <L_110(11), L_132(27)>
  if (L_59 <= 0)
    goto <bb 28>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _7 = z_98(D)->s;
  _112 = stbi__get8 (_7);
  _8 = _112;
  q_113 = (int) _8;
  p_114 = q_113 >> 4;
  _9 = p_114 != 0;
  sixteen_115 = (int) _9;
  t_116 = q_113 & 15;
  if (p_114 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  if (p_114 != 1)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _118 = stbi__err ("bad DQT type");
  goto <bb 81>; [INV]

  <bb 16> :
  if (t_116 > 3)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _120 = stbi__err ("bad DQT table");
  goto <bb 81>; [INV]

  <bb 18> :
  i_121 = 0;

  <bb 19> :
  # i_63 = PHI <i_121(18), i_129(23)>
  if (i_63 > 63)
    goto <bb 24>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  if (sixteen_115 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _10 = z_98(D)->s;
  _123 = stbi__get16be (_10);
  _11 = _123;
  iftmp.242_124 = (stbi__uint16) _11;
  goto <bb 23>; [INV]

  <bb 22> :
  _12 = z_98(D)->s;
  _126 = stbi__get8 (_12);
  _13 = _126;
  iftmp.242_127 = (stbi__uint16) _13;

  <bb 23> :
  # iftmp.242_76 = PHI <iftmp.242_124(21), iftmp.242_127(22)>
  _14 = stbi__jpeg_dezigzag[i_63];
  _15 = (int) _14;
  z_98(D)->dequant[t_116][_15] = iftmp.242_76;
  i_129 = i_63 + 1;
  goto <bb 19>; [INV]

  <bb 24> :
  if (sixteen_115 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.243_130 = 129;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.243_131 = 65;

  <bb 27> :
  # iftmp.243_77 = PHI <iftmp.243_130(25), iftmp.243_131(26)>
  L_132 = L_59 - iftmp.243_77;
  goto <bb 12>; [INV]

  <bb 28> :
  _16 = L_59 == 0;
  _133 = (int) _16;
  goto <bb 81>; [INV]

  <bb 29> :
<L23>:
  _17 = z_98(D)->s;
  _135 = stbi__get16be (_17);
  _18 = _135;
  L_136 = _18 + -2;

  <bb 30> :
  # L_60 = PHI <L_136(29), L_164(49)>
  if (L_60 <= 0)
    goto <bb 51>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  n_137 = 0;
  _19 = z_98(D)->s;
  _139 = stbi__get8 (_19);
  _20 = _139;
  q_140 = (int) _20;
  tc_141 = q_140 >> 4;
  th_142 = q_140 & 15;
  if (tc_141 > 1)
    goto <bb 33>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  if (th_142 > 3)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _167 = stbi__err ("bad DHT header");
  goto <bb 50>; [INV]

  <bb 34> :
  i_143 = 0;

  <bb 35> :
  # i_65 = PHI <i_143(34), i_148(36)>
  # n_67 = PHI <n_137(34), n_147(36)>
  if (i_65 > 15)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _21 = z_98(D)->s;
  _145 = stbi__get8 (_21);
  _22 = _145;
  _23 = (int) _22;
  sizes[i_65] = _23;
  _24 = sizes[i_65];
  n_147 = n_67 + _24;
  i_148 = i_65 + 1;
  goto <bb 35>; [INV]

  <bb 37> :
  L_149 = L_60 + -17;
  if (tc_141 == 0)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  _25 = &z_98(D)->huff_dc;
  _26 = (long long unsigned int) th_142;
  _27 = _26 * 1680;
  _28 = _25 + _27;
  _29 = stbi__build_huffman (_28, &sizes);
  retval.244_151 = _29 == 0;
  if (retval.244_151 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _152 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 50>; [INV]

  <bb 40> :
  v_153 = &z_98(D)->huff_dc[th_142].values;
  goto <bb 44>; [INV]

  <bb 41> :
  _30 = &z_98(D)->huff_ac;
  _31 = (long long unsigned int) th_142;
  _32 = _31 * 1680;
  _33 = _30 + _32;
  _34 = stbi__build_huffman (_33, &sizes);
  retval.245_155 = _34 == 0;
  if (retval.245_155 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  _156 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 50>; [INV]

  <bb 43> :
  v_157 = &z_98(D)->huff_ac[th_142].values;

  <bb 44> :
  # v_64 = PHI <v_153(40), v_157(43)>
  i_158 = 0;

  <bb 45> :
  # i_66 = PHI <i_158(44), i_162(46)>
  if (i_66 >= n_67)
    goto <bb 47>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 46> :
  _35 = z_98(D)->s;
  _36 = (sizetype) i_66;
  _37 = v_64 + _36;
  _160 = stbi__get8 (_35);
  _38 = _160;
  *_37 = _38;
  i_162 = i_66 + 1;
  goto <bb 45>; [INV]

  <bb 47> :
  if (tc_141 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  _39 = &z_98(D)->huff_ac;
  _40 = (long long unsigned int) th_142;
  _41 = _40 * 1680;
  _42 = _39 + _41;
  _43 = &z_98(D)->fast_ac[th_142];
  stbi__build_fast_ac (_43, _42);

  <bb 49> :
  L_164 = L_149 - n_67;
  sizes ={v} {CLOBBER};
  goto <bb 30>; [INV]

  <bb 50> :
  # _74 = PHI <_167(33), _152(39), _156(42)>
  sizes ={v} {CLOBBER};
  goto <bb 81>; [INV]

  <bb 51> :
  _44 = L_60 == 0;
  _170 = (int) _44;
  goto <bb 81>; [INV]

  <bb 52> :
<L48>:
  if (m_94(D) > 223)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  if (m_94(D) <= 239)
    goto <bb 55>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  if (m_94(D) == 254)
    goto <bb 55>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 55> :
  _45 = z_98(D)->s;
  _174 = stbi__get16be (_45);
  L_175 = _174;
  if (L_175 <= 1)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  if (m_94(D) == 254)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  _177 = stbi__err ("bad COM len");
  goto <bb 81>; [INV]

  <bb 58> :
  _179 = stbi__err ("bad APP len");
  goto <bb 81>; [INV]

  <bb 59> :
  L_180 = L_175 + -2;
  if (m_94(D) == 224)
    goto <bb 60>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 60> :
  if (L_180 > 4)
    goto <bb 61>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 61> :
  ok_181 = 1;
  i_182 = 0;

  <bb 62> :
  # ok_68 = PHI <ok_181(61), ok_69(65)>
  # i_70 = PHI <i_182(61), i_187(65)>
  if (i_70 > 4)
    goto <bb 66>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  _46 = z_98(D)->s;
  _184 = stbi__get8 (_46);
  _47 = _184;
  _48 = tag[i_70];
  retval.246_185 = _47 != _48;
  if (retval.246_185 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  ok_186 = 0;

  <bb 65> :
  # ok_69 = PHI <ok_68(63), ok_186(64)>
  i_187 = i_70 + 1;
  goto <bb 62>; [INV]

  <bb 66> :
  L_188 = L_180 + -5;
  if (ok_68 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  z_98(D)->jfif = 1;

  <bb 68> :
  goto <bb 79>; [INV]

  <bb 69> :
  if (m_94(D) == 238)
    goto <bb 70>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 70> :
  if (L_180 > 11)
    goto <bb 71>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 71> :
  ok_190 = 1;
  i_191 = 0;

  <bb 72> :
  # ok_71 = PHI <ok_190(71), ok_72(75)>
  # i_73 = PHI <i_191(71), i_196(75)>
  if (i_73 > 5)
    goto <bb 76>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 73> :
  _49 = z_98(D)->s;
  _193 = stbi__get8 (_49);
  _50 = _193;
  _51 = tag[i_73];
  retval.247_194 = _50 != _51;
  if (retval.247_194 != 0)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  ok_195 = 0;

  <bb 75> :
  # ok_72 = PHI <ok_71(73), ok_195(74)>
  i_196 = i_73 + 1;
  goto <bb 72>; [INV]

  <bb 76> :
  L_197 = L_180 + -6;
  if (ok_71 != 0)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  _52 = z_98(D)->s;
  stbi__get8 (_52);
  _53 = z_98(D)->s;
  stbi__get16be (_53);
  _54 = z_98(D)->s;
  stbi__get16be (_54);
  _55 = z_98(D)->s;
  _202 = stbi__get8 (_55);
  _56 = _202;
  _57 = (int) _56;
  z_98(D)->app14_color_transform = _57;
  L_204 = L_197 + -6;

  <bb 78> :
  # L_61 = PHI <L_197(76), L_204(77)>

  <bb 79> :
  # L_62 = PHI <L_188(68), L_180(69), L_180(70), L_61(78)>
  _58 = z_98(D)->s;
  stbi__skip (_58, L_62);
  _206 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 81>; [INV]

  <bb 80> :
  _172 = stbi__err ("unknown marker");

  <bb 81> :
  # _75 = PHI <_97(7), _103(9), _107(10), _118(15), _120(17), _133(28), _74(50), _170(51), _177(57), _179(58), _206(79), _172(80)>
<L84>:
  return _75;

}



;; Function stbi__decode_jpeg_header (_ZL24stbi__decode_jpeg_headerP10stbi__jpegi, funcdef_no=860, decl_uid=11463, cgraph_uid=766, symbol_order=781)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L20>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L20>}


Removing basic block 30
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 7 and 8
Merging blocks 12 and 13
Merging blocks 15 and 16
Merging blocks 18 and 19
Merging blocks 21 and 22
Merging blocks 24 and 25
stbi__decode_jpeg_header (struct stbi__jpeg * z, int scan)
{
  int D.14784;
  unsigned char D.14783;
  int D.14782;
  unsigned char D.14781;
  int D.14780;
  unsigned char D.14779;
  unsigned char D.14778;
  int m;
  bool retval.262;
  bool retval.260;
  bool retval.257;
  int D.14759;
  unsigned char _1;
  int _2;
  int m.253_3;
  unsigned char _4;
  int _5;
  int m.254_6;
  int m.255_7;
  int m.256_8;
  int m.258_9;
  int _10;
  unsigned char _11;
  int _12;
  int m.259_13;
  struct stbi__context * _14;
  int _15;
  unsigned char _16;
  int _17;
  int m.261_18;
  bool _19;
  int _20;
  int _21;
  int _22;
  unsigned char _33;
  int _36;
  int _38;
  unsigned char _40;
  int _43;
  bool retval.257_44;
  int _45;
  unsigned char _47;
  int _50;
  bool retval.260_51;
  int _53;
  unsigned char _55;
  int _59;
  bool retval.262_60;
  int _61;
  int _62;

  <bb 2> :
  z_28(D)->jfif = 0;
  z_28(D)->app14_color_transform = -1;
  z_28(D)->marker = 255;
  _33 = stbi__get_marker (z_28(D));
  _1 = _33;
  _2 = (int) _1;
  m = _2;
  m.253_3 = m;
  if (m.253_3 != 216)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _36 = stbi__err ("no SOI");
  goto <bb 21>; [INV]

  <bb 4> :
  if (scan_37(D) == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _38 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 6> :
  _40 = stbi__get_marker (z_28(D));
  _4 = _40;
  _5 = (int) _4;
  m = _5;

  <bb 7> :
  m.254_6 = m;
  if (m.254_6 == 192)
    goto <bb 18>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  m.255_7 = m;
  if (m.255_7 == 193)
    goto <bb 18>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  m.256_8 = m;
  if (m.256_8 == 194)
    goto <bb 18>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  m.258_9 = m;
  _43 = stbi__process_marker (z_28(D), m.258_9);
  _10 = _43;
  retval.257_44 = _10 == 0;
  if (retval.257_44 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 12> :
  _47 = stbi__get_marker (z_28(D));
  _11 = _47;
  _12 = (int) _11;
  m = _12;

  <bb 13> :
  m.259_13 = m;
  if (m.259_13 != 255)
    goto <bb 17>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _14 = z_28(D)->s;
  _50 = stbi__at_eof (_14);
  _15 = _50;
  retval.260_51 = _15 != 0;
  if (retval.260_51 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _53 = stbi__err ("no SOF");
  goto <bb 21>; [INV]

  <bb 16> :
  _55 = stbi__get_marker (z_28(D));
  _16 = _55;
  _17 = (int) _16;
  m = _17;
  goto <bb 13>; [INV]

  <bb 17> :
  goto <bb 7>; [INV]

  <bb 18> :
  m.261_18 = m;
  _19 = m.261_18 == 194;
  _20 = (int) _19;
  z_28(D)->progressive = _20;
  _59 = stbi__process_frame_header (z_28(D), scan_37(D));
  _21 = _59;
  retval.262_60 = _21 == 0;
  if (retval.262_60 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _61 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  _62 = 1;

  <bb 21> :
  # _22 = PHI <_36(3), _38(5), _45(11), _53(15), _61(19), _62(20)>
  m ={v} {CLOBBER};

  <bb 22> :
<L19>:
  return _22;

}



;; Function stbi__decode_jpeg_image (_ZL23stbi__decode_jpeg_imageP10stbi__jpeg, funcdef_no=861, decl_uid=11471, cgraph_uid=767, symbol_order=782)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L37>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L37>}


Removing basic block 47
Removing unreachable region 1
Merging blocks 5 and 6
Merging blocks 8 and 9
Merging blocks 12 and 13
Merging blocks 15 and 16
Merging blocks 19 and 20
Merging blocks 21 and 22
Merging blocks 23 and 24
Merging blocks 29 and 30
Merging blocks 36 and 37
Merging blocks 39 and 40
Merging blocks 42 and 43
Merging blocks 29 and 31
stbi__decode_jpeg_image (struct stbi__jpeg * j)
{
  unsigned char D.14847;
  int D.14846;
  int D.14845;
  int D.14844;
  unsigned char D.14843;
  unsigned char D.14842;
  int D.14841;
  int D.14840;
  int D.14839;
  unsigned char D.14838;
  int D.14837;
  stbi__uint32 NL;
  int Ld;
  int x;
  int m;
  bool retval.275;
  bool retval.273;
  bool retval.272;
  bool retval.271;
  int D.14803;
  bool retval.268;
  int m.264_1;
  int m.265_2;
  int m.266_3;
  int m.267_4;
  int _5;
  int _6;
  unsigned char _7;
  int _8;
  int m.269_9;
  int m.270_10;
  int _11;
  int _12;
  unsigned char _13;
  struct stbi__context * _14;
  int _15;
  struct stbi__context * _16;
  unsigned char _17;
  struct stbi__context * _18;
  unsigned char _19;
  int m.274_20;
  struct stbi__context * _21;
  struct stbi__context * _22;
  int _23;
  struct stbi__context * _24;
  unsigned int _25;
  int m.276_26;
  int _27;
  unsigned char _28;
  int _29;
  int _30;
  int _31;
  int _49;
  bool retval.268_50;
  int _51;
  unsigned char _53;
  int _56;
  bool retval.271_57;
  int _58;
  int _60;
  bool retval.272_61;
  int _62;
  int _64;
  bool retval.273_65;
  unsigned char _67;
  unsigned char _70;
  int _73;
  int _76;
  int _79;
  int _81;
  int _83;
  bool retval.275_84;
  int _85;
  unsigned char _87;
  int _90;

  <bb 2> :
  m = 0;

  <bb 3> :
  m.264_1 = m;
  if (m.264_1 > 3)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  m.265_2 = m;
  j_43(D)->img_comp[m.265_2].raw_data = 0B;
  m.266_3 = m;
  j_43(D)->img_comp[m.266_3].raw_coeff = 0B;
  m.267_4 = m;
  _5 = m.267_4 + 1;
  m = _5;
  goto <bb 3>; [INV]

  <bb 5> :
  j_43(D)->restart_interval = 0;
  _49 = stbi__decode_jpeg_header (j_43(D), 0);
  _6 = _49;
  retval.268_50 = _6 == 0;
  if (retval.268_50 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 33>; [INV]

  <bb 7> :
  _53 = stbi__get_marker (j_43(D));
  _7 = _53;
  _8 = (int) _7;
  m = _8;

  <bb 8> :
  m.269_9 = m;
  if (m.269_9 == 217)
    goto <bb 30>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  m.270_10 = m;
  if (m.270_10 == 218)
    goto <bb 10>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 10> :
  _56 = stbi__process_scan_header (j_43(D));
  _11 = _56;
  retval.271_57 = _11 == 0;
  if (retval.271_57 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _58 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 33>; [INV]

  <bb 12> :
  _60 = stbi__parse_entropy_coded_data (j_43(D));
  _12 = _60;
  retval.272_61 = _12 == 0;
  if (retval.272_61 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _62 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 33>; [INV]

  <bb 14> :
  _13 = j_43(D)->marker;
  if (_13 == 255)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  _14 = j_43(D)->s;
  _64 = stbi__at_eof (_14);
  _15 = _64;
  retval.273_65 = _15 == 0;
  if (retval.273_65 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  _16 = j_43(D)->s;
  _67 = stbi__get8 (_16);
  _17 = _67;
  x_68 = (int) _17;
  if (x_68 == 255)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _18 = j_43(D)->s;
  _70 = stbi__get8 (_18);
  _19 = _70;
  j_43(D)->marker = _19;
  goto <bb 19>; [INV]

  <bb 18> :
  goto <bb 15>; [INV]

  <bb 19> :

  <bb 20> :
  goto <bb 29>; [INV]

  <bb 21> :
  m.274_20 = m;
  if (m.274_20 == 220)
    goto <bb 22>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 22> :
  _21 = j_43(D)->s;
  _73 = stbi__get16be (_21);
  Ld_74 = _73;
  _22 = j_43(D)->s;
  _76 = stbi__get16be (_22);
  _23 = _76;
  NL_77 = (stbi__uint32) _23;
  if (Ld_74 != 4)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _79 = stbi__err ("bad DNL len");
  goto <bb 33>; [INV]

  <bb 24> :
  _24 = j_43(D)->s;
  _25 = _24->img_y;
  if (NL_77 != _25)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _81 = stbi__err ("bad DNL height");
  goto <bb 33>; [INV]

  <bb 26> :
  goto <bb 29>; [INV]

  <bb 27> :
  m.276_26 = m;
  _83 = stbi__process_marker (j_43(D), m.276_26);
  _27 = _83;
  retval.275_84 = _27 == 0;
  if (retval.275_84 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  _85 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 33>; [INV]

  <bb 29> :
  _87 = stbi__get_marker (j_43(D));
  _28 = _87;
  _29 = (int) _28;
  m = _29;
  goto <bb 8>; [INV]

  <bb 30> :
  _30 = j_43(D)->progressive;
  if (_30 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  stbi__jpeg_finish (j_43(D));

  <bb 32> :
  _90 = 1;

  <bb 33> :
  # _31 = PHI <_51(6), _58(11), _62(13), _79(23), _81(25), _85(28), _90(32)>
  m ={v} {CLOBBER};

  <bb 34> :
<L36>:
  return _31;

}



;; Function stbi__resample_row_hv_2_simd (_ZL28stbi__resample_row_hv_2_simdPhS_S_ii, funcdef_no=866, decl_uid=11535, cgraph_uid=772, symbol_order=787)

Before removal of unreachable regions:
Eh tree:
   4 must_not_throw
   1 cleanup land:{2,<L11>}
     3 must_not_throw
     2 cleanup land:{1,<L10>}
Reachable regions: n_bits = 5, set = {1 2 }
Reachable landing pads: n_bits = 3, set = {1 2 }
Removing unreachable region 3
Removing unreachable region 4


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{2,<L11>}
     2 cleanup land:{1,<L10>}


Removing unreachable region 2
Merging blocks 51 and 52
stbi__resample_row_hv_2_simd (stbi_uc * out, stbi_uc * in_near, stbi_uc * in_far, int w, int hs)
{
  __m128i_u * {ref-all} __P;
  __m128i __B;
  __m128i D.20181;
  vector(16) char D.20180;
  __m128i D.20179;
  __m128i __A;
  __m128i __B;
  __m128i D.20175;
  vector(8) short int D.20174;
  __m128i D.20173;
  __m128i __A;
  int __B;
  __m128i D.20169;
  vector(8) short int D.20168;
  __m128i D.20167;
  __m128i __A;
  int __B;
  __m128i D.20163;
  vector(8) short int D.20162;
  __m128i D.20161;
  __m128i __A;
  __m128i __B;
  __m128i D.20157;
  __m128i D.20156;
  __m128i __A;
  __m128i __B;
  __m128i D.20152;
  __m128i D.20151;
  __m128i __A;
  __m128i __B;
  __m128i D.20147;
  __m128i D.20146;
  __m128i __A;
  __m128i __B;
  __m128i D.20142;
  __m128i D.20141;
  __m128i __A;
  __m128i __B;
  __m128i D.20137;
  __m128i D.20136;
  __m128i __A;
  __m128i __B;
  __m128i D.20132;
  vector(8) short int D.20131;
  __m128i D.20130;
  __m128i __A;
  __m128i __B;
  __m128i D.20125;
  short int __q0;
  short int __q1;
  short int __q2;
  short int __q3;
  short int __q4;
  short int __q5;
  short int __q6;
  short int __q7;
  __m128i D.20122;
  __m128i D.20124;
  __m128i D.20123;
  short int __A;
  __m128i D.20111;
  vector(8) short int D.20110;
  __m128i D.20109;
  __m128i __A;
  int __B;
  __m128i D.20105;
  __m128i D.20104;
  __m128i __A;
  __m128i __B;
  __m128i D.20100;
  __m128i D.20099;
  __m128i __A;
  __m128i __B;
  __m128i D.20095;
  vector(8) short int D.20094;
  __m128i D.20093;
  __m128i __A;
  int __B;
  __m128i D.20089;
  vector(16) char D.20088;
  __m128i D.20087;
  __m128i __A;
  __m128i __B;
  __m128i D.20083;
  __m128i D.20082;
  __m128i D.20078;
  __m64 __q0;
  __m64 __q1;
  __m128i D.20071;
  __m128i D.20077;
  __m128i D.20074;
  long long int __q1;
  long long int __q0;
  __m128i D.20076;
  __m128i D.20075;
  const __m128i_u * {ref-all} __P;
  __m128i D.20064;
  __m64 __q0;
  __m64 __q1;
  __m128i D.20057;
  __m128i D.20063;
  __m128i D.20060;
  long long int __q1;
  long long int __q0;
  __m128i D.20062;
  __m128i D.20061;
  const __m128i_u * {ref-all} __P;
  __m128i D.20052;
  vector(16) char D.20051;
  __m128i D.20050;
  __m128i __A;
  __m128i __B;
  __m128i D.14888;
  __m128i D.14887;
  __m128i D.14886;
  __m128i D.14885;
  __m128i D.14884;
  __m128i D.14883;
  vector(8) short int D.14882;
  vector(8) short int D.14881;
  vector(2) long long int D.14880;
  vector(2) long long int D.14879;
  __m128i D.14878;
  __m128i D.14877;
  __m128i D.14876;
  __m128i outv;
  __m128i de1;
  __m128i de0;
  __m128i int1;
  __m128i int0;
  __m128i odd;
  __m128i even;
  __m128i curb;
  __m128i nxtd;
  __m128i prvd;
  __m128i curs;
  __m128i bias;
  __m128i next;
  __m128i prev;
  __m128i nxt0;
  __m128i prv0;
  __m128i curr;
  __m128i nears;
  __m128i diff;
  __m128i nearw;
  __m128i farw;
  __m128i nearb;
  __m128i farb;
  __m128i zero;
  int t1;
  int t0;
  int i;
  stbi_uc * D.14870;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  stbi_uc * _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  int _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  int _19;
  sizetype _20;
  stbi_uc * _21;
  sizetype _22;
  stbi_uc * _23;
  vector(2) long long int _24;
  vector(2) long long int curr.277_25;
  vector(2) long long int _26;
  vector(2) long long int curr.278_27;
  vector(2) long long int _28;
  int t1.279_29;
  short int _30;
  int _31;
  vector(2) long long int prv0.280_32;
  vector(8) short int _33;
  vector(8) short int _34;
  sizetype _35;
  sizetype _36;
  stbi_uc * _37;
  unsigned char _38;
  unsigned short _39;
  unsigned short _40;
  sizetype _41;
  sizetype _42;
  stbi_uc * _43;
  unsigned char _44;
  unsigned short _45;
  unsigned short _46;
  short int _47;
  int _48;
  vector(2) long long int nxt0.281_49;
  vector(8) short int _50;
  vector(8) short int _51;
  vector(2) long long int curr.282_52;
  vector(2) long long int curr.283_53;
  vector(2) long long int curr.284_54;
  int _55;
  sizetype _56;
  stbi_uc * _57;
  sizetype _58;
  sizetype _59;
  stbi_uc * _60;
  unsigned char _61;
  int _62;
  int _63;
  sizetype _64;
  sizetype _65;
  stbi_uc * _66;
  unsigned char _67;
  int _68;
  int _69;
  sizetype _70;
  stbi_uc * _71;
  unsigned char _72;
  int _73;
  int _74;
  sizetype _75;
  stbi_uc * _76;
  unsigned char _77;
  int _78;
  int _79;
  int t1.285_80;
  int _81;
  int _82;
  int _83;
  int _84;
  int _85;
  sizetype _86;
  stbi_uc * _87;
  unsigned char _88;
  sizetype _89;
  stbi_uc * _90;
  unsigned char _91;
  int _92;
  int _93;
  sizetype _94;
  stbi_uc * _95;
  unsigned char _96;
  int _97;
  int _98;
  int _99;
  int t1.286_100;
  int _101;
  int _102;
  int _103;
  int _104;
  sizetype _105;
  sizetype _106;
  stbi_uc * _107;
  unsigned char _108;
  int t1.287_109;
  int _110;
  int _111;
  int _112;
  int _113;
  int _114;
  sizetype _115;
  stbi_uc * _116;
  unsigned char _117;
  int t1.288_118;
  int _119;
  int _120;
  int _121;
  sizetype _122;
  sizetype _123;
  stbi_uc * _124;
  unsigned char _125;
  stbi_uc * _128;
  stbi_uc * _141;
  __m128i _146;
  __m128i _148;
  __m128i _151;
  vector(2) long long int _154;
  vector(2) long long int _156;
  vector(8) short int _158;
  vector(8) short int _160;
  __m128i _163;
  __m128i _170;
  __m128i _172;
  __m128i _174;
  __m128i _176;
  __m128i _178;
  stbi_uc * _199;
  vector(16) char _203;
  vector(16) char _204;
  vector(16) char _205;
  vector(16) char _206;
  vector(2) long long int _207;
  vector(2) int _209;
  long long int _212;
  long long int _213;
  vector(2) long long int _216;
  vector(2) long long int _217;
  vector(2) long long int _218;
  vector(2) long long int _219;
  vector(2) long long int _220;
  vector(2) int _222;
  long long int _225;
  long long int _226;
  vector(2) long long int _229;
  vector(2) long long int _230;
  vector(2) long long int _231;
  vector(2) long long int _232;
  vector(2) long long int _233;
  vector(2) long long int _234;
  vector(16) char _237;
  vector(16) char _238;
  vector(16) char _239;
  vector(16) char _240;
  vector(2) long long int _241;
  vector(8) short int _244;
  vector(8) short int _245;
  vector(8) short int _246;
  vector(2) long long int _247;
  vector(8) short unsigned int _250;
  vector(8) short unsigned int _251;
  vector(8) short unsigned int _252;
  vector(2) long long int _253;
  vector(8) short unsigned int _256;
  vector(8) short unsigned int _257;
  vector(8) short unsigned int _258;
  vector(2) long long int _259;
  vector(8) short int _262;
  vector(8) short int _263;
  vector(8) short int _264;
  vector(2) long long int _265;
  int _267;
  int _268;
  int _269;
  int _270;
  int _271;
  int _272;
  int _273;
  int _274;
  vector(8) short int _283;
  vector(2) long long int _284;
  vector(2) long long int _285;
  vector(2) long long int _286;
  vector(8) short int _289;
  vector(8) short int _290;
  vector(8) short int _291;
  vector(8) short int _292;
  vector(2) long long int _293;
  vector(8) short unsigned int _296;
  vector(8) short unsigned int _297;
  vector(8) short unsigned int _298;
  vector(2) long long int _299;
  vector(8) short unsigned int _302;
  vector(8) short unsigned int _303;
  vector(8) short unsigned int _304;
  vector(2) long long int _305;
  vector(8) short unsigned int _308;
  vector(8) short unsigned int _309;
  vector(8) short unsigned int _310;
  vector(2) long long int _311;
  vector(8) short unsigned int _314;
  vector(8) short unsigned int _315;
  vector(8) short unsigned int _316;
  vector(2) long long int _317;
  vector(8) short unsigned int _320;
  vector(8) short unsigned int _321;
  vector(8) short unsigned int _322;
  vector(2) long long int _323;
  vector(8) short int _326;
  vector(8) short int _327;
  vector(8) short int _328;
  vector(8) short int _329;
  vector(2) long long int _330;
  vector(8) short int _333;
  vector(8) short int _334;
  vector(8) short int _335;
  vector(2) long long int _336;
  vector(8) short int _339;
  vector(8) short int _340;
  vector(8) short int _341;
  vector(2) long long int _342;
  vector(8) short int _345;
  vector(8) short int _346;
  vector(16) char _347;
  vector(16) char _348;
  vector(2) long long int _349;

  <bb 2> :
  i_133 = 0;
  if (w_134(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = *in_near_136(D);
  _2 = (int) _1;
  _3 = _2 * 3;
  _4 = *in_far_137(D);
  _5 = (int) _4;
  _6 = _3 + _5;
  _7 = _6 + 2;
  _8 = _7 >> 2;
  _9 = out_138(D) + 1;
  _10 = (unsigned char) _8;
  *_9 = _10;
  _11 = *_9;
  *out_138(D) = _11;
  _141 = out_138(D);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 49>; [INV]

  <bb 4> :
  _12 = *in_near_136(D);
  _13 = (int) _12;
  _14 = _13 * 3;
  _15 = *in_far_137(D);
  _16 = (int) _15;
  _17 = _14 + _16;
  t1 = _17;

  <bb 5> :
  # i_126 = PHI <i_133(4), i_184(44)>
  _18 = w_134(D) + -1;
  _19 = _18 & -8;
  if (i_126 >= _19)
    goto <bb 45>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _234 = { 0, 0 };

  <bb 7> :
<L19>:
  _352 = _234;
  zero_143 = _352;
  _20 = (sizetype) i_126;
  _21 = in_far_137(D) + _20;
  __P_221 = _21;
  _222 = MEM[(__m64_u * {ref-all})__P_221];
  __q1_223 = { 0, 0 };
  __q0_224 = _222;
  _225 = VIEW_CONVERT_EXPR<long long int>(__q0_224);
  _226 = VIEW_CONVERT_EXPR<long long int>(__q1_223);
  __q1_227 = _226;
  __q0_228 = _225;
  _229 = {__q0_228, __q1_227};

  <bb 8> :
<L16>:
  _230 = _229;
  _231 = _230;

  <bb 9> :
<L17>:
  _232 = _231;
  _233 = _232;

  <bb 10> :
<L18>:
  _353 = _233;
  farb_144 = _353;
  _22 = (sizetype) i_126;
  _23 = in_near_136(D) + _22;
  __P_208 = _23;
  _209 = MEM[(__m64_u * {ref-all})__P_208];
  __q1_210 = { 0, 0 };
  __q0_211 = _209;
  _212 = VIEW_CONVERT_EXPR<long long int>(__q0_211);
  _213 = VIEW_CONVERT_EXPR<long long int>(__q1_210);
  __q1_214 = _213;
  __q0_215 = _212;
  _216 = {__q0_215, __q1_214};

  <bb 11> :
<L13>:
  _217 = _216;
  _218 = _217;

  <bb 12> :
<L14>:
  _219 = _218;
  _220 = _219;

  <bb 13> :
<L15>:
  _354 = _220;
  nearb_145 = _354;
  __A_201 = farb_144;
  __B_202 = zero_143;
  _203 = VIEW_CONVERT_EXPR<__v16qi>(__B_202);
  _204 = VIEW_CONVERT_EXPR<__v16qi>(__A_201);
  _205 = __builtin_ia32_punpcklbw128 (_204, _203);

  <bb 14> :
  _206 = _205;
  _207 = VIEW_CONVERT_EXPR<__m128i>(_206);

  <bb 15> :
<L12>:
  _355 = _207;
  _146 = _355;
  farw_147 = _146;
  __A_235 = nearb_145;
  __B_236 = zero_143;
  _237 = VIEW_CONVERT_EXPR<__v16qi>(__B_236);
  _238 = VIEW_CONVERT_EXPR<__v16qi>(__A_235);
  _239 = __builtin_ia32_punpcklbw128 (_238, _237);

  <bb 16> :
  _240 = _239;
  _241 = VIEW_CONVERT_EXPR<__m128i>(_240);

  <bb 17> :
<L20>:
  _356 = _241;
  _148 = _356;
  nearw_149 = _148;
  __A_248 = farw_147;
  __B_249 = nearw_149;
  _250 = VIEW_CONVERT_EXPR<__v8hu>(__A_248);
  _251 = VIEW_CONVERT_EXPR<__v8hu>(__B_249);
  _252 = _250 - _251;
  _253 = VIEW_CONVERT_EXPR<__m128i>(_252);

  <bb 18> :
<L22>:
  _357 = _253;
  diff_150 = _357;
  __A_242 = nearw_149;
  __B_243 = 2;
  _244 = VIEW_CONVERT_EXPR<__v8hi>(__A_242);
  _245 = __builtin_ia32_psllwi128 (_244, __B_243);

  <bb 19> :
  _246 = _245;
  _247 = VIEW_CONVERT_EXPR<__m128i>(_246);

  <bb 20> :
<L21>:
  _358 = _247;
  _151 = _358;
  nears_152 = _151;
  __A_254 = nears_152;
  __B_255 = diff_150;
  _256 = VIEW_CONVERT_EXPR<__v8hu>(__A_254);
  _257 = VIEW_CONVERT_EXPR<__v8hu>(__B_255);
  _258 = _256 + _257;
  _259 = VIEW_CONVERT_EXPR<__m128i>(_258);

  <bb 21> :
<L23>:
  _359 = _259;
  _24 = _359;
  curr = _24;
  curr.277_25 = curr;
  _154 = __builtin_ia32_pslldqi128 (curr.277_25, 16);

  <bb 22> :
  _26 = _154;
  prv0 = _26;
  curr.278_27 = curr;
  _156 = __builtin_ia32_psrldqi128 (curr.278_27, 16);

  <bb 23> :
  _28 = _156;
  nxt0 = _28;
  t1.279_29 = t1;
  _30 = (short int) t1.279_29;
  _31 = (int) _30;
  prv0.280_32 = prv0;
  _33 = VIEW_CONVERT_EXPR<__v8hi>(prv0.280_32);
  _158 = __builtin_ia32_vec_set_v8hi (_33, _31, 0);

  <bb 24> :
  _34 = _158;
  prev_159 = VIEW_CONVERT_EXPR<__m128i>(_34);
  _35 = (sizetype) i_126;
  _36 = _35 + 8;
  _37 = in_near_136(D) + _36;
  _38 = *_37;
  _39 = (unsigned short) _38;
  _40 = _39 * 3;
  _41 = (sizetype) i_126;
  _42 = _41 + 8;
  _43 = in_far_137(D) + _42;
  _44 = *_43;
  _45 = (unsigned short) _44;
  _46 = _40 + _45;
  _47 = (short int) _46;
  _48 = (int) _47;
  nxt0.281_49 = nxt0;
  _50 = VIEW_CONVERT_EXPR<__v8hi>(nxt0.281_49);
  _160 = __builtin_ia32_vec_set_v8hi (_50, _48, 7);

  <bb 25> :
  _51 = _160;
  next_161 = VIEW_CONVERT_EXPR<__m128i>(_51);
  __A_266 = 8;
  _267 = (int) __A_266;
  _268 = (int) __A_266;
  _269 = (int) __A_266;
  _270 = (int) __A_266;
  _271 = (int) __A_266;
  _272 = (int) __A_266;
  _273 = (int) __A_266;
  _274 = (int) __A_266;
  __q7_275 = (short int) _274;
  __q6_276 = (short int) _273;
  __q5_277 = (short int) _272;
  __q4_278 = (short int) _271;
  __q3_279 = (short int) _270;
  __q2_280 = (short int) _269;
  __q1_281 = (short int) _268;
  __q0_282 = (short int) _267;
  _283 = {__q0_282, __q1_281, __q2_280, __q3_279, __q4_278, __q5_277, __q6_276, __q7_275};
  _284 = VIEW_CONVERT_EXPR<__m128i>(_283);

  <bb 26> :
<L25>:
  _285 = _284;
  _286 = _285;

  <bb 27> :
<L26>:
  _360 = _286;
  bias_162 = _360;
  curr.282_52 = curr;
  __A_260 = curr.282_52;
  __B_261 = 2;
  _262 = VIEW_CONVERT_EXPR<__v8hi>(__A_260);
  _263 = __builtin_ia32_psllwi128 (_262, __B_261);

  <bb 28> :
  _264 = _263;
  _265 = VIEW_CONVERT_EXPR<__m128i>(_264);

  <bb 29> :
<L24>:
  _361 = _265;
  _163 = _361;
  curs_164 = _163;
  curr.283_53 = curr;
  __A_318 = prev_159;
  __B_319 = curr.283_53;
  _320 = VIEW_CONVERT_EXPR<__v8hu>(__A_318);
  _321 = VIEW_CONVERT_EXPR<__v8hu>(__B_319);
  _322 = _320 - _321;
  _323 = VIEW_CONVERT_EXPR<__m128i>(_322);

  <bb 30> :
<L32>:
  _362 = _323;
  prvd_165 = _362;
  curr.284_54 = curr;
  __A_312 = next_161;
  __B_313 = curr.284_54;
  _314 = VIEW_CONVERT_EXPR<__v8hu>(__A_312);
  _315 = VIEW_CONVERT_EXPR<__v8hu>(__B_313);
  _316 = _314 - _315;
  _317 = VIEW_CONVERT_EXPR<__m128i>(_316);

  <bb 31> :
<L31>:
  _363 = _317;
  nxtd_166 = _363;
  __A_306 = curs_164;
  __B_307 = bias_162;
  _308 = VIEW_CONVERT_EXPR<__v8hu>(__A_306);
  _309 = VIEW_CONVERT_EXPR<__v8hu>(__B_307);
  _310 = _308 + _309;
  _311 = VIEW_CONVERT_EXPR<__m128i>(_310);

  <bb 32> :
<L30>:
  _364 = _311;
  curb_167 = _364;
  __A_300 = prvd_165;
  __B_301 = curb_167;
  _302 = VIEW_CONVERT_EXPR<__v8hu>(__A_300);
  _303 = VIEW_CONVERT_EXPR<__v8hu>(__B_301);
  _304 = _302 + _303;
  _305 = VIEW_CONVERT_EXPR<__m128i>(_304);

  <bb 33> :
<L29>:
  _365 = _305;
  even_168 = _365;
  __A_294 = nxtd_166;
  __B_295 = curb_167;
  _296 = VIEW_CONVERT_EXPR<__v8hu>(__A_294);
  _297 = VIEW_CONVERT_EXPR<__v8hu>(__B_295);
  _298 = _296 + _297;
  _299 = VIEW_CONVERT_EXPR<__m128i>(_298);

  <bb 34> :
<L28>:
  _366 = _299;
  odd_169 = _366;
  __A_287 = even_168;
  __B_288 = odd_169;
  _289 = VIEW_CONVERT_EXPR<__v8hi>(__B_288);
  _290 = VIEW_CONVERT_EXPR<__v8hi>(__A_287);
  _291 = __builtin_ia32_punpcklwd128 (_290, _289);

  <bb 35> :
  _292 = _291;
  _293 = VIEW_CONVERT_EXPR<__m128i>(_292);

  <bb 36> :
<L27>:
  _367 = _293;
  _170 = _367;
  int0_171 = _170;
  __A_324 = even_168;
  __B_325 = odd_169;
  _326 = VIEW_CONVERT_EXPR<__v8hi>(__B_325);
  _327 = VIEW_CONVERT_EXPR<__v8hi>(__A_324);
  _328 = __builtin_ia32_punpckhwd128 (_327, _326);

  <bb 37> :
  _329 = _328;
  _330 = VIEW_CONVERT_EXPR<__m128i>(_329);

  <bb 38> :
<L33>:
  _368 = _330;
  _172 = _368;
  int1_173 = _172;
  __A_331 = int0_171;
  __B_332 = 4;
  _333 = VIEW_CONVERT_EXPR<__v8hi>(__A_331);
  _334 = __builtin_ia32_psrlwi128 (_333, __B_332);

  <bb 39> :
  _335 = _334;
  _336 = VIEW_CONVERT_EXPR<__m128i>(_335);

  <bb 40> :
<L34>:
  _369 = _336;
  _174 = _369;
  de0_175 = _174;
  __A_337 = int1_173;
  __B_338 = 4;
  _339 = VIEW_CONVERT_EXPR<__v8hi>(__A_337);
  _340 = __builtin_ia32_psrlwi128 (_339, __B_338);

  <bb 41> :
  _341 = _340;
  _342 = VIEW_CONVERT_EXPR<__m128i>(_341);

  <bb 42> :
<L35>:
  _370 = _342;
  _176 = _370;
  de1_177 = _176;
  __A_343 = de0_175;
  __B_344 = de1_177;
  _345 = VIEW_CONVERT_EXPR<__v8hi>(__B_344);
  _346 = VIEW_CONVERT_EXPR<__v8hi>(__A_343);
  _347 = __builtin_ia32_packuswb128 (_346, _345);

  <bb 43> :
  _348 = _347;
  _349 = VIEW_CONVERT_EXPR<__m128i>(_348);

  <bb 44> :
<L36>:
  _371 = _349;
  _178 = _371;
  outv_179 = _178;
  _55 = i_126 * 2;
  _56 = (sizetype) _55;
  _57 = out_138(D) + _56;
  __P_350 = _57;
  __B_351 = outv_179;
  *__P_350 = __B_351;
  _58 = (sizetype) i_126;
  _59 = _58 + 7;
  _60 = in_near_136(D) + _59;
  _61 = *_60;
  _62 = (int) _61;
  _63 = _62 * 3;
  _64 = (sizetype) i_126;
  _65 = _64 + 7;
  _66 = in_far_137(D) + _65;
  _67 = *_66;
  _68 = (int) _67;
  _69 = _63 + _68;
  t1 = _69;
  curr ={v} {CLOBBER};
  prv0 ={v} {CLOBBER};
  nxt0 ={v} {CLOBBER};
  i_184 = i_126 + 8;
  goto <bb 5>; [INV]

  <bb 45> :
  t0_189 = t1;
  _70 = (sizetype) i_126;
  _71 = in_near_136(D) + _70;
  _72 = *_71;
  _73 = (int) _72;
  _74 = _73 * 3;
  _75 = (sizetype) i_126;
  _76 = in_far_137(D) + _75;
  _77 = *_76;
  _78 = (int) _77;
  _79 = _74 + _78;
  t1 = _79;
  t1.285_80 = t1;
  _81 = t1.285_80 * 3;
  _82 = t0_189 + _81;
  _83 = _82 + 8;
  _84 = _83 >> 4;
  _85 = i_126 * 2;
  _86 = (sizetype) _85;
  _87 = out_138(D) + _86;
  _88 = (unsigned char) _84;
  *_87 = _88;
  i_192 = i_126 + 1;

  <bb 46> :
  # i_127 = PHI <i_192(45), i_197(47)>
  if (i_127 >= w_134(D))
    goto <bb 48>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  t0_193 = t1;
  _89 = (sizetype) i_127;
  _90 = in_near_136(D) + _89;
  _91 = *_90;
  _92 = (int) _91;
  _93 = _92 * 3;
  _94 = (sizetype) i_127;
  _95 = in_far_137(D) + _94;
  _96 = *_95;
  _97 = (int) _96;
  _98 = _93 + _97;
  t1 = _98;
  _99 = t0_193 * 3;
  t1.286_100 = t1;
  _101 = _99 + t1.286_100;
  _102 = _101 + 8;
  _103 = _102 >> 4;
  _104 = i_127 * 2;
  _105 = (sizetype) _104;
  _106 = _105 + 18446744073709551615;
  _107 = out_138(D) + _106;
  _108 = (unsigned char) _103;
  *_107 = _108;
  t1.287_109 = t1;
  _110 = t1.287_109 * 3;
  _111 = t0_193 + _110;
  _112 = _111 + 8;
  _113 = _112 >> 4;
  _114 = i_127 * 2;
  _115 = (sizetype) _114;
  _116 = out_138(D) + _115;
  _117 = (unsigned char) _113;
  *_116 = _117;
  i_197 = i_127 + 1;
  goto <bb 46>; [INV]

  <bb 48> :
  t1.288_118 = t1;
  _119 = t1.288_118 + 2;
  _120 = _119 >> 2;
  _121 = w_134(D) * 2;
  _122 = (sizetype) _121;
  _123 = _122 + 18446744073709551615;
  _124 = out_138(D) + _123;
  _125 = (unsigned char) _120;
  *_124 = _125;
  _199 = out_138(D);

  <bb 49> :
  # _128 = PHI <_141(3), _199(48)>
  t1 ={v} {CLOBBER};

  <bb 50> :
<L9>:
  return _128;

  <bb 51> :
<L10>:
  resx 1

}



;; Function load_jpeg_image (_ZL15load_jpeg_imageP10stbi__jpegPiS1_S1_i, funcdef_no=873, decl_uid=11677, cgraph_uid=779, symbol_order=794)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L136>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L136>}


Removing basic block 121
Removing unreachable region 1
Merging blocks 54 and 55
Merging blocks 74 and 75
load_jpeg_image (struct stbi__jpeg * z, int * out_x, int * out_y, int * comp, int req_comp)
{
  stbi_uc * D.15125;
  int D.15124;
  stbi_uc * y;
  stbi_uc b;
  stbi_uc g;
  stbi_uc r;
  stbi_uc m;
  stbi_uc m;
  stbi_uc m;
  stbi_uc * y;
  int y_bot;
  struct stbi__resample * r;
  stbi_uc * out;
  struct stbi__resample * r;
  struct stbi__resample res_comp[4];
  stbi_uc * coutput[4];
  stbi_uc * output;
  unsigned int j;
  unsigned int i;
  int k;
  int is_rgb;
  int decode_n;
  int n;
  int iftmp.308;
  bool retval.304;
  bool retval.303;
  stbi_uc * iftmp.302;
  stbi_uc * iftmp.301;
  bool iftmp.299;
  int iftmp.298;
  int iftmp.297;
  bool retval.296;
  stbi_uc * D.14995;
  struct stbi__context * _1;
  int _2;
  struct stbi__context * _3;
  int _4;
  struct stbi__context * _5;
  int _6;
  int _7;
  int _8;
  int _9;
  struct stbi__context * _10;
  int _11;
  struct stbi__context * _12;
  struct stbi__context * _13;
  unsigned int _14;
  unsigned int _15;
  long long unsigned int _16;
  void * _17;
  stbi_uc * _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  struct stbi__context * _27;
  unsigned int _28;
  int _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  int _33;
  unsigned int _34;
  unsigned int _35;
  int _36;
  stbi_uc * _37;
  stbi_uc * _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _44;
  int _45;
  int _46;
  stbi_uc * (*<Tc5a>) (stbi_uc *, stbi_uc *, stbi_uc *, int, int) _47;
  struct stbi__context * _48;
  unsigned int _49;
  int _50;
  struct stbi__context * _51;
  unsigned int _52;
  int _53;
  struct stbi__context * _54;
  unsigned int _55;
  struct stbi__context * _56;
  unsigned int _57;
  unsigned int n.300_58;
  unsigned int _59;
  unsigned int _60;
  sizetype _61;
  int _62;
  int _63;
  int _64;
  bool _65;
  stbi_uc * (*<Tc5a>) (stbi_uc *, stbi_uc *, stbi_uc *, int, int) _66;
  int _67;
  int _68;
  stbi_uc * _69;
  stbi_uc * _70;
  int _71;
  int _72;
  int _73;
  int _74;
  stbi_uc * _75;
  int _76;
  int _77;
  int _78;
  int _79;
  stbi_uc * _80;
  int _81;
  sizetype _82;
  stbi_uc * _83;
  struct stbi__context * _84;
  int _85;
  struct stbi__context * _86;
  unsigned int _87;
  sizetype _88;
  stbi_uc * _89;
  unsigned char _90;
  stbi_uc * _91;
  sizetype _92;
  stbi_uc * _93;
  stbi_uc * _94;
  unsigned char _95;
  stbi_uc * _96;
  sizetype _97;
  stbi_uc * _98;
  stbi_uc * _99;
  unsigned char _100;
  stbi_uc * _101;
  sizetype _102;
  void (*<Tc56>) (stbi_uc *, const stbi_uc *, const stbi_uc *, const stbi_uc *, int, int) _103;
  struct stbi__context * _104;
  unsigned int _105;
  int _106;
  stbi_uc * _107;
  stbi_uc * _108;
  struct stbi__context * _109;
  int _110;
  int _111;
  struct stbi__context * _112;
  unsigned int _113;
  stbi_uc * _114;
  sizetype _115;
  stbi_uc * _116;
  int _117;
  stbi_uc * _118;
  sizetype _119;
  stbi_uc * _120;
  unsigned char _121;
  int _122;
  unsigned char _123;
  int _124;
  stbi_uc * _125;
  sizetype _126;
  stbi_uc * _127;
  unsigned char _128;
  int _129;
  stbi_uc * _130;
  unsigned char _131;
  int _132;
  stbi_uc * _133;
  sizetype _134;
  stbi_uc * _135;
  unsigned char _136;
  int _137;
  stbi_uc * _138;
  unsigned char _139;
  stbi_uc * _140;
  sizetype _141;
  int _142;
  void (*<Tc56>) (stbi_uc *, const stbi_uc *, const stbi_uc *, const stbi_uc *, int, int) _143;
  struct stbi__context * _144;
  unsigned int _145;
  int _146;
  stbi_uc * _147;
  stbi_uc * _148;
  struct stbi__context * _149;
  unsigned int _150;
  stbi_uc * _151;
  sizetype _152;
  stbi_uc * _153;
  int _154;
  unsigned char _155;
  unsigned char _156;
  int _157;
  unsigned char _158;
  int _159;
  stbi_uc * _160;
  unsigned char _161;
  unsigned char _162;
  int _163;
  stbi_uc * _164;
  unsigned char _165;
  int _166;
  stbi_uc * _167;
  unsigned char _168;
  unsigned char _169;
  int _170;
  stbi_uc * _171;
  unsigned char _172;
  sizetype _173;
  void (*<Tc56>) (stbi_uc *, const stbi_uc *, const stbi_uc *, const stbi_uc *, int, int) _174;
  struct stbi__context * _175;
  unsigned int _176;
  int _177;
  stbi_uc * _178;
  stbi_uc * _179;
  struct stbi__context * _180;
  unsigned int _181;
  sizetype _182;
  stbi_uc * _183;
  stbi_uc * _184;
  unsigned char _185;
  stbi_uc * _186;
  unsigned char _187;
  unsigned char _188;
  stbi_uc * _189;
  sizetype _190;
  struct stbi__context * _191;
  unsigned int _192;
  stbi_uc * _193;
  sizetype _194;
  stbi_uc * _195;
  unsigned char _196;
  int _197;
  stbi_uc * _198;
  sizetype _199;
  stbi_uc * _200;
  unsigned char _201;
  int _202;
  stbi_uc * _203;
  sizetype _204;
  stbi_uc * _205;
  unsigned char _206;
  int _207;
  stbi_uc * out.305_208;
  unsigned char _209;
  struct stbi__context * _210;
  unsigned int _211;
  stbi_uc * _212;
  sizetype _213;
  stbi_uc * _214;
  unsigned char _215;
  int _216;
  stbi_uc * _217;
  sizetype _218;
  stbi_uc * _219;
  unsigned char _220;
  int _221;
  stbi_uc * _222;
  sizetype _223;
  stbi_uc * _224;
  unsigned char _225;
  int _226;
  unsigned char _227;
  stbi_uc * _228;
  struct stbi__context * _229;
  int _230;
  int _231;
  struct stbi__context * _232;
  unsigned int _233;
  stbi_uc * _234;
  sizetype _235;
  stbi_uc * _236;
  int _237;
  stbi_uc * _238;
  sizetype _239;
  stbi_uc * _240;
  unsigned char _241;
  int _242;
  int _243;
  stbi_uc * _244;
  sizetype _245;
  stbi_uc * _246;
  unsigned char _247;
  int _248;
  int _249;
  stbi_uc * _250;
  sizetype _251;
  stbi_uc * _252;
  unsigned char _253;
  int _254;
  int _255;
  int _256;
  int _257;
  unsigned char _258;
  stbi_uc * _259;
  sizetype _260;
  struct stbi__context * _261;
  int _262;
  int _263;
  struct stbi__context * _264;
  unsigned int _265;
  stbi_uc * _266;
  sizetype _267;
  stbi_uc * _268;
  unsigned char _269;
  int _270;
  stbi_uc * _271;
  sizetype _272;
  stbi_uc * _273;
  unsigned char _274;
  unsigned char _275;
  int _276;
  unsigned char _277;
  stbi_uc * _278;
  sizetype _279;
  struct stbi__context * _280;
  unsigned int _281;
  sizetype _282;
  stbi_uc * _283;
  sizetype _284;
  stbi_uc * _285;
  unsigned char _286;
  struct stbi__context * _287;
  unsigned int _288;
  sizetype _289;
  stbi_uc * _290;
  stbi_uc * out.306_291;
  unsigned char _292;
  stbi_uc * out.307_293;
  struct stbi__context * _294;
  unsigned int _295;
  int _296;
  struct stbi__context * _297;
  unsigned int _298;
  int _299;
  struct stbi__context * _300;
  int _301;
  stbi_uc * _325;
  stbi_uc * _326;
  int iftmp.297_327;
  int iftmp.298_328;
  bool iftmp.299_329;
  stbi_uc * iftmp.301_330;
  stbi_uc * iftmp.302_331;
  int iftmp.308_332;
  int _361;
  bool retval.296_362;
  stbi_uc * _364;
  int iftmp.298_365;
  int iftmp.298_366;
  int iftmp.297_367;
  int iftmp.297_368;
  bool iftmp.299_370;
  bool iftmp.299_371;
  stbi_uc * _385;
  stbi_uc * _403;
  stbi_uc * iftmp.301_409;
  stbi_uc * iftmp.301_410;
  stbi_uc * iftmp.302_411;
  stbi_uc * iftmp.302_412;
  stbi_uc * _414;
  bool retval.303_417;
  bool retval.304_421;
  int iftmp.308_512;
  int iftmp.308_513;
  stbi_uc * _515;
  stbi_uc * _519;

  <bb 2> :
  _1 = z_357(D)->s;
  _1->img_n = 0;
  if (req_comp_359(D) < 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (req_comp_359(D) > 4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__err ("bad req_comp");
  _519 = 0B;
  goto <bb 118>; [INV]

  <bb 5> :
  _361 = stbi__decode_jpeg_image (z_357(D));
  _2 = _361;
  retval.296_362 = _2 == 0;
  if (retval.296_362 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  stbi__cleanup_jpeg (z_357(D));
  _364 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 118>; [INV]

  <bb 7> :
  if (req_comp_359(D) == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _3 = z_357(D)->s;
  _4 = _3->img_n;
  if (_4 > 2)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  iftmp.298_365 = 3;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.298_366 = 1;

  <bb 11> :
  # iftmp.298_328 = PHI <iftmp.298_365(9), iftmp.298_366(10)>
  iftmp.297_367 = iftmp.298_328;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.297_368 = req_comp_359(D);

  <bb 13> :
  # iftmp.297_327 = PHI <iftmp.297_367(11), iftmp.297_368(12)>
  n_369 = iftmp.297_327;
  _5 = z_357(D)->s;
  _6 = _5->img_n;
  if (_6 == 3)
    goto <bb 14>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 14> :
  _7 = z_357(D)->rgb;
  if (_7 == 3)
    goto <bb 17>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _8 = z_357(D)->app14_color_transform;
  if (_8 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _9 = z_357(D)->jfif;
  if (_9 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  iftmp.299_370 = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  iftmp.299_371 = 0;

  <bb 19> :
  # iftmp.299_329 = PHI <iftmp.299_370(17), iftmp.299_371(18)>
  is_rgb_372 = (int) iftmp.299_329;
  _10 = z_357(D)->s;
  _11 = _10->img_n;
  if (_11 == 3)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  if (n_369 <= 2)
    goto <bb 21>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 21> :
  if (is_rgb_372 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  decode_n_373 = 1;
  goto <bb 24>; [INV]

  <bb 23> :
  _12 = z_357(D)->s;
  decode_n_374 = _12->img_n;

  <bb 24> :
  # decode_n_302 = PHI <decode_n_373(22), decode_n_374(23)>
  coutput[0] = 0B;
  coutput[1] = 0B;
  coutput[2] = 0B;
  coutput[3] = 0B;
  k_379 = 0;

  <bb 25> :
  # k_303 = PHI <k_379(24), k_398(41)>
  if (k_303 >= decode_n_302)
    goto <bb 42>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  r_380 = &res_comp[k_303];
  _13 = z_357(D)->s;
  _14 = _13->img_x;
  _15 = _14 + 3;
  _16 = (long long unsigned int) _15;
  _17 = stbi__malloc (_16);
  z_357(D)->img_comp[k_303].linebuf = _17;
  _18 = z_357(D)->img_comp[k_303].linebuf;
  if (_18 == 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  stbi__cleanup_jpeg (z_357(D));
  stbi__err ("outofmem");
  _385 = 0B;
  goto <bb 117>; [INV]

  <bb 28> :
  _19 = z_357(D)->img_h_max;
  _20 = z_357(D)->img_comp[k_303].h;
  _21 = _19 / _20;
  r_380->hs = _21;
  _22 = z_357(D)->img_v_max;
  _23 = z_357(D)->img_comp[k_303].v;
  _24 = _22 / _23;
  r_380->vs = _24;
  _25 = r_380->vs;
  _26 = _25 >> 1;
  r_380->ystep = _26;
  _27 = z_357(D)->s;
  _28 = _27->img_x;
  _29 = r_380->hs;
  _30 = (unsigned int) _29;
  _31 = _28 + _30;
  _32 = _31 + 4294967295;
  _33 = r_380->hs;
  _34 = (unsigned int) _33;
  _35 = _32 / _34;
  _36 = (int) _35;
  r_380->w_lores = _36;
  r_380->ypos = 0;
  _37 = z_357(D)->img_comp[k_303].data;
  r_380->line1 = _37;
  _38 = r_380->line1;
  r_380->line0 = _38;
  _39 = r_380->hs;
  if (_39 == 1)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _40 = r_380->vs;
  if (_40 == 1)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  r_380->resample = resample_row_1;
  goto <bb 41>; [INV]

  <bb 31> :
  _41 = r_380->hs;
  if (_41 == 1)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _42 = r_380->vs;
  if (_42 == 2)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  r_380->resample = stbi__resample_row_v_2;
  goto <bb 41>; [INV]

  <bb 34> :
  _43 = r_380->hs;
  if (_43 == 2)
    goto <bb 35>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 35> :
  _44 = r_380->vs;
  if (_44 == 1)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  r_380->resample = stbi__resample_row_h_2;
  goto <bb 41>; [INV]

  <bb 37> :
  _45 = r_380->hs;
  if (_45 == 2)
    goto <bb 38>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 38> :
  _46 = r_380->vs;
  if (_46 == 2)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _47 = z_357(D)->resample_row_hv_2_kernel;
  r_380->resample = _47;
  goto <bb 41>; [INV]

  <bb 40> :
  r_380->resample = stbi__resample_row_generic;

  <bb 41> :
  k_398 = k_303 + 1;
  goto <bb 25>; [INV]

  <bb 42> :
  _48 = z_357(D)->s;
  _49 = _48->img_y;
  _50 = (int) _49;
  _51 = z_357(D)->s;
  _52 = _51->img_x;
  _53 = (int) _52;
  output_400 = stbi__malloc_mad3 (n_369, _53, _50, 1);
  if (output_400 == 0B)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  stbi__cleanup_jpeg (z_357(D));
  stbi__err ("outofmem");
  _403 = 0B;
  goto <bb 117>; [INV]

  <bb 44> :
  j_404 = 0;

  <bb 45> :
  # j_315 = PHI <j_404(44), j_503(110)>
  _54 = z_357(D)->s;
  _55 = _54->img_y;
  if (j_315 >= _55)
    goto <bb 111>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 46> :
  _56 = z_357(D)->s;
  _57 = _56->img_x;
  n.300_58 = (unsigned int) n_369;
  _59 = _57 * n.300_58;
  _60 = j_315 * _59;
  _61 = (sizetype) _60;
  out_405 = output_400 + _61;
  k_406 = 0;

  <bb 47> :
  # k_304 = PHI <k_406(46), k_423(57)>
  if (k_304 >= decode_n_302)
    goto <bb 58>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  r_407 = &res_comp[k_304];
  _62 = r_407->ystep;
  _63 = r_407->vs;
  _64 = _63 >> 1;
  _65 = _62 >= _64;
  y_bot_408 = (int) _65;
  _66 = r_407->resample;
  _67 = r_407->hs;
  _68 = r_407->w_lores;
  if (y_bot_408 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  iftmp.301_409 = r_407->line0;
  goto <bb 51>; [INV]

  <bb 50> :
  iftmp.301_410 = r_407->line1;

  <bb 51> :
  # iftmp.301_330 = PHI <iftmp.301_409(49), iftmp.301_410(50)>
  if (y_bot_408 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  iftmp.302_411 = r_407->line1;
  goto <bb 54>; [INV]

  <bb 53> :
  iftmp.302_412 = r_407->line0;

  <bb 54> :
  # iftmp.302_331 = PHI <iftmp.302_411(52), iftmp.302_412(53)>
  _69 = z_357(D)->img_comp[k_304].linebuf;
  _414 = _66 (_69, iftmp.302_331, iftmp.301_330, _68, _67);
  _70 = _414;
  coutput[k_304] = _70;
  _71 = r_407->ystep;
  _72 = _71 + 1;
  r_407->ystep = _72;
  _73 = r_407->ystep;
  _74 = r_407->vs;
  retval.303_417 = _73 >= _74;
  if (retval.303_417 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 55> :
  r_407->ystep = 0;
  _75 = r_407->line1;
  r_407->line0 = _75;
  _76 = r_407->ypos;
  _77 = _76 + 1;
  r_407->ypos = _77;
  _78 = r_407->ypos;
  _79 = z_357(D)->img_comp[k_304].y;
  retval.304_421 = _78 < _79;
  if (retval.304_421 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  _80 = r_407->line1;
  _81 = z_357(D)->img_comp[k_304].w2;
  _82 = (sizetype) _81;
  _83 = _80 + _82;
  r_407->line1 = _83;

  <bb 57> :
  k_423 = k_304 + 1;
  goto <bb 47>; [INV]

  <bb 58> :
  if (n_369 > 2)
    goto <bb 59>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 59> :
  y_424 = coutput[0];
  _84 = z_357(D)->s;
  _85 = _84->img_n;
  if (_85 == 3)
    goto <bb 60>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 60> :
  if (is_rgb_372 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  i_425 = 0;

  <bb 62> :
  # i_305 = PHI <i_425(61), i_431(63)>
  # out_316 = PHI <out_405(61), out_430(63)>
  _86 = z_357(D)->s;
  _87 = _86->img_x;
  if (i_305 >= _87)
    goto <bb 65>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  _88 = (sizetype) i_305;
  _89 = y_424 + _88;
  _90 = *_89;
  *out_316 = _90;
  _91 = coutput[1];
  _92 = (sizetype) i_305;
  _93 = _91 + _92;
  _94 = out_316 + 1;
  _95 = *_93;
  *_94 = _95;
  _96 = coutput[2];
  _97 = (sizetype) i_305;
  _98 = _96 + _97;
  _99 = out_316 + 2;
  _100 = *_98;
  *_99 = _100;
  _101 = out_316 + 3;
  *_101 = 255;
  _102 = (sizetype) n_369;
  out_430 = out_316 + _102;
  i_431 = i_305 + 1;
  goto <bb 62>; [INV]

  <bb 64> :
  _103 = z_357(D)->YCbCr_to_RGB_kernel;
  _104 = z_357(D)->s;
  _105 = _104->img_x;
  _106 = (int) _105;
  _107 = coutput[2];
  _108 = coutput[1];
  _103 (out_405, y_424, _108, _107, _106, n_369);

  <bb 65> :
  goto <bb 82>; [INV]

  <bb 66> :
  _109 = z_357(D)->s;
  _110 = _109->img_n;
  if (_110 == 4)
    goto <bb 67>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 67> :
  _111 = z_357(D)->app14_color_transform;
  if (_111 == 0)
    goto <bb 68>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 68> :
  i_433 = 0;

  <bb 69> :
  # i_306 = PHI <i_433(68), i_443(70)>
  # out_317 = PHI <out_405(68), out_442(70)>
  _112 = z_357(D)->s;
  _113 = _112->img_x;
  if (i_306 >= _113)
    goto <bb 71>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  _114 = coutput[3];
  _115 = (sizetype) i_306;
  _116 = _114 + _115;
  m_434 = *_116;
  _117 = (int) m_434;
  _118 = coutput[0];
  _119 = (sizetype) i_306;
  _120 = _118 + _119;
  _121 = *_120;
  _122 = (int) _121;
  _123 = stbi__blinn_8x8 (_122, _117);
  *out_317 = _123;
  _124 = (int) m_434;
  _125 = coutput[1];
  _126 = (sizetype) i_306;
  _127 = _125 + _126;
  _128 = *_127;
  _129 = (int) _128;
  _130 = out_317 + 1;
  _131 = stbi__blinn_8x8 (_129, _124);
  *_130 = _131;
  _132 = (int) m_434;
  _133 = coutput[2];
  _134 = (sizetype) i_306;
  _135 = _133 + _134;
  _136 = *_135;
  _137 = (int) _136;
  _138 = out_317 + 2;
  _139 = stbi__blinn_8x8 (_137, _132);
  *_138 = _139;
  _140 = out_317 + 3;
  *_140 = 255;
  _141 = (sizetype) n_369;
  out_442 = out_317 + _141;
  i_443 = i_306 + 1;
  goto <bb 69>; [INV]

  <bb 71> :
  goto <bb 78>; [INV]

  <bb 72> :
  _142 = z_357(D)->app14_color_transform;
  if (_142 == 2)
    goto <bb 73>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 73> :
  _143 = z_357(D)->YCbCr_to_RGB_kernel;
  _144 = z_357(D)->s;
  _145 = _144->img_x;
  _146 = (int) _145;
  _147 = coutput[2];
  _148 = coutput[1];
  _143 (out_405, y_424, _148, _147, _146, n_369);
  i_445 = 0;

  <bb 74> :
  # i_307 = PHI <i_445(73), i_454(75)>
  # out_318 = PHI <out_405(73), out_453(75)>
  _149 = z_357(D)->s;
  _150 = _149->img_x;
  if (i_307 >= _150)
    goto <bb 76>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 75> :
  _151 = coutput[3];
  _152 = (sizetype) i_307;
  _153 = _151 + _152;
  m_446 = *_153;
  _154 = (int) m_446;
  _155 = *out_318;
  _156 = ~_155;
  _157 = (int) _156;
  _158 = stbi__blinn_8x8 (_157, _154);
  *out_318 = _158;
  _159 = (int) m_446;
  _160 = out_318 + 1;
  _161 = *_160;
  _162 = ~_161;
  _163 = (int) _162;
  _164 = out_318 + 1;
  _165 = stbi__blinn_8x8 (_163, _159);
  *_164 = _165;
  _166 = (int) m_446;
  _167 = out_318 + 2;
  _168 = *_167;
  _169 = ~_168;
  _170 = (int) _169;
  _171 = out_318 + 2;
  _172 = stbi__blinn_8x8 (_170, _166);
  *_171 = _172;
  _173 = (sizetype) n_369;
  out_453 = out_318 + _173;
  i_454 = i_307 + 1;
  goto <bb 74>; [INV]

  <bb 76> :
  goto <bb 78>; [INV]

  <bb 77> :
  _174 = z_357(D)->YCbCr_to_RGB_kernel;
  _175 = z_357(D)->s;
  _176 = _175->img_x;
  _177 = (int) _176;
  _178 = coutput[2];
  _179 = coutput[1];
  _174 (out_405, y_424, _179, _178, _177, n_369);

  <bb 78> :
  goto <bb 82>; [INV]

  <bb 79> :
  i_456 = 0;

  <bb 80> :
  # i_308 = PHI <i_456(79), i_462(81)>
  # out_319 = PHI <out_405(79), out_461(81)>
  _180 = z_357(D)->s;
  _181 = _180->img_x;
  if (i_308 >= _181)
    goto <bb 82>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 81> :
  _182 = (sizetype) i_308;
  _183 = y_424 + _182;
  _184 = out_319 + 2;
  _185 = *_183;
  *_184 = _185;
  _186 = out_319 + 1;
  _187 = *_184;
  *_186 = _187;
  _188 = *_186;
  *out_319 = _188;
  _189 = out_319 + 3;
  *_189 = 255;
  _190 = (sizetype) n_369;
  out_461 = out_319 + _190;
  i_462 = i_308 + 1;
  goto <bb 80>; [INV]

  <bb 82> :
  goto <bb 110>; [INV]

  <bb 83> :
  if (is_rgb_372 != 0)
    goto <bb 84>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 84> :
  if (n_369 == 1)
    goto <bb 85>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 85> :
  i_463 = 0;

  <bb 86> :
  # i_309 = PHI <i_463(85), i_467(87)>
  # out_320 = PHI <out_405(85), out_464(87)>
  _191 = z_357(D)->s;
  _192 = _191->img_x;
  if (i_309 >= _192)
    goto <bb 110>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 87> :
  _193 = coutput[2];
  _194 = (sizetype) i_309;
  _195 = _193 + _194;
  _196 = *_195;
  _197 = (int) _196;
  _198 = coutput[1];
  _199 = (sizetype) i_309;
  _200 = _198 + _199;
  _201 = *_200;
  _202 = (int) _201;
  _203 = coutput[0];
  _204 = (sizetype) i_309;
  _205 = _203 + _204;
  _206 = *_205;
  _207 = (int) _206;
  out.305_208 = out_320;
  out_464 = out.305_208 + 1;
  _209 = stbi__compute_y (_207, _202, _197);
  *out.305_208 = _209;
  i_467 = i_309 + 1;
  goto <bb 86>; [INV]

  <bb 88> :
  i_468 = 0;

  <bb 89> :
  # i_310 = PHI <i_468(88), i_472(90)>
  # out_321 = PHI <out_405(88), out_473(90)>
  _210 = z_357(D)->s;
  _211 = _210->img_x;
  if (i_310 >= _211)
    goto <bb 110>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 90> :
  _212 = coutput[2];
  _213 = (sizetype) i_310;
  _214 = _212 + _213;
  _215 = *_214;
  _216 = (int) _215;
  _217 = coutput[1];
  _218 = (sizetype) i_310;
  _219 = _217 + _218;
  _220 = *_219;
  _221 = (int) _220;
  _222 = coutput[0];
  _223 = (sizetype) i_310;
  _224 = _222 + _223;
  _225 = *_224;
  _226 = (int) _225;
  _227 = stbi__compute_y (_226, _221, _216);
  *out_321 = _227;
  _228 = out_321 + 1;
  *_228 = 255;
  i_472 = i_310 + 1;
  out_473 = out_321 + 2;
  goto <bb 89>; [INV]

  <bb 91> :
  _229 = z_357(D)->s;
  _230 = _229->img_n;
  if (_230 == 4)
    goto <bb 92>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 92> :
  _231 = z_357(D)->app14_color_transform;
  if (_231 == 0)
    goto <bb 93>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 93> :
  i_474 = 0;

  <bb 94> :
  # i_311 = PHI <i_474(93), i_486(95)>
  # out_322 = PHI <out_405(93), out_485(95)>
  _232 = z_357(D)->s;
  _233 = _232->img_x;
  if (i_311 >= _233)
    goto <bb 96>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 95> :
  _234 = coutput[3];
  _235 = (sizetype) i_311;
  _236 = _234 + _235;
  m_475 = *_236;
  _237 = (int) m_475;
  _238 = coutput[0];
  _239 = (sizetype) i_311;
  _240 = _238 + _239;
  _241 = *_240;
  _242 = (int) _241;
  r_477 = stbi__blinn_8x8 (_242, _237);
  _243 = (int) m_475;
  _244 = coutput[1];
  _245 = (sizetype) i_311;
  _246 = _244 + _245;
  _247 = *_246;
  _248 = (int) _247;
  g_479 = stbi__blinn_8x8 (_248, _243);
  _249 = (int) m_475;
  _250 = coutput[2];
  _251 = (sizetype) i_311;
  _252 = _250 + _251;
  _253 = *_252;
  _254 = (int) _253;
  b_481 = stbi__blinn_8x8 (_254, _249);
  _255 = (int) b_481;
  _256 = (int) g_479;
  _257 = (int) r_477;
  _258 = stbi__compute_y (_257, _256, _255);
  *out_322 = _258;
  _259 = out_322 + 1;
  *_259 = 255;
  _260 = (sizetype) n_369;
  out_485 = out_322 + _260;
  i_486 = i_311 + 1;
  goto <bb 94>; [INV]

  <bb 96> :
  goto <bb 110>; [INV]

  <bb 97> :
  _261 = z_357(D)->s;
  _262 = _261->img_n;
  if (_262 == 4)
    goto <bb 98>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 98> :
  _263 = z_357(D)->app14_color_transform;
  if (_263 == 2)
    goto <bb 99>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 99> :
  i_487 = 0;

  <bb 100> :
  # i_312 = PHI <i_487(99), i_492(101)>
  # out_323 = PHI <out_405(99), out_491(101)>
  _264 = z_357(D)->s;
  _265 = _264->img_x;
  if (i_312 >= _265)
    goto <bb 102>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 101> :
  _266 = coutput[3];
  _267 = (sizetype) i_312;
  _268 = _266 + _267;
  _269 = *_268;
  _270 = (int) _269;
  _271 = coutput[0];
  _272 = (sizetype) i_312;
  _273 = _271 + _272;
  _274 = *_273;
  _275 = ~_274;
  _276 = (int) _275;
  _277 = stbi__blinn_8x8 (_276, _270);
  *out_323 = _277;
  _278 = out_323 + 1;
  *_278 = 255;
  _279 = (sizetype) n_369;
  out_491 = out_323 + _279;
  i_492 = i_312 + 1;
  goto <bb 100>; [INV]

  <bb 102> :
  goto <bb 110>; [INV]

  <bb 103> :
  y_493 = coutput[0];
  if (n_369 == 1)
    goto <bb 104>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 104> :
  i_494 = 0;

  <bb 105> :
  # i_313 = PHI <i_494(104), i_496(106)>
  _280 = z_357(D)->s;
  _281 = _280->img_x;
  if (i_313 >= _281)
    goto <bb 110>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 106> :
  _282 = (sizetype) i_313;
  _283 = y_493 + _282;
  _284 = (sizetype) i_313;
  _285 = out_405 + _284;
  _286 = *_283;
  *_285 = _286;
  i_496 = i_313 + 1;
  goto <bb 105>; [INV]

  <bb 107> :
  i_497 = 0;

  <bb 108> :
  # i_314 = PHI <i_497(107), i_502(109)>
  # out_324 = PHI <out_405(107), out_500(109)>
  _287 = z_357(D)->s;
  _288 = _287->img_x;
  if (i_314 >= _288)
    goto <bb 110>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 109> :
  _289 = (sizetype) i_314;
  _290 = y_493 + _289;
  out.306_291 = out_324;
  out_498 = out.306_291 + 1;
  _292 = *_290;
  *out.306_291 = _292;
  out.307_293 = out_498;
  out_500 = out.307_293 + 1;
  *out.307_293 = 255;
  i_502 = i_314 + 1;
  goto <bb 108>; [INV]

  <bb 110> :
  j_503 = j_315 + 1;
  goto <bb 45>; [INV]

  <bb 111> :
  stbi__cleanup_jpeg (z_357(D));
  _294 = z_357(D)->s;
  _295 = _294->img_x;
  _296 = (int) _295;
  *out_x_507(D) = _296;
  _297 = z_357(D)->s;
  _298 = _297->img_y;
  _299 = (int) _298;
  *out_y_509(D) = _299;
  if (comp_511(D) != 0B)
    goto <bb 112>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 112> :
  _300 = z_357(D)->s;
  _301 = _300->img_n;
  if (_301 > 2)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  iftmp.308_512 = 3;
  goto <bb 115>; [INV]

  <bb 114> :
  iftmp.308_513 = 1;

  <bb 115> :
  # iftmp.308_332 = PHI <iftmp.308_512(113), iftmp.308_513(114)>
  *comp_511(D) = iftmp.308_332;

  <bb 116> :
  _515 = output_400;

  <bb 117> :
  # _325 = PHI <_385(27), _403(43), _515(116)>
  coutput ={v} {CLOBBER};
  res_comp ={v} {CLOBBER};

  <bb 118> :
  # _326 = PHI <_519(4), _364(6), _325(117)>
<L135>:
  return _326;

}



;; Function stbi__zbuild_huffman (_ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi, funcdef_no=880, decl_uid=11807, cgraph_uid=786, symbol_order=801)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L30>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L30>}


Removing basic block 30
Removing unreachable region 1
Merging blocks 20 and 21
stbi__zbuild_huffman (struct stbi__zhuffman * z, const stbi_uc * sizelist, int num)
{
  int D.15181;
  int j;
  stbi__uint16 fastv;
  int c;
  int s;
  int sizes[17];
  int next_code[16];
  int code;
  int k;
  int i;
  int D.15162;
  stbi__uint16[512] * _1;
  sizetype _2;
  const stbi_uc * _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  sizetype _18;
  const stbi_uc * _19;
  unsigned char _20;
  int _21;
  short unsigned int _22;
  int _23;
  int _24;
  short unsigned int _25;
  int _26;
  int _27;
  signed short _28;
  signed short _29;
  signed short _30;
  unsigned char _31;
  short unsigned int _32;
  int _33;
  int _34;
  int _35;
  int _36;
  int _44;
  int _65;
  int _74;
  int _87;
  int _95;

  <bb 2> :
  k_52 = 0;
  memset (&sizes, 0, 68);
  _1 = &z_55(D)->fast;
  memset (_1, 0, 1024);
  i_57 = 0;

  <bb 3> :
  # i_37 = PHI <i_57(2), i_61(4)>
  if (i_37 >= num_58(D))
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _2 = (sizetype) i_37;
  _3 = sizelist_59(D) + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = sizes[_5];
  _7 = _6 + 1;
  sizes[_5] = _7;
  i_61 = i_37 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  sizes[0] = 0;
  i_63 = 1;

  <bb 6> :
  # i_38 = PHI <i_63(5), i_66(9)>
  if (i_38 > 15)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _8 = sizes[i_38];
  _9 = 1 << i_38;
  if (_8 > _9)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _65 = stbi__err ("bad sizes");
  goto <bb 27>; [INV]

  <bb 9> :
  i_66 = i_38 + 1;
  goto <bb 6>; [INV]

  <bb 10> :
  code_67 = 0;
  i_68 = 1;

  <bb 11> :
  # i_39 = PHI <i_68(10), i_78(15)>
  # k_41 = PHI <k_52(10), k_77(15)>
  # code_42 = PHI <code_67(10), code_76(15)>
  if (i_39 > 15)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  next_code[i_39] = code_42;
  _10 = (short unsigned int) code_42;
  z_55(D)->firstcode[i_39] = _10;
  _11 = (short unsigned int) k_41;
  z_55(D)->firstsymbol[i_39] = _11;
  _12 = sizes[i_39];
  code_72 = code_42 + _12;
  _13 = sizes[i_39];
  if (_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _14 = 1 << i_39;
  if (code_72 > _14)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _74 = stbi__err ("bad codelengths");
  goto <bb 27>; [INV]

  <bb 15> :
  _15 = 16 - i_39;
  _16 = code_72 << _15;
  z_55(D)->maxcode[i_39] = _16;
  code_76 = code_72 << 1;
  _17 = sizes[i_39];
  k_77 = k_41 + _17;
  i_78 = i_39 + 1;
  goto <bb 11>; [INV]

  <bb 16> :
  z_55(D)->maxcode[16] = 65536;
  i_80 = 0;

  <bb 17> :
  # i_40 = PHI <i_80(16), i_94(25)>
  if (i_40 >= num_58(D))
    goto <bb 26>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _18 = (sizetype) i_40;
  _19 = sizelist_59(D) + _18;
  _20 = *_19;
  s_81 = (int) _20;
  if (s_81 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 19> :
  _21 = next_code[s_81];
  _22 = z_55(D)->firstcode[s_81];
  _23 = (int) _22;
  _24 = _21 - _23;
  _25 = z_55(D)->firstsymbol[s_81];
  _26 = (int) _25;
  c_82 = _24 + _26;
  _27 = s_81 << 9;
  _28 = (signed short) _27;
  _29 = (signed short) i_40;
  _30 = _28 | _29;
  fastv_83 = (stbi__uint16) _30;
  _31 = (unsigned char) s_81;
  z_55(D)->size[c_82] = _31;
  _32 = (short unsigned int) i_40;
  z_55(D)->value[c_82] = _32;
  if (s_81 <= 9)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 20> :
  _33 = next_code[s_81];
  _87 = stbi__bit_reverse (_33, s_81);
  j_88 = _87;

  <bb 21> :
  # j_43 = PHI <j_88(20), j_90(22)>
  if (j_43 > 511)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  z_55(D)->fast[j_43] = fastv_83;
  _34 = 1 << s_81;
  j_90 = j_43 + _34;
  goto <bb 21>; [INV]

  <bb 23> :

  <bb 24> :
  _35 = next_code[s_81];
  _36 = _35 + 1;
  next_code[s_81] = _36;

  <bb 25> :
  i_94 = i_40 + 1;
  goto <bb 17>; [INV]

  <bb 26> :
  _95 = 1;

  <bb 27> :
  # _44 = PHI <_65(8), _74(14), _95(26)>
  next_code ={v} {CLOBBER};
  sizes ={v} {CLOBBER};

  <bb 28> :
<L29>:
  return _44;

}



;; Function stbi__compute_huffman_codes (_ZL27stbi__compute_huffman_codesP10stbi__zbuf, funcdef_no=889, decl_uid=11906, cgraph_uid=795, symbol_order=815)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L35>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L35>}


Removing basic block 40
Removing unreachable region 1
Merging blocks 5 and 6
Merging blocks 10 and 11
Merging blocks 31 and 32
Merging blocks 34 and 35
stbi__compute_huffman_codes (struct stbi__zbuf * a)
{
  int D.15334;
  int D.15333;
  int D.15332;
  int D.15331;
  stbi_uc fill;
  int c;
  int s;
  int ntot;
  int hclen;
  int hdist;
  int hlit;
  int n;
  int i;
  stbi_uc codelength_sizes[19];
  stbi_uc lencodes[455];
  struct stbi__zhuffman z_codelength;
  static const stbi_uc length_dezigzag[19] = {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};
  bool retval.331;
  bool retval.330;
  int D.15300;
  bool retval.328;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  int _9;
  unsigned char _10;
  int _11;
  int n.329_12;
  unsigned char _13;
  unsigned int _14;
  unsigned int _15;
  int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  int _21;
  long long unsigned int _22;
  int _23;
  sizetype _24;
  void * _25;
  struct stbi__zhuffman * _26;
  int _27;
  sizetype _28;
  const stbi_uc * _29;
  struct stbi__zhuffman * _30;
  int _31;
  int _37;
  int _60;
  bool retval.328_61;
  int _62;
  int _65;
  int _73;
  int _80;
  int _82;
  int _86;
  int _88;
  int _90;
  bool retval.330_91;
  int _92;
  int _94;
  bool retval.331_95;
  int _96;
  int _97;

  <bb 2> :
  _1 = stbi__zreceive (a_45(D), 5);
  _2 = _1 + 257;
  hlit_47 = (int) _2;
  _3 = stbi__zreceive (a_45(D), 5);
  _4 = _3 + 1;
  hdist_49 = (int) _4;
  _5 = stbi__zreceive (a_45(D), 4);
  _6 = _5 + 4;
  hclen_51 = (int) _6;
  ntot_52 = hlit_47 + hdist_49;
  memset (&codelength_sizes, 0, 19);
  i_54 = 0;

  <bb 3> :
  # i_32 = PHI <i_54(2), i_58(4)>
  if (i_32 >= hclen_51)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _7 = stbi__zreceive (a_45(D), 3);
  s_56 = (int) _7;
  _8 = length_dezigzag[i_32];
  _9 = (int) _8;
  _10 = (unsigned char) s_56;
  codelength_sizes[_9] = _10;
  i_58 = i_32 + 1;
  goto <bb 3>; [INV]

  <bb 5> :
  _60 = stbi__zbuild_huffman (&z_codelength, &codelength_sizes, 19);
  _11 = _60;
  retval.328_61 = _11 == 0;
  if (retval.328_61 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _62 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]

  <bb 7> :
  n_63 = 0;

  <bb 8> :
  # n_33 = PHI <n_63(7), n_34(26)>
  if (n_33 >= ntot_52)
    goto <bb 27>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _65 = stbi__zhuffman_decode (a_45(D), &z_codelength);
  c_66 = _65;
  if (c_66 < 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (c_66 > 18)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _86 = stbi__err ("bad codelengths");
  goto <bb 34>; [INV]

  <bb 12> :
  if (c_66 <= 15)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  n.329_12 = n_33;
  n_67 = n.329_12 + 1;
  _13 = (unsigned char) c_66;
  lencodes[n.329_12] = _13;
  goto <bb 26>; [INV]

  <bb 14> :
  fill_69 = 0;
  if (c_66 == 16)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _14 = stbi__zreceive (a_45(D), 2);
  _15 = _14 + 3;
  c_71 = (int) _15;
  if (n_33 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _73 = stbi__err ("bad codelengths");
  goto <bb 34>; [INV]

  <bb 17> :
  _16 = n_33 + -1;
  fill_74 = lencodes[_16];
  goto <bb 23>; [INV]

  <bb 18> :
  if (c_66 == 17)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _17 = stbi__zreceive (a_45(D), 3);
  _18 = _17 + 3;
  c_76 = (int) _18;
  goto <bb 23>; [INV]

  <bb 20> :
  if (c_66 == 18)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _19 = stbi__zreceive (a_45(D), 7);
  _20 = _19 + 11;
  c_78 = (int) _20;
  goto <bb 23>; [INV]

  <bb 22> :
  _80 = stbi__err ("bad codelengths");
  goto <bb 34>; [INV]

  <bb 23> :
  # c_35 = PHI <c_71(17), c_76(19), c_78(21)>
  # fill_36 = PHI <fill_74(17), fill_69(19), fill_69(21)>
  _21 = ntot_52 - n_33;
  if (c_35 > _21)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  _82 = stbi__err ("bad codelengths");
  goto <bb 34>; [INV]

  <bb 25> :
  _22 = (long long unsigned int) c_35;
  _23 = (int) fill_36;
  _24 = (sizetype) n_33;
  _25 = &lencodes + _24;
  memset (_25, _23, _22);
  n_84 = n_33 + c_35;

  <bb 26> :
  # n_34 = PHI <n_67(13), n_84(25)>
  goto <bb 8>; [INV]

  <bb 27> :
  if (n_33 != ntot_52)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  _88 = stbi__err ("bad codelengths");
  goto <bb 34>; [INV]

  <bb 29> :
  _26 = &a_45(D)->z_length;
  _90 = stbi__zbuild_huffman (_26, &lencodes, hlit_47);
  _27 = _90;
  retval.330_91 = _27 == 0;
  if (retval.330_91 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _92 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]

  <bb 31> :
  _28 = (sizetype) hlit_47;
  _29 = &lencodes + _28;
  _30 = &a_45(D)->z_distance;
  _94 = stbi__zbuild_huffman (_30, _29, hdist_49);
  _31 = _94;
  retval.331_95 = _31 == 0;
  if (retval.331_95 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  _96 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 34>; [INV]

  <bb 33> :
  _97 = 1;

  <bb 34> :
  # _37 = PHI <_62(6), _86(11), _73(16), _80(22), _82(24), _88(28), _92(30), _96(32), _97(33)>
  z_codelength ={v} {CLOBBER};
  lencodes ={v} {CLOBBER};
  codelength_sizes ={v} {CLOBBER};

  <bb 35> :
<L34>:
  return _37;

}



;; Function stbi__parse_uncompressed_block (_ZL30stbi__parse_uncompressed_blockP10stbi__zbuf, funcdef_no=890, decl_uid=11959, cgraph_uid=796, symbol_order=816)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


stbi__parse_uncompressed_block (struct stbi__zbuf * a)
{
  int k;
  int nlen;
  int len;
  stbi_uc header[4];
  bool retval.334;
  int D.15344;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  unsigned int _6;
  int k.332_7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  int _12;
  int _13;
  int k.333_14;
  unsigned char _15;
  unsigned char _16;
  int _17;
  int _18;
  unsigned char _19;
  int _20;
  unsigned char _21;
  int _22;
  int _23;
  unsigned char _24;
  int _25;
  int _26;
  stbi_uc * _27;
  sizetype _28;
  stbi_uc * _29;
  stbi_uc * _30;
  char * _31;
  sizetype _32;
  char * _33;
  char * _34;
  char * _35;
  int _36;
  long long unsigned int _37;
  stbi_uc * _38;
  char * _39;
  stbi_uc * _40;
  sizetype _41;
  stbi_uc * _42;
  char * _43;
  sizetype _44;
  char * _45;
  int _48;
  int _63;
  int _70;
  int _72;
  bool retval.334_74;
  int _75;
  int _79;

  <bb 2> :
  _1 = a_55(D)->num_bits;
  _2 = _1 & 7;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = a_55(D)->num_bits;
  _4 = _3 & 7;
  stbi__zreceive (a_55(D), _4);

  <bb 4> :
  k_57 = 0;

  <bb 5> :
  # k_46 = PHI <k_57(4), k_58(6)>
  _5 = a_55(D)->num_bits;
  if (_5 <= 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _6 = a_55(D)->code_buffer;
  k.332_7 = k_46;
  k_58 = k.332_7 + 1;
  _8 = (unsigned char) _6;
  header[k.332_7] = _8;
  _9 = a_55(D)->code_buffer;
  _10 = _9 >> 8;
  a_55(D)->code_buffer = _10;
  _11 = a_55(D)->num_bits;
  _12 = _11 + -8;
  a_55(D)->num_bits = _12;
  goto <bb 5>; [INV]

  <bb 7> :
  _13 = a_55(D)->num_bits;
  if (_13 < 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _63 = stbi__err ("zlib corrupt");
  goto <bb 19>; [INV]

  <bb 9> :
  # k_47 = PHI <k_46(7), k_64(10)>
  if (k_47 > 3)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  k.333_14 = k_47;
  k_64 = k.333_14 + 1;
  _15 = stbi__zget8 (a_55(D));
  header[k.333_14] = _15;
  goto <bb 9>; [INV]

  <bb 11> :
  _16 = header[1];
  _17 = (int) _16;
  _18 = _17 * 256;
  _19 = header[0];
  _20 = (int) _19;
  len_67 = _18 + _20;
  _21 = header[3];
  _22 = (int) _21;
  _23 = _22 * 256;
  _24 = header[2];
  _25 = (int) _24;
  nlen_68 = _23 + _25;
  _26 = len_67 ^ 65535;
  if (nlen_68 != _26)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _70 = stbi__err ("zlib corrupt");
  goto <bb 19>; [INV]

  <bb 13> :
  _27 = a_55(D)->zbuffer;
  _28 = (sizetype) len_67;
  _29 = _27 + _28;
  _30 = a_55(D)->zbuffer_end;
  if (_29 > _30)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _72 = stbi__err ("read past buffer");
  goto <bb 19>; [INV]

  <bb 15> :
  _31 = a_55(D)->zout;
  _32 = (sizetype) len_67;
  _33 = _31 + _32;
  _34 = a_55(D)->zout_end;
  if (_33 > _34)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _35 = a_55(D)->zout;
  _36 = stbi__zexpand (a_55(D), _35, len_67);
  retval.334_74 = _36 == 0;
  if (retval.334_74 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _75 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  _37 = (long long unsigned int) len_67;
  _38 = a_55(D)->zbuffer;
  _39 = a_55(D)->zout;
  memcpy (_39, _38, _37);
  _40 = a_55(D)->zbuffer;
  _41 = (sizetype) len_67;
  _42 = _40 + _41;
  a_55(D)->zbuffer = _42;
  _43 = a_55(D)->zout;
  _44 = (sizetype) len_67;
  _45 = _43 + _44;
  a_55(D)->zout = _45;
  _79 = 1;

  <bb 19> :
  # _48 = PHI <_63(8), _70(12), _72(14), _75(17), _79(18)>
  header ={v} {CLOBBER};

  <bb 20> :
<L21>:
  return _48;

}



;; Function stbi_zlib_decode_malloc_guesssize (stbi_zlib_decode_malloc_guesssize, funcdef_no=894, decl_uid=5119, cgraph_uid=800, symbol_order=822)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L9>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L9>}


Removing basic block 12
Removing unreachable region 1
Merging blocks 4 and 5
stbi_zlib_decode_malloc_guesssize (const char * buffer, int len, int initial_size, int * outlen)
{
  int D.15420;
  char * p;
  struct stbi__zbuf a;
  bool retval.342;
  char * D.15412;
  long long unsigned int _1;
  sizetype _2;
  stbi_uc * _3;
  int _4;
  char * _5;
  char * _6;
  long long int _7;
  int _8;
  char * _9;
  char * _10;
  char * _17;
  int _23;
  bool retval.342_24;
  char * _27;
  char * _29;

  <bb 2> :
  _1 = (long long unsigned int) initial_size_13(D);
  p_16 = stbi__malloc (_1);
  if (p_16 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _17 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 4> :
  a.zbuffer = buffer_18(D);
  _2 = (sizetype) len_20(D);
  _3 = buffer_18(D) + _2;
  a.zbuffer_end = _3;
  _23 = stbi__do_zlib (&a, p_16, initial_size_13(D), 1, 1);
  _4 = _23;
  retval.342_24 = _4 != 0;
  if (retval.342_24 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  if (outlen_25(D) != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _5 = a.zout;
  _6 = a.zout_start;
  _7 = _5 - _6;
  _8 = (int) _7;
  *outlen_25(D) = _8;

  <bb 7> :
  _27 = a.zout_start;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _9 = a.zout_start;
  free (_9);
  _29 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _10 = PHI <_17(3), _27(7), _29(8)>
  a ={v} {CLOBBER};

  <bb 10> :
<L8>:
  return _10;

}



;; Function stbi_zlib_decode_malloc_guesssize_headerflag (stbi_zlib_decode_malloc_guesssize_headerflag, funcdef_no=896, decl_uid=5125, cgraph_uid=802, symbol_order=824)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L9>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L9>}


Removing basic block 12
Removing unreachable region 1
Merging blocks 4 and 5
stbi_zlib_decode_malloc_guesssize_headerflag (const char * buffer, int len, int initial_size, int * outlen, int parse_header)
{
  int D.15436;
  char * p;
  struct stbi__zbuf a;
  bool retval.343;
  char * D.15428;
  long long unsigned int _1;
  sizetype _2;
  stbi_uc * _3;
  int _4;
  char * _5;
  char * _6;
  long long int _7;
  int _8;
  char * _9;
  char * _10;
  char * _17;
  int _24;
  bool retval.343_25;
  char * _28;
  char * _30;

  <bb 2> :
  _1 = (long long unsigned int) initial_size_13(D);
  p_16 = stbi__malloc (_1);
  if (p_16 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _17 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 4> :
  a.zbuffer = buffer_18(D);
  _2 = (sizetype) len_20(D);
  _3 = buffer_18(D) + _2;
  a.zbuffer_end = _3;
  _24 = stbi__do_zlib (&a, p_16, initial_size_13(D), 1, parse_header_22(D));
  _4 = _24;
  retval.343_25 = _4 != 0;
  if (retval.343_25 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  if (outlen_26(D) != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _5 = a.zout;
  _6 = a.zout_start;
  _7 = _5 - _6;
  _8 = (int) _7;
  *outlen_26(D) = _8;

  <bb 7> :
  _28 = a.zout_start;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _9 = a.zout_start;
  free (_9);
  _30 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _10 = PHI <_17(3), _28(7), _30(8)>
  a ={v} {CLOBBER};

  <bb 10> :
<L8>:
  return _10;

}



;; Function stbi_zlib_decode_buffer (stbi_zlib_decode_buffer, funcdef_no=897, decl_uid=5134, cgraph_uid=803, symbol_order=825)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L4>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L4>}


Removing basic block 8
Removing unreachable region 1
Merging blocks 2 and 3
stbi_zlib_decode_buffer (char * obuffer, int olen, const char * ibuffer, int ilen)
{
  int D.15444;
  struct stbi__zbuf a;
  int D.15442;
  bool retval.344;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  char * _4;
  char * _5;
  long long int _6;
  int _7;
  int _16;
  bool retval.344_17;
  int _18;
  int _19;

  <bb 2> :
  a.zbuffer = ibuffer_9(D);
  _1 = (sizetype) ilen_11(D);
  _2 = ibuffer_9(D) + _1;
  a.zbuffer_end = _2;
  _16 = stbi__do_zlib (&a, obuffer_13(D), olen_14(D), 0, 1);
  _3 = _16;
  retval.344_17 = _3 != 0;
  if (retval.344_17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = a.zout;
  _5 = a.zout_start;
  _6 = _4 - _5;
  _18 = (int) _6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _19 = -1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _7 = PHI <_18(3), _19(4)>
  a ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _7;

}



;; Function stbi_zlib_decode_noheader_malloc (stbi_zlib_decode_noheader_malloc, funcdef_no=898, decl_uid=5138, cgraph_uid=804, symbol_order=826)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L9>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L9>}


Removing basic block 12
Removing unreachable region 1
Merging blocks 4 and 5
stbi_zlib_decode_noheader_malloc (const char * buffer, int len, int * outlen)
{
  int D.15457;
  char * p;
  struct stbi__zbuf a;
  bool retval.345;
  char * D.15449;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  char * _4;
  char * _5;
  long long int _6;
  int _7;
  char * _8;
  char * _9;
  char * _15;
  int _21;
  bool retval.345_22;
  char * _25;
  char * _27;

  <bb 2> :
  p_14 = stbi__malloc (16384);
  if (p_14 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _15 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 4> :
  a.zbuffer = buffer_16(D);
  _1 = (sizetype) len_18(D);
  _2 = buffer_16(D) + _1;
  a.zbuffer_end = _2;
  _21 = stbi__do_zlib (&a, p_14, 16384, 1, 0);
  _3 = _21;
  retval.345_22 = _3 != 0;
  if (retval.345_22 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  if (outlen_23(D) != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _4 = a.zout;
  _5 = a.zout_start;
  _6 = _4 - _5;
  _7 = (int) _6;
  *outlen_23(D) = _7;

  <bb 7> :
  _25 = a.zout_start;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _8 = a.zout_start;
  free (_8);
  _27 = 0B;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _9 = PHI <_15(3), _25(7), _27(8)>
  a ={v} {CLOBBER};

  <bb 10> :
<L8>:
  return _9;

}



;; Function stbi_zlib_decode_noheader_buffer (stbi_zlib_decode_noheader_buffer, funcdef_no=899, decl_uid=5143, cgraph_uid=805, symbol_order=827)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L4>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L4>}


Removing basic block 8
Removing unreachable region 1
Merging blocks 2 and 3
stbi_zlib_decode_noheader_buffer (char * obuffer, int olen, const char * ibuffer, int ilen)
{
  int D.15465;
  struct stbi__zbuf a;
  int D.15463;
  bool retval.346;
  sizetype _1;
  stbi_uc * _2;
  int _3;
  char * _4;
  char * _5;
  long long int _6;
  int _7;
  int _16;
  bool retval.346_17;
  int _18;
  int _19;

  <bb 2> :
  a.zbuffer = ibuffer_9(D);
  _1 = (sizetype) ilen_11(D);
  _2 = ibuffer_9(D) + _1;
  a.zbuffer_end = _2;
  _16 = stbi__do_zlib (&a, obuffer_13(D), olen_14(D), 0, 0);
  _3 = _16;
  retval.346_17 = _3 != 0;
  if (retval.346_17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = a.zout;
  _5 = a.zout_start;
  _6 = _4 - _5;
  _18 = (int) _6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _19 = -1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _7 = PHI <_18(3), _19(4)>
  a ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _7;

}



;; Function stbi__get_chunk_header (_ZL22stbi__get_chunk_headerP13stbi__context, funcdef_no=900, decl_uid=12074, cgraph_uid=806, symbol_order=828)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi__get_chunk_header (struct stbi__context * s)
{
  unsigned int D.15471;
  unsigned int D.15470;
  struct stbi__pngchunk c;
  struct stbi__pngchunk D.15468;
  unsigned int _1;
  unsigned int _2;
  unsigned int _7;
  unsigned int _10;

  <bb 2> :
  _7 = stbi__get32be (s_5(D));
  _1 = _7;
  c.length = _1;
  _10 = stbi__get32be (s_5(D));
  _2 = _10;
  c.type = _2;
  D.15468 = c;
  c ={v} {CLOBBER};

  <bb 3> :
<L1>:
  return D.15468;

}



;; Function stbi__create_png_image (_ZL22stbi__create_png_imageP9stbi__pngPhjiiii, funcdef_no=904, decl_uid=12268, cgraph_uid=810, symbol_order=835)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L24>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L24>}


Removing basic block 24
Removing unreachable region 1
Merging blocks 11 and 12
stbi__create_png_image (struct stbi__png * a, stbi_uc * image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)
{
  int D.15692;
  int D.15691;
  int out_x;
  int out_y;
  stbi__uint32 img_len;
  int y;
  int x;
  int j;
  int i;
  int yspc[7];
  int xspc[7];
  int yorig[7];
  int xorig[7];
  int p;
  stbi_uc * final;
  int out_bytes;
  int bytes;
  bool retval.394;
  int D.15675;
  int iftmp.393;
  struct stbi__context * _1;
  unsigned int _2;
  struct stbi__context * _3;
  unsigned int _4;
  struct stbi__context * _5;
  unsigned int _6;
  int _7;
  struct stbi__context * _8;
  unsigned int _9;
  int _10;
  struct stbi__context * _11;
  unsigned int _12;
  int _13;
  unsigned int _14;
  unsigned int _15;
  int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  int _20;
  unsigned int _21;
  unsigned int _22;
  struct stbi__context * _23;
  unsigned int _24;
  int _25;
  unsigned int _26;
  unsigned int _27;
  int _28;
  unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  int _32;
  unsigned int _33;
  unsigned int _34;
  struct stbi__context * _35;
  int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  unsigned int y.395_43;
  unsigned int x.396_44;
  int _45;
  int _46;
  int _47;
  int _48;
  int _49;
  int _50;
  int _51;
  long long unsigned int _52;
  stbi_uc * _53;
  int _54;
  int _55;
  int _56;
  sizetype _57;
  stbi_uc * _58;
  struct stbi__context * _59;
  unsigned int _60;
  unsigned int out_y.397_61;
  unsigned int _62;
  unsigned int out_bytes.398_63;
  unsigned int _64;
  sizetype _65;
  int _66;
  sizetype _67;
  sizetype _68;
  stbi_uc * _69;
  stbi_uc * _70;
  sizetype _71;
  int iftmp.393_79;
  int _80;
  int iftmp.393_87;
  int iftmp.393_88;
  int _99;
  int _100;
  int _136;
  bool retval.394_137;
  int _139;
  int _164;

  <bb 2> :
  if (depth_86(D) == 16)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.393_87 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.393_88 = 1;

  <bb 5> :
  # iftmp.393_79 = PHI <iftmp.393_87(3), iftmp.393_88(4)>
  bytes_89 = iftmp.393_79;
  out_bytes_91 = out_n_90(D) * bytes_89;
  if (interlaced_92(D) == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _1 = a_94(D)->s;
  _2 = _1->img_y;
  _3 = a_94(D)->s;
  _4 = _3->img_x;
  _99 = stbi__create_png_image_raw (a_94(D), image_data_95(D), image_data_len_96(D), out_n_90(D), _4, _2, depth_86(D), color_97(D));
  _100 = _99;
  goto <bb 22>; [INV]

  <bb 7> :
  _5 = a_94(D)->s;
  _6 = _5->img_y;
  _7 = (int) _6;
  _8 = a_94(D)->s;
  _9 = _8->img_x;
  _10 = (int) _9;
  final_102 = stbi__malloc_mad3 (_10, _7, out_bytes_91, 0);
  p_103 = 0;

  <bb 8> :
  # image_data_72 = PHI <image_data_95(D)(7), image_data_73(20)>
  # image_data_len_74 = PHI <image_data_len_96(D)(7), image_data_len_75(20)>
  # p_76 = PHI <p_103(7), p_162(20)>
  if (p_76 > 6)
    goto <bb 21>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  xorig[0] = 0;
  xorig[1] = 4;
  xorig[2] = 0;
  xorig[3] = 2;
  xorig[4] = 0;
  xorig[5] = 1;
  xorig[6] = 0;
  yorig[0] = 0;
  yorig[1] = 0;
  yorig[2] = 4;
  yorig[3] = 0;
  yorig[4] = 2;
  yorig[5] = 0;
  yorig[6] = 1;
  xspc[0] = 8;
  xspc[1] = 8;
  xspc[2] = 4;
  xspc[3] = 4;
  xspc[4] = 2;
  xspc[5] = 2;
  xspc[6] = 1;
  yspc[0] = 8;
  yspc[1] = 8;
  yspc[2] = 8;
  yspc[3] = 4;
  yspc[4] = 4;
  yspc[5] = 2;
  yspc[6] = 2;
  _11 = a_94(D)->s;
  _12 = _11->img_x;
  _13 = xorig[p_76];
  _14 = (unsigned int) _13;
  _15 = _12 - _14;
  _16 = xspc[p_76];
  _17 = (unsigned int) _16;
  _18 = _15 + _17;
  _19 = _18 + 4294967295;
  _20 = xspc[p_76];
  _21 = (unsigned int) _20;
  _22 = _19 / _21;
  x_132 = (int) _22;
  _23 = a_94(D)->s;
  _24 = _23->img_y;
  _25 = yorig[p_76];
  _26 = (unsigned int) _25;
  _27 = _24 - _26;
  _28 = yspc[p_76];
  _29 = (unsigned int) _28;
  _30 = _27 + _29;
  _31 = _30 + 4294967295;
  _32 = yspc[p_76];
  _33 = (unsigned int) _32;
  _34 = _31 / _33;
  y_133 = (int) _34;
  if (x_132 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 10> :
  if (y_133 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 11> :
  _35 = a_94(D)->s;
  _36 = _35->img_n;
  _37 = x_132 * _36;
  _38 = depth_86(D) * _37;
  _39 = _38 + 7;
  _40 = _39 >> 3;
  _41 = _40 + 1;
  _42 = y_133 * _41;
  img_len_134 = (stbi__uint32) _42;
  y.395_43 = (unsigned int) y_133;
  x.396_44 = (unsigned int) x_132;
  _136 = stbi__create_png_image_raw (a_94(D), image_data_72, image_data_len_74, out_n_90(D), x.396_44, y.395_43, depth_86(D), color_97(D));
  _45 = _136;
  retval.394_137 = _45 == 0;
  if (retval.394_137 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  free (final_102);
  _139 = 0;
  // predicted unlikely by early return (on trees) predictor.
  xorig ={v} {CLOBBER};
  yorig ={v} {CLOBBER};
  xspc ={v} {CLOBBER};
  yspc ={v} {CLOBBER};
  goto <bb 22>; [INV]

  <bb 13> :
  j_144 = 0;

  <bb 14> :
  # j_78 = PHI <j_144(13), j_150(18)>
  if (j_78 >= y_133)
    goto <bb 19>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  i_145 = 0;

  <bb 16> :
  # i_77 = PHI <i_145(15), i_149(17)>
  if (i_77 >= x_132)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _46 = yspc[p_76];
  _47 = j_78 * _46;
  _48 = yorig[p_76];
  out_y_146 = _47 + _48;
  _49 = xspc[p_76];
  _50 = i_77 * _49;
  _51 = xorig[p_76];
  out_x_147 = _50 + _51;
  _52 = (long long unsigned int) out_bytes_91;
  _53 = a_94(D)->out;
  _54 = j_78 * x_132;
  _55 = i_77 + _54;
  _56 = out_bytes_91 * _55;
  _57 = (sizetype) _56;
  _58 = _53 + _57;
  _59 = a_94(D)->s;
  _60 = _59->img_x;
  out_y.397_61 = (unsigned int) out_y_146;
  _62 = _60 * out_y.397_61;
  out_bytes.398_63 = (unsigned int) out_bytes_91;
  _64 = _62 * out_bytes.398_63;
  _65 = (sizetype) _64;
  _66 = out_x_147 * out_bytes_91;
  _67 = (sizetype) _66;
  _68 = _65 + _67;
  _69 = final_102 + _68;
  memcpy (_69, _58, _52);
  i_149 = i_77 + 1;
  goto <bb 16>; [INV]

  <bb 18> :
  j_150 = j_78 + 1;
  goto <bb 14>; [INV]

  <bb 19> :
  _70 = a_94(D)->out;
  free (_70);
  _71 = (sizetype) img_len_134;
  image_data_152 = image_data_72 + _71;
  image_data_len_153 = image_data_len_74 - img_len_134;

  <bb 20> :
  # image_data_73 = PHI <image_data_72(9), image_data_72(10), image_data_152(19)>
  # image_data_len_75 = PHI <image_data_len_74(9), image_data_len_74(10), image_data_len_153(19)>
  xorig ={v} {CLOBBER};
  yorig ={v} {CLOBBER};
  xspc ={v} {CLOBBER};
  yspc ={v} {CLOBBER};
  p_162 = p_76 + 1;
  goto <bb 8>; [INV]

  <bb 21> :
  a_94(D)->out = final_102;
  _164 = 1;

  <bb 22> :
  # _80 = PHI <_100(6), _139(12), _164(21)>
<L23>:
  return _80;

}



;; Function stbi__parse_png_file (_ZL20stbi__parse_png_fileP9stbi__pngii, funcdef_no=911, decl_uid=12363, cgraph_uid=817, symbol_order=845)

Before removal of unreachable regions:
Eh tree:
   6 must_not_throw
   1 cleanup land:{1,<L179>}
     5 must_not_throw
     2 cleanup land:{2,<L178>}
       4 must_not_throw
       3 cleanup land:{3,<L177>}
Reachable regions: n_bits = 7, set = {1 2 3 }
Reachable landing pads: n_bits = 4, set = {1 2 3 }
Removing unreachable region 4
Removing unreachable region 5
Removing unreachable region 6


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L179>}
     2 cleanup land:{2,<L178>}
       3 cleanup land:{3,<L177>}


Removing basic block 185
Removing basic block 184
Removing basic block 183
Removing unreachable region 1
Removing unreachable region 2
Removing unreachable region 3
Merging blocks 2 and 3
Merging blocks 7 and 8
Merging blocks 15 and 16
Merging blocks 21 and 22
Merging blocks 27 and 28
Merging blocks 34 and 35
Merging blocks 44 and 45
Merging blocks 47 and 48
Merging blocks 50 and 51
Merging blocks 75 and 76
Merging blocks 93 and 94
Merging blocks 102 and 103
Merging blocks 106 and 107
Merging blocks 127 and 128
Merging blocks 137 and 138
Merging blocks 146 and 147
Merging blocks 151 and 152
Merging blocks 154 and 155
Merging blocks 160 and 161
Merging blocks 169 and 170
Merging blocks 176 and 177
Merging blocks 178 and 179
Merging blocks 21 and 23
Merging blocks 75 and 77
Merging blocks 75 and 78
stbi__parse_png_file (struct stbi__png * z, int scan, int req_comp)
{
  int D.15965;
  int D.15964;
  int D.15963;
  char * D.15962;
  int D.15961;
  int D.15960;
  int D.15959;
  unsigned char D.15958;
  unsigned char D.15957;
  unsigned char D.15956;
  unsigned char D.15955;
  unsigned char D.15954;
  unsigned char D.15953;
  unsigned char D.15952;
  unsigned char D.15951;
  unsigned char D.15950;
  unsigned int D.15949;
  unsigned int D.15948;
  int D.15947;
  static char invalid_chunk[25] = "XXXX PNG chunk not known";
  stbi__uint32 bpl;
  stbi__uint32 raw_len;
  stbi_uc * p;
  stbi__uint32 idata_limit_old;
  int filter;
  int comp;
  struct stbi__pngchunk c;
  struct stbi__context * s;
  int is_iphone;
  int color;
  int interlace;
  int k;
  int first;
  stbi__uint32 pal_len;
  stbi__uint32 i;
  stbi__uint32 idata_limit;
  stbi__uint32 ioff;
  stbi__uint16 tc16[3];
  stbi_uc tc[3];
  stbi_uc has_trans;
  stbi_uc pal_img_n;
  stbi_uc palette[1024];
  bool retval.418;
  bool retval.416;
  bool retval.415;
  bool retval.413;
  bool retval.409;
  int iftmp.407;
  int D.15782;
  bool retval.406;
  int _1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  unsigned char _17;
  int _18;
  int _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int _23;
  unsigned int _24;
  int _25;
  int _26;
  int _27;
  int _28;
  unsigned int _29;
  unsigned int _30;
  int _31;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  unsigned char _43;
  unsigned int _44;
  unsigned int _45;
  unsigned char _46;
  unsigned int _47;
  unsigned int _48;
  unsigned char _49;
  unsigned int _50;
  unsigned int _51;
  stbi_uc * _52;
  unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  unsigned char _57;
  int _58;
  int _59;
  unsigned int _60;
  int _61;
  unsigned int _62;
  unsigned int _63;
  int _64;
  int _65;
  int _66;
  short unsigned int _67;
  int _68;
  int _69;
  unsigned char _70;
  int _71;
  unsigned char _72;
  unsigned char _73;
  int _74;
  unsigned int _75;
  unsigned int _76;
  int _77;
  int ioff.408_78;
  unsigned int _79;
  unsigned int _80;
  unsigned int _81;
  unsigned int _82;
  unsigned int _83;
  long long unsigned int _84;
  stbi_uc * _85;
  unsigned int _86;
  int _87;
  stbi_uc * _88;
  sizetype _89;
  stbi_uc * _90;
  int _91;
  unsigned int _92;
  stbi_uc * _93;
  unsigned int _94;
  int _95;
  unsigned int _96;
  unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  unsigned int _100;
  int _101;
  unsigned int _102;
  unsigned int _103;
  unsigned int _104;
  unsigned int _105;
  bool _106;
  int _107;
  unsigned int raw_len.410_108;
  int raw_len.411_109;
  int ioff.412_110;
  stbi_uc * _111;
  char * _112;
  stbi_uc * _113;
  stbi_uc * _114;
  int _115;
  int _116;
  int _117;
  int _118;
  int _119;
  int _120;
  int _121;
  unsigned int raw_len.414_122;
  stbi_uc * _123;
  int _124;
  int _125;
  int _126;
  int _127;
  int _128;
  int _129;
  int stbi__de_iphone_flag.417_130;
  int _131;
  int _132;
  int _133;
  int _134;
  int pal_len.419_135;
  int _136;
  int _137;
  int _138;
  stbi_uc * _139;
  unsigned int _140;
  unsigned int _141;
  unsigned int _142;
  unsigned int _143;
  char _144;
  unsigned int _145;
  unsigned int _146;
  char _147;
  unsigned int _148;
  unsigned int _149;
  char _150;
  unsigned int _151;
  char _152;
  unsigned int _153;
  int _154;
  int _182;
  int _183;
  int _184;
  int iftmp.407_185;
  int _223;
  bool retval.406_224;
  int _225;
  int _227;
  int _232;
  int _235;
  unsigned int _237;
  unsigned int _240;
  int _243;
  int _245;
  unsigned char _247;
  int _250;
  unsigned char _252;
  int _255;
  int _257;
  int _260;
  unsigned char _262;
  int _265;
  unsigned char _267;
  int _270;
  unsigned char _272;
  int _275;
  int iftmp.407_276;
  int iftmp.407_277;
  int _280;
  int _281;
  int _284;
  int _286;
  int _288;
  int _290;
  int _293;
  unsigned char _296;
  unsigned char _299;
  unsigned char _302;
  int _307;
  int _309;
  int _311;
  int _313;
  int _315;
  unsigned char _319;
  int _323;
  int _325;
  int _329;
  int _334;
  int _338;
  int _340;
  int _342;
  int _343;
  int _350;
  int _353;
  bool retval.409_354;
  int _356;
  int _359;
  int _360;
  int _362;
  char * _366;
  int _368;
  int _375;
  bool retval.413_376;
  int _377;
  int _379;
  bool retval.415_380;
  int _381;
  int _383;
  bool retval.416_384;
  int _385;
  bool retval.418_391;
  int _392;
  int _397;
  int _401;
  int _407;

  <bb 2> :
  pal_img_n_206 = 0;
  has_trans_207 = 0;
  tc = {};
  ioff_210 = 0;
  idata_limit_211 = 0;
  pal_len_212 = 0;
  first_213 = 1;
  interlace_214 = 0;
  color_215 = 0;
  is_iphone_216 = 0;
  s_218 = z_217(D)->s;
  z_217(D)->expanded = 0B;
  z_217(D)->idata = 0B;
  z_217(D)->out = 0B;
  _223 = stbi__check_png_header (s_218);
  _1 = _223;
  retval.406_224 = _1 == 0;
  if (retval.406_224 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _225 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 4> :
  if (scan_226(D) == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _227 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 6> :
  # pal_img_n_155 = PHI <pal_img_n_206(4), pal_img_n_158(154)>
  # has_trans_159 = PHI <has_trans_207(4), has_trans_161(154)>
  # ioff_162 = PHI <ioff_210(4), ioff_163(154)>
  # idata_limit_164 = PHI <idata_limit_211(4), idata_limit_167(154)>
  # pal_len_170 = PHI <pal_len_212(4), pal_len_171(154)>
  # first_172 = PHI <first_213(4), first_173(154)>
  # interlace_176 = PHI <interlace_214(4), interlace_177(154)>
  # color_178 = PHI <color_215(4), color_179(154)>
  # is_iphone_180 = PHI <is_iphone_216(4), is_iphone_181(154)>
  c = stbi__get_chunk_header (s_218);
  _2 = c.type;
  if (_2 == 1229278788)
    goto <bb 114>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (_2 > 1229278788)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (_2 == 1130840649)
    goto <bb 13>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (_2 == 1229209940)
    goto <bb 93>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 10> :
  if (_2 == 1347179589)
    goto <bb 57>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (_2 == 1951551059)
    goto <bb 67>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (_2 == 1229472850)
    goto <bb 14>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 13> :
<L5>:
  is_iphone_229 = 1;
  _3 = c.length;
  _4 = (int) _3;
  stbi__skip (s_218, _4);
  goto <bb 154>; [INV]

  <bb 14> :
<L6>:
  if (first_172 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _232 = stbi__err ("multiple IHDR");
  goto <bb 155>; [INV]

  <bb 16> :
  first_233 = 0;
  _5 = c.length;
  if (_5 != 13)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _235 = stbi__err ("bad IHDR len");
  goto <bb 155>; [INV]

  <bb 18> :
  _237 = stbi__get32be (s_218);
  _6 = _237;
  s_218->img_x = _6;
  _240 = stbi__get32be (s_218);
  _7 = _240;
  s_218->img_y = _7;
  _8 = s_218->img_y;
  if (_8 > 16777216)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _243 = stbi__err ("too large");
  goto <bb 155>; [INV]

  <bb 20> :
  _9 = s_218->img_x;
  if (_9 > 16777216)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _245 = stbi__err ("too large");
  goto <bb 155>; [INV]

  <bb 22> :
  _247 = stbi__get8 (s_218);
  _10 = _247;
  _11 = (int) _10;
  z_217(D)->depth = _11;
  _12 = z_217(D)->depth;
  if (_12 != 1)
    goto <bb 23>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 23> :
  _13 = z_217(D)->depth;
  if (_13 != 2)
    goto <bb 24>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 24> :
  _14 = z_217(D)->depth;
  if (_14 != 4)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  _15 = z_217(D)->depth;
  if (_15 != 8)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _16 = z_217(D)->depth;
  if (_16 != 16)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  _250 = stbi__err ("1/2/4/8/16-bit only");
  goto <bb 155>; [INV]

  <bb 28> :
  _252 = stbi__get8 (s_218);
  _17 = _252;
  color_253 = (int) _17;
  if (color_253 > 6)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _255 = stbi__err ("bad ctype");
  goto <bb 155>; [INV]

  <bb 30> :
  if (color_253 == 3)
    goto <bb 31>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 31> :
  _18 = z_217(D)->depth;
  if (_18 == 16)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  _257 = stbi__err ("bad ctype");
  goto <bb 155>; [INV]

  <bb 33> :
  if (color_253 == 3)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  pal_img_n_258 = 3;
  goto <bb 37>; [INV]

  <bb 35> :
  _19 = color_253 & 1;
  if (_19 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  _260 = stbi__err ("bad ctype");
  goto <bb 155>; [INV]

  <bb 37> :
  # pal_img_n_156 = PHI <pal_img_n_258(34), pal_img_n_155(35)>
  _262 = stbi__get8 (s_218);
  _20 = _262;
  comp_263 = (int) _20;
  if (comp_263 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  _265 = stbi__err ("bad comp method");
  goto <bb 155>; [INV]

  <bb 39> :
  _267 = stbi__get8 (s_218);
  _21 = _267;
  filter_268 = (int) _21;
  if (filter_268 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  _270 = stbi__err ("bad filter method");
  goto <bb 155>; [INV]

  <bb 41> :
  _272 = stbi__get8 (s_218);
  _22 = _272;
  interlace_273 = (int) _22;
  if (interlace_273 > 1)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  _275 = stbi__err ("bad interlace method");
  goto <bb 155>; [INV]

  <bb 43> :
  _23 = s_218->img_x;
  if (_23 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 44> :
  _24 = s_218->img_y;
  if (_24 == 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  _286 = stbi__err ("0-pixel image");
  goto <bb 155>; [INV]

  <bb 46> :
  if (pal_img_n_156 == 0)
    goto <bb 47>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 47> :
  _25 = color_253 & 2;
  if (_25 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  iftmp.407_276 = 3;
  goto <bb 50>; [INV]

  <bb 49> :
  iftmp.407_277 = 1;

  <bb 50> :
  # iftmp.407_185 = PHI <iftmp.407_276(48), iftmp.407_277(49)>
  _26 = color_253 >> 2;
  _27 = _26 & 1;
  _28 = iftmp.407_185 + _27;
  s_218->img_n = _28;
  _29 = s_218->img_x;
  _30 = 1073741824 / _29;
  _31 = s_218->img_n;
  _32 = (unsigned int) _31;
  _33 = _30 / _32;
  _34 = s_218->img_y;
  if (_33 < _34)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  _280 = stbi__err ("too large");
  goto <bb 155>; [INV]

  <bb 52> :
  if (scan_226(D) == 2)
    goto <bb 53>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 53> :
  _281 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 155>; [INV]

  <bb 54> :
  s_218->img_n = 1;
  _35 = s_218->img_x;
  _36 = 268435456 / _35;
  _37 = s_218->img_y;
  if (_36 < _37)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  _284 = stbi__err ("too large");
  goto <bb 155>; [INV]

  <bb 56> :
  goto <bb 154>; [INV]

  <bb 57> :
<L57>:
  if (first_172 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  _288 = stbi__err ("first not IHDR");
  goto <bb 155>; [INV]

  <bb 59> :
  _38 = c.length;
  if (_38 > 768)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  _290 = stbi__err ("invalid PLTE");
  goto <bb 155>; [INV]

  <bb 61> :
  _39 = c.length;
  pal_len_291 = _39 / 3;
  _40 = pal_len_291 * 3;
  _41 = c.length;
  if (_40 != _41)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  _293 = stbi__err ("invalid PLTE");
  goto <bb 155>; [INV]

  <bb 63> :
  i_294 = 0;

  <bb 64> :
  # i_168 = PHI <i_294(63), i_305(65)>
  if (i_168 >= pal_len_291)
    goto <bb 66>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 65> :
  _42 = i_168 * 4;
  _296 = stbi__get8 (s_218);
  _43 = _296;
  palette[_42] = _43;
  _44 = i_168 * 4;
  _45 = _44 + 1;
  _299 = stbi__get8 (s_218);
  _46 = _299;
  palette[_45] = _46;
  _47 = i_168 * 4;
  _48 = _47 + 2;
  _302 = stbi__get8 (s_218);
  _49 = _302;
  palette[_48] = _49;
  _50 = i_168 * 4;
  _51 = _50 + 3;
  palette[_51] = 255;
  i_305 = i_168 + 1;
  goto <bb 64>; [INV]

  <bb 66> :
  goto <bb 154>; [INV]

  <bb 67> :
<L67>:
  if (first_172 != 0)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  _307 = stbi__err ("first not IHDR");
  goto <bb 155>; [INV]

  <bb 69> :
  _52 = z_217(D)->idata;
  if (_52 != 0B)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  _309 = stbi__err ("tRNS after IDAT");
  goto <bb 155>; [INV]

  <bb 71> :
  if (pal_img_n_155 != 0)
    goto <bb 72>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 72> :
  if (scan_226(D) == 2)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  s_218->img_n = 4;
  _311 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 155>; [INV]

  <bb 74> :
  if (pal_len_170 == 0)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  _313 = stbi__err ("tRNS before PLTE");
  goto <bb 155>; [INV]

  <bb 76> :
  _53 = c.length;
  if (pal_len_170 < _53)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  _315 = stbi__err ("bad tRNS len");
  goto <bb 155>; [INV]

  <bb 78> :
  pal_img_n_316 = 4;
  i_317 = 0;

  <bb 79> :
  # i_169 = PHI <i_317(78), i_321(80)>
  _54 = c.length;
  if (i_169 >= _54)
    goto <bb 92>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 80> :
  _55 = i_169 * 4;
  _56 = _55 + 3;
  _319 = stbi__get8 (s_218);
  _57 = _319;
  palette[_56] = _57;
  i_321 = i_169 + 1;
  goto <bb 79>; [INV]

  <bb 81> :
  _58 = s_218->img_n;
  _59 = _58 & 1;
  if (_59 == 0)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  _323 = stbi__err ("tRNS with alpha");
  goto <bb 155>; [INV]

  <bb 83> :
  _60 = c.length;
  _61 = s_218->img_n;
  _62 = (unsigned int) _61;
  _63 = _62 * 2;
  if (_60 != _63)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  _325 = stbi__err ("bad tRNS len");
  goto <bb 155>; [INV]

  <bb 85> :
  has_trans_326 = 1;
  _64 = z_217(D)->depth;
  if (_64 == 16)
    goto <bb 86>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 86> :
  k_327 = 0;

  <bb 87> :
  # k_174 = PHI <k_327(86), k_331(88)>
  _65 = s_218->img_n;
  if (k_174 >= _65)
    goto <bb 92>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  _329 = stbi__get16be (s_218);
  _66 = _329;
  _67 = (short unsigned int) _66;
  tc16[k_174] = _67;
  k_331 = k_174 + 1;
  goto <bb 87>; [INV]

  <bb 89> :
  k_332 = 0;

  <bb 90> :
  # k_175 = PHI <k_332(89), k_336(91)>
  _68 = s_218->img_n;
  if (k_175 >= _68)
    goto <bb 92>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 91> :
  _334 = stbi__get16be (s_218);
  _69 = _334;
  _70 = (unsigned char) _69;
  _71 = z_217(D)->depth;
  _72 = stbi__depth_scale_table[_71];
  _73 = _70 * _72;
  tc[k_175] = _73;
  k_336 = k_175 + 1;
  goto <bb 90>; [INV]

  <bb 92> :
  # pal_img_n_157 = PHI <pal_img_n_316(79), pal_img_n_155(87), pal_img_n_155(90)>
  # has_trans_160 = PHI <has_trans_159(79), has_trans_326(87), has_trans_326(90)>
  goto <bb 154>; [INV]

  <bb 93> :
<L97>:
  if (first_172 != 0)
    goto <bb 94>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 94> :
  _338 = stbi__err ("first not IHDR");
  goto <bb 155>; [INV]

  <bb 95> :
  if (pal_img_n_155 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 96> :
  if (pal_len_170 == 0)
    goto <bb 97>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 97> :
  _340 = stbi__err ("no PLTE");
  goto <bb 155>; [INV]

  <bb 98> :
  if (scan_226(D) == 2)
    goto <bb 99>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 99> :
  _74 = (int) pal_img_n_155;
  s_218->img_n = _74;
  _342 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 155>; [INV]

  <bb 100> :
  _75 = c.length;
  _76 = ioff_162 + _75;
  _77 = (int) _76;
  ioff.408_78 = (int) ioff_162;
  if (_77 < ioff.408_78)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  _343 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 155>; [INV]

  <bb 102> :
  _79 = c.length;
  _80 = ioff_162 + _79;
  if (idata_limit_164 < _80)
    goto <bb 103>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 103> :
  idata_limit_old_344 = idata_limit_164;
  if (idata_limit_164 == 0)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  _81 = c.length;
  idata_limit_345 = MAX_EXPR <_81, 4096>;

  <bb 105> :
  # idata_limit_398 = PHI <idata_limit_164(103), idata_limit_345(104)>

  <bb 106> :
  # idata_limit_165 = PHI <idata_limit_398(105), idata_limit_346(107)>
  _82 = c.length;
  _83 = ioff_162 + _82;
  if (idata_limit_165 >= _83)
    goto <bb 108>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 107> :
  idata_limit_346 = idata_limit_165 * 2;
  goto <bb 106>; [INV]

  <bb 108> :
  _84 = (long long unsigned int) idata_limit_165;
  _85 = z_217(D)->idata;
  p_348 = realloc (_85, _84);
  if (p_348 == 0B)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  _350 = stbi__err ("outofmem");
  goto <bb 155>; [INV]

  <bb 110> :
  z_217(D)->idata = p_348;

  <bb 111> :
  # idata_limit_166 = PHI <idata_limit_164(102), idata_limit_165(110)>
  _86 = c.length;
  _87 = (int) _86;
  _88 = z_217(D)->idata;
  _89 = (sizetype) ioff_162;
  _90 = _88 + _89;
  _353 = stbi__getn (s_218, _90, _87);
  _91 = _353;
  retval.409_354 = _91 == 0;
  if (retval.409_354 != 0)
    goto <bb 112>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 112> :
  _356 = stbi__err ("outofdata");
  goto <bb 155>; [INV]

  <bb 113> :
  _92 = c.length;
  ioff_357 = ioff_162 + _92;
  goto <bb 154>; [INV]

  <bb 114> :
<L121>:
  if (first_172 != 0)
    goto <bb 115>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 115> :
  _359 = stbi__err ("first not IHDR");
  goto <bb 148>; [INV]

  <bb 116> :
  if (scan_226(D) != 0)
    goto <bb 117>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 117> :
  _360 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 148>; [INV]

  <bb 118> :
  _93 = z_217(D)->idata;
  if (_93 == 0B)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  _362 = stbi__err ("no IDAT");
  goto <bb 148>; [INV]

  <bb 120> :
  _94 = s_218->img_x;
  _95 = z_217(D)->depth;
  _96 = (unsigned int) _95;
  _97 = _94 * _96;
  _98 = _97 + 7;
  bpl_363 = _98 / 8;
  _99 = s_218->img_y;
  _100 = bpl_363 * _99;
  _101 = s_218->img_n;
  _102 = (unsigned int) _101;
  _103 = _100 * _102;
  _104 = s_218->img_y;
  _105 = _103 + _104;
  raw_len = _105;
  _106 = is_iphone_180 == 0;
  _107 = (int) _106;
  raw_len.410_108 = raw_len;
  raw_len.411_109 = (int) raw_len.410_108;
  ioff.412_110 = (int) ioff_162;
  _111 = z_217(D)->idata;
  _366 = stbi_zlib_decode_malloc_guesssize_headerflag (_111, ioff.412_110, raw_len.411_109, &raw_len, _107);
  _112 = _366;
  z_217(D)->expanded = _112;
  _113 = z_217(D)->expanded;
  if (_113 == 0B)
    goto <bb 121>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 121> :
  _368 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 148>; [INV]

  <bb 122> :
  _114 = z_217(D)->idata;
  free (_114);
  z_217(D)->idata = 0B;
  _115 = s_218->img_n;
  _116 = _115 + 1;
  if (req_comp_371(D) == _116)
    goto <bb 123>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 123> :
  if (req_comp_371(D) != 3)
    goto <bb 124>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 124> :
  if (pal_img_n_155 == 0)
    goto <bb 126>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 125> :
  if (has_trans_159 != 0)
    goto <bb 126>; [INV]
  else
    goto <bb 127>; [INV]

  <bb 126> :
  _117 = s_218->img_n;
  _118 = _117 + 1;
  s_218->img_out_n = _118;
  goto <bb 128>; [INV]

  <bb 127> :
  _119 = s_218->img_n;
  s_218->img_out_n = _119;

  <bb 128> :
  _120 = z_217(D)->depth;
  _121 = s_218->img_out_n;
  raw_len.414_122 = raw_len;
  _123 = z_217(D)->expanded;
  _375 = stbi__create_png_image (z_217(D), _123, raw_len.414_122, _121, _120, color_178, interlace_176);
  _124 = _375;
  retval.413_376 = _124 == 0;
  if (retval.413_376 != 0)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  _377 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 148>; [INV]

  <bb 130> :
  if (has_trans_159 != 0)
    goto <bb 131>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 131> :
  _125 = z_217(D)->depth;
  if (_125 == 16)
    goto <bb 132>; [INV]
  else
    goto <bb 134>; [INV]

  <bb 132> :
  _126 = s_218->img_out_n;
  _379 = stbi__compute_transparency16 (z_217(D), &tc16, _126);
  _127 = _379;
  retval.415_380 = _127 == 0;
  if (retval.415_380 != 0)
    goto <bb 133>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 133> :
  _381 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 148>; [INV]

  <bb 134> :
  _128 = s_218->img_out_n;
  _383 = stbi__compute_transparency (z_217(D), &tc, _128);
  _129 = _383;
  retval.416_384 = _129 == 0;
  if (retval.416_384 != 0)
    goto <bb 135>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 135> :
  _385 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 148>; [INV]

  <bb 136> :
  if (is_iphone_180 != 0)
    goto <bb 137>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 137> :
  stbi__de_iphone_flag.417_130 = stbi__de_iphone_flag;
  if (stbi__de_iphone_flag.417_130 != 0)
    goto <bb 138>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 138> :
  _131 = s_218->img_out_n;
  if (_131 > 2)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  stbi__de_iphone (z_217(D));

  <bb 140> :
  if (pal_img_n_155 != 0)
    goto <bb 141>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 141> :
  _132 = (int) pal_img_n_155;
  s_218->img_n = _132;
  _133 = (int) pal_img_n_155;
  s_218->img_out_n = _133;
  if (req_comp_371(D) > 2)
    goto <bb 142>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 142> :
  s_218->img_out_n = req_comp_371(D);

  <bb 143> :
  _134 = s_218->img_out_n;
  pal_len.419_135 = (int) pal_len_170;
  _136 = stbi__expand_png_palette (z_217(D), &palette, pal_len.419_135, _134);
  retval.418_391 = _136 == 0;
  if (retval.418_391 != 0)
    goto <bb 144>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 144> :
  _392 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 148>; [INV]

  <bb 145> :
  if (has_trans_159 != 0)
    goto <bb 146>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 146> :
  _137 = s_218->img_n;
  _138 = _137 + 1;
  s_218->img_n = _138;

  <bb 147> :
  _139 = z_217(D)->expanded;
  free (_139);
  z_217(D)->expanded = 0B;
  stbi__get32be (s_218);
  _397 = 1;

  <bb 148> :
  # _182 = PHI <_359(115), _360(117), _362(119), _368(121), _377(129), _381(133), _385(135), _392(144), _397(147)>
  raw_len ={v} {CLOBBER};
  goto <bb 155>; [INV]

  <bb 149> :
<L167>:
  if (first_172 != 0)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
  _401 = stbi__err ("first not IHDR");
  goto <bb 155>; [INV]

  <bb 151> :
  _140 = c.type;
  _141 = _140 & 536870912;
  if (_141 == 0)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  _142 = c.type;
  _143 = _142 >> 24;
  _144 = (char) _143;
  invalid_chunk[0] = _144;
  _145 = c.type;
  _146 = _145 >> 16;
  _147 = (char) _146;
  invalid_chunk[1] = _147;
  _148 = c.type;
  _149 = _148 >> 8;
  _150 = (char) _149;
  invalid_chunk[2] = _150;
  _151 = c.type;
  _152 = (char) _151;
  invalid_chunk[3] = _152;
  _407 = stbi__err (&invalid_chunk);
  goto <bb 155>; [INV]

  <bb 153> :
  _153 = c.length;
  _154 = (int) _153;
  stbi__skip (s_218, _154);

  <bb 154> :
  # pal_img_n_158 = PHI <pal_img_n_155(13), pal_img_n_156(56), pal_img_n_155(66), pal_img_n_157(92), pal_img_n_155(113), pal_img_n_155(153)>
  # has_trans_161 = PHI <has_trans_159(13), has_trans_159(56), has_trans_159(66), has_trans_160(92), has_trans_159(113), has_trans_159(153)>
  # ioff_163 = PHI <ioff_162(13), ioff_162(56), ioff_162(66), ioff_162(92), ioff_357(113), ioff_162(153)>
  # idata_limit_167 = PHI <idata_limit_164(13), idata_limit_164(56), idata_limit_164(66), idata_limit_164(92), idata_limit_166(113), idata_limit_164(153)>
  # pal_len_171 = PHI <pal_len_170(13), pal_len_170(56), pal_len_291(66), pal_len_170(92), pal_len_170(113), pal_len_170(153)>
  # first_173 = PHI <first_172(13), first_233(56), first_172(66), first_172(92), first_172(113), first_172(153)>
  # interlace_177 = PHI <interlace_176(13), interlace_273(56), interlace_176(66), interlace_176(92), interlace_176(113), interlace_176(153)>
  # color_179 = PHI <color_178(13), color_253(56), color_178(66), color_178(92), color_178(113), color_178(153)>
  # is_iphone_181 = PHI <is_iphone_229(13), is_iphone_180(56), is_iphone_180(66), is_iphone_180(92), is_iphone_180(113), is_iphone_180(153)>
  stbi__get32be (s_218);
  c ={v} {CLOBBER};
  goto <bb 6>; [INV]

  <bb 155> :
  # _183 = PHI <_232(15), _235(17), _243(19), _245(21), _250(27), _255(29), _257(32), _260(36), _265(38), _270(40), _275(42), _286(45), _280(51), _281(53), _284(55), _288(58), _290(60), _293(62), _307(68), _309(70), _311(73), _313(75), _315(77), _323(82), _325(84), _338(94), _340(97), _342(99), _343(101), _350(109), _356(112), _182(148), _401(150), _407(152)>
  c ={v} {CLOBBER};

  <bb 156> :
  # _184 = PHI <_225(3), _227(5), _183(155)>
  palette ={v} {CLOBBER};
  tc ={v} {CLOBBER};
  tc16 ={v} {CLOBBER};

  <bb 157> :
<L176>:
  return _184;

}



;; Function stbi__png_load (_ZL14stbi__png_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=913, decl_uid=10135, cgraph_uid=819, symbol_order=847)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi__png_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  void * D.16006;
  struct stbi__png p;
  void * D.16004;
  void * _10;
  void * _11;

  <bb 2> :
  p.s = s_2(D);
  _10 = stbi__do_png (&p, x_4(D), y_5(D), comp_6(D), req_comp_7(D), ri_8(D));
  _11 = _10;

  <bb 3> :
  p ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _11;

}



;; Function stbi__png_info (_ZL14stbi__png_infoP13stbi__contextPiS1_S1_, funcdef_no=916, decl_uid=10140, cgraph_uid=822, symbol_order=850)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi__png_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.16029;
  struct stbi__png p;
  int D.16027;
  int _8;
  int _9;

  <bb 2> :
  p.s = s_2(D);
  _8 = stbi__png_info_raw (&p, x_4(D), y_5(D), comp_6(D));
  _9 = _8;

  <bb 3> :
  p ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _9;

}



;; Function stbi__png_is16 (_ZL14stbi__png_is16P13stbi__context, funcdef_no=917, decl_uid=10142, cgraph_uid=823, symbol_order=851)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L6>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L6>}


Removing basic block 10
Removing unreachable region 1
Merging blocks 2 and 3
stbi__png_is16 (struct stbi__context * s)
{
  int D.16039;
  struct stbi__png p;
  int D.16035;
  bool retval.422;
  int _1;
  int _2;
  struct stbi__context * _3;
  int _4;
  int _10;
  bool retval.422_11;
  int _12;
  int _14;
  int _15;

  <bb 2> :
  p.s = s_7(D);
  _10 = stbi__png_info_raw (&p, 0B, 0B, 0B);
  _1 = _10;
  retval.422_11 = _1 == 0;
  if (retval.422_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = p.depth;
  if (_2 != 16)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = p.s;
  stbi__rewind (_3);
  _14 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _15 = 1;

  <bb 7> :
  # _4 = PHI <_12(3), _14(5), _15(6)>
  p ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _4;

}



;; Function stbi__bmp_load (_ZL14stbi__bmp_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=924, decl_uid=10151, cgraph_uid=830, symbol_order=860)

Before removal of unreachable regions:
Eh tree:
   4 must_not_throw
   1 cleanup land:{1,<L190>}
     3 must_not_throw
     2 cleanup land:{2,<L189>}
Reachable regions: n_bits = 5, set = {1 2 }
Reachable landing pads: n_bits = 3, set = {1 2 }
Removing unreachable region 3
Removing unreachable region 4


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L190>}
     2 cleanup land:{2,<L189>}


Removing basic block 182
Removing basic block 181
Removing unreachable region 1
Removing unreachable region 2
Merging blocks 2 and 3
Merging blocks 16 and 17
Merging blocks 43 and 44
Merging blocks 47 and 48
Merging blocks 53 and 54
Merging blocks 64 and 65
Merging blocks 72 and 73
Merging blocks 75 and 76
Merging blocks 82 and 83
Merging blocks 90 and 91
Merging blocks 96 and 97
Merging blocks 99 and 100
Merging blocks 128 and 129
Merging blocks 132 and 133
Merging blocks 142 and 143
Merging blocks 144 and 145
Merging blocks 146 and 147
Merging blocks 150 and 151
Merging blocks 156 and 157
Merging blocks 173 and 174
Merging blocks 43 and 45
Merging blocks 43 and 46
Merging blocks 128 and 130
Merging blocks 128 and 131
Merging blocks 146 and 148
Merging blocks 146 and 149
stbi__bmp_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.16392;
  int D.16390;
  int D.16389;
  int D.16388;
  int D.16387;
  stbi__uint32 D.16386;
  int D.16385;
  unsigned char D.16384;
  unsigned char D.16383;
  unsigned char D.16382;
  unsigned char D.16381;
  unsigned char D.16380;
  unsigned char D.16379;
  unsigned char D.16378;
  unsigned char D.16377;
  unsigned char D.16376;
  unsigned char D.16375;
  unsigned char D.16374;
  void * D.16373;
  stbi_uc * p2;
  stbi_uc * p1;
  stbi_uc t;
  unsigned int a;
  stbi__uint32 v;
  int bpp;
  unsigned char a;
  int easy;
  int z;
  int acount;
  int bcount;
  int gcount;
  int rcount;
  int ashift;
  int bshift;
  int gshift;
  int rshift;
  int v2;
  int v;
  int color;
  int v;
  int bit_offset;
  int z;
  struct stbi__bmp_data info;
  int target;
  int pad;
  int flip_vertically;
  int width;
  int j;
  int i;
  int psize;
  stbi_uc pal[256][4];
  unsigned int all_a;
  unsigned int ma;
  unsigned int mb;
  unsigned int mg;
  unsigned int mr;
  stbi_uc * out;
  unsigned int iftmp.457;
  stbi__uint32 iftmp.453;
  unsigned char iftmp.451;
  int iftmp.446;
  bool retval.441;
  int iftmp.436;
  bool retval.435;
  int iftmp.434;
  bool iftmp.433;
  void * D.16188;
  bool retval.432;
  void * _1;
  unsigned int _2;
  int _3;
  bool _4;
  unsigned int _5;
  int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  int _24;
  stbi_uc * _25;
  stbi_uc * _26;
  long long int _27;
  int _28;
  int _29;
  int _30;
  long long int _31;
  int _32;
  long long int _33;
  stbi_uc * _34;
  stbi_uc[128] * _35;
  long long int _36;
  long long int _37;
  int _38;
  unsigned int _39;
  int _40;
  unsigned int _41;
  int _42;
  int _43;
  unsigned int _44;
  int _45;
  unsigned int _46;
  int _47;
  int _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  int _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int _58;
  int _59;
  int _60;
  int _61;
  unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  int _65;
  unsigned int _66;
  unsigned int _67;
  unsigned int _68;
  int _69;
  unsigned int _70;
  int _71;
  int _72;
  unsigned int _73;
  int _74;
  unsigned char _75;
  unsigned int _76;
  int _77;
  int _78;
  int z.437_79;
  sizetype _80;
  stbi_uc * _81;
  unsigned char _82;
  int z.438_83;
  sizetype _84;
  stbi_uc * _85;
  unsigned char _86;
  int z.439_87;
  sizetype _88;
  stbi_uc * _89;
  unsigned char _90;
  int z.440_91;
  sizetype _92;
  stbi_uc * _93;
  int _94;
  unsigned int _95;
  int _96;
  unsigned char _97;
  unsigned int _98;
  int _99;
  unsigned int _100;
  int _101;
  unsigned char _102;
  int _103;
  int z.442_104;
  sizetype _105;
  stbi_uc * _106;
  unsigned char _107;
  int z.443_108;
  sizetype _109;
  stbi_uc * _110;
  unsigned char _111;
  int z.444_112;
  sizetype _113;
  stbi_uc * _114;
  unsigned char _115;
  int z.445_116;
  sizetype _117;
  stbi_uc * _118;
  int _119;
  unsigned int _120;
  int _121;
  int _122;
  unsigned char _123;
  int z.447_124;
  sizetype _125;
  stbi_uc * _126;
  unsigned char _127;
  int z.448_128;
  sizetype _129;
  stbi_uc * _130;
  unsigned char _131;
  int z.449_132;
  sizetype _133;
  stbi_uc * _134;
  unsigned char _135;
  int z.450_136;
  sizetype _137;
  stbi_uc * _138;
  int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  unsigned int _145;
  unsigned int _146;
  int _147;
  unsigned int _148;
  unsigned int _149;
  int _150;
  int _151;
  int _152;
  int _153;
  int _154;
  int _155;
  int _156;
  unsigned int _157;
  int _158;
  unsigned int _159;
  int _160;
  sizetype _161;
  sizetype _162;
  stbi_uc * _163;
  unsigned char _164;
  sizetype _165;
  sizetype _166;
  stbi_uc * _167;
  unsigned char _168;
  sizetype _169;
  stbi_uc * _170;
  unsigned char _171;
  unsigned int _172;
  int z.452_173;
  sizetype _174;
  stbi_uc * _175;
  unsigned int _176;
  int _177;
  int _178;
  unsigned int _179;
  int _180;
  int z.454_181;
  sizetype _182;
  stbi_uc * _183;
  unsigned char _184;
  unsigned int _185;
  int _186;
  int z.455_187;
  sizetype _188;
  stbi_uc * _189;
  unsigned char _190;
  unsigned int _191;
  int _192;
  int z.456_193;
  sizetype _194;
  stbi_uc * _195;
  unsigned char _196;
  unsigned int _197;
  int _198;
  unsigned int a.458_199;
  unsigned int a.459_200;
  int z.460_201;
  sizetype _202;
  stbi_uc * _203;
  unsigned char _204;
  unsigned int _205;
  unsigned int _206;
  unsigned int _207;
  unsigned int _208;
  unsigned int _209;
  sizetype _210;
  stbi_uc * _211;
  unsigned int _212;
  int _213;
  int _214;
  unsigned int _215;
  unsigned int j.461_216;
  unsigned int _217;
  unsigned int target.462_218;
  unsigned int _219;
  sizetype _220;
  unsigned int _221;
  unsigned int j.463_222;
  unsigned int _223;
  unsigned int _224;
  unsigned int _225;
  unsigned int _226;
  unsigned int target.464_227;
  unsigned int _228;
  sizetype _229;
  unsigned int _230;
  int _231;
  int _232;
  sizetype _233;
  stbi_uc * _234;
  sizetype _235;
  stbi_uc * _236;
  sizetype _237;
  stbi_uc * _238;
  unsigned char _239;
  sizetype _240;
  stbi_uc * _241;
  unsigned int _242;
  unsigned int _243;
  unsigned int _244;
  int _245;
  unsigned int _246;
  int _247;
  int _248;
  void * _300;
  int iftmp.434_301;
  int iftmp.436_302;
  int iftmp.446_303;
  unsigned char iftmp.451_304;
  stbi__uint32 iftmp.453_305;
  unsigned int iftmp.457_306;
  void * _354;
  bool retval.432_355;
  void * _356;
  void * _360;
  void * _362;
  bool iftmp.433_371;
  bool iftmp.433_372;
  void * _374;
  int iftmp.434_376;
  int iftmp.434_377;
  bool retval.435_383;
  void * _385;
  void * _389;
  unsigned char _393;
  unsigned char _396;
  unsigned char _399;
  int iftmp.436_404;
  int iftmp.436_405;
  void * _412;
  unsigned char _417;
  bool retval.441_430;
  unsigned char _433;
  unsigned char _441;
  unsigned char _455;
  int iftmp.446_456;
  int iftmp.446_457;
  void * _472;
  void * _508;
  void * _511;
  unsigned char _515;
  unsigned char _518;
  unsigned char _521;
  unsigned char _525;
  unsigned char iftmp.451_526;
  unsigned char iftmp.451_527;
  int _536;
  stbi__uint32 iftmp.453_537;
  stbi__uint32 _539;
  stbi__uint32 iftmp.453_540;
  int _543;
  int _547;
  int _551;
  int _555;
  unsigned int iftmp.457_556;
  unsigned int iftmp.457_557;
  stbi_uc * _580;
  void * _582;
  void * _589;

  <bb 2> :
  mr_345 = 0;
  mg_346 = 0;
  mb_347 = 0;
  ma_348 = 0;
  psize_349 = 0;
  info.all_a = 255;
  _354 = stbi__bmp_parse_header (s_352(D), &info);
  _1 = _354;
  retval.432_355 = _1 == 0B;
  if (retval.432_355 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _356 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 153>; [INV]

  <bb 4> :
  _2 = s_352(D)->img_y;
  _3 = (int) _2;
  _4 = _3 > 0;
  flip_vertically_357 = (int) _4;
  _5 = s_352(D)->img_y;
  _6 = (int) _5;
  _7 = ABS_EXPR <_6>;
  _8 = (unsigned int) _7;
  s_352(D)->img_y = _8;
  _9 = s_352(D)->img_y;
  if (_9 > 16777216)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__err ("too large");
  _360 = 0B;
  goto <bb 153>; [INV]

  <bb 6> :
  _10 = s_352(D)->img_x;
  if (_10 > 16777216)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  stbi__err ("too large");
  _362 = 0B;
  goto <bb 153>; [INV]

  <bb 8> :
  mr_363 = info.mr;
  mg_364 = info.mg;
  mb_365 = info.mb;
  ma_366 = info.ma;
  all_a_367 = info.all_a;
  _11 = info.hsz;
  if (_11 == 12)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _12 = info.bpp;
  if (_12 <= 23)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _13 = info.offset;
  _14 = info.extra_read;
  _15 = _13 - _14;
  _16 = _15 + -24;
  psize_368 = _16 / 3;
  goto <bb 13>; [INV]

  <bb 11> :
  _17 = info.bpp;
  if (_17 <= 15)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = info.offset;
  _19 = info.extra_read;
  _20 = _18 - _19;
  _21 = info.hsz;
  _22 = _20 - _21;
  psize_369 = _22 >> 2;

  <bb 13> :
  # psize_255 = PHI <psize_368(10), psize_349(11), psize_369(12), psize_349(9)>
  if (psize_255 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 14> :
  _23 = info.offset;
  _24 = s_352(D)->callback_already_read;
  _25 = s_352(D)->img_buffer;
  _26 = s_352(D)->img_buffer_original;
  _27 = _25 - _26;
  _28 = (int) _27;
  _29 = _24 + _28;
  if (_23 == _29)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _assert ("info.offset == s->callback_already_read + (int) (s->img_buffer - s->img_buffer_original)", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5398);
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.433_372 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.433_371 = 0;

  <bb 18> :
  _30 = info.offset;
  _31 = (long long int) _30;
  _32 = s_352(D)->callback_already_read;
  _33 = (long long int) _32;
  _34 = s_352(D)->img_buffer;
  _35 = &s_352(D)->buffer_start;
  _36 = _34 - _35;
  _37 = _33 + _36;
  if (_31 != _37)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__err ("bad offset");
  _374 = 0B;
  goto <bb 153>; [INV]

  <bb 20> :
  _38 = info.bpp;
  if (_38 == 24)
    goto <bb 21>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 21> :
  if (ma_366 == 4278190080)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  s_352(D)->img_n = 3;
  goto <bb 27>; [INV]

  <bb 23> :
  if (ma_366 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.434_376 = 4;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.434_377 = 3;

  <bb 26> :
  # iftmp.434_301 = PHI <iftmp.434_376(24), iftmp.434_377(25)>
  s_352(D)->img_n = iftmp.434_301;

  <bb 27> :
  if (req_comp_379(D) != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 28> :
  if (req_comp_379(D) > 2)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  target_380 = req_comp_379(D);
  goto <bb 31>; [INV]

  <bb 30> :
  target_381 = s_352(D)->img_n;

  <bb 31> :
  # target_269 = PHI <target_380(29), target_381(30)>
  _39 = s_352(D)->img_y;
  _40 = (int) _39;
  _41 = s_352(D)->img_x;
  _42 = (int) _41;
  _43 = stbi__mad3sizes_valid (target_269, _42, _40, 0);
  retval.435_383 = _43 == 0;
  if (retval.435_383 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  stbi__err ("too large");
  _385 = 0B;
  goto <bb 153>; [INV]

  <bb 33> :
  _44 = s_352(D)->img_y;
  _45 = (int) _44;
  _46 = s_352(D)->img_x;
  _47 = (int) _46;
  out_387 = stbi__malloc_mad3 (target_269, _47, _45, 0);
  if (out_387 == 0B)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  stbi__err ("outofmem");
  _389 = 0B;
  goto <bb 153>; [INV]

  <bb 35> :
  _48 = info.bpp;
  if (_48 <= 15)
    goto <bb 36>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 36> :
  z_390 = 0;
  if (psize_255 == 0)
    goto <bb 38>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 37> :
  if (psize_255 > 256)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  free (out_387);
  stbi__err ("invalid");
  _472 = 0B;
  goto <bb 153>; [INV]

  <bb 39> :
  i_391 = 0;

  <bb 40> :
  # i_256 = PHI <i_391(39), i_403(43)>
  if (i_256 >= psize_255)
    goto <bb 44>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 41> :
  _393 = stbi__get8 (s_352(D));
  _49 = _393;
  pal[i_256][2] = _49;
  _396 = stbi__get8 (s_352(D));
  _50 = _396;
  pal[i_256][1] = _50;
  _399 = stbi__get8 (s_352(D));
  _51 = _399;
  pal[i_256][0] = _51;
  _52 = info.hsz;
  if (_52 != 12)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  stbi__get8 (s_352(D));

  <bb 43> :
  pal[i_256][3] = 255;
  i_403 = i_256 + 1;
  goto <bb 40>; [INV]

  <bb 44> :
  _53 = info.offset;
  _54 = info.extra_read;
  _55 = _53 - _54;
  _56 = info.hsz;
  _57 = _55 - _56;
  _58 = info.hsz;
  if (_58 == 12)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  iftmp.436_404 = 3;
  goto <bb 47>; [INV]

  <bb 46> :
  iftmp.436_405 = 4;

  <bb 47> :
  # iftmp.436_302 = PHI <iftmp.436_404(45), iftmp.436_405(46)>
  _59 = iftmp.436_302 * psize_255;
  _60 = _57 - _59;
  stbi__skip (s_352(D), _60);
  _61 = info.bpp;
  if (_61 == 1)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  _62 = s_352(D)->img_x;
  _63 = _62 + 7;
  _64 = _63 >> 3;
  width_407 = (int) _64;
  goto <bb 54>; [INV]

  <bb 49> :
  _65 = info.bpp;
  if (_65 == 4)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  _66 = s_352(D)->img_x;
  _67 = _66 + 1;
  _68 = _67 >> 1;
  width_408 = (int) _68;
  goto <bb 54>; [INV]

  <bb 51> :
  _69 = info.bpp;
  if (_69 == 8)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  _70 = s_352(D)->img_x;
  width_409 = (int) _70;
  goto <bb 54>; [INV]

  <bb 53> :
  free (out_387);
  stbi__err ("bad bpp");
  _412 = 0B;
  goto <bb 153>; [INV]

  <bb 54> :
  # width_267 = PHI <width_407(48), width_408(50), width_409(52)>
  _71 = -width_267;
  pad_413 = _71 & 3;
  _72 = info.bpp;
  if (_72 == 1)
    goto <bb 55>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 55> :
  j_414 = 0;

  <bb 56> :
  # j_263 = PHI <j_414(55), j_437(66)>
  # z_270 = PHI <z_390(55), z_273(66)>
  _73 = s_352(D)->img_y;
  _74 = (int) _73;
  if (j_263 >= _74)
    goto <bb 67>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 57> :
  bit_offset_415 = 7;
  _417 = stbi__get8 (s_352(D));
  _75 = _417;
  v_418 = (int) _75;
  i_419 = 0;

  <bb 58> :
  # i_257 = PHI <i_419(57), i_435(65)>
  # z_271 = PHI <z_270(57), z_272(65)>
  # bit_offset_279 = PHI <bit_offset_415(57), bit_offset_280(65)>
  # v_281 = PHI <v_418(57), v_282(65)>
  _76 = s_352(D)->img_x;
  _77 = (int) _76;
  if (i_257 >= _77)
    goto <bb 66>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 59> :
  _78 = v_281 >> bit_offset_279;
  color_420 = _78 & 1;
  z.437_79 = z_271;
  z_421 = z.437_79 + 1;
  _80 = (sizetype) z.437_79;
  _81 = out_387 + _80;
  _82 = pal[color_420][0];
  *_81 = _82;
  z.438_83 = z_421;
  z_423 = z.438_83 + 1;
  _84 = (sizetype) z.438_83;
  _85 = out_387 + _84;
  _86 = pal[color_420][1];
  *_85 = _86;
  z.439_87 = z_423;
  z_425 = z.439_87 + 1;
  _88 = (sizetype) z.439_87;
  _89 = out_387 + _88;
  _90 = pal[color_420][2];
  *_89 = _90;
  if (target_269 == 4)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  z.440_91 = z_425;
  z_427 = z.440_91 + 1;
  _92 = (sizetype) z.440_91;
  _93 = out_387 + _92;
  *_93 = 255;

  <bb 61> :
  # z_272 = PHI <z_425(59), z_427(60)>
  _94 = i_257 + 1;
  _95 = s_352(D)->img_x;
  _96 = (int) _95;
  if (_94 == _96)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  goto <bb 66>; [INV]

  <bb 63> :
  bit_offset_429 = bit_offset_279 + -1;
  retval.441_430 = bit_offset_429 < 0;
  if (retval.441_430 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  bit_offset_431 = 7;
  _433 = stbi__get8 (s_352(D));
  _97 = _433;
  v_434 = (int) _97;

  <bb 65> :
  # bit_offset_280 = PHI <bit_offset_429(63), bit_offset_431(64)>
  # v_282 = PHI <v_281(63), v_434(64)>
  i_435 = i_257 + 1;
  goto <bb 58>; [INV]

  <bb 66> :
  # z_273 = PHI <z_271(58), z_272(62)>
  stbi__skip (s_352(D), pad_413);
  j_437 = j_263 + 1;
  goto <bb 56>; [INV]

  <bb 67> :
  goto <bb 85>; [INV]

  <bb 68> :
  j_438 = 0;

  <bb 69> :
  # j_264 = PHI <j_438(68), j_469(84)>
  # z_274 = PHI <z_390(68), z_278(84)>
  _98 = s_352(D)->img_y;
  _99 = (int) _98;
  if (j_264 >= _99)
    goto <bb 85>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 70> :
  i_439 = 0;

  <bb 71> :
  # i_258 = PHI <i_439(70), i_467(83)>
  # z_275 = PHI <z_274(70), z_277(83)>
  _100 = s_352(D)->img_x;
  _101 = (int) _100;
  if (i_258 >= _101)
    goto <bb 84>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 72> :
  _441 = stbi__get8 (s_352(D));
  _102 = _441;
  v_442 = (int) _102;
  v2_443 = 0;
  _103 = info.bpp;
  if (_103 == 4)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  v2_444 = v_442 & 15;
  v_445 = v_442 >> 4;

  <bb 74> :
  # v_283 = PHI <v_442(72), v_445(73)>
  # v2_284 = PHI <v2_443(72), v2_444(73)>
  z.442_104 = z_275;
  z_446 = z.442_104 + 1;
  _105 = (sizetype) z.442_104;
  _106 = out_387 + _105;
  _107 = pal[v_283][0];
  *_106 = _107;
  z.443_108 = z_446;
  z_448 = z.443_108 + 1;
  _109 = (sizetype) z.443_108;
  _110 = out_387 + _109;
  _111 = pal[v_283][1];
  *_110 = _111;
  z.444_112 = z_448;
  z_450 = z.444_112 + 1;
  _113 = (sizetype) z.444_112;
  _114 = out_387 + _113;
  _115 = pal[v_283][2];
  *_114 = _115;
  if (target_269 == 4)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  z.445_116 = z_450;
  z_452 = z.445_116 + 1;
  _117 = (sizetype) z.445_116;
  _118 = out_387 + _117;
  *_118 = 255;

  <bb 76> :
  # z_276 = PHI <z_450(74), z_452(75)>
  _119 = i_258 + 1;
  _120 = s_352(D)->img_x;
  _121 = (int) _120;
  if (_119 == _121)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  goto <bb 84>; [INV]

  <bb 78> :
  _122 = info.bpp;
  if (_122 == 8)
    goto <bb 79>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 79> :
  _455 = stbi__get8 (s_352(D));
  _123 = _455;
  iftmp.446_456 = (int) _123;
  goto <bb 81>; [INV]

  <bb 80> :
  iftmp.446_457 = v2_284;

  <bb 81> :
  # iftmp.446_303 = PHI <iftmp.446_456(79), iftmp.446_457(80)>
  v_458 = iftmp.446_303;
  z.447_124 = z_276;
  z_459 = z.447_124 + 1;
  _125 = (sizetype) z.447_124;
  _126 = out_387 + _125;
  _127 = pal[v_458][0];
  *_126 = _127;
  z.448_128 = z_459;
  z_461 = z.448_128 + 1;
  _129 = (sizetype) z.448_128;
  _130 = out_387 + _129;
  _131 = pal[v_458][1];
  *_130 = _131;
  z.449_132 = z_461;
  z_463 = z.449_132 + 1;
  _133 = (sizetype) z.449_132;
  _134 = out_387 + _133;
  _135 = pal[v_458][2];
  *_134 = _135;
  if (target_269 == 4)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  z.450_136 = z_463;
  z_465 = z.450_136 + 1;
  _137 = (sizetype) z.450_136;
  _138 = out_387 + _137;
  *_138 = 255;

  <bb 83> :
  # z_277 = PHI <z_463(81), z_465(82)>
  i_467 = i_258 + 2;
  goto <bb 71>; [INV]

  <bb 84> :
  # z_278 = PHI <z_275(71), z_276(77)>
  stbi__skip (s_352(D), pad_413);
  j_469 = j_264 + 1;
  goto <bb 69>; [INV]

  <bb 85> :
  goto <bb 133>; [INV]

  <bb 86> :
  rshift_473 = 0;
  gshift_474 = 0;
  bshift_475 = 0;
  ashift_476 = 0;
  rcount_477 = 0;
  gcount_478 = 0;
  bcount_479 = 0;
  acount_480 = 0;
  z_481 = 0;
  easy_482 = 0;
  _139 = info.offset;
  _140 = info.extra_read;
  _141 = _139 - _140;
  _142 = info.hsz;
  _143 = _141 - _142;
  stbi__skip (s_352(D), _143);
  _144 = info.bpp;
  if (_144 == 24)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  _145 = s_352(D)->img_x;
  _146 = _145 * 3;
  width_484 = (int) _146;
  goto <bb 91>; [INV]

  <bb 88> :
  _147 = info.bpp;
  if (_147 == 16)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  _148 = s_352(D)->img_x;
  _149 = _148 * 2;
  width_485 = (int) _149;
  goto <bb 91>; [INV]

  <bb 90> :
  width_486 = 0;

  <bb 91> :
  # width_268 = PHI <width_484(87), width_485(89), width_486(90)>
  _150 = -width_268;
  pad_487 = _150 & 3;
  _151 = info.bpp;
  if (_151 == 24)
    goto <bb 92>; [INV]
  else
    goto <bb 93>; [INV]

  <bb 92> :
  easy_488 = 1;
  goto <bb 99>; [INV]

  <bb 93> :
  _152 = info.bpp;
  if (_152 == 32)
    goto <bb 94>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 94> :
  if (mb_365 == 255)
    goto <bb 95>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 95> :
  if (mg_364 == 65280)
    goto <bb 96>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 96> :
  if (mr_363 == 16711680)
    goto <bb 97>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 97> :
  if (ma_366 == 4278190080)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  easy_489 = 2;

  <bb 99> :
  # easy_299 = PHI <easy_488(92), easy_482(93), easy_482(95), easy_482(94), easy_489(98), easy_482(97), easy_482(96)>
  if (easy_299 == 0)
    goto <bb 100>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 100> :
  if (mr_363 == 0)
    goto <bb 103>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 101> :
  if (mg_364 == 0)
    goto <bb 103>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 102> :
  if (mb_365 == 0)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  free (out_387);
  stbi__err ("bad masks");
  _511 = 0B;
  goto <bb 153>; [INV]

  <bb 104> :
  _153 = stbi__high_bit (mr_363);
  rshift_491 = _153 + -7;
  rcount_493 = stbi__bitcount (mr_363);
  _154 = stbi__high_bit (mg_364);
  gshift_495 = _154 + -7;
  gcount_497 = stbi__bitcount (mg_364);
  _155 = stbi__high_bit (mb_365);
  bshift_499 = _155 + -7;
  bcount_501 = stbi__bitcount (mb_365);
  _156 = stbi__high_bit (ma_366);
  ashift_503 = _156 + -7;
  acount_505 = stbi__bitcount (ma_366);
  if (rcount_493 > 8)
    goto <bb 108>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 105> :
  if (gcount_497 > 8)
    goto <bb 108>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 106> :
  if (bcount_501 > 8)
    goto <bb 108>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 107> :
  if (acount_505 > 8)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  free (out_387);
  stbi__err ("bad masks");
  _508 = 0B;
  goto <bb 153>; [INV]

  <bb 109> :
  # rshift_285 = PHI <rshift_473(99), rshift_491(107)>
  # gshift_286 = PHI <gshift_474(99), gshift_495(107)>
  # bshift_287 = PHI <bshift_475(99), bshift_499(107)>
  # ashift_288 = PHI <ashift_476(99), ashift_503(107)>
  # rcount_289 = PHI <rcount_477(99), rcount_493(107)>
  # gcount_290 = PHI <gcount_478(99), gcount_497(107)>
  # bcount_291 = PHI <bcount_479(99), bcount_501(107)>
  # acount_292 = PHI <acount_480(99), acount_505(107)>
  j_512 = 0;

  <bb 110> :
  # all_a_250 = PHI <all_a_367(109), all_a_253(132)>
  # j_265 = PHI <j_512(109), j_566(132)>
  # z_293 = PHI <z_481(109), z_298(132)>
  _157 = s_352(D)->img_y;
  _158 = (int) _157;
  if (j_265 >= _158)
    goto <bb 133>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 111> :
  if (easy_299 != 0)
    goto <bb 112>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 112> :
  i_513 = 0;

  <bb 113> :
  # all_a_251 = PHI <all_a_250(112), all_a_529(119)>
  # i_259 = PHI <i_513(112), i_532(119)>
  # z_294 = PHI <z_293(112), z_295(119)>
  _159 = s_352(D)->img_x;
  _160 = (int) _159;
  if (i_259 >= _160)
    goto <bb 120>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 114> :
  _161 = (sizetype) z_294;
  _162 = _161 + 2;
  _163 = out_387 + _162;
  _515 = stbi__get8 (s_352(D));
  _164 = _515;
  *_163 = _164;
  _165 = (sizetype) z_294;
  _166 = _165 + 1;
  _167 = out_387 + _166;
  _518 = stbi__get8 (s_352(D));
  _168 = _518;
  *_167 = _168;
  _169 = (sizetype) z_294;
  _170 = out_387 + _169;
  _521 = stbi__get8 (s_352(D));
  _171 = _521;
  *_170 = _171;
  z_523 = z_294 + 3;
  if (easy_299 == 2)
    goto <bb 115>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 115> :
  _525 = stbi__get8 (s_352(D));
  iftmp.451_526 = _525;
  goto <bb 117>; [INV]

  <bb 116> :
  iftmp.451_527 = 255;

  <bb 117> :
  # iftmp.451_304 = PHI <iftmp.451_526(115), iftmp.451_527(116)>
  a_528 = iftmp.451_304;
  _172 = (unsigned int) a_528;
  all_a_529 = all_a_251 | _172;
  if (target_269 == 4)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  z.452_173 = z_523;
  z_530 = z.452_173 + 1;
  _174 = (sizetype) z.452_173;
  _175 = out_387 + _174;
  *_175 = a_528;

  <bb 119> :
  # z_295 = PHI <z_523(117), z_530(118)>
  i_532 = i_259 + 1;
  goto <bb 113>; [INV]

  <bb 120> :
  goto <bb 132>; [INV]

  <bb 121> :
  bpp_533 = info.bpp;
  i_534 = 0;

  <bb 122> :
  # all_a_252 = PHI <all_a_250(121), all_a_559(131)>
  # i_260 = PHI <i_534(121), i_563(131)>
  # z_296 = PHI <z_293(121), z_297(131)>
  _176 = s_352(D)->img_x;
  _177 = (int) _176;
  if (i_260 >= _177)
    goto <bb 132>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 123> :
  if (bpp_533 == 16)
    goto <bb 124>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 124> :
  _536 = stbi__get16le (s_352(D));
  _178 = _536;
  iftmp.453_537 = (stbi__uint32) _178;
  goto <bb 126>; [INV]

  <bb 125> :
  _539 = stbi__get32le (s_352(D));
  iftmp.453_540 = _539;

  <bb 126> :
  # iftmp.453_305 = PHI <iftmp.453_537(124), iftmp.453_540(125)>
  v_541 = iftmp.453_305;
  _179 = v_541 & mr_363;
  _543 = stbi__shiftsigned (_179, rshift_285, rcount_289);
  _180 = _543;
  z.454_181 = z_296;
  z_544 = z.454_181 + 1;
  _182 = (sizetype) z.454_181;
  _183 = out_387 + _182;
  _184 = (unsigned char) _180;
  *_183 = _184;
  _185 = v_541 & mg_364;
  _547 = stbi__shiftsigned (_185, gshift_286, gcount_290);
  _186 = _547;
  z.455_187 = z_544;
  z_548 = z.455_187 + 1;
  _188 = (sizetype) z.455_187;
  _189 = out_387 + _188;
  _190 = (unsigned char) _186;
  *_189 = _190;
  _191 = v_541 & mb_365;
  _551 = stbi__shiftsigned (_191, bshift_287, bcount_291);
  _192 = _551;
  z.456_193 = z_548;
  z_552 = z.456_193 + 1;
  _194 = (sizetype) z.456_193;
  _195 = out_387 + _194;
  _196 = (unsigned char) _192;
  *_195 = _196;
  if (ma_366 != 0)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  _197 = v_541 & ma_366;
  _555 = stbi__shiftsigned (_197, ashift_288, acount_292);
  _198 = _555;
  iftmp.457_556 = (unsigned int) _198;
  goto <bb 129>; [INV]

  <bb 128> :
  iftmp.457_557 = 255;

  <bb 129> :
  # iftmp.457_306 = PHI <iftmp.457_556(127), iftmp.457_557(128)>
  a = iftmp.457_306;
  a.458_199 = a;
  all_a_559 = all_a_252 | a.458_199;
  if (target_269 == 4)
    goto <bb 130>; [INV]
  else
    goto <bb 131>; [INV]

  <bb 130> :
  a.459_200 = a;
  z.460_201 = z_552;
  z_560 = z.460_201 + 1;
  _202 = (sizetype) z.460_201;
  _203 = out_387 + _202;
  _204 = (unsigned char) a.459_200;
  *_203 = _204;

  <bb 131> :
  # z_297 = PHI <z_552(129), z_560(130)>
  a ={v} {CLOBBER};
  i_563 = i_260 + 1;
  goto <bb 122>; [INV]

  <bb 132> :
  # all_a_253 = PHI <all_a_251(120), all_a_252(122)>
  # z_298 = PHI <z_294(120), z_296(122)>
  stbi__skip (s_352(D), pad_487);
  j_566 = j_265 + 1;
  goto <bb 110>; [INV]

  <bb 133> :
  # all_a_254 = PHI <all_a_367(85), all_a_250(110)>
  if (target_269 == 4)
    goto <bb 134>; [INV]
  else
    goto <bb 138>; [INV]

  <bb 134> :
  if (all_a_254 == 0)
    goto <bb 135>; [INV]
  else
    goto <bb 138>; [INV]

  <bb 135> :
  _205 = s_352(D)->img_x;
  _206 = s_352(D)->img_y;
  _207 = _205 * _206;
  _208 = _207 * 4;
  _209 = _208 + 4294967295;
  i_567 = (int) _209;

  <bb 136> :
  # i_261 = PHI <i_567(135), i_569(137)>
  if (i_261 < 0)
    goto <bb 138>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 137> :
  _210 = (sizetype) i_261;
  _211 = out_387 + _210;
  *_211 = 255;
  i_569 = i_261 + -4;
  goto <bb 136>; [INV]

  <bb 138> :
  if (flip_vertically_357 != 0)
    goto <bb 139>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 139> :
  j_570 = 0;

  <bb 140> :
  # j_266 = PHI <j_570(139), j_578(144)>
  _212 = s_352(D)->img_y;
  _213 = (int) _212;
  _214 = _213 >> 1;
  if (j_266 >= _214)
    goto <bb 145>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 141> :
  _215 = s_352(D)->img_x;
  j.461_216 = (unsigned int) j_266;
  _217 = _215 * j.461_216;
  target.462_218 = (unsigned int) target_269;
  _219 = _217 * target.462_218;
  _220 = (sizetype) _219;
  p1_571 = out_387 + _220;
  _221 = s_352(D)->img_y;
  j.463_222 = (unsigned int) j_266;
  _223 = _221 - j.463_222;
  _224 = _223 + 4294967295;
  _225 = s_352(D)->img_x;
  _226 = _224 * _225;
  target.464_227 = (unsigned int) target_269;
  _228 = _226 * target.464_227;
  _229 = (sizetype) _228;
  p2_572 = out_387 + _229;
  i_573 = 0;

  <bb 142> :
  # i_262 = PHI <i_573(141), i_577(143)>
  _230 = s_352(D)->img_x;
  _231 = (int) _230;
  _232 = target_269 * _231;
  if (i_262 >= _232)
    goto <bb 144>; [INV]
  else
    goto <bb 143>; [INV]

  <bb 143> :
  _233 = (sizetype) i_262;
  _234 = p1_571 + _233;
  t_574 = *_234;
  _235 = (sizetype) i_262;
  _236 = p2_572 + _235;
  _237 = (sizetype) i_262;
  _238 = p1_571 + _237;
  _239 = *_236;
  *_238 = _239;
  _240 = (sizetype) i_262;
  _241 = p2_572 + _240;
  *_241 = t_574;
  i_577 = i_262 + 1;
  goto <bb 142>; [INV]

  <bb 144> :
  j_578 = j_266 + 1;
  goto <bb 140>; [INV]

  <bb 145> :

  <bb 146> :
  if (req_comp_379(D) != 0)
    goto <bb 147>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 147> :
  if (req_comp_379(D) != target_269)
    goto <bb 148>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 148> :
  _242 = s_352(D)->img_y;
  _243 = s_352(D)->img_x;
  _580 = stbi__convert_format (out_387, target_269, req_comp_379(D), _243, _242);
  out_581 = _580;
  if (out_581 == 0B)
    goto <bb 149>; [INV]
  else
    goto <bb 150>; [INV]

  <bb 149> :
  _582 = out_581;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 153>; [INV]

  <bb 150> :
  # out_249 = PHI <out_387(146), out_387(147), out_581(148)>
  _244 = s_352(D)->img_x;
  _245 = (int) _244;
  *x_583(D) = _245;
  _246 = s_352(D)->img_y;
  _247 = (int) _246;
  *y_585(D) = _247;
  if (comp_587(D) != 0B)
    goto <bb 151>; [INV]
  else
    goto <bb 152>; [INV]

  <bb 151> :
  _248 = s_352(D)->img_n;
  *comp_587(D) = _248;

  <bb 152> :
  _589 = out_249;

  <bb 153> :
  # _300 = PHI <_356(3), _360(5), _362(7), _374(19), _385(32), _389(34), _472(38), _412(53), _511(103), _508(108), _582(149), _589(152)>
  pal ={v} {CLOBBER};
  info ={v} {CLOBBER};

  <bb 154> :
<L188>:
  return _300;

}



;; Function stbi__tga_load (_ZL14stbi__tga_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=929, decl_uid=10165, cgraph_uid=835, symbol_order=865)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L116>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L116>}


Removing basic block 127
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 31 and 32
Merging blocks 40 and 41
Merging blocks 46 and 47
Merging blocks 51 and 52
Merging blocks 57 and 58
Merging blocks 60 and 61
Merging blocks 68 and 69
Merging blocks 77 and 78
Merging blocks 79 and 80
Merging blocks 89 and 90
Merging blocks 93 and 94
Merging blocks 97 and 98
Merging blocks 122 and 123
Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 6
Merging blocks 2 and 7
Merging blocks 2 and 8
Merging blocks 2 and 9
Merging blocks 2 and 10
Merging blocks 2 and 11
Merging blocks 2 and 12
Merging blocks 2 and 13
Merging blocks 2 and 14
stbi__tga_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  unsigned char * D.16655;
  unsigned char D.16654;
  int D.16653;
  unsigned char D.16652;
  unsigned char D.16651;
  int D.16650;
  unsigned char D.16649;
  unsigned char D.16648;
  int D.16647;
  int D.16646;
  int D.16645;
  int D.16644;
  unsigned char D.16643;
  int D.16642;
  int D.16641;
  unsigned char D.16640;
  unsigned char D.16639;
  unsigned char D.16638;
  unsigned char temp;
  unsigned char * tga_pixel;
  unsigned char temp;
  int index2;
  int index1;
  int pal_idx;
  int RLE_cmd;
  stbi_uc * pal_entry;
  stbi_uc * tga_row;
  int row;
  int read_next_pixel;
  int RLE_repeating;
  int RLE_count;
  unsigned char raw_data[4];
  int j;
  int i;
  unsigned char * tga_palette;
  unsigned char * tga_data;
  int tga_inverted;
  int tga_rgb16;
  int tga_comp;
  int tga_bits_per_pixel;
  int tga_height;
  int tga_width;
  int tga_y_origin;
  int tga_x_origin;
  int tga_palette_bits;
  int tga_palette_len;
  int tga_palette_start;
  int tga_is_RLE;
  int tga_image_type;
  int tga_indexed;
  int tga_offset;
  bool iftmp.476;
  int iftmp.474;
  bool retval.473;
  bool iftmp.472;
  int iftmp.470;
  bool retval.468;
  void * D.16527;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  int _7;
  bool _8;
  bool _9;
  int _10;
  int _11;
  int tga_rgb16.469_12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  int _17;
  int tga_rgb16.471_18;
  sizetype _19;
  int _20;
  int _21;
  int _22;
  unsigned char _23;
  int _24;
  unsigned char _25;
  int _26;
  sizetype _27;
  unsigned char * _28;
  unsigned char _29;
  int tga_rgb16.475_30;
  unsigned char _31;
  int _32;
  int _33;
  sizetype _34;
  unsigned char * _35;
  unsigned char _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  sizetype _42;
  unsigned char * _43;
  sizetype _44;
  unsigned char * _45;
  sizetype _46;
  unsigned char * _47;
  unsigned char _48;
  sizetype _49;
  unsigned char * _50;
  int tga_rgb16.477_51;
  int _52;
  unsigned char _53;
  unsigned char * _54;
  sizetype _55;
  unsigned int tga_height.478_56;
  unsigned int tga_width.479_57;
  void * _87;
  int iftmp.470_88;
  int iftmp.474_89;
  unsigned char _119;
  unsigned char _122;
  unsigned char _125;
  int _129;
  int _132;
  unsigned char _135;
  int _138;
  int _141;
  int _144;
  int _147;
  unsigned char _150;
  unsigned char _154;
  void * _162;
  void * _164;
  void * _173;
  bool retval.468_181;
  void * _183;
  void * _187;
  int iftmp.470_190;
  int iftmp.470_191;
  void * _198;
  void * _204;
  bool iftmp.472_207;
  bool iftmp.472_208;
  int _214;
  bool retval.473_215;
  void * _219;
  unsigned char _222;
  unsigned char _230;
  int iftmp.474_231;
  int _233;
  int iftmp.474_234;
  bool iftmp.476_242;
  bool iftmp.476_243;
  unsigned char _247;
  unsigned char * _277;
  void * _284;

  <bb 2> :
  _119 = stbi__get8 (s_117(D));
  _1 = _119;
  tga_offset_120 = (int) _1;
  _122 = stbi__get8 (s_117(D));
  _2 = _122;
  tga_indexed_123 = (int) _2;
  _125 = stbi__get8 (s_117(D));
  _3 = _125;
  tga_image_type_126 = (int) _3;
  tga_is_RLE_127 = 0;
  _129 = stbi__get16le (s_117(D));
  tga_palette_start_130 = _129;
  _132 = stbi__get16le (s_117(D));
  tga_palette_len_133 = _132;
  _135 = stbi__get8 (s_117(D));
  _4 = _135;
  tga_palette_bits_136 = (int) _4;
  _138 = stbi__get16le (s_117(D));
  tga_x_origin_139 = _138;
  _141 = stbi__get16le (s_117(D));
  tga_y_origin_142 = _141;
  _144 = stbi__get16le (s_117(D));
  tga_width_145 = _144;
  _147 = stbi__get16le (s_117(D));
  tga_height_148 = _147;
  _150 = stbi__get8 (s_117(D));
  _5 = _150;
  tga_bits_per_pixel_151 = (int) _5;
  tga_rgb16 = 0;
  _154 = stbi__get8 (s_117(D));
  _6 = _154;
  tga_inverted_155 = (int) _6;
  tga_palette_156 = 0B;
  raw_data = {};
  RLE_count_158 = 0;
  RLE_repeating_159 = 0;
  read_next_pixel_160 = 1;
  if (tga_height_148 > 16777216)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  stbi__err ("too large");
  _162 = 0B;
  goto <bb 100>; [INV]

  <bb 4> :
  if (tga_width_145 > 16777216)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  stbi__err ("too large");
  _164 = 0B;
  goto <bb 100>; [INV]

  <bb 6> :
  if (tga_image_type_126 > 7)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  tga_image_type_165 = tga_image_type_126 + -8;
  tga_is_RLE_166 = 1;

  <bb 8> :
  # tga_image_type_58 = PHI <tga_image_type_126(6), tga_image_type_165(7)>
  # tga_is_RLE_59 = PHI <tga_is_RLE_127(6), tga_is_RLE_166(7)>
  _7 = tga_inverted_155 & 32;
  _8 = _7 == 0;
  tga_inverted_167 = (int) _8;
  if (tga_indexed_123 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  tga_comp_169 = stbi__tga_get_comp (tga_palette_bits_136, 0, &tga_rgb16);
  goto <bb 11>; [INV]

  <bb 10> :
  _9 = tga_image_type_58 == 3;
  _10 = (int) _9;
  tga_comp_171 = stbi__tga_get_comp (tga_bits_per_pixel_151, _10, &tga_rgb16);

  <bb 11> :
  # tga_comp_60 = PHI <tga_comp_169(9), tga_comp_171(10)>
  if (tga_comp_60 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  stbi__err ("bad format");
  _173 = 0B;
  goto <bb 100>; [INV]

  <bb 13> :
  *x_174(D) = tga_width_145;
  *y_176(D) = tga_height_148;
  if (comp_178(D) != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  *comp_178(D) = tga_comp_60;

  <bb 15> :
  _11 = stbi__mad3sizes_valid (tga_width_145, tga_height_148, tga_comp_60, 0);
  retval.468_181 = _11 == 0;
  if (retval.468_181 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  stbi__err ("too large");
  _183 = 0B;
  goto <bb 100>; [INV]

  <bb 17> :
  tga_data_185 = stbi__malloc_mad3 (tga_width_145, tga_height_148, tga_comp_60, 0);
  if (tga_data_185 == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  stbi__err ("outofmem");
  _187 = 0B;
  goto <bb 100>; [INV]

  <bb 19> :
  stbi__skip (s_117(D), tga_offset_120);
  if (tga_indexed_123 == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 20> :
  if (tga_is_RLE_59 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 21> :
  tga_rgb16.469_12 = tga_rgb16;
  if (tga_rgb16.469_12 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 22> :
  i_189 = 0;

  <bb 23> :
  # i_63 = PHI <i_189(22), i_195(27)>
  if (i_63 >= tga_height_148)
    goto <bb 28>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (tga_inverted_167 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _13 = tga_height_148 - i_63;
  iftmp.470_190 = _13 + -1;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.470_191 = i_63;

  <bb 27> :
  # iftmp.470_88 = PHI <iftmp.470_190(25), iftmp.470_191(26)>
  row_192 = iftmp.470_88;
  _14 = row_192 * tga_width_145;
  _15 = tga_comp_60 * _14;
  _16 = (sizetype) _15;
  tga_row_193 = tga_data_185 + _16;
  _17 = tga_width_145 * tga_comp_60;
  stbi__getn (s_117(D), tga_row_193, _17);
  i_195 = i_63 + 1;
  goto <bb 23>; [INV]

  <bb 28> :
  goto <bb 90>; [INV]

  <bb 29> :
  if (tga_indexed_123 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 30> :
  if (tga_palette_len_133 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  free (tga_data_185);
  stbi__err ("bad palette");
  _198 = 0B;
  goto <bb 100>; [INV]

  <bb 32> :
  stbi__skip (s_117(D), tga_palette_start_130);
  tga_palette_201 = stbi__malloc_mad2 (tga_palette_len_133, tga_comp_60, 0);
  if (tga_palette_201 == 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  free (tga_data_185);
  stbi__err ("outofmem");
  _204 = 0B;
  goto <bb 100>; [INV]

  <bb 34> :
  tga_rgb16.471_18 = tga_rgb16;
  if (tga_rgb16.471_18 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 35> :
  pal_entry_205 = tga_palette_201;
  if (tga_comp_60 == 3)
    goto <bb 37>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _assert ("tga_comp == STBI_rgb", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5778);
  goto <bb 38>; [INV]

  <bb 37> :
  iftmp.472_208 = 1;
  goto <bb 39>; [INV]

  <bb 38> :
  iftmp.472_207 = 0;

  <bb 39> :
  i_209 = 0;

  <bb 40> :
  # i_64 = PHI <i_209(39), i_212(41)>
  # pal_entry_82 = PHI <pal_entry_205(39), pal_entry_211(41)>
  if (i_64 >= tga_palette_len_133)
    goto <bb 42>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 41> :
  stbi__tga_read_rgb16 (s_117(D), pal_entry_82);
  _19 = (sizetype) tga_comp_60;
  pal_entry_211 = pal_entry_82 + _19;
  i_212 = i_64 + 1;
  goto <bb 40>; [INV]

  <bb 42> :
  goto <bb 45>; [INV]

  <bb 43> :
  _20 = tga_palette_len_133 * tga_comp_60;
  _214 = stbi__getn (s_117(D), tga_palette_201, _20);
  _21 = _214;
  retval.473_215 = _21 == 0;
  if (retval.473_215 != 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  free (tga_data_185);
  free (tga_palette_201);
  stbi__err ("bad palette");
  _219 = 0B;
  goto <bb 100>; [INV]

  <bb 45> :

  <bb 46> :
  # tga_palette_62 = PHI <tga_palette_156(29), tga_palette_201(45)>
  i_220 = 0;

  <bb 47> :
  # i_65 = PHI <i_220(46), i_255(79)>
  # RLE_count_72 = PHI <RLE_count_158(46), RLE_count_254(79)>
  # RLE_repeating_75 = PHI <RLE_repeating_159(46), RLE_repeating_77(79)>
  # read_next_pixel_78 = PHI <read_next_pixel_160(46), read_next_pixel_81(79)>
  _22 = tga_width_145 * tga_height_148;
  if (i_65 >= _22)
    goto <bb 80>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  if (tga_is_RLE_59 != 0)
    goto <bb 49>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 49> :
  if (RLE_count_72 == 0)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  _222 = stbi__get8 (s_117(D));
  _23 = _222;
  RLE_cmd_223 = (int) _23;
  _24 = RLE_cmd_223 & 127;
  RLE_count_224 = _24 + 1;
  RLE_repeating_225 = RLE_cmd_223 >> 7;
  read_next_pixel_226 = 1;
  goto <bb 53>; [INV]

  <bb 51> :
  if (RLE_repeating_75 == 0)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  read_next_pixel_227 = 1;

  <bb 53> :
  # RLE_count_73 = PHI <RLE_count_224(50), RLE_count_72(51), RLE_count_72(52)>
  # RLE_repeating_76 = PHI <RLE_repeating_225(50), RLE_repeating_75(51), RLE_repeating_75(52)>
  # read_next_pixel_79 = PHI <read_next_pixel_226(50), read_next_pixel_78(51), read_next_pixel_227(52)>
  goto <bb 55>; [INV]

  <bb 54> :
  read_next_pixel_228 = 1;

  <bb 55> :
  # RLE_count_74 = PHI <RLE_count_73(53), RLE_count_72(54)>
  # RLE_repeating_77 = PHI <RLE_repeating_76(53), RLE_repeating_75(54)>
  # read_next_pixel_80 = PHI <read_next_pixel_79(53), read_next_pixel_228(54)>
  if (read_next_pixel_80 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 56> :
  if (tga_indexed_123 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 57> :
  if (tga_bits_per_pixel_151 == 8)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  _230 = stbi__get8 (s_117(D));
  _25 = _230;
  iftmp.474_231 = (int) _25;
  goto <bb 60>; [INV]

  <bb 59> :
  _233 = stbi__get16le (s_117(D));
  iftmp.474_234 = _233;

  <bb 60> :
  # iftmp.474_89 = PHI <iftmp.474_231(58), iftmp.474_234(59)>
  pal_idx_235 = iftmp.474_89;
  if (pal_idx_235 >= tga_palette_len_133)
    goto <bb 61>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 61> :
  pal_idx_236 = 0;

  <bb 62> :
  # pal_idx_83 = PHI <pal_idx_235(60), pal_idx_236(61)>
  pal_idx_237 = pal_idx_83 * tga_comp_60;
  j_238 = 0;

  <bb 63> :
  # j_68 = PHI <j_238(62), j_240(64)>
  if (j_68 >= tga_comp_60)
    goto <bb 65>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 64> :
  _26 = pal_idx_237 + j_68;
  _27 = (sizetype) _26;
  _28 = tga_palette_62 + _27;
  _29 = *_28;
  raw_data[j_68] = _29;
  j_240 = j_68 + 1;
  goto <bb 63>; [INV]

  <bb 65> :
  goto <bb 75>; [INV]

  <bb 66> :
  tga_rgb16.475_30 = tga_rgb16;
  if (tga_rgb16.475_30 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 67> :
  if (tga_comp_60 == 3)
    goto <bb 69>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 68> :
  _assert ("tga_comp == STBI_rgb", "D:\\WSCodeblocks\\ComputacaoGrafica\\GLFW_TDE2\\include\\stb_image.h", 5827);
  goto <bb 70>; [INV]

  <bb 69> :
  iftmp.476_243 = 1;
  goto <bb 71>; [INV]

  <bb 70> :
  iftmp.476_242 = 0;

  <bb 71> :
  stbi__tga_read_rgb16 (s_117(D), &raw_data);
  goto <bb 75>; [INV]

  <bb 72> :
  j_245 = 0;

  <bb 73> :
  # j_69 = PHI <j_245(72), j_249(74)>
  if (j_69 >= tga_comp_60)
    goto <bb 75>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 74> :
  _247 = stbi__get8 (s_117(D));
  _31 = _247;
  raw_data[j_69] = _31;
  j_249 = j_69 + 1;
  goto <bb 73>; [INV]

  <bb 75> :
  read_next_pixel_250 = 0;

  <bb 76> :
  # read_next_pixel_81 = PHI <read_next_pixel_80(55), read_next_pixel_250(75)>
  j_251 = 0;

  <bb 77> :
  # j_70 = PHI <j_251(76), j_253(78)>
  if (j_70 >= tga_comp_60)
    goto <bb 79>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 78> :
  _32 = i_65 * tga_comp_60;
  _33 = j_70 + _32;
  _34 = (sizetype) _33;
  _35 = tga_data_185 + _34;
  _36 = raw_data[j_70];
  *_35 = _36;
  j_253 = j_70 + 1;
  goto <bb 77>; [INV]

  <bb 79> :
  RLE_count_254 = RLE_count_74 + -1;
  i_255 = i_65 + 1;
  goto <bb 47>; [INV]

  <bb 80> :
  if (tga_inverted_167 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 81> :
  j_256 = 0;

  <bb 82> :
  # j_71 = PHI <j_256(81), j_266(86)>
  _37 = j_71 * 2;
  if (tga_height_148 <= _37)
    goto <bb 87>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _38 = j_71 * tga_width_145;
  index1_257 = tga_comp_60 * _38;
  _39 = tga_height_148 + -1;
  _40 = _39 - j_71;
  _41 = tga_width_145 * _40;
  index2_258 = tga_comp_60 * _41;
  i_259 = tga_width_145 * tga_comp_60;

  <bb 84> :
  # i_66 = PHI <i_259(83), i_265(85)>
  # index1_84 = PHI <index1_257(83), index1_263(85)>
  # index2_85 = PHI <index2_258(83), index2_264(85)>
  if (i_66 <= 0)
    goto <bb 86>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 85> :
  _42 = (sizetype) index1_84;
  _43 = tga_data_185 + _42;
  temp_260 = *_43;
  _44 = (sizetype) index2_85;
  _45 = tga_data_185 + _44;
  _46 = (sizetype) index1_84;
  _47 = tga_data_185 + _46;
  _48 = *_45;
  *_47 = _48;
  _49 = (sizetype) index2_85;
  _50 = tga_data_185 + _49;
  *_50 = temp_260;
  index1_263 = index1_84 + 1;
  index2_264 = index2_85 + 1;
  i_265 = i_66 + -1;
  goto <bb 84>; [INV]

  <bb 86> :
  j_266 = j_71 + 1;
  goto <bb 82>; [INV]

  <bb 87> :

  <bb 88> :
  if (tga_palette_62 != 0B)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  free (tga_palette_62);

  <bb 90> :
  if (tga_comp_60 > 2)
    goto <bb 91>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 91> :
  tga_rgb16.477_51 = tga_rgb16;
  if (tga_rgb16.477_51 == 0)
    goto <bb 92>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 92> :
  tga_pixel_268 = tga_data_185;
  i_269 = 0;

  <bb 93> :
  # i_67 = PHI <i_269(92), i_274(94)>
  # tga_pixel_86 = PHI <tga_pixel_268(92), tga_pixel_273(94)>
  _52 = tga_width_145 * tga_height_148;
  if (i_67 >= _52)
    goto <bb 95>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 94> :
  temp_270 = *tga_pixel_86;
  _53 = MEM[(unsigned char *)tga_pixel_86 + 2B];
  *tga_pixel_86 = _53;
  _54 = tga_pixel_86 + 2;
  *_54 = temp_270;
  _55 = (sizetype) tga_comp_60;
  tga_pixel_273 = tga_pixel_86 + _55;
  i_274 = i_67 + 1;
  goto <bb 93>; [INV]

  <bb 95> :

  <bb 96> :
  if (req_comp_275(D) != 0)
    goto <bb 97>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 97> :
  if (req_comp_275(D) != tga_comp_60)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  tga_height.478_56 = (unsigned int) tga_height_148;
  tga_width.479_57 = (unsigned int) tga_width_145;
  _277 = stbi__convert_format (tga_data_185, tga_comp_60, req_comp_275(D), tga_width.479_57, tga_height.478_56);
  tga_data_278 = _277;

  <bb 99> :
  # tga_data_61 = PHI <tga_data_185(96), tga_data_185(97), tga_data_278(98)>
  tga_y_origin_279 = 0;
  tga_x_origin_280 = tga_y_origin_279;
  tga_palette_bits_281 = tga_x_origin_280;
  tga_palette_len_282 = tga_palette_bits_281;
  tga_palette_start_283 = tga_palette_len_282;
  _284 = tga_data_61;

  <bb 100> :
  # _87 = PHI <_162(3), _164(5), _173(12), _183(16), _187(18), _198(31), _204(33), _219(44), _284(99)>
  tga_rgb16 ={v} {CLOBBER};
  raw_data ={v} {CLOBBER};

  <bb 101> :
<L115>:
  return _87;

}



;; Function stbi__pic_load_core (_ZL19stbi__pic_load_coreP13stbi__contextiiPiPh, funcdef_no=937, decl_uid=12841, cgraph_uid=843, symbol_order=873)

Before removal of unreachable regions:
Eh tree:
   6 must_not_throw
   1 cleanup land:{1,<L74>}
     5 must_not_throw
     4 cleanup land:{3,<L73>}
     3 must_not_throw
     2 cleanup land:{2,<L72>}
Reachable regions: n_bits = 7, set = {1 2 4 }
Reachable landing pads: n_bits = 4, set = {1 2 3 }
Removing unreachable region 3
Removing unreachable region 5
Removing unreachable region 6


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L74>}
     4 cleanup land:{3,<L73>}
     2 cleanup land:{2,<L72>}


Removing basic block 89
Removing basic block 88
Removing basic block 87
Removing unreachable region 1
Removing unreachable region 2
Removing unreachable region 4
Merging blocks 5 and 6
Merging blocks 29 and 30
Merging blocks 36 and 37
Merging blocks 42 and 43
Merging blocks 53 and 54
Merging blocks 59 and 60
Merging blocks 64 and 65
Merging blocks 76 and 77
Merging blocks 5 and 7
Merging blocks 5 and 8
Merging blocks 5 and 9
Merging blocks 5 and 10
Merging blocks 36 and 38
Merging blocks 53 and 55
stbi__pic_load_core (struct stbi__context * s, int width, int height, int * comp, stbi_uc * result)
{
  stbi_uc * D.16938;
  stbi_uc * D.16934;
  int D.16933;
  int D.16932;
  unsigned char D.16931;
  stbi_uc * D.16927;
  int D.16926;
  stbi_uc D.16925;
  stbi_uc * D.16924;
  int D.16923;
  unsigned char D.16922;
  unsigned char D.16921;
  unsigned char D.16920;
  unsigned char D.16919;
  stbi_uc value[4];
  int i;
  int count;
  int left;
  stbi_uc value[4];
  stbi_uc count;
  int i;
  int left;
  int x;
  stbi_uc * dest;
  struct stbi__pic_packet * packet;
  int packet_idx;
  struct stbi__pic_packet * packet;
  struct stbi__pic_packet packets[10];
  int chained;
  int y;
  int num_packets;
  int act_comp;
  bool retval.505;
  bool retval.504;
  bool retval.503;
  bool retval.502;
  bool retval.501;
  bool retval.500;
  int iftmp.499;
  bool retval.498;
  stbi_uc * D.16860;
  int num_packets.497_1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  int _17;
  stbi_uc * _18;
  int _19;
  int _20;
  unsigned char _21;
  int _22;
  stbi_uc * _23;
  int _24;
  unsigned char _25;
  int _26;
  int _27;
  unsigned char _28;
  int _29;
  unsigned char _30;
  int _31;
  stbi_uc * _32;
  unsigned char _33;
  int _34;
  unsigned char _35;
  int _36;
  stbi_uc * _37;
  stbi_uc * _58;
  stbi_uc * _59;
  stbi_uc * _60;
  int iftmp.499_61;
  stbi_uc * _84;
  unsigned char _89;
  unsigned char _92;
  unsigned char _95;
  unsigned char _98;
  int _102;
  bool retval.498_103;
  stbi_uc * _105;
  stbi_uc * _107;
  int iftmp.499_108;
  int iftmp.499_109;
  stbi_uc * _120;
  stbi_uc * _123;
  bool retval.500_124;
  stbi_uc * _125;
  stbi_uc _130;
  int _133;
  bool retval.501_134;
  stbi_uc * _136;
  stbi_uc * _139;
  bool retval.502_140;
  stbi_uc * _141;
  unsigned char _152;
  int _155;
  bool retval.503_156;
  stbi_uc * _158;
  int _160;
  stbi_uc * _164;
  stbi_uc * _166;
  bool retval.504_167;
  stbi_uc * _168;
  stbi_uc * _178;
  stbi_uc * _181;
  bool retval.505_182;
  stbi_uc * _183;
  stbi_uc * _189;

  <bb 2> :
  act_comp_80 = 0;
  num_packets_81 = 0;

  <bb 3> :
  # act_comp_38 = PHI <act_comp_80(2), act_comp_100(10)>
  # num_packets_39 = PHI <num_packets_81(2), num_packets_85(10)>
  if (num_packets_39 == 10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__err ("bad format");
  _84 = 0B;
  goto <bb 71>; [INV]

  <bb 5> :
  num_packets.497_1 = num_packets_39;
  num_packets_85 = num_packets.497_1 + 1;
  packet_86 = &packets[num_packets.497_1];
  _89 = stbi__get8 (s_87(D));
  _2 = _89;
  chained_90 = (int) _2;
  _92 = stbi__get8 (s_87(D));
  _3 = _92;
  packet_86->size = _3;
  _95 = stbi__get8 (s_87(D));
  _4 = _95;
  packet_86->type = _4;
  _98 = stbi__get8 (s_87(D));
  _5 = _98;
  packet_86->channel = _5;
  _6 = packet_86->channel;
  _7 = (int) _6;
  act_comp_100 = act_comp_38 | _7;
  _102 = stbi__at_eof (s_87(D));
  _8 = _102;
  retval.498_103 = _8 != 0;
  if (retval.498_103 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  stbi__err ("bad file");
  _105 = 0B;
  goto <bb 71>; [INV]

  <bb 7> :
  _9 = packet_86->size;
  if (_9 != 8)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  stbi__err ("bad format");
  _107 = 0B;
  goto <bb 71>; [INV]

  <bb 9> :
  if (chained_90 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  goto <bb 3>; [INV]

  <bb 11> :
  _10 = act_comp_100 & 16;
  if (_10 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  iftmp.499_108 = 4;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.499_109 = 3;

  <bb 14> :
  # iftmp.499_61 = PHI <iftmp.499_108(12), iftmp.499_109(13)>
  *comp_110(D) = iftmp.499_61;
  y_112 = 0;

  <bb 15> :
  # y_40 = PHI <y_112(14), y_188(69)>
  if (y_40 >= height_113(D))
    goto <bb 70>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  packet_idx_114 = 0;

  <bb 17> :
  # packet_idx_41 = PHI <packet_idx_114(16), packet_idx_187(68)>
  if (packet_idx_41 >= num_packets_85)
    goto <bb 69>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  packet_115 = &packets[packet_idx_41];
  _11 = y_40 * width_116(D);
  _12 = _11 * 4;
  _13 = (sizetype) _12;
  dest_118 = result_117(D) + _13;
  _14 = packet_115->type;
  _15 = (int) _14;
  if (_15 == 1)
    goto <bb 28>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (_15 == 2)
    goto <bb 42>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  if (_15 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
<L16>:
  stbi__err ("bad format");
  _120 = 0B;
  goto <bb 71>; [INV]

  <bb 22> :
<L17>:
  x_121 = 0;

  <bb 23> :
  # dest_42 = PHI <dest_118(22), dest_127(26)>
  # x_49 = PHI <x_121(22), x_126(26)>
  if (x_49 >= width_116(D))
    goto <bb 27>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _16 = packet_115->channel;
  _17 = (int) _16;
  _123 = stbi__readval (s_87(D), _17, dest_42);
  _18 = _123;
  retval.500_124 = _18 == 0B;
  if (retval.500_124 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _125 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 71>; [INV]

  <bb 26> :
  x_126 = x_49 + 1;
  dest_127 = dest_42 + 4;
  goto <bb 23>; [INV]

  <bb 27> :
  goto <bb 68>; [INV]

  <bb 28> :
<L23>:
  left_128 = width_116(D);

  <bb 29> :
  # dest_43 = PHI <dest_118(28), dest_44(39)>
  # left_50 = PHI <left_128(28), left_146(39)>
  if (left_50 <= 0)
    goto <bb 41>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _130 = stbi__get8 (s_87(D));
  count_131 = _130;
  _133 = stbi__at_eof (s_87(D));
  _19 = _133;
  retval.501_134 = _19 != 0;
  if (retval.501_134 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  stbi__err ("bad file");
  _136 = 0B;
  goto <bb 40>; [INV]

  <bb 32> :
  _20 = (int) count_131;
  if (left_50 < _20)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  count_137 = (stbi_uc) left_50;

  <bb 34> :
  # count_52 = PHI <count_131(32), count_137(33)>
  _21 = packet_115->channel;
  _22 = (int) _21;
  _139 = stbi__readval (s_87(D), _22, &value);
  _23 = _139;
  retval.502_140 = _23 == 0B;
  if (retval.502_140 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _141 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 40>; [INV]

  <bb 36> :
  i_142 = 0;

  <bb 37> :
  # dest_44 = PHI <dest_43(36), dest_145(38)>
  # i_51 = PHI <i_142(36), i_144(38)>
  _24 = (int) count_52;
  if (i_51 >= _24)
    goto <bb 39>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  _25 = packet_115->channel;
  _26 = (int) _25;
  stbi__copyval (_26, dest_44, &value);
  i_144 = i_51 + 1;
  dest_145 = dest_44 + 4;
  goto <bb 37>; [INV]

  <bb 39> :
  _27 = (int) count_52;
  left_146 = left_50 - _27;
  value ={v} {CLOBBER};
  goto <bb 29>; [INV]

  <bb 40> :
  # _58 = PHI <_136(31), _141(35)>
  value ={v} {CLOBBER};
  goto <bb 71>; [INV]

  <bb 41> :
  goto <bb 68>; [INV]

  <bb 42> :
<L39>:
  left_150 = width_116(D);

  <bb 43> :
  # dest_45 = PHI <dest_118(42), dest_48(66)>
  # left_53 = PHI <left_150(42), left_186(66)>
  if (left_53 <= 0)
    goto <bb 67>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 44> :
  _152 = stbi__get8 (s_87(D));
  _28 = _152;
  count_153 = (int) _28;
  _155 = stbi__at_eof (s_87(D));
  _29 = _155;
  retval.503_156 = _29 != 0;
  if (retval.503_156 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  stbi__err ("bad file");
  _158 = 0B;
  goto <bb 71>; [INV]

  <bb 46> :
  if (count_153 > 127)
    goto <bb 47>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 47> :
  if (count_153 == 128)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  _160 = stbi__get16be (s_87(D));
  count_161 = _160;
  goto <bb 50>; [INV]

  <bb 49> :
  count_162 = count_153 + -127;

  <bb 50> :
  # count_54 = PHI <count_161(48), count_162(49)>
  if (count_54 > left_53)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  stbi__err ("bad file");
  _164 = 0B;
  goto <bb 58>; [INV]

  <bb 52> :
  _30 = packet_115->channel;
  _31 = (int) _30;
  _166 = stbi__readval (s_87(D), _31, &value);
  _32 = _166;
  retval.504_167 = _32 == 0B;
  if (retval.504_167 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  _168 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 58>; [INV]

  <bb 54> :
  i_169 = 0;

  <bb 55> :
  # dest_46 = PHI <dest_45(54), dest_172(56)>
  # i_56 = PHI <i_169(54), i_171(56)>
  if (i_56 >= count_54)
    goto <bb 57>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 56> :
  _33 = packet_115->channel;
  _34 = (int) _33;
  stbi__copyval (_34, dest_46, &value);
  i_171 = i_56 + 1;
  dest_172 = dest_46 + 4;
  goto <bb 55>; [INV]

  <bb 57> :
  value ={v} {CLOBBER};
  goto <bb 66>; [INV]

  <bb 58> :
  # _59 = PHI <_164(51), _168(53)>
  value ={v} {CLOBBER};
  goto <bb 71>; [INV]

  <bb 59> :
  count_176 = count_153 + 1;
  if (count_176 > left_53)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  stbi__err ("bad file");
  _178 = 0B;
  goto <bb 71>; [INV]

  <bb 61> :
  i_179 = 0;

  <bb 62> :
  # dest_47 = PHI <dest_45(61), dest_185(65)>
  # i_57 = PHI <i_179(61), i_184(65)>
  if (i_57 >= count_176)
    goto <bb 66>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 63> :
  _35 = packet_115->channel;
  _36 = (int) _35;
  _181 = stbi__readval (s_87(D), _36, dest_47);
  _37 = _181;
  retval.505_182 = _37 == 0B;
  if (retval.505_182 != 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  _183 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 71>; [INV]

  <bb 65> :
  i_184 = i_57 + 1;
  dest_185 = dest_47 + 4;
  goto <bb 62>; [INV]

  <bb 66> :
  # dest_48 = PHI <dest_46(57), dest_47(62)>
  # count_55 = PHI <count_54(57), count_176(62)>
  left_186 = left_53 - count_55;
  goto <bb 43>; [INV]

  <bb 67> :

  <bb 68> :
  packet_idx_187 = packet_idx_41 + 1;
  goto <bb 17>; [INV]

  <bb 69> :
  y_188 = y_40 + 1;
  goto <bb 15>; [INV]

  <bb 70> :
  _189 = result_117(D);

  <bb 71> :
  # _60 = PHI <_84(4), _105(6), _107(8), _120(21), _125(25), _58(40), _158(45), _59(58), _178(60), _183(64), _189(70)>
  packets ={v} {CLOBBER};

  <bb 72> :
<L71>:
  return _60;

}



;; Function stbi__pic_load (_ZL14stbi__pic_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=938, decl_uid=10210, cgraph_uid=844, symbol_order=874)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L22>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L22>}


Removing basic block 31
Removing unreachable region 1
Merging blocks 6 and 7
Merging blocks 8 and 9
Merging blocks 14 and 15
Merging blocks 19 and 20
Merging blocks 27 and 28
Merging blocks 8 and 10
Merging blocks 19 and 21
Merging blocks 19 and 22
Merging blocks 19 and 23
stbi__pic_load (struct stbi__context * s, int * px, int * py, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.16969;
  stbi_uc * D.16968;
  int D.16967;
  int D.16966;
  int D.16965;
  int internal_comp;
  int y;
  int x;
  int i;
  stbi_uc * result;
  bool retval.508;
  bool retval.507;
  bool retval.506;
  void * D.16948;
  int _1;
  int _2;
  int _3;
  int _4;
  long long unsigned int _5;
  stbi_uc * _6;
  unsigned int y.509_7;
  unsigned int x.510_8;
  void * _13;
  int _26;
  int _29;
  void * _32;
  void * _34;
  int _36;
  bool retval.506_37;
  void * _39;
  bool retval.507_41;
  void * _43;
  stbi_uc * _51;
  bool retval.508_52;
  stbi_uc * _62;
  void * _64;

  <bb 2> :
  if (comp_18(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  comp_19 = &internal_comp;

  <bb 4> :
  # comp_9 = PHI <comp_18(D)(2), comp_19(3)>
  i_20 = 0;

  <bb 5> :
  # i_12 = PHI <i_20(4), i_24(6)>
  if (i_12 > 91)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  stbi__get8 (s_22(D));
  i_24 = i_12 + 1;
  goto <bb 5>; [INV]

  <bb 7> :
  _26 = stbi__get16be (s_22(D));
  x_27 = _26;
  _29 = stbi__get16be (s_22(D));
  y_30 = _29;
  if (y_30 > 16777216)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  stbi__err ("too large");
  _32 = 0B;
  goto <bb 20>; [INV]

  <bb 9> :
  if (x_27 > 16777216)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  stbi__err ("too large");
  _34 = 0B;
  goto <bb 20>; [INV]

  <bb 11> :
  _36 = stbi__at_eof (s_22(D));
  _1 = _36;
  retval.506_37 = _1 != 0;
  if (retval.506_37 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  stbi__err ("bad file");
  _39 = 0B;
  goto <bb 20>; [INV]

  <bb 13> :
  _2 = stbi__mad3sizes_valid (x_27, y_30, 4, 0);
  retval.507_41 = _2 == 0;
  if (retval.507_41 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  stbi__err ("too large");
  _43 = 0B;
  goto <bb 20>; [INV]

  <bb 15> :
  stbi__get32be (s_22(D));
  stbi__get16be (s_22(D));
  stbi__get16be (s_22(D));
  result_48 = stbi__malloc_mad3 (x_27, y_30, 4, 0);
  _3 = x_27 * y_30;
  _4 = _3 * 4;
  _5 = (long long unsigned int) _4;
  memset (result_48, 255, _5);
  _51 = stbi__pic_load_core (s_22(D), x_27, y_30, comp_9, result_48);
  _6 = _51;
  retval.508_52 = _6 == 0B;
  if (retval.508_52 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  free (result_48);
  result_54 = 0B;

  <bb 17> :
  # result_11 = PHI <result_48(15), result_54(16)>
  *px_55(D) = x_27;
  *py_57(D) = y_30;
  if (req_comp_59(D) == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  req_comp_60 = *comp_9;

  <bb 19> :
  # req_comp_10 = PHI <req_comp_59(D)(17), req_comp_60(18)>
  y.509_7 = (unsigned int) y_30;
  x.510_8 = (unsigned int) x_27;
  _62 = stbi__convert_format (result_11, 4, req_comp_10, x.510_8, y.509_7);
  result_63 = _62;
  _64 = result_63;

  <bb 20> :
  # _13 = PHI <_32(8), _34(10), _39(12), _43(14), _64(19)>
  internal_comp ={v} {CLOBBER};

  <bb 21> :
<L21>:
  return _13;

}



;; Function stbi__load_gif_main (_ZL19stbi__load_gif_mainP13stbi__contextPPiS1_S1_S1_S1_i, funcdef_no=948, decl_uid=10232, cgraph_uid=854, symbol_order=884)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L38>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L38>}


Removing basic block 33
Removing unreachable region 1
Merging blocks 6 and 7
Merging blocks 27 and 28
stbi__load_gif_main (struct stbi__context * s, int * * delays, int * x, int * y, int * z, int * comp, int req_comp)
{
  stbi_uc * D.17272;
  stbi_uc * D.17271;
  int D.17270;
  void * tmp;
  int delays_size;
  int out_size;
  int stride;
  struct stbi__gif g;
  stbi_uc * two_back;
  stbi_uc * out;
  stbi_uc * u;
  int layers;
  void * D.17248;
  bool retval.526;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  long long unsigned int _8;
  stbi_uc * _9;
  stbi_uc * _10;
  stbi_uc * _11;
  long long unsigned int _12;
  long long unsigned int _13;
  int * _14;
  void * _15;
  long long unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long long unsigned int _22;
  void * _23;
  long long unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  long long unsigned int _27;
  int _28;
  int _29;
  sizetype _30;
  stbi_uc * _31;
  int _32;
  sizetype _33;
  sizetype _34;
  int * _35;
  unsigned int layers.527_36;
  unsigned int _37;
  long long unsigned int _38;
  long long unsigned int _39;
  int * _40;
  int _41;
  stbi_uc * _42;
  stbi_uc * _43;
  stbi_uc * _44;
  int _45;
  unsigned int _46;
  int _47;
  int _48;
  unsigned int _49;
  void * _60;
  void * _61;
  int _74;
  bool retval.526_75;
  stbi_uc * _88;
  void * _103;
  stbi_uc * _122;
  void * _126;
  void * _130;

  <bb 2> :
  _74 = stbi__gif_test (s_72(D));
  _1 = _74;
  retval.526_75 = _1 != 0;
  if (retval.526_75 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 3> :
  layers_76 = 0;
  u_77 = 0B;
  out_78 = 0B;
  two_back_79 = 0B;
  out_size_80 = 0;
  delays_size_81 = 0;
  memset (&g, 0, 34928);
  if (delays_83(D) != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  *delays_83(D) = 0B;

  <bb 5> :
  # layers_128 = PHI <layers_76(3), layers_76(4)>
  # out_131 = PHI <out_78(3), out_78(4)>
  # two_back_132 = PHI <two_back_79(3), two_back_79(4)>

  <bb 6> :
  # layers_50 = PHI <layers_128(5), layers_51(23)>
  # out_53 = PHI <out_131(5), out_55(23)>
  # two_back_57 = PHI <two_back_132(5), two_back_59(23)>
  _88 = stbi__gif_load_next (s_72(D), &g, comp_85(D), req_comp_86(D), two_back_57);
  u_89 = _88;
  if (u_89 == s_72(D))
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  u_90 = 0B;

  <bb 8> :
  # u_52 = PHI <u_89(6), u_90(7)>
  if (u_52 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 9> :
  _2 = g.w;
  *x_91(D) = _2;
  _3 = g.h;
  *y_93(D) = _3;
  layers_95 = layers_50 + 1;
  _4 = g.w;
  _5 = g.h;
  _6 = _4 * _5;
  stride_96 = _6 * 4;
  if (out_53 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 10> :
  _7 = layers_95 * stride_96;
  _8 = (long long unsigned int) _7;
  tmp_98 = realloc (out_53, _8);
  if (tmp_98 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _9 = g.out;
  free (_9);
  _10 = g.history;
  free (_10);
  _11 = g.background;
  free (_11);
  stbi__err ("outofmem");
  _103 = 0B;
  goto <bb 28>; [INV]

  <bb 12> :
  out_104 = tmp_98;
  out_size_105 = layers_95 * stride_96;
  if (delays_83(D) != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _12 = (long long unsigned int) layers_95;
  _13 = _12 * 4;
  _14 = *delays_83(D);
  _15 = realloc (_14, _13);
  *delays_83(D) = _15;
  _16 = (long long unsigned int) layers_95;
  _17 = (unsigned int) _16;
  _18 = _17 * 4;
  delays_size_108 = (int) _18;

  <bb 14> :
  goto <bb 17>; [INV]

  <bb 15> :
  _19 = layers_95 * stride_96;
  _20 = (long long unsigned int) _19;
  out_110 = stbi__malloc (_20);
  out_size_111 = layers_95 * stride_96;
  if (delays_83(D) != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _21 = (long long unsigned int) layers_95;
  _22 = _21 * 4;
  _23 = stbi__malloc (_22);
  *delays_83(D) = _23;
  _24 = (long long unsigned int) layers_95;
  _25 = (unsigned int) _24;
  _26 = _25 * 4;
  delays_size_114 = (int) _26;

  <bb 17> :
  # out_54 = PHI <out_104(14), out_110(15), out_110(16)>
  _27 = (long long unsigned int) stride_96;
  _28 = layers_95 + -1;
  _29 = stride_96 * _28;
  _30 = (sizetype) _29;
  _31 = out_54 + _30;
  memcpy (_31, u_52, _27);
  if (layers_95 > 1)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _32 = stride_96 * 2;
  _33 = (sizetype) _32;
  _34 = -_33;
  two_back_116 = out_54 + _34;

  <bb 19> :
  # two_back_58 = PHI <two_back_57(17), two_back_116(18)>
  if (delays_83(D) != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _35 = *delays_83(D);
  layers.527_36 = (unsigned int) layers_95;
  _37 = layers.527_36 + 4294967295;
  _38 = (long long unsigned int) _37;
  _39 = _38 * 4;
  _40 = _35 + _39;
  _41 = g.delay;
  *_40 = _41;

  <bb 21> :

  <bb 22> :
  # layers_51 = PHI <layers_50(8), layers_95(21)>
  # out_55 = PHI <out_53(8), out_54(21)>
  # two_back_59 = PHI <two_back_57(8), two_back_58(21)>
  if (u_52 == 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  goto <bb 6>; [INV]

  <bb 24> :
  _42 = g.out;
  free (_42);
  _43 = g.history;
  free (_43);
  _44 = g.background;
  free (_44);
  if (req_comp_86(D) != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  if (req_comp_86(D) != 4)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _45 = g.h;
  _46 = (unsigned int) _45;
  _47 = g.w;
  _48 = layers_51 * _47;
  _49 = (unsigned int) _48;
  _122 = stbi__convert_format (out_55, 4, req_comp_86(D), _49, _46);
  out_123 = _122;

  <bb 27> :
  # out_56 = PHI <out_55(24), out_55(25), out_123(26)>
  *z_124(D) = layers_51;
  _126 = out_56;
  // predicted unlikely by early return (on trees) predictor.

  <bb 28> :
  # _60 = PHI <_103(11), _126(27)>
  g ={v} {CLOBBER};
  goto <bb 30>; [INV]

  <bb 29> :
  stbi__err ("not GIF");
  _130 = 0B;

  <bb 30> :
  # _61 = PHI <_60(28), _130(29)>
<L37>:
  return _61;

}



;; Function stbi__gif_load (_ZL14stbi__gif_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=949, decl_uid=10224, cgraph_uid=855, symbol_order=885)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L16>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L16>}


Removing basic block 14
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 8 and 9
stbi__gif_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  stbi_uc * D.17292;
  stbi_uc * D.17291;
  struct stbi__gif g;
  stbi_uc * u;
  void * D.17289;
  int _1;
  int _2;
  int _3;
  unsigned int _4;
  int _5;
  unsigned int _6;
  stbi_uc * _7;
  stbi_uc * _8;
  stbi_uc * _9;
  stbi_uc * _10;
  stbi_uc * _22;
  stbi_uc * _30;
  void * _35;

  <bb 2> :
  u_15 = 0B;
  memset (&g, 0, 34928);
  _22 = stbi__gif_load_next (s_18(D), &g, comp_19(D), req_comp_20(D), 0B);
  u_23 = _22;
  if (u_23 == s_18(D))
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u_24 = 0B;

  <bb 4> :
  # u_11 = PHI <u_23(2), u_24(3)>
  if (u_11 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _1 = g.w;
  *x_25(D) = _1;
  _2 = g.h;
  *y_27(D) = _2;
  if (req_comp_20(D) != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  if (req_comp_20(D) != 4)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  _3 = g.h;
  _4 = (unsigned int) _3;
  _5 = g.w;
  _6 = (unsigned int) _5;
  _30 = stbi__convert_format (u_11, 4, req_comp_20(D), _6, _4);
  u_31 = _30;
  goto <bb 10>; [INV]

  <bb 8> :
  _7 = g.out;
  if (_7 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _8 = g.out;
  free (_8);

  <bb 10> :
  # u_12 = PHI <u_11(6), u_11(8), u_11(9), u_11(5), u_31(7)>
  _9 = g.history;
  free (_9);
  _10 = g.background;
  free (_10);
  _35 = u_12;
  g ={v} {CLOBBER};

  <bb 11> :
<L15>:
  return _35;

}



;; Function stbi__hdr_load (_ZL14stbi__hdr_loadP13stbi__contextPiS1_S1_iP17stbi__result_info, funcdef_no=955, decl_uid=10196, cgraph_uid=861, symbol_order=891)

Before removal of unreachable regions:
Eh tree:
   6 must_not_throw
   1 cleanup land:{1,<L89>}
     5 must_not_throw
     4 cleanup land:{3,<L88>}
     3 must_not_throw
     2 cleanup land:{2,<L87>}
Reachable regions: n_bits = 7, set = {1 2 4 }
Reachable landing pads: n_bits = 4, set = {1 2 3 }
Removing unreachable region 3
Removing unreachable region 5
Removing unreachable region 6


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L89>}
     4 cleanup land:{3,<L88>}
     2 cleanup land:{2,<L87>}


Removing basic block 92
Removing basic block 91
Removing basic block 90
Removing unreachable region 1
Removing unreachable region 2
Removing unreachable region 4
Merging blocks 2 and 3
Merging blocks 7 and 8
Merging blocks 15 and 16
Merging blocks 41 and 42
Merging blocks 47 and 48
Merging blocks 53 and 54
Merging blocks 55 and 56
Merging blocks 65 and 66
Merging blocks 67 and 68
Merging blocks 77 and 78
Merging blocks 47 and 49
Merging blocks 47 and 50
stbi__hdr_load (struct stbi__context * s, int * x, int * y, int * comp, int req_comp, struct stbi__result_info * ri)
{
  unsigned char D.17443;
  unsigned char D.17442;
  unsigned char D.17441;
  stbi_uc D.17440;
  unsigned char D.17437;
  unsigned char D.17436;
  unsigned char D.17435;
  unsigned char D.17434;
  char * D.17432;
  char * D.17431;
  const char * D.17430;
  int nleft;
  stbi_uc rgbe[4];
  stbi_uc rgbe[4];
  const char * headerToken;
  int z;
  int c2;
  int c1;
  int k;
  int j;
  int i;
  unsigned char value;
  unsigned char count;
  int len;
  float * hdr_data;
  stbi_uc * scanline;
  int height;
  int width;
  int valid;
  char * token;
  char buffer[1024];
  bool retval.545;
  stbi_uc D.13245;
  bool retval.544;
  float * D.17357;
  int _1;
  int _2;
  char * _3;
  char * token.534_4;
  char _5;
  char * token.535_6;
  int _7;
  char * _8;
  char * token.536_9;
  int _10;
  char * token.537_11;
  char * _12;
  char * token.538_13;
  char * token.539_14;
  char _15;
  char * token.540_16;
  char * _17;
  char * token.541_18;
  int _19;
  char * token.542_20;
  char * _21;
  char * token.543_22;
  int _23;
  int _24;
  int _25;
  sizetype _26;
  int _27;
  sizetype _28;
  sizetype _29;
  sizetype _30;
  float * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  int _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  int _40;
  int _41;
  int _42;
  int i.546_43;
  int _44;
  int _45;
  sizetype _46;
  stbi_uc * _47;
  int _48;
  int _49;
  int i.547_50;
  int _51;
  int _52;
  sizetype _53;
  stbi_uc * _54;
  unsigned char _55;
  int _56;
  sizetype _57;
  stbi_uc * _58;
  int _59;
  int _60;
  int _61;
  long long unsigned int _62;
  long long unsigned int _63;
  float * _64;
  float * _84;
  const char * _106;
  float * _109;
  char * _111;
  float * _114;
  char * _116;
  float * _119;
  float * _125;
  float * _130;
  float * _132;
  bool retval.544_142;
  float * _144;
  float * _148;
  unsigned char _152;
  unsigned char _155;
  unsigned char _158;
  stbi_uc _162;
  stbi_uc _163;
  float * _168;
  float * _173;
  bool retval.545_177;
  unsigned char _179;
  unsigned char _182;
  float * _188;
  float * _196;
  unsigned char _200;
  unsigned char _212;
  float * _229;

  <bb 2> :
  valid_102 = 0;
  _106 = stbi__hdr_gettoken (s_104(D), &buffer);
  headerToken_107 = _106;
  _1 = strcmp (headerToken_107, "#?RADIANCE");
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = strcmp (headerToken_107, "#?RGBE");
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  stbi__err ("not HDR");
  _109 = 0B;
  goto <bb 76>; [INV]

  <bb 5> :
  # valid_235 = PHI <valid_102(2), valid_102(3)>

  <bb 6> :
  # valid_66 = PHI <valid_235(5), valid_67(10)>
  _111 = stbi__hdr_gettoken (s_104(D), &buffer);
  _3 = _111;
  token = _3;
  token.534_4 = token;
  _5 = *token.534_4;
  if (_5 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  goto <bb 11>; [INV]

  <bb 8> :
  token.535_6 = token;
  _7 = strcmp (token.535_6, "FORMAT=32-bit_rle_rgbe");
  if (_7 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  valid_230 = 1;

  <bb 10> :
  # valid_67 = PHI <valid_66(8), valid_230(9)>
  goto <bb 6>; [INV]

  <bb 11> :
  if (valid_66 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  stbi__err ("unsupported format");
  _114 = 0B;
  goto <bb 76>; [INV]

  <bb 13> :
  _116 = stbi__hdr_gettoken (s_104(D), &buffer);
  _8 = _116;
  token = _8;
  token.536_9 = token;
  _10 = strncmp (token.536_9, "-Y ", 3);
  if (_10 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  stbi__err ("unsupported data layout");
  _119 = 0B;
  goto <bb 76>; [INV]

  <bb 15> :
  token.537_11 = token;
  _12 = token.537_11 + 3;
  token = _12;
  token.538_13 = token;
  height_122 = strtol (token.538_13, &token, 10);

  <bb 16> :
  token.539_14 = token;
  _15 = *token.539_14;
  if (_15 != 32)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  token.540_16 = token;
  _17 = token.540_16 + 1;
  token = _17;
  goto <bb 16>; [INV]

  <bb 18> :
  token.541_18 = token;
  _19 = strncmp (token.541_18, "+X ", 3);
  if (_19 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__err ("unsupported data layout");
  _125 = 0B;
  goto <bb 76>; [INV]

  <bb 20> :
  token.542_20 = token;
  _21 = token.542_20 + 3;
  token = _21;
  token.543_22 = token;
  width_128 = strtol (token.543_22, 0B, 10);
  if (height_122 > 16777216)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  stbi__err ("too large");
  _130 = 0B;
  goto <bb 76>; [INV]

  <bb 22> :
  if (width_128 > 16777216)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  stbi__err ("too large");
  _132 = 0B;
  goto <bb 76>; [INV]

  <bb 24> :
  *x_133(D) = width_128;
  *y_135(D) = height_122;
  if (comp_137(D) != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  *comp_137(D) = 3;

  <bb 26> :
  if (req_comp_139(D) == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  req_comp_140 = 3;

  <bb 28> :
  # req_comp_65 = PHI <req_comp_139(D)(26), req_comp_140(27)>
  _23 = stbi__mad4sizes_valid (width_128, height_122, req_comp_65, 4, 0);
  retval.544_142 = _23 == 0;
  if (retval.544_142 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  stbi__err ("too large");
  _144 = 0B;
  goto <bb 76>; [INV]

  <bb 30> :
  hdr_data_146 = stbi__malloc_mad4 (width_128, height_122, req_comp_65, 4, 0);
  if (hdr_data_146 == 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  stbi__err ("outofmem");
  _148 = 0B;
  goto <bb 76>; [INV]

  <bb 32> :
  if (width_128 <= 7)
    goto <bb 34>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  if (width_128 > 32767)
    goto <bb 34>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 34> :
  j_221 = 0;

  <bb 35> :
  # j_77 = PHI <j_221(34), j_223(39)>
  if (j_77 >= height_122)
    goto <bb 40>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  i_222 = 0;

  <bb 37> :
  # i_70 = PHI <i_222(36), i_227(38)>
  # j_78 = PHI <j_77(36), j_79(38)>
  if (i_70 >= width_128)
    goto <bb 39>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  # i_71 = PHI <i_70(37), i_215(46)>
  # j_79 = PHI <j_78(37), j_216(46)>
main_decode_loop:
  stbi__getn (s_104(D), &rgbe, 4);
  _24 = j_79 * width_128;
  _25 = req_comp_65 * _24;
  _26 = (sizetype) _25;
  _27 = i_71 * req_comp_65;
  _28 = (sizetype) _27;
  _29 = _26 + _28;
  _30 = _29 * 4;
  _31 = hdr_data_146 + _30;
  stbi__hdr_convert (_31, &rgbe, req_comp_65);
  rgbe ={v} {CLOBBER};
  i_227 = i_71 + 1;
  goto <bb 37>; [INV]

  <bb 39> :
  j_223 = j_78 + 1;
  goto <bb 35>; [INV]

  <bb 40> :
  goto <bb 75>; [INV]

  <bb 41> :
  scanline_149 = 0B;
  j_150 = 0;

  <bb 42> :
  # scanline_68 = PHI <scanline_149(41), scanline_69(72)>
  # j_80 = PHI <j_150(41), j_207(72)>
  if (j_80 >= height_122)
    goto <bb 73>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 43> :
  _152 = stbi__get8 (s_104(D));
  _32 = _152;
  c1_153 = (int) _32;
  _155 = stbi__get8 (s_104(D));
  _33 = _155;
  c2_156 = (int) _33;
  _158 = stbi__get8 (s_104(D));
  _34 = _158;
  len_159 = (int) _34;
  if (c1_153 != 2)
    goto <bb 46>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 44> :
  if (c2_156 != 2)
    goto <bb 46>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  _35 = len_159 & 128;
  if (_35 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  _36 = (unsigned char) c1_153;
  rgbe[0] = _36;
  _37 = (unsigned char) c2_156;
  rgbe[1] = _37;
  _38 = (unsigned char) len_159;
  rgbe[2] = _38;
  _212 = stbi__get8 (s_104(D));
  _39 = _212;
  rgbe[3] = _39;
  stbi__hdr_convert (hdr_data_146, &rgbe, req_comp_65);
  i_215 = 1;
  j_216 = 0;
  free (scanline_68);
  // predicted unlikely by goto predictor.
  rgbe ={v} {CLOBBER};
  goto <bb 38>; [INV]

  <bb 47> :
  len_160 = len_159 << 8;
  _162 = stbi__get8 (s_104(D));
  _163 = _162;
  _40 = (int) _163;
  len_164 = len_160 | _40;
  if (len_164 != width_128)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  free (hdr_data_146);
  free (scanline_68);
  stbi__err ("invalid decoded scanline length");
  _168 = 0B;
  goto <bb 76>; [INV]

  <bb 49> :
  if (scanline_68 == 0B)
    goto <bb 50>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 50> :
  scanline_170 = stbi__malloc_mad2 (width_128, 4, 0);
  if (scanline_170 == 0B)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  free (hdr_data_146);
  stbi__err ("outofmem");
  _173 = 0B;
  goto <bb 76>; [INV]

  <bb 52> :
  # scanline_69 = PHI <scanline_68(49), scanline_170(50)>
  k_174 = 0;

  <bb 53> :
  # k_81 = PHI <k_174(52), k_203(68)>
  if (k_81 > 3)
    goto <bb 69>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 54> :
  i_175 = 0;

  <bb 55> :
  # i_72 = PHI <i_175(54), i_75(67)>
  nleft_176 = width_128 - i_72;
  retval.545_177 = nleft_176 > 0;
  if (retval.545_177 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 56> :
  _179 = stbi__get8 (s_104(D));
  count_180 = _179;
  if (count_180 > 128)
    goto <bb 57>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 57> :
  _182 = stbi__get8 (s_104(D));
  value_183 = _182;
  count_184 = count_180 + 128;
  _41 = (int) count_184;
  if (nleft_176 < _41)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  free (hdr_data_146);
  free (scanline_69);
  stbi__err ("corrupt");
  _188 = 0B;
  goto <bb 76>; [INV]

  <bb 59> :
  z_189 = 0;

  <bb 60> :
  # i_73 = PHI <i_72(59), i_190(61)>
  # z_82 = PHI <z_189(59), z_192(61)>
  _42 = (int) count_184;
  if (z_82 >= _42)
    goto <bb 67>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 61> :
  i.546_43 = i_73;
  i_190 = i.546_43 + 1;
  _44 = i.546_43 * 4;
  _45 = k_81 + _44;
  _46 = (sizetype) _45;
  _47 = scanline_69 + _46;
  *_47 = value_183;
  z_192 = z_82 + 1;
  goto <bb 60>; [INV]

  <bb 62> :
  _48 = (int) count_180;
  if (nleft_176 < _48)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  free (hdr_data_146);
  free (scanline_69);
  stbi__err ("corrupt");
  _196 = 0B;
  goto <bb 76>; [INV]

  <bb 64> :
  z_197 = 0;

  <bb 65> :
  # i_74 = PHI <i_72(64), i_198(66)>
  # z_83 = PHI <z_197(64), z_202(66)>
  _49 = (int) count_180;
  if (z_83 >= _49)
    goto <bb 67>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 66> :
  i.547_50 = i_74;
  i_198 = i.547_50 + 1;
  _51 = i.547_50 * 4;
  _52 = k_81 + _51;
  _53 = (sizetype) _52;
  _54 = scanline_69 + _53;
  _200 = stbi__get8 (s_104(D));
  _55 = _200;
  *_54 = _55;
  z_202 = z_83 + 1;
  goto <bb 65>; [INV]

  <bb 67> :
  # i_75 = PHI <i_73(60), i_74(65)>
  goto <bb 55>; [INV]

  <bb 68> :
  k_203 = k_81 + 1;
  goto <bb 53>; [INV]

  <bb 69> :
  i_204 = 0;

  <bb 70> :
  # i_76 = PHI <i_204(69), i_206(71)>
  if (i_76 >= width_128)
    goto <bb 72>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 71> :
  _56 = i_76 * 4;
  _57 = (sizetype) _56;
  _58 = scanline_69 + _57;
  _59 = j_80 * width_128;
  _60 = i_76 + _59;
  _61 = req_comp_65 * _60;
  _62 = (long long unsigned int) _61;
  _63 = _62 * 4;
  _64 = hdr_data_146 + _63;
  stbi__hdr_convert (_64, _58, req_comp_65);
  i_206 = i_76 + 1;
  goto <bb 70>; [INV]

  <bb 72> :
  j_207 = j_80 + 1;
  goto <bb 42>; [INV]

  <bb 73> :
  if (scanline_68 != 0B)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  free (scanline_68);

  <bb 75> :
  _229 = hdr_data_146;

  <bb 76> :
  # _84 = PHI <_109(4), _114(12), _119(14), _125(19), _130(21), _132(23), _144(29), _148(31), _168(48), _173(51), _188(58), _196(63), _229(75)>
  buffer ={v} {CLOBBER};
  token ={v} {CLOBBER};

  <bb 77> :
<L86>:
  return _84;

}



;; Function stbi__hdr_info (_ZL14stbi__hdr_infoP13stbi__contextPiS1_S1_, funcdef_no=956, decl_uid=10201, cgraph_uid=862, symbol_order=892)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L29>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L29>}


Removing basic block 30
Removing unreachable region 1
Merging blocks 8 and 9
Merging blocks 11 and 12
Merging blocks 19 and 20
stbi__hdr_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  char * D.17476;
  char * D.17475;
  int D.17474;
  int dummy;
  int valid;
  char * token;
  char buffer[1024];
  int D.17458;
  bool retval.548;
  int _1;
  char * _2;
  char * token.549_3;
  char _4;
  char * token.550_5;
  int _6;
  char * _7;
  char * token.551_8;
  int _9;
  char * token.552_10;
  char * _11;
  char * token.553_12;
  long int _13;
  char * token.554_14;
  char _15;
  char * token.555_16;
  char * _17;
  char * token.556_18;
  int _19;
  char * token.557_20;
  char * _21;
  char * token.558_22;
  long int _23;
  int _29;
  int _44;
  bool retval.548_45;
  int _47;
  char * _49;
  int _52;
  char * _54;
  int _57;
  int _63;
  int _68;

  <bb 2> :
  valid_34 = 0;
  if (x_35(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_36 = &dummy;

  <bb 4> :
  # x_24 = PHI <x_35(D)(2), x_36(3)>
  if (y_37(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_38 = &dummy;

  <bb 6> :
  # y_25 = PHI <y_37(D)(4), y_38(5)>
  if (comp_39(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_40 = &dummy;

  <bb 8> :
  # comp_26 = PHI <comp_39(D)(6), comp_40(7)>
  _44 = stbi__hdr_test (s_42(D));
  _1 = _44;
  retval.548_45 = _1 == 0;
  if (retval.548_45 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  stbi__rewind (s_42(D));
  _47 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 10> :
  # valid_27 = PHI <valid_34(8), valid_28(14)>
  _49 = stbi__hdr_gettoken (s_42(D), &buffer);
  _2 = _49;
  token = _2;
  token.549_3 = token;
  _4 = *token.549_3;
  if (_4 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  goto <bb 15>; [INV]

  <bb 12> :
  token.550_5 = token;
  _6 = strcmp (token.550_5, "FORMAT=32-bit_rle_rgbe");
  if (_6 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  valid_69 = 1;

  <bb 14> :
  # valid_28 = PHI <valid_27(12), valid_69(13)>
  goto <bb 10>; [INV]

  <bb 15> :
  if (valid_27 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  stbi__rewind (s_42(D));
  _52 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 17> :
  _54 = stbi__hdr_gettoken (s_42(D), &buffer);
  _7 = _54;
  token = _7;
  token.551_8 = token;
  _9 = strncmp (token.551_8, "-Y ", 3);
  if (_9 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  stbi__rewind (s_42(D));
  _57 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 19> :
  token.552_10 = token;
  _11 = token.552_10 + 3;
  token = _11;
  token.553_12 = token;
  _13 = strtol (token.553_12, &token, 10);
  *y_25 = _13;

  <bb 20> :
  token.554_14 = token;
  _15 = *token.554_14;
  if (_15 != 32)
    goto <bb 22>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  token.555_16 = token;
  _17 = token.555_16 + 1;
  token = _17;
  goto <bb 20>; [INV]

  <bb 22> :
  token.556_18 = token;
  _19 = strncmp (token.556_18, "+X ", 3);
  if (_19 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  stbi__rewind (s_42(D));
  _63 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 24> :
  token.557_20 = token;
  _21 = token.557_20 + 3;
  token = _21;
  token.558_22 = token;
  _23 = strtol (token.558_22, 0B, 10);
  *x_24 = _23;
  *comp_26 = 3;
  _68 = 1;

  <bb 25> :
  # _29 = PHI <_47(9), _52(16), _57(18), _63(23), _68(24)>
  buffer ={v} {CLOBBER};
  token ={v} {CLOBBER};
  dummy ={v} {CLOBBER};

  <bb 26> :
<L28>:
  return _29;

}



;; Function stbi__bmp_info (_ZL14stbi__bmp_infoP13stbi__contextPiS1_S1_, funcdef_no=957, decl_uid=10156, cgraph_uid=863, symbol_order=893)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L20>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L20>}


Removing basic block 21
Removing unreachable region 1
Merging blocks 2 and 3
stbi__bmp_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  void * D.17500;
  struct stbi__bmp_data info;
  void * p;
  int iftmp.559;
  int D.17481;
  unsigned int _1;
  int _2;
  unsigned int _3;
  int _4;
  int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int iftmp.559_9;
  void * _19;
  int _22;
  int iftmp.559_29;
  int iftmp.559_30;
  int _32;

  <bb 2> :
  info.all_a = 255;
  _19 = stbi__bmp_parse_header (s_17(D), &info);
  p_20 = _19;
  stbi__rewind (s_17(D));
  if (p_20 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 4> :
  if (x_23(D) != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _1 = s_17(D)->img_x;
  _2 = (int) _1;
  *x_23(D) = _2;

  <bb 6> :
  if (y_25(D) != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _3 = s_17(D)->img_y;
  _4 = (int) _3;
  *y_25(D) = _4;

  <bb 8> :
  if (comp_27(D) != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 9> :
  _5 = info.bpp;
  if (_5 == 24)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _6 = info.ma;
  if (_6 == 4278190080)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  *comp_27(D) = 3;
  goto <bb 16>; [INV]

  <bb 12> :
  _7 = info.ma;
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.559_29 = 4;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.559_30 = 3;

  <bb 15> :
  # iftmp.559_9 = PHI <iftmp.559_29(13), iftmp.559_30(14)>
  *comp_27(D) = iftmp.559_9;

  <bb 16> :

  <bb 17> :
  _32 = 1;

  <bb 18> :
  # _8 = PHI <_22(3), _32(17)>
  info ={v} {CLOBBER};

  <bb 19> :
<L19>:
  return _8;

}



;; Function stbi__psd_info (_ZL14stbi__psd_infoP13stbi__contextPiS1_S1_, funcdef_no=958, decl_uid=10185, cgraph_uid=864, symbol_order=894)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L24>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L24>}


Removing basic block 31
Removing unreachable region 1
Merging blocks 8 and 9
Merging blocks 11 and 12
Merging blocks 14 and 15
Merging blocks 19 and 20
Merging blocks 25 and 26
Merging blocks 14 and 16
Merging blocks 19 and 21
Merging blocks 19 and 22
stbi__psd_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17536;
  int D.17535;
  unsigned int D.17534;
  unsigned int D.17533;
  int D.17532;
  int D.17531;
  unsigned int D.17530;
  int depth;
  int dummy;
  int channelCount;
  bool retval.562;
  bool retval.561;
  int D.17515;
  bool retval.560;
  unsigned int _1;
  int _2;
  unsigned int _3;
  int _4;
  unsigned int _5;
  int _6;
  int _7;
  int _11;
  unsigned int _23;
  bool retval.560_24;
  int _26;
  int _28;
  bool retval.561_29;
  int _31;
  int _34;
  unsigned int _37;
  unsigned int _40;
  int _43;
  int _46;
  int _48;
  bool retval.562_49;
  int _51;
  int _53;
  int _55;

  <bb 2> :
  if (x_14(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_15 = &dummy;

  <bb 4> :
  # x_8 = PHI <x_14(D)(2), x_15(3)>
  if (y_16(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_17 = &dummy;

  <bb 6> :
  # y_9 = PHI <y_16(D)(4), y_17(5)>
  if (comp_18(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_19 = &dummy;

  <bb 8> :
  # comp_10 = PHI <comp_18(D)(6), comp_19(7)>
  _23 = stbi__get32be (s_21(D));
  _1 = _23;
  retval.560_24 = _1 != 943870035;
  if (retval.560_24 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  stbi__rewind (s_21(D));
  _26 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _28 = stbi__get16be (s_21(D));
  _2 = _28;
  retval.561_29 = _2 != 1;
  if (retval.561_29 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__rewind (s_21(D));
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 12> :
  stbi__skip (s_21(D), 6);
  _34 = stbi__get16be (s_21(D));
  channelCount_35 = _34;
  if (channelCount_35 < 0)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (channelCount_35 > 16)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  stbi__rewind (s_21(D));
  _55 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 15> :
  _37 = stbi__get32be (s_21(D));
  _3 = _37;
  _4 = (int) _3;
  *y_9 = _4;
  _40 = stbi__get32be (s_21(D));
  _5 = _40;
  _6 = (int) _5;
  *x_8 = _6;
  _43 = stbi__get16be (s_21(D));
  depth_44 = _43;
  if (depth_44 != 8)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  if (depth_44 != 16)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  stbi__rewind (s_21(D));
  _46 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  _48 = stbi__get16be (s_21(D));
  _7 = _48;
  retval.562_49 = _7 != 3;
  if (retval.562_49 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__rewind (s_21(D));
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  *comp_10 = 4;
  _53 = 1;

  <bb 21> :
  # _11 = PHI <_26(9), _31(11), _55(14), _46(17), _51(19), _53(20)>
  dummy ={v} {CLOBBER};

  <bb 22> :
<L23>:
  return _11;

}



;; Function stbi__pic_info (_ZL14stbi__pic_infoP13stbi__contextPiS1_S1_, funcdef_no=960, decl_uid=10215, cgraph_uid=866, symbol_order=896)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L31>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L31>}


Removing basic block 40
Removing unreachable region 1
Merging blocks 8 and 9
Merging blocks 11 and 12
Merging blocks 23 and 24
Merging blocks 11 and 13
Merging blocks 11 and 14
Merging blocks 11 and 15
Merging blocks 23 and 25
Merging blocks 23 and 26
Merging blocks 23 and 27
Merging blocks 23 and 28
stbi__pic_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17598;
  unsigned char D.17597;
  unsigned char D.17596;
  unsigned char D.17595;
  unsigned char D.17594;
  int D.17593;
  int D.17592;
  int D.17591;
  int D.17590;
  struct stbi__pic_packet * packet;
  struct stbi__pic_packet packets[10];
  int dummy;
  int chained;
  int num_packets;
  int act_comp;
  int iftmp.569;
  bool retval.568;
  bool retval.566;
  int D.17568;
  bool retval.565;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int num_packets.567_9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  int _15;
  int _16;
  unsigned char _17;
  int _18;
  int _24;
  int iftmp.569_25;
  int _40;
  bool retval.565_41;
  int _43;
  int _46;
  int _49;
  int _52;
  bool retval.566_53;
  int _55;
  int _57;
  int _59;
  unsigned char _63;
  unsigned char _66;
  unsigned char _69;
  unsigned char _72;
  int _76;
  bool retval.568_77;
  int _79;
  int _81;
  int iftmp.569_82;
  int iftmp.569_83;
  int _85;

  <bb 2> :
  act_comp_29 = 0;
  num_packets_30 = 0;
  if (x_31(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_32 = &dummy;

  <bb 4> :
  # x_19 = PHI <x_31(D)(2), x_32(3)>
  if (y_33(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_34 = &dummy;

  <bb 6> :
  # y_20 = PHI <y_33(D)(4), y_34(5)>
  if (comp_35(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_36 = &dummy;

  <bb 8> :
  # comp_21 = PHI <comp_35(D)(6), comp_36(7)>
  _40 = stbi__pic_is4 (s_38(D), "S\x80\xf64");
  _1 = _40;
  retval.565_41 = _1 == 0;
  if (retval.565_41 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  stbi__rewind (s_38(D));
  _43 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 10> :
  stbi__skip (s_38(D), 88);
  _46 = stbi__get16be (s_38(D));
  _2 = _46;
  *x_19 = _2;
  _49 = stbi__get16be (s_38(D));
  _3 = _49;
  *y_20 = _3;
  _52 = stbi__at_eof (s_38(D));
  _4 = _52;
  retval.566_53 = _4 != 0;
  if (retval.566_53 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__rewind (s_38(D));
  _55 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 12> :
  _5 = *x_19;
  if (_5 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _6 = *x_19;
  _7 = 268435456 / _6;
  _8 = *y_20;
  if (_7 < _8)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  stbi__rewind (s_38(D));
  _57 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 15> :
  stbi__skip (s_38(D), 8);

  <bb 16> :
  # act_comp_22 = PHI <act_comp_29(15), act_comp_74(23)>
  # num_packets_23 = PHI <num_packets_30(15), num_packets_60(23)>
  if (num_packets_23 == 10)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _59 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 18> :
  num_packets.567_9 = num_packets_23;
  num_packets_60 = num_packets.567_9 + 1;
  packet_61 = &packets[num_packets.567_9];
  _63 = stbi__get8 (s_38(D));
  _10 = _63;
  chained_64 = (int) _10;
  _66 = stbi__get8 (s_38(D));
  _11 = _66;
  packet_61->size = _11;
  _69 = stbi__get8 (s_38(D));
  _12 = _69;
  packet_61->type = _12;
  _72 = stbi__get8 (s_38(D));
  _13 = _72;
  packet_61->channel = _13;
  _14 = packet_61->channel;
  _15 = (int) _14;
  act_comp_74 = act_comp_22 | _15;
  _76 = stbi__at_eof (s_38(D));
  _16 = _76;
  retval.568_77 = _16 != 0;
  if (retval.568_77 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  stbi__rewind (s_38(D));
  _79 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 20> :
  _17 = packet_61->size;
  if (_17 != 8)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  stbi__rewind (s_38(D));
  _81 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 22> :
  if (chained_64 == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  goto <bb 16>; [INV]

  <bb 24> :
  _18 = act_comp_74 & 16;
  if (_18 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.569_82 = 4;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.569_83 = 3;

  <bb 27> :
  # iftmp.569_25 = PHI <iftmp.569_82(25), iftmp.569_83(26)>
  *comp_21 = iftmp.569_25;
  _85 = 1;

  <bb 28> :
  # _24 = PHI <_43(9), _55(11), _57(14), _59(17), _79(19), _81(21), _85(27)>
  dummy ={v} {CLOBBER};
  packets ={v} {CLOBBER};

  <bb 29> :
<L30>:
  return _24;

}



;; Function stbi__pnm_info (_ZL14stbi__pnm_infoP13stbi__contextPiS1_S1_, funcdef_no=967, decl_uid=10251, cgraph_uid=873, symbol_order=903)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L20>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L20>}


Removing basic block 29
Removing unreachable region 1
Merging blocks 8 and 9
Merging blocks 17 and 18
Merging blocks 8 and 10
Merging blocks 17 and 19
Merging blocks 17 and 20
Merging blocks 17 and 21
Merging blocks 17 and 22
Merging blocks 17 and 23
Merging blocks 17 and 24
stbi__pnm_info (struct stbi__context * s, int * x, int * y, int * comp)
{
  int D.17722;
  int D.17721;
  int D.17720;
  unsigned char D.17719;
  unsigned char D.17718;
  unsigned char D.17717;
  char t;
  char p;
  char c;
  int dummy;
  int maxv;
  int iftmp.582;
  int D.17709;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  char _4;
  int _5;
  int _6;
  int _10;
  int iftmp.582_11;
  unsigned char _24;
  unsigned char _27;
  int iftmp.582_29;
  int iftmp.582_30;
  unsigned char _33;
  int _37;
  int _41;
  int _45;
  int _48;
  int _49;
  int _51;

  <bb 2> :
  if (x_14(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  x_15 = &dummy;

  <bb 4> :
  # x_7 = PHI <x_14(D)(2), x_15(3)>
  if (y_16(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  y_17 = &dummy;

  <bb 6> :
  # y_8 = PHI <y_16(D)(4), y_17(5)>
  if (comp_18(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  comp_19 = &dummy;

  <bb 8> :
  # comp_9 = PHI <comp_18(D)(6), comp_19(7)>
  stbi__rewind (s_21(D));
  _24 = stbi__get8 (s_21(D));
  _1 = _24;
  p_25 = (char) _1;
  _27 = stbi__get8 (s_21(D));
  _2 = _27;
  t_28 = (char) _2;
  if (p_25 != 80)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (t_28 != 53)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (t_28 != 54)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  stbi__rewind (s_21(D));
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 12> :
  if (t_28 == 54)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.582_29 = 3;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.582_30 = 1;

  <bb 15> :
  # iftmp.582_11 = PHI <iftmp.582_29(13), iftmp.582_30(14)>
  *comp_9 = iftmp.582_11;
  _33 = stbi__get8 (s_21(D));
  _3 = _33;
  _4 = (char) _3;
  c = _4;
  stbi__pnm_skip_whitespace (s_21(D), &c);
  _37 = stbi__pnm_getinteger (s_21(D), &c);
  _5 = _37;
  *x_7 = _5;
  stbi__pnm_skip_whitespace (s_21(D), &c);
  _41 = stbi__pnm_getinteger (s_21(D), &c);
  _6 = _41;
  *y_8 = _6;
  stbi__pnm_skip_whitespace (s_21(D), &c);
  _45 = stbi__pnm_getinteger (s_21(D), &c);
  maxv_46 = _45;
  if (maxv_46 > 255)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _48 = stbi__err ("max value > 255");
  goto <bb 18>; [INV]

  <bb 17> :
  _49 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 18> :
  # _10 = PHI <_51(11), _48(16), _49(17)>
  dummy ={v} {CLOBBER};
  c ={v} {CLOBBER};

  <bb 19> :
<L19>:
  return _10;

}



;; Function stbi_info_from_file (stbi_info_from_file, funcdef_no=971, decl_uid=5102, cgraph_uid=877, symbol_order=907)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
Merging blocks 2 and 5
stbi_info_from_file (struct FILE * f, int * x, int * y, int * comp)
{
  int D.17782;
  long int D.17781;
  long int pos;
  struct stbi__context s;
  int r;
  int D.17779;
  long int _5;
  int _12;
  int _15;

  <bb 2> :
  _5 = ftell (f_3(D));
  pos_6 = _5;
  stbi__start_file (&s, f_3(D));
  _12 = stbi__info_main (&s, x_8(D), y_9(D), comp_10(D));
  r_13 = _12;
  fseek (f_3(D), pos_6, 0);
  _15 = r_13;
  s ={v} {CLOBBER};

  <bb 3> :
<L1>:
  return _15;

}



;; Function stbi_is_16_bit_from_file (stbi_is_16_bit_from_file, funcdef_no=973, decl_uid=5106, cgraph_uid=879, symbol_order=909)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
Merging blocks 2 and 5
stbi_is_16_bit_from_file (struct FILE * f)
{
  int D.17794;
  long int D.17793;
  long int pos;
  struct stbi__context s;
  int r;
  int D.17791;
  long int _5;
  int _9;
  int _12;

  <bb 2> :
  _5 = ftell (f_3(D));
  pos_6 = _5;
  stbi__start_file (&s, f_3(D));
  _9 = stbi__is_16_main (&s);
  r_10 = _9;
  fseek (f_3(D), pos_6, 0);
  _12 = r_10;
  s ={v} {CLOBBER};

  <bb 3> :
<L1>:
  return _12;

}



;; Function stbi_info_from_memory (stbi_info_from_memory, funcdef_no=974, decl_uid=5080, cgraph_uid=880, symbol_order=910)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi_info_from_memory (const stbi_uc * buffer, int len, int * x, int * y, int * comp)
{
  int D.17799;
  struct stbi__context s;
  int D.17797;
  int _9;
  int _10;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _9 = stbi__info_main (&s, x_5(D), y_6(D), comp_7(D));
  _10 = _9;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _10;

}



;; Function stbi_info_from_callbacks (stbi_info_from_callbacks, funcdef_no=975, decl_uid=5086, cgraph_uid=881, symbol_order=911)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_info_from_callbacks (const struct stbi_io_callbacks * c, void * user, int * x, int * y, int * comp)
{
  int D.17804;
  struct stbi__context s;
  int D.17802;
  int _10;
  int _11;

  <bb 2> :
  stbi__start_callbacks (&s, c_3(D), user_4(D));
  _10 = stbi__info_main (&s, x_6(D), y_7(D), comp_8(D));
  _11 = _10;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _11;

}



;; Function stbi_is_16_bit_from_memory (stbi_is_16_bit_from_memory, funcdef_no=976, decl_uid=5089, cgraph_uid=882, symbol_order=912)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 6
Removing unreachable region 1
Merging blocks 2 and 3
stbi_is_16_bit_from_memory (const stbi_uc * buffer, int len)
{
  int D.17809;
  struct stbi__context s;
  int D.17807;
  int _6;
  int _7;

  <bb 2> :
  stbi__start_mem (&s, buffer_2(D), len_3(D));
  _6 = stbi__is_16_main (&s);
  _7 = _6;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _7;

}



;; Function stbi_is_16_bit_from_callbacks (stbi_is_16_bit_from_callbacks, funcdef_no=977, decl_uid=5092, cgraph_uid=883, symbol_order=913)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
stbi_is_16_bit_from_callbacks (const struct stbi_io_callbacks * c, void * user)
{
  int D.17814;
  struct stbi__context s;
  int D.17812;
  int _7;
  int _8;

  <bb 2> :
  stbi__start_callbacks (&s, c_3(D), user_4(D));
  _7 = stbi__is_16_main (&s);
  _8 = _7;

  <bb 3> :
  s ={v} {CLOBBER};

  <bb 4> :
<L1>:
  return _8;

}


